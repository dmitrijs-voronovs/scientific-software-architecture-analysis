id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12198#issuecomment-1250058502
https://github.com/hail-is/hail/pull/12199#issuecomment-1252805285:35,Testability,test,tests,35,"@daniel-goldstein Let's see if the tests pass now, but should be really close!!!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1252805285
https://github.com/hail-is/hail/pull/12199#issuecomment-1252827587:55,Deployability,deploy,deploy,55,I put the time_updated field in. I'll test it with dev deploy once everything else is ready to go.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1252827587
https://github.com/hail-is/hail/pull/12199#issuecomment-1252827587:38,Testability,test,test,38,I put the time_updated field in. I'll test it with dev deploy once everything else is ready to go.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1252827587
https://github.com/hail-is/hail/pull/12199#issuecomment-1254026870:35,Availability,error,error,35,Note to self to check the logs for error messages before merging!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1254026870
https://github.com/hail-is/hail/pull/12199#issuecomment-1254026870:41,Integrability,message,messages,41,Note to self to check the logs for error messages before merging!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1254026870
https://github.com/hail-is/hail/pull/12199#issuecomment-1254026870:26,Testability,log,logs,26,Note to self to check the logs for error messages before merging!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1254026870
https://github.com/hail-is/hail/pull/12199#issuecomment-1255509466:350,Deployability,update,update,350,"I changed that the `_update_token` is no longer cached. I thought it was the source of a bug, but it was something else that was an issue. However, I felt it was confusing and I didn't see what value it provided as we have retries on all of our client operations that would need the token and the token is not used in future operations to submit the update.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1255509466
https://github.com/hail-is/hail/pull/12199#issuecomment-1255509466:48,Performance,cache,cached,48,"I changed that the `_update_token` is no longer cached. I thought it was the source of a bug, but it was something else that was an issue. However, I felt it was confusing and I didn't see what value it provided as we have retries on all of our client operations that would need the token and the token is not used in future operations to submit the update.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1255509466
https://github.com/hail-is/hail/pull/12199#issuecomment-1255528060:102,Availability,down,down,102,"duh you're totally right, I don't know why I thought retrying was happening higher up and not further down in the http client.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1255528060
https://github.com/hail-is/hail/pull/12199#issuecomment-1255533276:89,Availability,down,down,89,Sorry this was a lot more broken than I thought. I didn't remember everything I stripped down for the previous PRs and didn't add back in. The commit update and update-fast endpoints need to return the `start_job_id`. Hopefully that's the last of these issues,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1255533276
https://github.com/hail-is/hail/pull/12199#issuecomment-1255533276:150,Deployability,update,update,150,Sorry this was a lot more broken than I thought. I didn't remember everything I stripped down for the previous PRs and didn't add back in. The commit update and update-fast endpoints need to return the `start_job_id`. Hopefully that's the last of these issues,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1255533276
https://github.com/hail-is/hail/pull/12199#issuecomment-1255533276:161,Deployability,update,update-fast,161,Sorry this was a lot more broken than I thought. I didn't remember everything I stripped down for the previous PRs and didn't add back in. The commit update and update-fast endpoints need to return the `start_job_id`. Hopefully that's the last of these issues,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12199#issuecomment-1255533276
https://github.com/hail-is/hail/pull/12204#issuecomment-1251646501:76,Deployability,deploy,deploy,76,"I originally added a `build.yaml` step to this that ran the script on every deploy, but I think there are some subtleties in there around releases that are best discussed in follow-up PR and may distract from some immediate goals around getting AR up and working. This will help me easily get the images we need to move over into AR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12204#issuecomment-1251646501
https://github.com/hail-is/hail/pull/12204#issuecomment-1251646501:138,Deployability,release,releases,138,"I originally added a `build.yaml` step to this that ran the script on every deploy, but I think there are some subtleties in there around releases that are best discussed in follow-up PR and may distract from some immediate goals around getting AR up and working. This will help me easily get the images we need to move over into AR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12204#issuecomment-1251646501
https://github.com/hail-is/hail/pull/12207#issuecomment-1255544008:1234,Availability,down,down,1234,"> I tried making a plot with only shape, not color. It should behave the same as color (in the discrete case), only using shapes instead of colors, but right now the legend uses ""trace 0"" etc. instead of the data values. I was able to get the category names showing properly in the legend with just shapes by adding a `shape_legend -> name` mapping to `GeomPoint.trace_args`, but this caused the shape names to override the color names when using both; I added logic to `Geom._add_aesthetics_to_trace_args` to concatenate the names with one legend entry per pair of color and shape, which causes the shapes to stop working and a separate color to be assigned to each legend entry. ```python; import hail as hl; from hail.ggplot import ggplot, aes, geom_point; ht = hl.utils.range_table(10); ht = ht.annotate(squared=ht.idx ** 2); ht = ht.annotate(even=hl.if_else(ht.idx % 2 == 0, ""yes"", ""no"")); ht = ht.annotate(threeven=hl.if_else(ht.idx % 3 == 0, ""good"", ""bad"")); fig = (; ggplot(ht); + aes(x=ht.idx, y=ht.squared, color=ht.even, shape=ht.threeven); + geom_point(); ); fig.show(); ```. ![newplot(1)](https://user-images.githubusercontent.com/84595986/191850065-fa9cf15a-44b5-48cc-ad95-47af67d76ec1.png). I'm having trouble tracking down why this is happening, so I'll ask for some help with that tomorrow.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12207#issuecomment-1255544008
https://github.com/hail-is/hail/pull/12207#issuecomment-1255544008:461,Testability,log,logic,461,"> I tried making a plot with only shape, not color. It should behave the same as color (in the discrete case), only using shapes instead of colors, but right now the legend uses ""trace 0"" etc. instead of the data values. I was able to get the category names showing properly in the legend with just shapes by adding a `shape_legend -> name` mapping to `GeomPoint.trace_args`, but this caused the shape names to override the color names when using both; I added logic to `Geom._add_aesthetics_to_trace_args` to concatenate the names with one legend entry per pair of color and shape, which causes the shapes to stop working and a separate color to be assigned to each legend entry. ```python; import hail as hl; from hail.ggplot import ggplot, aes, geom_point; ht = hl.utils.range_table(10); ht = ht.annotate(squared=ht.idx ** 2); ht = ht.annotate(even=hl.if_else(ht.idx % 2 == 0, ""yes"", ""no"")); ht = ht.annotate(threeven=hl.if_else(ht.idx % 3 == 0, ""good"", ""bad"")); fig = (; ggplot(ht); + aes(x=ht.idx, y=ht.squared, color=ht.even, shape=ht.threeven); + geom_point(); ); fig.show(); ```. ![newplot(1)](https://user-images.githubusercontent.com/84595986/191850065-fa9cf15a-44b5-48cc-ad95-47af67d76ec1.png). I'm having trouble tracking down why this is happening, so I'll ask for some help with that tomorrow.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12207#issuecomment-1255544008
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12209#issuecomment-1260282572
https://github.com/hail-is/hail/pull/12211#issuecomment-1253928151:31,Deployability,deploy,deploy,31,Tested by running `hailctl dev deploy -b hail-is/hail:main -s git_make_bash_image` against a CI in my namespace and seeing that it succeeded and pushed an image [here](https://console.cloud.google.com/artifacts/docker/hail-vdc/us/hail/ci-intermediate?project=hail-vdc),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1253928151
https://github.com/hail-is/hail/pull/12211#issuecomment-1253928151:0,Testability,Test,Tested,0,Tested by running `hailctl dev deploy -b hail-is/hail:main -s git_make_bash_image` against a CI in my namespace and seeing that it succeeded and pushed an image [here](https://console.cloud.google.com/artifacts/docker/hail-vdc/us/hail/ci-intermediate?project=hail-vdc),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1253928151
https://github.com/hail-is/hail/pull/12211#issuecomment-1255117035:245,Deployability,deploy,deploy-cloud-run,245,"Before we merge this, I'd like to have the new Artifact Registry in hail-vdc setup and have configured a cloud run job for the cleanup script. I think a daily run is good enough. https://github.com/GoogleCloudPlatform/gcr-cleaner/blob/main/docs/deploy-cloud-run.md",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255117035
https://github.com/hail-is/hail/pull/12211#issuecomment-1255117035:92,Modifiability,config,configured,92,"Before we merge this, I'd like to have the new Artifact Registry in hail-vdc setup and have configured a cloud run job for the cleanup script. I think a daily run is good enough. https://github.com/GoogleCloudPlatform/gcr-cleaner/blob/main/docs/deploy-cloud-run.md",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255117035
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:620,Availability,echo,echo,620,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:820,Deployability,install,installed-,820,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:865,Deployability,install,installed-,865,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:954,Energy Efficiency,monitor,monitoring,954,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:1167,Energy Efficiency,monitor,monitoring,1167,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:163,Performance,cache,cache,163,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:450,Testability,benchmark,benchmark,450,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:788,Testability,test,tests,788,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:1137,Testability,test,test-ci,1137,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:1162,Testability,test,test-monitoring,1162,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349:1195,Testability,test,test-benchmark,1195,"I used filters for the following images when I've run the Azure cleanup script, but we should double check these make sense still in light of changing how we use ""cache"" and there aren't any additional images or ones that we don't want to delete that are in this list:. ```; --filter 'auth:.*' \; --filter 'base:.*' \; --filter 'base_spark_3_2:.*' \; --filter 'batch:.*' \; --filter 'batch-driver-nginx:.*' \; --filter 'batch-worker:.*' \; --filter 'benchmark:.*' \; --filter 'blog_nginx:.*' \; --filter 'ci:.*' \; --filter 'ci-intermediate:.*' \; --filter 'ci-utils:.*' \; --filter 'create_certs_image:.*' \; --filter 'echo:.*' \; --filter 'grafana:.*' \; --filter 'hail-base:.*' \; --filter 'hail-build:.*' \; --filter 'hail-buildkit:.*' \; --filter 'hail-run:.*' \; --filter 'hail-run-tests:.*' \; --filter 'hail-pip-installed-python37:.*' \; --filter 'hail-pip-installed-python38:.*' \; --filter 'hail-ubuntu:.*' \; --filter 'memory:.*' \; --filter 'monitoring:.*' \; --filter 'notebook:.*' \; --filter 'notebook_nginx:.*' \; --filter 'prometheus:.*' \; --filter 'service-base:.*' \; --filter 'service-java-run-base:.*' \; --filter 'test-ci:.*' \; --filter 'test-monitoring:.*' \; --filter 'test-benchmark:.*' \; --filter 'website:.*' \; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1255120349
https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486:231,Deployability,deploy,deploy,231,"The Makefiles grab the `docker_prefix` from the global-config each time they are run so once we make the change in the global-config nothing else needs to change. Actually, I think this entire PR is not even needed. When CI does a deploy, the changes it applies to Kubernetes include fully qualified image names, e.g. `gcr.io/hail-vdc/batch:asdf1234`. If we were to swap out the `docker_prefix` global-config variable, CI would start to create new images that are pushed to the new repository (it would kill the cache for a single build but whatever), but the existing images would still exist and be undisrupted. The only images that need to exist in the new container registry when the switch is made are the images that we push on bootstrap which I am going to do manually anyway.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486
https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486:55,Modifiability,config,config,55,"The Makefiles grab the `docker_prefix` from the global-config each time they are run so once we make the change in the global-config nothing else needs to change. Actually, I think this entire PR is not even needed. When CI does a deploy, the changes it applies to Kubernetes include fully qualified image names, e.g. `gcr.io/hail-vdc/batch:asdf1234`. If we were to swap out the `docker_prefix` global-config variable, CI would start to create new images that are pushed to the new repository (it would kill the cache for a single build but whatever), but the existing images would still exist and be undisrupted. The only images that need to exist in the new container registry when the switch is made are the images that we push on bootstrap which I am going to do manually anyway.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486
https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486:126,Modifiability,config,config,126,"The Makefiles grab the `docker_prefix` from the global-config each time they are run so once we make the change in the global-config nothing else needs to change. Actually, I think this entire PR is not even needed. When CI does a deploy, the changes it applies to Kubernetes include fully qualified image names, e.g. `gcr.io/hail-vdc/batch:asdf1234`. If we were to swap out the `docker_prefix` global-config variable, CI would start to create new images that are pushed to the new repository (it would kill the cache for a single build but whatever), but the existing images would still exist and be undisrupted. The only images that need to exist in the new container registry when the switch is made are the images that we push on bootstrap which I am going to do manually anyway.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486
https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486:402,Modifiability,config,config,402,"The Makefiles grab the `docker_prefix` from the global-config each time they are run so once we make the change in the global-config nothing else needs to change. Actually, I think this entire PR is not even needed. When CI does a deploy, the changes it applies to Kubernetes include fully qualified image names, e.g. `gcr.io/hail-vdc/batch:asdf1234`. If we were to swap out the `docker_prefix` global-config variable, CI would start to create new images that are pushed to the new repository (it would kill the cache for a single build but whatever), but the existing images would still exist and be undisrupted. The only images that need to exist in the new container registry when the switch is made are the images that we push on bootstrap which I am going to do manually anyway.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486
https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486:409,Modifiability,variab,variable,409,"The Makefiles grab the `docker_prefix` from the global-config each time they are run so once we make the change in the global-config nothing else needs to change. Actually, I think this entire PR is not even needed. When CI does a deploy, the changes it applies to Kubernetes include fully qualified image names, e.g. `gcr.io/hail-vdc/batch:asdf1234`. If we were to swap out the `docker_prefix` global-config variable, CI would start to create new images that are pushed to the new repository (it would kill the cache for a single build but whatever), but the existing images would still exist and be undisrupted. The only images that need to exist in the new container registry when the switch is made are the images that we push on bootstrap which I am going to do manually anyway.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486
https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486:512,Performance,cache,cache,512,"The Makefiles grab the `docker_prefix` from the global-config each time they are run so once we make the change in the global-config nothing else needs to change. Actually, I think this entire PR is not even needed. When CI does a deploy, the changes it applies to Kubernetes include fully qualified image names, e.g. `gcr.io/hail-vdc/batch:asdf1234`. If we were to swap out the `docker_prefix` global-config variable, CI would start to create new images that are pushed to the new repository (it would kill the cache for a single build but whatever), but the existing images would still exist and be undisrupted. The only images that need to exist in the new container registry when the switch is made are the images that we push on bootstrap which I am going to do manually anyway.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12211#issuecomment-1259517486
https://github.com/hail-is/hail/pull/12212#issuecomment-1260857476:30,Testability,test,tests,30,This is ready for a look. The tests are passing except one service backend test timed out.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12212#issuecomment-1260857476
https://github.com/hail-is/hail/pull/12212#issuecomment-1260857476:75,Testability,test,test,75,This is ready for a look. The tests are passing except one service backend test timed out.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12212#issuecomment-1260857476
https://github.com/hail-is/hail/pull/12213#issuecomment-1254048690:12,Usability,clear,clearer,12,"sure, seems clearer.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12213#issuecomment-1254048690
https://github.com/hail-is/hail/pull/12218#issuecomment-1258155599:28,Testability,test,tests,28,It looks like there's a few tests whose expected values are using the old dtypes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12218#issuecomment-1258155599
https://github.com/hail-is/hail/pull/12221#issuecomment-1264174190:14,Energy Efficiency,schedul,scheduler,14,I changed the scheduler query to be the exact same as the control loop query. I verified this had a big impact on scheduling efficiency.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1264174190
https://github.com/hail-is/hail/pull/12221#issuecomment-1264174190:114,Energy Efficiency,schedul,scheduling,114,I changed the scheduler query to be the exact same as the control loop query. I verified this had a big impact on scheduling efficiency.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1264174190
https://github.com/hail-is/hail/pull/12221#issuecomment-1267463609:0,Testability,Test,Tests,0,Tests are all passing!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1267463609
https://github.com/hail-is/hail/pull/12221#issuecomment-1269124272:38,Integrability,inject,inject,38,As a separate follow up PR: we should inject the cloud location into the job's environment so that users' can make choices based on that information.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1269124272
https://github.com/hail-is/hail/pull/12221#issuecomment-1269124272:38,Security,inject,inject,38,As a separate follow up PR: we should inject the cloud location into the job's environment so that users' can make choices based on that information.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1269124272
https://github.com/hail-is/hail/pull/12221#issuecomment-1269917803:59,Availability,toler,tolerations,59,"What do you think about converting `Job.regions()` to `Job.tolerations(regions=['us-central1'], pools=['standard', 'highmem'])` where we don't support the `pools` option yet. I'm not in love with this, but it is a different option.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1269917803
https://github.com/hail-is/hail/pull/12221#issuecomment-1270332292:413,Energy Efficiency,reduce,reduce,413,"Read through the comments/changes here and they all seem very reasonable. Jackie and I talked and it seems like this is a good approach for our requirements and timeline. A cleaner, more sophisticated approach could be taken in the long-term but this seems to meet our more immediate needs and will likely scale well enough, beyond other parts of our system which also need some love. Would love to see if we can reduce the subqueries and can give another review then.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1270332292
https://github.com/hail-is/hail/pull/12221#issuecomment-1270347717:9,Usability,simpl,simplification,9,Subquery simplification is in progress!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1270347717
https://github.com/hail-is/hail/pull/12221#issuecomment-1270359051:104,Energy Efficiency,schedul,schedule,104,"I think maybe I'm overcomplicating the regions thing. Just not specifying regions clearly means you can schedule anywhere. `regions(None)` is confusing, but users should never do that directly. It will only happen when folks are programmatically generating jobs. People doing that are experts who will understand that `None` is just a stand in for ""any region"".",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1270359051
https://github.com/hail-is/hail/pull/12221#issuecomment-1270359051:82,Usability,clear,clearly,82,"I think maybe I'm overcomplicating the regions thing. Just not specifying regions clearly means you can schedule anywhere. `regions(None)` is confusing, but users should never do that directly. It will only happen when folks are programmatically generating jobs. People doing that are experts who will understand that `None` is just a stand in for ""any region"".",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1270359051
https://github.com/hail-is/hail/pull/12221#issuecomment-1270642090:187,Energy Efficiency,schedul,scheduler,187,"My large test worked in my namespace. The docs were able to build. They're a bit confusing with the enum object, but I'm not sure how to easily fix it. The key things to look for are the scheduler query matches the sort order of the control loop query. If that's off, then instances will thrash. Once you're good with this then we can do a load test sometime tomorrow.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1270642090
https://github.com/hail-is/hail/pull/12221#issuecomment-1270642090:340,Performance,load,load,340,"My large test worked in my namespace. The docs were able to build. They're a bit confusing with the enum object, but I'm not sure how to easily fix it. The key things to look for are the scheduler query matches the sort order of the control loop query. If that's off, then instances will thrash. Once you're good with this then we can do a load test sometime tomorrow.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1270642090
https://github.com/hail-is/hail/pull/12221#issuecomment-1270642090:9,Testability,test,test,9,"My large test worked in my namespace. The docs were able to build. They're a bit confusing with the enum object, but I'm not sure how to easily fix it. The key things to look for are the scheduler query matches the sort order of the control loop query. If that's off, then instances will thrash. Once you're good with this then we can do a load test sometime tomorrow.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1270642090
https://github.com/hail-is/hail/pull/12221#issuecomment-1270642090:345,Testability,test,test,345,"My large test worked in my namespace. The docs were able to build. They're a bit confusing with the enum object, but I'm not sure how to easily fix it. The key things to look for are the scheduler query matches the sort order of the control loop query. If that's off, then instances will thrash. Once you're good with this then we can do a load test sometime tomorrow.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1270642090
https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464:162,Availability,error,errors,162,"I think we should continue with another review and then a load test. I'm still a bit hesitant about the query change, but we can keep an eye on it. I'm still get errors with the typing:. ```; (venv) jigold@wm349-8c4 hail % make -C hail/python check; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; python3 -m pylint --rcfile ../../pylintrc hailtop --score=n; python3 -m mypy --config-file ../../setup.cfg hailtop; hailtop/batch/backend.py:481: error: Incompatible types in assignment (expression has type ""Union[str, List[str], None]"", variable has type ""Optional[List[str]]""); Found 1 error in 1 file (checked 146 source files); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464
https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464:497,Availability,error,error,497,"I think we should continue with another review and then a load test. I'm still a bit hesitant about the query change, but we can keep an eye on it. I'm still get errors with the typing:. ```; (venv) jigold@wm349-8c4 hail % make -C hail/python check; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; python3 -m pylint --rcfile ../../pylintrc hailtop --score=n; python3 -m mypy --config-file ../../setup.cfg hailtop; hailtop/batch/backend.py:481: error: Incompatible types in assignment (expression has type ""Union[str, List[str], None]"", variable has type ""Optional[List[str]]""); Found 1 error in 1 file (checked 146 source files); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464
https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464:639,Availability,error,error,639,"I think we should continue with another review and then a load test. I'm still a bit hesitant about the query change, but we can keep an eye on it. I'm still get errors with the typing:. ```; (venv) jigold@wm349-8c4 hail % make -C hail/python check; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; python3 -m pylint --rcfile ../../pylintrc hailtop --score=n; python3 -m mypy --config-file ../../setup.cfg hailtop; hailtop/batch/backend.py:481: error: Incompatible types in assignment (expression has type ""Union[str, List[str], None]"", variable has type ""Optional[List[str]]""); Found 1 error in 1 file (checked 146 source files); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464
https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464:270,Modifiability,config,config,270,"I think we should continue with another review and then a load test. I'm still a bit hesitant about the query change, but we can keep an eye on it. I'm still get errors with the typing:. ```; (venv) jigold@wm349-8c4 hail % make -C hail/python check; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; python3 -m pylint --rcfile ../../pylintrc hailtop --score=n; python3 -m mypy --config-file ../../setup.cfg hailtop; hailtop/batch/backend.py:481: error: Incompatible types in assignment (expression has type ""Union[str, List[str], None]"", variable has type ""Optional[List[str]]""); Found 1 error in 1 file (checked 146 source files); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464
https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464:319,Modifiability,config,config,319,"I think we should continue with another review and then a load test. I'm still a bit hesitant about the query change, but we can keep an eye on it. I'm still get errors with the typing:. ```; (venv) jigold@wm349-8c4 hail % make -C hail/python check; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; python3 -m pylint --rcfile ../../pylintrc hailtop --score=n; python3 -m mypy --config-file ../../setup.cfg hailtop; hailtop/batch/backend.py:481: error: Incompatible types in assignment (expression has type ""Union[str, List[str], None]"", variable has type ""Optional[List[str]]""); Found 1 error in 1 file (checked 146 source files); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464
https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464:430,Modifiability,config,config-file,430,"I think we should continue with another review and then a load test. I'm still a bit hesitant about the query change, but we can keep an eye on it. I'm still get errors with the typing:. ```; (venv) jigold@wm349-8c4 hail % make -C hail/python check; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; python3 -m pylint --rcfile ../../pylintrc hailtop --score=n; python3 -m mypy --config-file ../../setup.cfg hailtop; hailtop/batch/backend.py:481: error: Incompatible types in assignment (expression has type ""Union[str, List[str], None]"", variable has type ""Optional[List[str]]""); Found 1 error in 1 file (checked 146 source files); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464
https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464:589,Modifiability,variab,variable,589,"I think we should continue with another review and then a load test. I'm still a bit hesitant about the query change, but we can keep an eye on it. I'm still get errors with the typing:. ```; (venv) jigold@wm349-8c4 hail % make -C hail/python check; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; python3 -m pylint --rcfile ../../pylintrc hailtop --score=n; python3 -m mypy --config-file ../../setup.cfg hailtop; hailtop/batch/backend.py:481: error: Incompatible types in assignment (expression has type ""Union[str, List[str], None]"", variable has type ""Optional[List[str]]""); Found 1 error in 1 file (checked 146 source files); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464
https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464:58,Performance,load,load,58,"I think we should continue with another review and then a load test. I'm still a bit hesitant about the query change, but we can keep an eye on it. I'm still get errors with the typing:. ```; (venv) jigold@wm349-8c4 hail % make -C hail/python check; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; python3 -m pylint --rcfile ../../pylintrc hailtop --score=n; python3 -m mypy --config-file ../../setup.cfg hailtop; hailtop/batch/backend.py:481: error: Incompatible types in assignment (expression has type ""Union[str, List[str], None]"", variable has type ""Optional[List[str]]""); Found 1 error in 1 file (checked 146 source files); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464
https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464:63,Testability,test,test,63,"I think we should continue with another review and then a load test. I'm still a bit hesitant about the query change, but we can keep an eye on it. I'm still get errors with the typing:. ```; (venv) jigold@wm349-8c4 hail % make -C hail/python check; python3 -m flake8 --config ../../setup.cfg hail; python3 -m flake8 --config ../../setup.cfg hailtop; python3 -m pylint --rcfile ../../pylintrc hailtop --score=n; python3 -m mypy --config-file ../../setup.cfg hailtop; hailtop/batch/backend.py:481: error: Incompatible types in assignment (expression has type ""Union[str, List[str], None]"", variable has type ""Optional[List[str]]""); Found 1 error in 1 file (checked 146 source files); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271807464
https://github.com/hail-is/hail/pull/12221#issuecomment-1271873027:20,Modifiability,variab,variable,20,You can use another variable name like `regions_from_conf`,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271873027
https://github.com/hail-is/hail/pull/12221#issuecomment-1271995498:185,Performance,load,load,185,"Ok. famous last words, but I think we're in good shape here. I think Daniel if you can do one last pass on the most recent changes, that would be great and then we'll have time to do a load test to make sure the behavior is still good and instances aren't thrashing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271995498
https://github.com/hail-is/hail/pull/12221#issuecomment-1271995498:190,Testability,test,test,190,"Ok. famous last words, but I think we're in good shape here. I think Daniel if you can do one last pass on the most recent changes, that would be great and then we'll have time to do a load test to make sure the behavior is still good and instances aren't thrashing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1271995498
https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733:186,Energy Efficiency,schedul,scheduler,186,"Can you take another look now?. I added two new fields to the jobs table to help with indexing and order bys. This should make the queries simpler and allow us to revert back to the old scheduler that Cotton wrote that was optimitzed. The regions_bits_rep is just a 0/1 for each region. So [us-east1, us-central1] could be ""1100000"". I also realized that I could aggregate the ready cores per user and then order them after unioning each user. I think this will perform better. From small tests, the autoscaler query seemed much better, but I'll want to do one last load test once you're okay with this approach.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733
https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733:462,Performance,perform,perform,462,"Can you take another look now?. I added two new fields to the jobs table to help with indexing and order bys. This should make the queries simpler and allow us to revert back to the old scheduler that Cotton wrote that was optimitzed. The regions_bits_rep is just a 0/1 for each region. So [us-east1, us-central1] could be ""1100000"". I also realized that I could aggregate the ready cores per user and then order them after unioning each user. I think this will perform better. From small tests, the autoscaler query seemed much better, but I'll want to do one last load test once you're okay with this approach.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733
https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733:566,Performance,load,load,566,"Can you take another look now?. I added two new fields to the jobs table to help with indexing and order bys. This should make the queries simpler and allow us to revert back to the old scheduler that Cotton wrote that was optimitzed. The regions_bits_rep is just a 0/1 for each region. So [us-east1, us-central1] could be ""1100000"". I also realized that I could aggregate the ready cores per user and then order them after unioning each user. I think this will perform better. From small tests, the autoscaler query seemed much better, but I'll want to do one last load test once you're okay with this approach.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733
https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733:489,Testability,test,tests,489,"Can you take another look now?. I added two new fields to the jobs table to help with indexing and order bys. This should make the queries simpler and allow us to revert back to the old scheduler that Cotton wrote that was optimitzed. The regions_bits_rep is just a 0/1 for each region. So [us-east1, us-central1] could be ""1100000"". I also realized that I could aggregate the ready cores per user and then order them after unioning each user. I think this will perform better. From small tests, the autoscaler query seemed much better, but I'll want to do one last load test once you're okay with this approach.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733
https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733:571,Testability,test,test,571,"Can you take another look now?. I added two new fields to the jobs table to help with indexing and order bys. This should make the queries simpler and allow us to revert back to the old scheduler that Cotton wrote that was optimitzed. The regions_bits_rep is just a 0/1 for each region. So [us-east1, us-central1] could be ""1100000"". I also realized that I could aggregate the ready cores per user and then order them after unioning each user. I think this will perform better. From small tests, the autoscaler query seemed much better, but I'll want to do one last load test once you're okay with this approach.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733
https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733:139,Usability,simpl,simpler,139,"Can you take another look now?. I added two new fields to the jobs table to help with indexing and order bys. This should make the queries simpler and allow us to revert back to the old scheduler that Cotton wrote that was optimitzed. The regions_bits_rep is just a 0/1 for each region. So [us-east1, us-central1] could be ""1100000"". I also realized that I could aggregate the ready cores per user and then order them after unioning each user. I think this will perform better. From small tests, the autoscaler query seemed much better, but I'll want to do one last load test once you're okay with this approach.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1274632733
https://github.com/hail-is/hail/pull/12221#issuecomment-1274914725:206,Availability,error,error-prone,206,"You've essentially done the same though saying that there will never be more than 32 regions in GCP (the `VARCHAR(32)`). The corresponding JSON would be O(32 * length-of-region-str), which would be just as error-prone, though possibly considerably longer. This is why I thought it was a space-saving issue.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1274914725
https://github.com/hail-is/hail/pull/12221#issuecomment-1274923740:244,Modifiability,flexible,flexible,244,"I meant type `TEXT` compared to `VARCHAR`. The reason I did not pick a BIGINT representation is there are 34 regions in GCP right now. If there's ever more than 64, then we can't support that with a BIGINT representation. A varchar seemed more flexible as we can change the type later on and we're not restricted to 64 regions. However, restricting to 64 regions as just a fundamental batch limitation is always fine as well. I'm ambivalent on which way we choose as long as the field can be used in an index. Apparently, `TEXT` can be indexed, but you have to specify the first N characters that are indexable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1274923740
https://github.com/hail-is/hail/pull/12221#issuecomment-1274953590:32,Performance,optimiz,optimizing,32,"Ya, all these options seem like optimizing for well in the future, so whichever you think is the most straightforward I support.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1274953590
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:293,Availability,avail,available,293,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:82,Deployability,configurat,configuration,82,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:466,Deployability,deploy,deployment,466,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:854,Deployability,deploy,deployment,854,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:422,Energy Efficiency,schedul,schedule,422,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:564,Energy Efficiency,schedul,scheduled,564,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:612,Energy Efficiency,charge,charges,612,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:902,Energy Efficiency,schedul,scheduling,902,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:82,Modifiability,config,configuration,82,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:157,Modifiability,config,configurable,157,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:820,Modifiability,config,configurable,820,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218:588,Safety,avoid,avoid,588,"Sorry for a fairly late comment on this PR, but I was wondering about the default configuration:. > CHANGELOG: Added a new method Job.regions() as well as a configurable parameter to the ServiceBackend to specify which cloud regions a job can run in. The default value is a job can run in any available region. We're looking forward to the functionality in this PR particularly because we're hoping that it'll allow us to schedule workers in the US, while our Batch deployment is in Australia. However, by default we really need to make sure that workers won't be scheduled in the US, to avoid accidental egress charges, as all our datasets are located in Australia. For processing gnomAD data (which is located in the US), spinning up workers colocated with the data would be fantastic though. Hence we'd really need a configurable default value on the deployment level, I believe:. - Generally allow scheduling in AU + US regions (specifically `australia-southeast1` and `us-central1`).; - By default, pick any region in AU only (in practice `australia-southeast1`).; - Allow jobs to explicitly specify to run in the US (in practice `us-central1`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1275427218
https://github.com/hail-is/hail/pull/12221#issuecomment-1276247643:137,Deployability,deploy,deploy,137,I think this is ready for another look. I'll cleanup the database once we're happy with everything and I no longer need to test with dev deploy (I don't want to have to nuke the database).,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276247643
https://github.com/hail-is/hail/pull/12221#issuecomment-1276247643:123,Testability,test,test,123,I think this is ready for another look. I'll cleanup the database once we're happy with everything and I no longer need to test with dev deploy (I don't want to have to nuke the database).,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276247643
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:877,Availability,down,down,877,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:143,Energy Efficiency,schedul,scheduler,143,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:652,Energy Efficiency,schedul,scheduler,652,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:731,Energy Efficiency,schedul,schedule,731,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:778,Energy Efficiency,schedul,scheduled,778,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:901,Energy Efficiency,schedul,schedulable,901,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:153,Performance,throughput,throughput,153,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:268,Performance,queue,queue,268,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:466,Performance,load,load,466,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:508,Performance,queue,queue,508,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:632,Performance,optimiz,optimization,632,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:886,Performance,queue,queue,886,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:1207,Performance,queue,queue,1207,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928:471,Testability,test,tests,471,"I think this PR is just about as good as it's going to get for now. From looking at the Grafana API metrics, I think I was hitting the maximum scheduler throughput. The get running cancellable jobs is around 40ms each call for 5000 jobs while the getting the job head queue is 123ms. If the 40ms becomes a problem, then we can pull less records (see explanation below) or we can not do a json array agg and figure out the regions using bit shifting. When we did the load tests yesterday getting the job head queue was around 1-2 seconds with us each having 20k records. I think we just have to keep an eye on it. I did some further optimization of the scheduler by allowing it to pull up to 10000 jobs from the database to try and schedule before it hits its fair share of jobs scheduled. This helps a lot with efficiency to use the existing capacity if there are jobs further down the queue that are schedulable. I know it's a bit of a departure from what we've done in the past, but I think since we're going in order of fair share now and pulling more jobs from the database isn't that expensive, then this is fine. Happy to make this number 1000 even. 300 was too small though. Jobs at the front of the queue will eventually be able to run because the next iteration of the autoscaler will create the correct instances for those jobs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276546928
https://github.com/hail-is/hail/pull/12221#issuecomment-1276550134:107,Energy Efficiency,schedul,scheduler,107,"Putting the WIP tag on. If you're good with this, then let's merge tomorrow morning so we don't have a new scheduler running overnight.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1276550134
https://github.com/hail-is/hail/pull/12221#issuecomment-1277558454:166,Performance,optimiz,optimizing,166,"I set the number of records pulled to 1000. I'm not sure if it makes a huge difference, but I decided it's better to favor any possible speed improvement rather than optimizing for an adversial user right now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1277558454
https://github.com/hail-is/hail/pull/12221#issuecomment-1277915822:120,Usability,clear,clearer,120,What do you think of setting the auto increment to 0 for the region id? I think that will make the bit shift operations clearer and less vulnerable to mistakes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12221#issuecomment-1277915822
https://github.com/hail-is/hail/pull/12222#issuecomment-1258646909:99,Availability,down,download,99,@danking What do you think about having a version ID inside the JAR file (MANIFEST???). We already download the JAR file on the worker. Not sure how much extra time it would be to look for the version inside the JAR (maybe cache this?) and then pass the right argument configuration.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12222#issuecomment-1258646909
https://github.com/hail-is/hail/pull/12222#issuecomment-1258646909:269,Deployability,configurat,configuration,269,@danking What do you think about having a version ID inside the JAR file (MANIFEST???). We already download the JAR file on the worker. Not sure how much extra time it would be to look for the version inside the JAR (maybe cache this?) and then pass the right argument configuration.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12222#issuecomment-1258646909
https://github.com/hail-is/hail/pull/12222#issuecomment-1258646909:269,Modifiability,config,configuration,269,@danking What do you think about having a version ID inside the JAR file (MANIFEST???). We already download the JAR file on the worker. Not sure how much extra time it would be to look for the version inside the JAR (maybe cache this?) and then pass the right argument configuration.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12222#issuecomment-1258646909
https://github.com/hail-is/hail/pull/12222#issuecomment-1258646909:223,Performance,cache,cache,223,@danking What do you think about having a version ID inside the JAR file (MANIFEST???). We already download the JAR file on the worker. Not sure how much extra time it would be to look for the version inside the JAR (maybe cache this?) and then pass the right argument configuration.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12222#issuecomment-1258646909
https://github.com/hail-is/hail/pull/12222#issuecomment-1260921810:12,Safety,avoid,avoid,12,"I'd like to avoid the backwards incompatibility here if possible, but if we're going to do it, we should make sure future changes can be done backwards compatibility.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12222#issuecomment-1260921810
https://github.com/hail-is/hail/pull/12222#issuecomment-1262670715:289,Deployability,deploy,deployed,289,"Made this change backwards compatible. Note that I have not made any changes to worker.py in this PR anymore, so there's no danger of incompatibility. I tested the JAR from this PR against default and ran a simple hail query to see that it behaved as usual. Separately, I made #12246, dev deployed it, then ran this same JAR against my dev namespace to see that it added all worker jobs to the same batch as the driver job.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12222#issuecomment-1262670715
https://github.com/hail-is/hail/pull/12222#issuecomment-1262670715:153,Testability,test,tested,153,"Made this change backwards compatible. Note that I have not made any changes to worker.py in this PR anymore, so there's no danger of incompatibility. I tested the JAR from this PR against default and ran a simple hail query to see that it behaved as usual. Separately, I made #12246, dev deployed it, then ran this same JAR against my dev namespace to see that it added all worker jobs to the same batch as the driver job.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12222#issuecomment-1262670715
https://github.com/hail-is/hail/pull/12222#issuecomment-1262670715:207,Usability,simpl,simple,207,"Made this change backwards compatible. Note that I have not made any changes to worker.py in this PR anymore, so there's no danger of incompatibility. I tested the JAR from this PR against default and ran a simple hail query to see that it behaved as usual. Separately, I made #12246, dev deployed it, then ran this same JAR against my dev namespace to see that it added all worker jobs to the same batch as the driver job.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12222#issuecomment-1262670715
https://github.com/hail-is/hail/pull/12226#issuecomment-1259454277:134,Deployability,update,updates,134,For that reason I'm somewhat skeptical and given the future of our scala code feel like we shouldn't spend much effort on non-trivial updates,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12226#issuecomment-1259454277
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12227#issuecomment-1259520272
https://github.com/hail-is/hail/pull/12229#issuecomment-1266123134:12,Usability,guid,guidance,12,Waiting for guidance from htsjdk team on how to replace the deprecated method `Allele.acceptableAlleleBases`. https://github.com/samtools/htsjdk/issues/1623,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12229#issuecomment-1266123134
https://github.com/hail-is/hail/pull/12230#issuecomment-1265436386:84,Security,access,access,84,"Not quite sure why this was re-marked WIP. Anyway, switching to AR meant users lost access to `gcr.io/hail-vdc/python-dill` anyway so this PR is no longer the source of a breaking change and now a fix so that users can use `hailgenetics/python-dill`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12230#issuecomment-1265436386
https://github.com/hail-is/hail/pull/12232#issuecomment-1260030697:38,Testability,test,test,38,> . Does this not work? `((dev)|(pr)|(test))-.*`,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12232#issuecomment-1260030697
https://github.com/hail-is/hail/pull/12235#issuecomment-1261571243:109,Deployability,release,release,109,"Hey @daniel-goldstein, just checking what caused this issue. Was it the open-batches PR, or prior to the 100 release?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12235#issuecomment-1261571243
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12240#issuecomment-1270640165
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12242#issuecomment-1261238387
https://github.com/hail-is/hail/pull/12246#issuecomment-1262787300:98,Testability,test,tests,98,"The other PR didn't pass, but that was because of other issues with the database. Service backend tests passed.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12246#issuecomment-1262787300
https://github.com/hail-is/hail/pull/12248#issuecomment-1266128264:91,Availability,alive,alive,91,@lgruen are y'all running with this change now? I was vaguely concerned that with ~32 JVMs alive that would negatively impact the machine. Do you find that the JVM's RAM gets swapped out and the machines are generally stable?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12248#issuecomment-1266128264
https://github.com/hail-is/hail/pull/12248#issuecomment-1267773430:93,Availability,alive,alive,93,"> @lgruen are y'all running with this change now? I was vaguely concerned that with ~32 JVMs alive that would negatively impact the machine. Do you find that the JVM's RAM gets swapped out and the machines are generally stable?. Yes, we haven't seen any issues with this so far, but also have only been running with this change for a few days.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12248#issuecomment-1267773430
https://github.com/hail-is/hail/pull/12251#issuecomment-1379531238:183,Energy Efficiency,green,green,183,"Unless its most recent build failed in one of gcp or azure, it should merge over the course of a day (as Dan said, it can get beat out by other PRs. Was there a time where it was all green and not merging?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12251#issuecomment-1379531238
https://github.com/hail-is/hail/pull/12253#issuecomment-1273927865:1417,Safety,avoid,avoid,1417,"OK, here's my understanding of prometheus and our use of it after chatting with @daniel-goldstein :; 1. The Python client treats Summary as just a pair of a Gauge and Counter. It's only useful if you need to track the number of times you set/increments/decrement a value and the value itself. For example, the total number of visits to a web page. Some clients for other languages treat Summaries as histogram-like things, but the Python client does not.; 2. A Histogram, with a domain-relevant array of buckets, is the right tool for visualizing a distribution of values. In this PR, we treat percent-of-cores-in-use-on-instance as a Histogram. This should let us see the distribution of instances according to what percent of the cores are revenue-generating versus not.; 3. A Gauge is the right tool for visualizing any other value. In this PR, we use a gauge to measure the total jobs, the used cores, the total free cores, the total cores, the total cost per hour (ignoring disk), and the total revenue per hour (ignoring disk). ; 4. It is important to use `remove` for metrics whose label set changes over time. For example, if all the jobs owned by a particular user finish, then the metrics labelled with that user ought to become `0`. The database query will elide such records; therefore, it is important to `remove` such labels from the `USER_CORES` and `USER_JOBS`. We prefer `remove` to `clear` so as to avoid the case where prometheus collects metrics in between a call to `clear` and a call to `set` which restores the value for a still valid label.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12253#issuecomment-1273927865
https://github.com/hail-is/hail/pull/12253#issuecomment-1273927865:1401,Usability,clear,clear,1401,"OK, here's my understanding of prometheus and our use of it after chatting with @daniel-goldstein :; 1. The Python client treats Summary as just a pair of a Gauge and Counter. It's only useful if you need to track the number of times you set/increments/decrement a value and the value itself. For example, the total number of visits to a web page. Some clients for other languages treat Summaries as histogram-like things, but the Python client does not.; 2. A Histogram, with a domain-relevant array of buckets, is the right tool for visualizing a distribution of values. In this PR, we treat percent-of-cores-in-use-on-instance as a Histogram. This should let us see the distribution of instances according to what percent of the cores are revenue-generating versus not.; 3. A Gauge is the right tool for visualizing any other value. In this PR, we use a gauge to measure the total jobs, the used cores, the total free cores, the total cores, the total cost per hour (ignoring disk), and the total revenue per hour (ignoring disk). ; 4. It is important to use `remove` for metrics whose label set changes over time. For example, if all the jobs owned by a particular user finish, then the metrics labelled with that user ought to become `0`. The database query will elide such records; therefore, it is important to `remove` such labels from the `USER_CORES` and `USER_JOBS`. We prefer `remove` to `clear` so as to avoid the case where prometheus collects metrics in between a call to `clear` and a call to `set` which restores the value for a still valid label.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12253#issuecomment-1273927865
https://github.com/hail-is/hail/pull/12253#issuecomment-1273927865:1488,Usability,clear,clear,1488,"OK, here's my understanding of prometheus and our use of it after chatting with @daniel-goldstein :; 1. The Python client treats Summary as just a pair of a Gauge and Counter. It's only useful if you need to track the number of times you set/increments/decrement a value and the value itself. For example, the total number of visits to a web page. Some clients for other languages treat Summaries as histogram-like things, but the Python client does not.; 2. A Histogram, with a domain-relevant array of buckets, is the right tool for visualizing a distribution of values. In this PR, we treat percent-of-cores-in-use-on-instance as a Histogram. This should let us see the distribution of instances according to what percent of the cores are revenue-generating versus not.; 3. A Gauge is the right tool for visualizing any other value. In this PR, we use a gauge to measure the total jobs, the used cores, the total free cores, the total cores, the total cost per hour (ignoring disk), and the total revenue per hour (ignoring disk). ; 4. It is important to use `remove` for metrics whose label set changes over time. For example, if all the jobs owned by a particular user finish, then the metrics labelled with that user ought to become `0`. The database query will elide such records; therefore, it is important to `remove` such labels from the `USER_CORES` and `USER_JOBS`. We prefer `remove` to `clear` so as to avoid the case where prometheus collects metrics in between a call to `clear` and a call to `set` which restores the value for a still valid label.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12253#issuecomment-1273927865
https://github.com/hail-is/hail/pull/12254#issuecomment-1267273283:22,Deployability,update,update,22,Another follow up PR: update the ggplot tutorial to include the use of cross-product legends!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12254#issuecomment-1267273283
https://github.com/hail-is/hail/pull/12263#issuecomment-1267520808:44,Testability,test,tests,44,Can I close this if the other PR is passing tests?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12263#issuecomment-1267520808
https://github.com/hail-is/hail/pull/12263#issuecomment-1267530105:40,Testability,test,test,40,"I'll close it for now, but if I have to test new changes and ci is overloaded again, then I'll reopen it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12263#issuecomment-1267530105
https://github.com/hail-is/hail/pull/12263#issuecomment-1267535507:94,Deployability,deploy,deploy,94,"Are you working with another branch at the same time in dev? If not, I feel like `hailctl dev deploy -b jigold:region-job-queue-fast-ci -s test_batch,test_hailtop_batch -e deploy_batch` would be a faster feedback loop and not take up a spot in the PR queue",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12263#issuecomment-1267535507
https://github.com/hail-is/hail/pull/12263#issuecomment-1267535507:122,Performance,queue,queue-fast-ci,122,"Are you working with another branch at the same time in dev? If not, I feel like `hailctl dev deploy -b jigold:region-job-queue-fast-ci -s test_batch,test_hailtop_batch -e deploy_batch` would be a faster feedback loop and not take up a spot in the PR queue",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12263#issuecomment-1267535507
https://github.com/hail-is/hail/pull/12263#issuecomment-1267535507:251,Performance,queue,queue,251,"Are you working with another branch at the same time in dev? If not, I feel like `hailctl dev deploy -b jigold:region-job-queue-fast-ci -s test_batch,test_hailtop_batch -e deploy_batch` would be a faster feedback loop and not take up a spot in the PR queue",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12263#issuecomment-1267535507
https://github.com/hail-is/hail/pull/12263#issuecomment-1267535507:204,Usability,feedback,feedback,204,"Are you working with another branch at the same time in dev? If not, I feel like `hailctl dev deploy -b jigold:region-job-queue-fast-ci -s test_batch,test_hailtop_batch -e deploy_batch` would be a faster feedback loop and not take up a spot in the PR queue",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12263#issuecomment-1267535507
https://github.com/hail-is/hail/pull/12269#issuecomment-1268879860:567,Availability,error,error,567,"OK, I think this is actually ready for a real review. Almost everything was spurious (I marked as such, so hopefully we won't have to do that on every PR). There were a few real things:; 1. use integrity checks for CDN javascript libraries; 2. don't let edits to the search textbox modify the URL arbitrarily; 3. don't let the target pages of anchor tags mutate the source page's DOM (wtf, how is this the default behavior???); 4. don't send the IntegrityError from mysql back to the users. I think this is basically safe because of how restrictive we are with which error is printed, but it's also not necessary.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1268879860
https://github.com/hail-is/hail/pull/12269#issuecomment-1268879860:517,Safety,safe,safe,517,"OK, I think this is actually ready for a real review. Almost everything was spurious (I marked as such, so hopefully we won't have to do that on every PR). There were a few real things:; 1. use integrity checks for CDN javascript libraries; 2. don't let edits to the search textbox modify the URL arbitrarily; 3. don't let the target pages of anchor tags mutate the source page's DOM (wtf, how is this the default behavior???); 4. don't send the IntegrityError from mysql back to the users. I think this is basically safe because of how restrictive we are with which error is printed, but it's also not necessary.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1268879860
https://github.com/hail-is/hail/pull/12269#issuecomment-1268879860:194,Security,integrity,integrity,194,"OK, I think this is actually ready for a real review. Almost everything was spurious (I marked as such, so hopefully we won't have to do that on every PR). There were a few real things:; 1. use integrity checks for CDN javascript libraries; 2. don't let edits to the search textbox modify the URL arbitrarily; 3. don't let the target pages of anchor tags mutate the source page's DOM (wtf, how is this the default behavior???); 4. don't send the IntegrityError from mysql back to the users. I think this is basically safe because of how restrictive we are with which error is printed, but it's also not necessary.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1268879860
https://github.com/hail-is/hail/pull/12269#issuecomment-1268879860:446,Security,Integrity,IntegrityError,446,"OK, I think this is actually ready for a real review. Almost everything was spurious (I marked as such, so hopefully we won't have to do that on every PR). There were a few real things:; 1. use integrity checks for CDN javascript libraries; 2. don't let edits to the search textbox modify the URL arbitrarily; 3. don't let the target pages of anchor tags mutate the source page's DOM (wtf, how is this the default behavior???); 4. don't send the IntegrityError from mysql back to the users. I think this is basically safe because of how restrictive we are with which error is printed, but it's also not necessary.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1268879860
https://github.com/hail-is/hail/pull/12269#issuecomment-1270381357:119,Security,sanitiz,sanitization,119,@danking Looks like there are still some failing CDN fetches and a kind of annoying false-positive complaint about URL sanitization.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1270381357
https://github.com/hail-is/hail/pull/12269#issuecomment-1270398986:14,Testability,benchmark,benchmark-service,14,I'll wait for benchmark-service to get rm -rf'ed. I addressed the other CDN issue and I dismissed the false positive. I'll check-in again once benchmark-service is removed.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1270398986
https://github.com/hail-is/hail/pull/12269#issuecomment-1270398986:143,Testability,benchmark,benchmark-service,143,I'll wait for benchmark-service to get rm -rf'ed. I addressed the other CDN issue and I dismissed the false positive. I'll check-in again once benchmark-service is removed.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1270398986
https://github.com/hail-is/hail/pull/12269#issuecomment-1271793472:54,Security,secur,security,54,"oh wow, it doesn't even merge main before running the security checks. 🤦‍♀️",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1271793472
https://github.com/hail-is/hail/pull/12269#issuecomment-1272063880:174,Modifiability,variab,variables,174,"Yeah, I'd like to make it required. It's one of the things that NIST 800-53 asks for: automated vulnerability detection. To be honest, I'm not impressed by a tool that finds variables whose names include the character string ""secret"" and warns if they're printed, but, 🤷.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1272063880
https://github.com/hail-is/hail/pull/12269#issuecomment-1272063880:110,Safety,detect,detection,110,"Yeah, I'd like to make it required. It's one of the things that NIST 800-53 asks for: automated vulnerability detection. To be honest, I'm not impressed by a tool that finds variables whose names include the character string ""secret"" and warns if they're printed, but, 🤷.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1272063880
https://github.com/hail-is/hail/pull/12269#issuecomment-1272065133:19,Usability,clear,cleared,19,This should now be cleared to merge. I might need to go dismiss all of these alerts on `main` once that merges the first time. Let's leave it on for a bit and assess how much of a headache it is.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12269#issuecomment-1272065133
https://github.com/hail-is/hail/pull/12275#issuecomment-1268734693:11,Testability,test,tests,11,I like the tests,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12275#issuecomment-1268734693
https://github.com/hail-is/hail/pull/12275#issuecomment-1268740914:87,Availability,down,down,87,Let me do some experiments and see whether there is a performance cost. The third post down seemed to think the way I wrote it there shouldn't be a performance penalty and it should still use the index. I'm not sure whether I believe that.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12275#issuecomment-1268740914
https://github.com/hail-is/hail/pull/12275#issuecomment-1268740914:54,Performance,perform,performance,54,Let me do some experiments and see whether there is a performance cost. The third post down seemed to think the way I wrote it there shouldn't be a performance penalty and it should still use the index. I'm not sure whether I believe that.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12275#issuecomment-1268740914
https://github.com/hail-is/hail/pull/12275#issuecomment-1268740914:148,Performance,perform,performance,148,Let me do some experiments and see whether there is a performance cost. The third post down seemed to think the way I wrote it there shouldn't be a performance penalty and it should still use the index. I'm not sure whether I believe that.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12275#issuecomment-1268740914
https://github.com/hail-is/hail/pull/12276#issuecomment-1268732639:14,Availability,error,error,14,"You'll get an error [if the character set is incompatible with the collation](https://dev.mysql.com/doc/refman/8.0/en/charset-collation-compatibility.html), so as long as this passes CI it should be fine on that account. As to why that particular collation, I found it on the [case sensitivity in string searches page](https://dev.mysql.com/doc/refman/8.0/en/case-sensitivity.html). The default is `utf8mb4_0900_ai_ci` and the first case sensitive alternative mentioned is this one. The change log indicates that ""as"" means accent sensitive and ""cs"" means case sensitive. The 0900 seems to refer to Unicode 9.0.0. Anyway, it seems sensible to use a Unicode collation rather than a binary one because Unicode encodings have more meaning than their bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12276#issuecomment-1268732639
https://github.com/hail-is/hail/pull/12276#issuecomment-1268732639:494,Testability,log,log,494,"You'll get an error [if the character set is incompatible with the collation](https://dev.mysql.com/doc/refman/8.0/en/charset-collation-compatibility.html), so as long as this passes CI it should be fine on that account. As to why that particular collation, I found it on the [case sensitivity in string searches page](https://dev.mysql.com/doc/refman/8.0/en/case-sensitivity.html). The default is `utf8mb4_0900_ai_ci` and the first case sensitive alternative mentioned is this one. The change log indicates that ""as"" means accent sensitive and ""cs"" means case sensitive. The 0900 seems to refer to Unicode 9.0.0. Anyway, it seems sensible to use a Unicode collation rather than a binary one because Unicode encodings have more meaning than their bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12276#issuecomment-1268732639
https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614:30,Availability,error,error,30,"Huh. Well, this is a terrible error message, but the short answer is that Hail doesn't support reading directly from an HTTP(S) server. You can either download that file or use a dataset that is available in a cloud storage bucket. In general, you'll want to convert to Hail's native MatrixTable format before you do further analysis anyway. I'll fix this to give a more reasonable error message, but, in general, not all HTTP(S) servers support the Range header which means Hail can't efficiently read from all HTTP(S) servers. If you're looking for public datasets to experiment with, I strongly recommend using the Dense Hail MatrixTable of the HGDP+1KG dataset hosted for free by the three major clouds https://gnomad.broadinstitute.org/downloads#v3-hgdp-1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614
https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614:151,Availability,down,download,151,"Huh. Well, this is a terrible error message, but the short answer is that Hail doesn't support reading directly from an HTTP(S) server. You can either download that file or use a dataset that is available in a cloud storage bucket. In general, you'll want to convert to Hail's native MatrixTable format before you do further analysis anyway. I'll fix this to give a more reasonable error message, but, in general, not all HTTP(S) servers support the Range header which means Hail can't efficiently read from all HTTP(S) servers. If you're looking for public datasets to experiment with, I strongly recommend using the Dense Hail MatrixTable of the HGDP+1KG dataset hosted for free by the three major clouds https://gnomad.broadinstitute.org/downloads#v3-hgdp-1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614
https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614:195,Availability,avail,available,195,"Huh. Well, this is a terrible error message, but the short answer is that Hail doesn't support reading directly from an HTTP(S) server. You can either download that file or use a dataset that is available in a cloud storage bucket. In general, you'll want to convert to Hail's native MatrixTable format before you do further analysis anyway. I'll fix this to give a more reasonable error message, but, in general, not all HTTP(S) servers support the Range header which means Hail can't efficiently read from all HTTP(S) servers. If you're looking for public datasets to experiment with, I strongly recommend using the Dense Hail MatrixTable of the HGDP+1KG dataset hosted for free by the three major clouds https://gnomad.broadinstitute.org/downloads#v3-hgdp-1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614
https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614:382,Availability,error,error,382,"Huh. Well, this is a terrible error message, but the short answer is that Hail doesn't support reading directly from an HTTP(S) server. You can either download that file or use a dataset that is available in a cloud storage bucket. In general, you'll want to convert to Hail's native MatrixTable format before you do further analysis anyway. I'll fix this to give a more reasonable error message, but, in general, not all HTTP(S) servers support the Range header which means Hail can't efficiently read from all HTTP(S) servers. If you're looking for public datasets to experiment with, I strongly recommend using the Dense Hail MatrixTable of the HGDP+1KG dataset hosted for free by the three major clouds https://gnomad.broadinstitute.org/downloads#v3-hgdp-1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614
https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614:741,Availability,down,downloads,741,"Huh. Well, this is a terrible error message, but the short answer is that Hail doesn't support reading directly from an HTTP(S) server. You can either download that file or use a dataset that is available in a cloud storage bucket. In general, you'll want to convert to Hail's native MatrixTable format before you do further analysis anyway. I'll fix this to give a more reasonable error message, but, in general, not all HTTP(S) servers support the Range header which means Hail can't efficiently read from all HTTP(S) servers. If you're looking for public datasets to experiment with, I strongly recommend using the Dense Hail MatrixTable of the HGDP+1KG dataset hosted for free by the three major clouds https://gnomad.broadinstitute.org/downloads#v3-hgdp-1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614
https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614:486,Energy Efficiency,efficient,efficiently,486,"Huh. Well, this is a terrible error message, but the short answer is that Hail doesn't support reading directly from an HTTP(S) server. You can either download that file or use a dataset that is available in a cloud storage bucket. In general, you'll want to convert to Hail's native MatrixTable format before you do further analysis anyway. I'll fix this to give a more reasonable error message, but, in general, not all HTTP(S) servers support the Range header which means Hail can't efficiently read from all HTTP(S) servers. If you're looking for public datasets to experiment with, I strongly recommend using the Dense Hail MatrixTable of the HGDP+1KG dataset hosted for free by the three major clouds https://gnomad.broadinstitute.org/downloads#v3-hgdp-1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614
https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614:36,Integrability,message,message,36,"Huh. Well, this is a terrible error message, but the short answer is that Hail doesn't support reading directly from an HTTP(S) server. You can either download that file or use a dataset that is available in a cloud storage bucket. In general, you'll want to convert to Hail's native MatrixTable format before you do further analysis anyway. I'll fix this to give a more reasonable error message, but, in general, not all HTTP(S) servers support the Range header which means Hail can't efficiently read from all HTTP(S) servers. If you're looking for public datasets to experiment with, I strongly recommend using the Dense Hail MatrixTable of the HGDP+1KG dataset hosted for free by the three major clouds https://gnomad.broadinstitute.org/downloads#v3-hgdp-1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614
https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614:388,Integrability,message,message,388,"Huh. Well, this is a terrible error message, but the short answer is that Hail doesn't support reading directly from an HTTP(S) server. You can either download that file or use a dataset that is available in a cloud storage bucket. In general, you'll want to convert to Hail's native MatrixTable format before you do further analysis anyway. I'll fix this to give a more reasonable error message, but, in general, not all HTTP(S) servers support the Range header which means Hail can't efficiently read from all HTTP(S) servers. If you're looking for public datasets to experiment with, I strongly recommend using the Dense Hail MatrixTable of the HGDP+1KG dataset hosted for free by the three major clouds https://gnomad.broadinstitute.org/downloads#v3-hgdp-1kg.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12280#issuecomment-1270722614
https://github.com/hail-is/hail/pull/12283#issuecomment-1271739403:16,Testability,test,test,16,A billing limit test failed which is concerning. I'm going to get rid of the approval until I understand why.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12283#issuecomment-1271739403
https://github.com/hail-is/hail/pull/12283#issuecomment-1271808059:43,Testability,test,tests,43,I'm pretty sure I fixed the issue. Yay for tests!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12283#issuecomment-1271808059
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12288#issuecomment-1272059855
https://github.com/hail-is/hail/issues/12290#issuecomment-1284270117:0,Deployability,Update,Update,0,"Update:. We were able to resolve this issues using a combination of three strategies. 1) We enabled [autoscaling](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling) in our cluster. 2) We changed the spark partition defaults on our cluster to split data into 8,00 partitions. We had [read](https://cloud.google.com/dataproc/docs/support/spark-job-tuning) that this number could be changed to 3x the number of vCPUs on our cluster. Because we are using autoscaling, the number of vCPUs used is not predetermined. Because of this we started with 1x the maximum number of secondary workers in our cluster. Our maximum is set to 1000 n1-highmem-8 machines. These nodes contain 8 vCPUs each, so 8 x 1,000 = 8,000. After speaking with Google, we verified that we could have used 3x the maximum number of vCPUs to increase parallelism. With a maximum of 10 workers and 1,000 secondary workers, all n1-highmem-8 nodes, we could have increased our partition to 24,240. A sample cluster declaration using autoscaling and default shuffle partitions and parallelism of 8000 is below. 3) The hail team had informed us that ""You might try adding `block_size=2048` to your King invocation. That will reduce the memory requirements on the workers to ~1/4 of the default which should give ample room for the analysis."" Because of this, we changed the block size in king to ```block_size=2048```. After looking through the king [source code](https://hail.is/docs/0.2/_modules/hail/linalg/blockmatrix.html#BlockMatrix.default_block_size), we were able to determine the default block size is 4096. . ```; hailctl dataproc start cluster \; --vep GRCh38 \; --autoscaling-policy=MVP_autoscaling_policy \; --requester-pays-allow-annotation-db \; --packages gnomad \; --requester-pays-allow-buckets gnomad-public-requester-pays \; --secondary-worker-type=non-preemptible \; --master-machine-type=n1-highmem-8 \; --worker-machine-type=n1-highmem-8 \; --worker-boot-disk-size=1000 \; --preemptible-",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12290#issuecomment-1284270117
https://github.com/hail-is/hail/issues/12290#issuecomment-1284270117:1215,Energy Efficiency,reduce,reduce,1215,"e spark partition defaults on our cluster to split data into 8,00 partitions. We had [read](https://cloud.google.com/dataproc/docs/support/spark-job-tuning) that this number could be changed to 3x the number of vCPUs on our cluster. Because we are using autoscaling, the number of vCPUs used is not predetermined. Because of this we started with 1x the maximum number of secondary workers in our cluster. Our maximum is set to 1000 n1-highmem-8 machines. These nodes contain 8 vCPUs each, so 8 x 1,000 = 8,000. After speaking with Google, we verified that we could have used 3x the maximum number of vCPUs to increase parallelism. With a maximum of 10 workers and 1,000 secondary workers, all n1-highmem-8 nodes, we could have increased our partition to 24,240. A sample cluster declaration using autoscaling and default shuffle partitions and parallelism of 8000 is below. 3) The hail team had informed us that ""You might try adding `block_size=2048` to your King invocation. That will reduce the memory requirements on the workers to ~1/4 of the default which should give ample room for the analysis."" Because of this, we changed the block size in king to ```block_size=2048```. After looking through the king [source code](https://hail.is/docs/0.2/_modules/hail/linalg/blockmatrix.html#BlockMatrix.default_block_size), we were able to determine the default block size is 4096. . ```; hailctl dataproc start cluster \; --vep GRCh38 \; --autoscaling-policy=MVP_autoscaling_policy \; --requester-pays-allow-annotation-db \; --packages gnomad \; --requester-pays-allow-buckets gnomad-public-requester-pays \; --secondary-worker-type=non-preemptible \; --master-machine-type=n1-highmem-8 \; --worker-machine-type=n1-highmem-8 \; --worker-boot-disk-size=1000 \; --preemptible-worker-boot-disk-size=1000 \; --properties=dataproc:dataproc.logging.stackdriver.enable=true,dataproc:dataproc.monitoring.stackdriver.enable=true,spark:spark.sql.shuffle.partitions=8000,spark:spark.default.parallelism=8000; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12290#issuecomment-1284270117
https://github.com/hail-is/hail/issues/12290#issuecomment-1284270117:2112,Energy Efficiency,monitor,monitoring,2112,"e spark partition defaults on our cluster to split data into 8,00 partitions. We had [read](https://cloud.google.com/dataproc/docs/support/spark-job-tuning) that this number could be changed to 3x the number of vCPUs on our cluster. Because we are using autoscaling, the number of vCPUs used is not predetermined. Because of this we started with 1x the maximum number of secondary workers in our cluster. Our maximum is set to 1000 n1-highmem-8 machines. These nodes contain 8 vCPUs each, so 8 x 1,000 = 8,000. After speaking with Google, we verified that we could have used 3x the maximum number of vCPUs to increase parallelism. With a maximum of 10 workers and 1,000 secondary workers, all n1-highmem-8 nodes, we could have increased our partition to 24,240. A sample cluster declaration using autoscaling and default shuffle partitions and parallelism of 8000 is below. 3) The hail team had informed us that ""You might try adding `block_size=2048` to your King invocation. That will reduce the memory requirements on the workers to ~1/4 of the default which should give ample room for the analysis."" Because of this, we changed the block size in king to ```block_size=2048```. After looking through the king [source code](https://hail.is/docs/0.2/_modules/hail/linalg/blockmatrix.html#BlockMatrix.default_block_size), we were able to determine the default block size is 4096. . ```; hailctl dataproc start cluster \; --vep GRCh38 \; --autoscaling-policy=MVP_autoscaling_policy \; --requester-pays-allow-annotation-db \; --packages gnomad \; --requester-pays-allow-buckets gnomad-public-requester-pays \; --secondary-worker-type=non-preemptible \; --master-machine-type=n1-highmem-8 \; --worker-machine-type=n1-highmem-8 \; --worker-boot-disk-size=1000 \; --preemptible-worker-boot-disk-size=1000 \; --properties=dataproc:dataproc.logging.stackdriver.enable=true,dataproc:dataproc.monitoring.stackdriver.enable=true,spark:spark.sql.shuffle.partitions=8000,spark:spark.default.parallelism=8000; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12290#issuecomment-1284270117
https://github.com/hail-is/hail/issues/12290#issuecomment-1284270117:162,Modifiability,config,configuring-clusters,162,"Update:. We were able to resolve this issues using a combination of three strategies. 1) We enabled [autoscaling](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling) in our cluster. 2) We changed the spark partition defaults on our cluster to split data into 8,00 partitions. We had [read](https://cloud.google.com/dataproc/docs/support/spark-job-tuning) that this number could be changed to 3x the number of vCPUs on our cluster. Because we are using autoscaling, the number of vCPUs used is not predetermined. Because of this we started with 1x the maximum number of secondary workers in our cluster. Our maximum is set to 1000 n1-highmem-8 machines. These nodes contain 8 vCPUs each, so 8 x 1,000 = 8,000. After speaking with Google, we verified that we could have used 3x the maximum number of vCPUs to increase parallelism. With a maximum of 10 workers and 1,000 secondary workers, all n1-highmem-8 nodes, we could have increased our partition to 24,240. A sample cluster declaration using autoscaling and default shuffle partitions and parallelism of 8000 is below. 3) The hail team had informed us that ""You might try adding `block_size=2048` to your King invocation. That will reduce the memory requirements on the workers to ~1/4 of the default which should give ample room for the analysis."" Because of this, we changed the block size in king to ```block_size=2048```. After looking through the king [source code](https://hail.is/docs/0.2/_modules/hail/linalg/blockmatrix.html#BlockMatrix.default_block_size), we were able to determine the default block size is 4096. . ```; hailctl dataproc start cluster \; --vep GRCh38 \; --autoscaling-policy=MVP_autoscaling_policy \; --requester-pays-allow-annotation-db \; --packages gnomad \; --requester-pays-allow-buckets gnomad-public-requester-pays \; --secondary-worker-type=non-preemptible \; --master-machine-type=n1-highmem-8 \; --worker-machine-type=n1-highmem-8 \; --worker-boot-disk-size=1000 \; --preemptible-",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12290#issuecomment-1284270117
https://github.com/hail-is/hail/issues/12290#issuecomment-1284270117:2062,Testability,log,logging,2062,"e spark partition defaults on our cluster to split data into 8,00 partitions. We had [read](https://cloud.google.com/dataproc/docs/support/spark-job-tuning) that this number could be changed to 3x the number of vCPUs on our cluster. Because we are using autoscaling, the number of vCPUs used is not predetermined. Because of this we started with 1x the maximum number of secondary workers in our cluster. Our maximum is set to 1000 n1-highmem-8 machines. These nodes contain 8 vCPUs each, so 8 x 1,000 = 8,000. After speaking with Google, we verified that we could have used 3x the maximum number of vCPUs to increase parallelism. With a maximum of 10 workers and 1,000 secondary workers, all n1-highmem-8 nodes, we could have increased our partition to 24,240. A sample cluster declaration using autoscaling and default shuffle partitions and parallelism of 8000 is below. 3) The hail team had informed us that ""You might try adding `block_size=2048` to your King invocation. That will reduce the memory requirements on the workers to ~1/4 of the default which should give ample room for the analysis."" Because of this, we changed the block size in king to ```block_size=2048```. After looking through the king [source code](https://hail.is/docs/0.2/_modules/hail/linalg/blockmatrix.html#BlockMatrix.default_block_size), we were able to determine the default block size is 4096. . ```; hailctl dataproc start cluster \; --vep GRCh38 \; --autoscaling-policy=MVP_autoscaling_policy \; --requester-pays-allow-annotation-db \; --packages gnomad \; --requester-pays-allow-buckets gnomad-public-requester-pays \; --secondary-worker-type=non-preemptible \; --master-machine-type=n1-highmem-8 \; --worker-machine-type=n1-highmem-8 \; --worker-boot-disk-size=1000 \; --preemptible-worker-boot-disk-size=1000 \; --properties=dataproc:dataproc.logging.stackdriver.enable=true,dataproc:dataproc.monitoring.stackdriver.enable=true,spark:spark.sql.shuffle.partitions=8000,spark:spark.default.parallelism=8000; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12290#issuecomment-1284270117
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12292#issuecomment-1272062753
https://github.com/hail-is/hail/pull/12295#issuecomment-1272085468:543,Safety,Unsafe,UnsafeIndexedSeq,543,"I need help with the emit rule. I have what I believe to be an [XY problem](https://en.wikipedia.org/wiki/XY_problem). . The X: Implement maximal independent set in generated code.; The Y: Compile an IR as a function such that it can be passed _in generated code_ to a helper method akin to [this current implementation](https://github.com/chrisvittal/hail/blob/b286ba4a1463a81ec157e6add6d6d56c00de1138/hail/src/main/scala/is/hail/utils/Graph.scala#L50) of maximal independent set. At this point it becomes a simple method call that takes an `UnsafeIndexedSeq`, unpacks it to an array of tuples, and calls one of the other versions of maximal independent set (returning an array) that is then converted so it can be the return type of this `emitI` match arm. Thoughts, advice?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12295#issuecomment-1272085468
https://github.com/hail-is/hail/pull/12295#issuecomment-1272085468:509,Usability,simpl,simple,509,"I need help with the emit rule. I have what I believe to be an [XY problem](https://en.wikipedia.org/wiki/XY_problem). . The X: Implement maximal independent set in generated code.; The Y: Compile an IR as a function such that it can be passed _in generated code_ to a helper method akin to [this current implementation](https://github.com/chrisvittal/hail/blob/b286ba4a1463a81ec157e6add6d6d56c00de1138/hail/src/main/scala/is/hail/utils/Graph.scala#L50) of maximal independent set. At this point it becomes a simple method call that takes an `UnsafeIndexedSeq`, unpacks it to an array of tuples, and calls one of the other versions of maximal independent set (returning an array) that is then converted so it can be the return type of this `emitI` match arm. Thoughts, advice?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12295#issuecomment-1272085468
https://github.com/hail-is/hail/pull/12295#issuecomment-1272171870:303,Performance,load,loader,303,"The tie breaker function is, for all intents and purposes, a separate compilation unit. I think you should be able to call Compile.scala on that IR to produce a `(HailClassLoader, FS, Int, Region) => F)` on the driver, serialize that function with `mb.getObject`, and then initialize it with the (class loader, fs, 0, region) wherever the MaximalIndependentSet code is evaluated",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12295#issuecomment-1272171870
https://github.com/hail-is/hail/pull/12295#issuecomment-1335949595:43,Availability,error,error,43,I handled the merge conflicts and a syntax error. Hopefully we can get this merged post-haste!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12295#issuecomment-1335949595
https://github.com/hail-is/hail/pull/12295#issuecomment-1428565793:28,Energy Efficiency,green,green,28,@tpoterba this is ready and green,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12295#issuecomment-1428565793
https://github.com/hail-is/hail/pull/12295#issuecomment-1431690407:13,Testability,test,tests,13,"> do we have tests that catch when we pass out-of-scope refs into the comparison func? I think scala won't catch that (see my comment about Binds) but maybe we already do in Python (should still fix binds). We don't, but I'm confident that the changes I make to the parser env when parsing the tiebreaker will catch issues. https://github.com/chrisvittal/hail/blob/03c36f3980412fd62cf623fc75deefdc8d79afe9/hail/src/main/scala/is/hail/expr/ir/Parser.scala#L976C7-L989",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12295#issuecomment-1431690407
https://github.com/hail-is/hail/pull/12295#issuecomment-1431843216:99,Availability,error,error,99,"Also when there is a binding outside the tiebreaker used in the tiebreaker it fails in python. The error is very inscrutable, but it simply does not work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12295#issuecomment-1431843216
https://github.com/hail-is/hail/pull/12295#issuecomment-1431843216:133,Usability,simpl,simply,133,"Also when there is a binding outside the tiebreaker used in the tiebreaker it fails in python. The error is very inscrutable, but it simply does not work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12295#issuecomment-1431843216
https://github.com/hail-is/hail/pull/12295#issuecomment-1431862227:67,Performance,queue,queue,67,@chrisvittal if you dismiss Tim's review it will show up on his ci queue,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12295#issuecomment-1431862227
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12296#issuecomment-1282268386
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484879:6,Deployability,update,update,6,we'll update this when we update spark,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484879
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484879:26,Deployability,update,update,26,we'll update this when we update spark,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484879
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12298#issuecomment-1275484901
https://github.com/hail-is/hail/pull/12299#issuecomment-1304287294:91,Usability,simpl,simpler,91,This need substantial work. I will create a new PR which revamps import_matrix_table to be simpler and to correctly handle glob patterns.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12299#issuecomment-1304287294
https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805:291,Deployability,install,install,291,"I don't think there's any good reason why the other pip packages are in a separate RUN step. In fact, using one pip invocation should ensure we get compatible versions whereas what we have now doesn't ensure that. I have no objections to using the hail/python/pinned-requirements.txt. If we install that and all these extra dependencies in one layer then install the hail wheel after (without -U), I *think* it should see all the dependencies are met and just install the hail package.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805
https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805:355,Deployability,install,install,355,"I don't think there's any good reason why the other pip packages are in a separate RUN step. In fact, using one pip invocation should ensure we get compatible versions whereas what we have now doesn't ensure that. I have no objections to using the hail/python/pinned-requirements.txt. If we install that and all these extra dependencies in one layer then install the hail wheel after (without -U), I *think* it should see all the dependencies are met and just install the hail package.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805
https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805:460,Deployability,install,install,460,"I don't think there's any good reason why the other pip packages are in a separate RUN step. In fact, using one pip invocation should ensure we get compatible versions whereas what we have now doesn't ensure that. I have no objections to using the hail/python/pinned-requirements.txt. If we install that and all these extra dependencies in one layer then install the hail wheel after (without -U), I *think* it should see all the dependencies are met and just install the hail package.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805
https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805:324,Integrability,depend,dependencies,324,"I don't think there's any good reason why the other pip packages are in a separate RUN step. In fact, using one pip invocation should ensure we get compatible versions whereas what we have now doesn't ensure that. I have no objections to using the hail/python/pinned-requirements.txt. If we install that and all these extra dependencies in one layer then install the hail wheel after (without -U), I *think* it should see all the dependencies are met and just install the hail package.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805
https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805:430,Integrability,depend,dependencies,430,"I don't think there's any good reason why the other pip packages are in a separate RUN step. In fact, using one pip invocation should ensure we get compatible versions whereas what we have now doesn't ensure that. I have no objections to using the hail/python/pinned-requirements.txt. If we install that and all these extra dependencies in one layer then install the hail wheel after (without -U), I *think* it should see all the dependencies are met and just install the hail package.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12301#issuecomment-1275353805
https://github.com/hail-is/hail/pull/12307#issuecomment-1276964160:45,Availability,error,error,45,"Hmm, so, I see that the py4j backend doesn't error if you `get_flags` for a flag that you haven't previously set. I think it gives you the default value?. The service backend is a bit screwy when it comes to flags because I don't want to run a batch job just to figure out what the Scala-side flags are. I think the right fix is to move all the flag information into Python. What do you think of that @tpoterba ?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12307#issuecomment-1276964160
https://github.com/hail-is/hail/pull/12318#issuecomment-1278123036:172,Testability,test,tests,172,"I'm broadly OK with this, but I suspect we need to do something more careful to ensure that the worker exception is connected to the driver exception. It appears that some tests are failing for this reason.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12318#issuecomment-1278123036
https://github.com/hail-is/hail/pull/12318#issuecomment-1479855493:5,Testability,test,test,5,I'll test manually when I rebase.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12318#issuecomment-1479855493
https://github.com/hail-is/hail/pull/12322#issuecomment-1279306858:13,Availability,error,errors,13,warnings are errors is the bees knees,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12322#issuecomment-1279306858
https://github.com/hail-is/hail/pull/12324#issuecomment-1279117052:56,Deployability,pipeline,pipelines,56,Can we double check with @bw2 that this won't break his pipelines?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12324#issuecomment-1279117052
https://github.com/hail-is/hail/pull/12327#issuecomment-1292250346:30,Testability,test,tests,30,@danking bump this is passing tests now. See comment.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12327#issuecomment-1292250346
https://github.com/hail-is/hail/pull/12327#issuecomment-1318934632:30,Performance,queue,queue,30,Ah sorry this wasn't in my CI queue,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12327#issuecomment-1318934632
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12329#issuecomment-1322809385
https://github.com/hail-is/hail/pull/12334#issuecomment-1280733235:59,Performance,optimiz,optimization,59,"Does PCA do a scan? Either way, do you want to do the same optimization for TableAggregate?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12334#issuecomment-1280733235
https://github.com/hail-is/hail/pull/12346#issuecomment-1281505193:61,Integrability,depend,dependencies,61,@danking I think you have to add `rich` to the `hail/python` dependencies. Docker gets it by accident through `twine`.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12346#issuecomment-1281505193
https://github.com/hail-is/hail/pull/12347#issuecomment-1282578133:36,Availability,down,down,36,"Nice, `test_paired_elementwise_ops` down to under a minute",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12347#issuecomment-1282578133
https://github.com/hail-is/hail/pull/12350#issuecomment-1284493659:4,Testability,test,tests,4,The tests are failing for unrelated reasons. I'll retry once approved.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12350#issuecomment-1284493659
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12352#issuecomment-1285640526
https://github.com/hail-is/hail/pull/12353#issuecomment-1284573461:25,Deployability,deploy,deploy,25,Ya this was the previous deploy taking forever because of QoB tests restarting after preemption,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12353#issuecomment-1284573461
https://github.com/hail-is/hail/pull/12353#issuecomment-1284573461:62,Testability,test,tests,62,Ya this was the previous deploy taking forever because of QoB tests restarting after preemption,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12353#issuecomment-1284573461
https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591:153,Energy Efficiency,reduce,reduce,153,"Let's not turn off memory logs entirely. As we progress to NIST 800-53 compliance we need to log requests that use credentials like this. Instead, let's reduce the volume of bytes per-request. How much money do we spend on logs? We have to view them as necessary cost of business, but one that we can reduce in terms of reducing log volume.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591
https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591:301,Energy Efficiency,reduce,reduce,301,"Let's not turn off memory logs entirely. As we progress to NIST 800-53 compliance we need to log requests that use credentials like this. Instead, let's reduce the volume of bytes per-request. How much money do we spend on logs? We have to view them as necessary cost of business, but one that we can reduce in terms of reducing log volume.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591
https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591:26,Testability,log,logs,26,"Let's not turn off memory logs entirely. As we progress to NIST 800-53 compliance we need to log requests that use credentials like this. Instead, let's reduce the volume of bytes per-request. How much money do we spend on logs? We have to view them as necessary cost of business, but one that we can reduce in terms of reducing log volume.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591
https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591:93,Testability,log,log,93,"Let's not turn off memory logs entirely. As we progress to NIST 800-53 compliance we need to log requests that use credentials like this. Instead, let's reduce the volume of bytes per-request. How much money do we spend on logs? We have to view them as necessary cost of business, but one that we can reduce in terms of reducing log volume.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591
https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591:223,Testability,log,logs,223,"Let's not turn off memory logs entirely. As we progress to NIST 800-53 compliance we need to log requests that use credentials like this. Instead, let's reduce the volume of bytes per-request. How much money do we spend on logs? We have to view them as necessary cost of business, but one that we can reduce in terms of reducing log volume.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591
https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591:329,Testability,log,log,329,"Let's not turn off memory logs entirely. As we progress to NIST 800-53 compliance we need to log requests that use credentials like this. Instead, let's reduce the volume of bytes per-request. How much money do we spend on logs? We have to view them as necessary cost of business, but one that we can reduce in terms of reducing log volume.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12355#issuecomment-1284220591
https://github.com/hail-is/hail/pull/12355#issuecomment-1284280492:55,Testability,log,log,55,"Rate limits will also ensure we don't exceed a certain log volume, so we can use that to figure out what our target bytes-per-log should be",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12355#issuecomment-1284280492
https://github.com/hail-is/hail/pull/12355#issuecomment-1284280492:126,Testability,log,log,126,"Rate limits will also ensure we don't exceed a certain log volume, so we can use that to figure out what our target bytes-per-log should be",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12355#issuecomment-1284280492
https://github.com/hail-is/hail/pull/12365#issuecomment-1289341106:204,Integrability,depend,dependency,204,"Do you think we should add 1-2 more states which are 'any_failure', 'all_failed' and change the others to 'any_success' and 'all_succeeded'? I was thinking it might be nice to have onError jobs with that dependency explicitly in the DAG.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12365#issuecomment-1289341106
https://github.com/hail-is/hail/pull/12365#issuecomment-1289349099:206,Integrability,depend,dependency,206,"> Do you think we should add 1-2 more states which are 'any_failure', 'all_failed' and change the others to 'any_success' and 'all_succeeded'? I was thinking it might be nice to have onError jobs with that dependency explicitly in the DAG. I'm fine with this, though I think `any_succeeded` and `all_succeeded` is more consistent (instead of `any_success`)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12365#issuecomment-1289349099
https://github.com/hail-is/hail/pull/12365#issuecomment-1289351886:54,Availability,failure,failure,54,Maybe we make the name change for success and put the failure conditions in a separate PR? I wonder if there are any sneaky bits with those additions,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12365#issuecomment-1289351886
https://github.com/hail-is/hail/pull/12365#issuecomment-1300509857:9,Availability,failure,failures,9,The test failures were unrelated to the proposed changes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12365#issuecomment-1300509857
https://github.com/hail-is/hail/pull/12365#issuecomment-1300509857:4,Testability,test,test,4,The test failures were unrelated to the proposed changes.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12365#issuecomment-1300509857
https://github.com/hail-is/hail/pull/12365#issuecomment-1310795651:12,Testability,test,test,12,I'd like to test this on the real database just to make sure it all works first.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12365#issuecomment-1310795651
https://github.com/hail-is/hail/pull/12365#issuecomment-1343010078:4,Testability,test,test,4,"The test migration all seems fine with old batches, in progress batches, and new batches. Once you are ok with this, I'll make the PR to cleanup the database from the migration helpers in the extra triggers so that's ready to go.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12365#issuecomment-1343010078
https://github.com/hail-is/hail/pull/12369#issuecomment-1287161147:74,Deployability,update,update,74,The only use of the `_to_json` method I have is in a forthcoming combiner update. Theoretically I can use what I put in the `_to_json` method for tmatrix directly where I need it.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12369#issuecomment-1287161147
https://github.com/hail-is/hail/pull/12371#issuecomment-1289868322:152,Performance,latency,latency,152,Maybe we should just cloud fuse the relevant bucket?. I am curious how much of a difference trimming a few files makes. I kinda figured this was mostly latency bound not bandwidth bound.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12371#issuecomment-1289868322
https://github.com/hail-is/hail/pull/12371#issuecomment-1289877495:184,Availability,down,down,184,"Ya I was wondering too which is why I tried this out. It was helpful in observing how much the number of files is the bottleneck for the copy tool. Takes between 15-20 seconds to copy down all 5k files in the repo while jobs that copy more MB but in fewer files are [much better](https://ci.hail.is/batches/6235246/jobs/52). I don't exactly prefer how, but it feels silly to spend 25% of the time of `auth_image` downloading the entire repo when you need just the auth directory",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12371#issuecomment-1289877495
https://github.com/hail-is/hail/pull/12371#issuecomment-1289877495:413,Availability,down,downloading,413,"Ya I was wondering too which is why I tried this out. It was helpful in observing how much the number of files is the bottleneck for the copy tool. Takes between 15-20 seconds to copy down all 5k files in the repo while jobs that copy more MB but in fewer files are [much better](https://ci.hail.is/batches/6235246/jobs/52). I don't exactly prefer how, but it feels silly to spend 25% of the time of `auth_image` downloading the entire repo when you need just the auth directory",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12371#issuecomment-1289877495
https://github.com/hail-is/hail/pull/12371#issuecomment-1289877495:118,Performance,bottleneck,bottleneck,118,"Ya I was wondering too which is why I tried this out. It was helpful in observing how much the number of files is the bottleneck for the copy tool. Takes between 15-20 seconds to copy down all 5k files in the repo while jobs that copy more MB but in fewer files are [much better](https://ci.hail.is/batches/6235246/jobs/52). I don't exactly prefer how, but it feels silly to spend 25% of the time of `auth_image` downloading the entire repo when you need just the auth directory",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12371#issuecomment-1289877495
https://github.com/hail-is/hail/pull/12376#issuecomment-1295668281:86,Modifiability,Refactor,Refactored,86,"good comments; addressed these and did a fair bit of redesigning of the Python stuff. Refactored the scala to use that method you mentioned, also got mad that we didn't already have a SStackInterval and added that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12376#issuecomment-1295668281
https://github.com/hail-is/hail/pull/12378#issuecomment-1291177961:88,Safety,avoid,avoids,88,PRs having a fresh namespace for images (perhaps with some explicitly seeded ones) also avoids adding a new image that isn't in images.txt which seems like a feature.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12378#issuecomment-1291177961
https://github.com/hail-is/hail/pull/12380#issuecomment-1297584226:41,Deployability,deploy,deployed,41,I addressed the grafana situation. I dev deployed into my namespace and I'm able to log in. I cannot test that I've addressed the issue because the default namespace is still using the old version and thus I hit 401s there before even reaching the dev namespace.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12380#issuecomment-1297584226
https://github.com/hail-is/hail/pull/12380#issuecomment-1297584226:84,Testability,log,log,84,I addressed the grafana situation. I dev deployed into my namespace and I'm able to log in. I cannot test that I've addressed the issue because the default namespace is still using the old version and thus I hit 401s there before even reaching the dev namespace.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12380#issuecomment-1297584226
https://github.com/hail-is/hail/pull/12380#issuecomment-1297584226:101,Testability,test,test,101,I addressed the grafana situation. I dev deployed into my namespace and I'm able to log in. I cannot test that I've addressed the issue because the default namespace is still using the old version and thus I hit 401s there before even reaching the dev namespace.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12380#issuecomment-1297584226
https://github.com/hail-is/hail/pull/12380#issuecomment-1297629123:4,Testability,test,tests,4,The tests failed. Can't tell if it's from this commit. Can you double check everything is good or retry?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12380#issuecomment-1297629123
https://github.com/hail-is/hail/pull/12380#issuecomment-1297763402:41,Availability,error,error,41,"OK, should be resolved now. I had a lint error and needed to mount the global config into hello and website.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12380#issuecomment-1297763402
https://github.com/hail-is/hail/pull/12380#issuecomment-1297763402:78,Modifiability,config,config,78,"OK, should be resolved now. I had a lint error and needed to mount the global config into hello and website.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12380#issuecomment-1297763402
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12391#issuecomment-1304549174
https://github.com/hail-is/hail/pull/12402#issuecomment-1301103637:72,Testability,test,test,72,"@danking Apologies for the rapid bump, but it would be great if I could test the envoy changes again tonight if you have no further requests.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12402#issuecomment-1301103637
https://github.com/hail-is/hail/pull/12410#issuecomment-1299393355:58,Deployability,install,install,58,"Ok, so, llvm-dev requires python3-yaml. Attempting to pip install version 6 (our dep) onto the system fails. So, that's fun.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12410#issuecomment-1299393355
https://github.com/hail-is/hail/pull/12411#issuecomment-1349563987:49,Availability,error,errors,49,@danking Have you actually seen anymore of these errors after your fix of the hadoop tests erasing each others' files? I considering closing this because I've not seen further evidence that hadoop isn't properly addressing transient errors.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12411#issuecomment-1349563987
https://github.com/hail-is/hail/pull/12411#issuecomment-1349563987:233,Availability,error,errors,233,@danking Have you actually seen anymore of these errors after your fix of the hadoop tests erasing each others' files? I considering closing this because I've not seen further evidence that hadoop isn't properly addressing transient errors.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12411#issuecomment-1349563987
https://github.com/hail-is/hail/pull/12411#issuecomment-1349563987:85,Testability,test,tests,85,@danking Have you actually seen anymore of these errors after your fix of the hadoop tests erasing each others' files? I considering closing this because I've not seen further evidence that hadoop isn't properly addressing transient errors.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12411#issuecomment-1349563987
https://github.com/hail-is/hail/pull/12414#issuecomment-1301375177:35,Performance,cache,cache,35,"Hm I only use neovim and I have a .cache dir, I wonder where it's from, maybe clangd or friends?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12414#issuecomment-1301375177
https://github.com/hail-is/hail/pull/12423#issuecomment-1302624425:65,Testability,test,tests,65,I also couldn't remove the flags from Scala because of the Scala tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1302624425
https://github.com/hail-is/hail/pull/12423#issuecomment-1314243953:15,Testability,test,tests,15,Hmm. Those two tests still fail. They don't fail on my laptop when I run them in isolation.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1314243953
https://github.com/hail-is/hail/pull/12423#issuecomment-1343322263:31,Testability,test,tests,31,bump @tpoterba this is passing tests now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1343322263
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:642,Deployability,configurat,configuration,642,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:738,Deployability,configurat,configuration,738,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:481,Modifiability,variab,variable,481,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:545,Modifiability,variab,variable,545,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:642,Modifiability,config,configuration,642,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:675,Modifiability,config,config,675,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:687,Modifiability,config,config,687,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:738,Modifiability,config,configuration,738,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:817,Modifiability,config,config,817,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:829,Modifiability,config,config,829,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:109,Performance,perform,perform,109,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434:162,Testability,test,test,162,"@tpoterba OK, this is ready for final review. Flags are now duplicated in Python so that service backend can perform all actions without starting a JVM. I have a test that verifies the flag sets, their envvars, and the default values, are all the same. I preserved the randomness behavior. We can address that in a separate PR. The flags now use the Hail `configuration_of` machinery which checks, in order:; - an explicit value (not relevant to flags); - a deprecated environment variable (these are the current flag envvars); - an environment variable with a mechanically derived name (e.g. `HAIL_QUERY_NO_WHOLE_STAGE_CODEGEN`); - the hail configuration file (usually: ""~/.config/hail/config.ini"") under the section ""query"". FWIW, hail configuration files look like this:. ```; (base) dking@wm28c-761 hail % cat ~/.config/hail/config.ini ; [query]; backend = spark; jar_url = gs://hail-query/jars/dking/0wfcw2e6sma9/f4fb19e3d387d6efc6cf0f19b95bec59c95b793a.jar. [batch]; remote_tmpdir = gs://1-day/dktmp/; billing_project = hail. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12423#issuecomment-1411200434
https://github.com/hail-is/hail/pull/12425#issuecomment-1303825690:390,Deployability,rolling,rolling,390,"Azure is currently running this internal-gateway/gateway, and PRs seem to be doing no worse, and sometimes better afaict, than the nginx in GCP, save for the Connection reset retrying which once in a handful of PRs will stall the test until timeout. If we decide to merge this I would want to watch a few subsequent PRs to confirm that they're not stalling and if so I would feel confident rolling out envoy to gcp as well (and can resize the k8s pool immediately after!)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12425#issuecomment-1303825690
https://github.com/hail-is/hail/pull/12425#issuecomment-1303825690:241,Safety,timeout,timeout,241,"Azure is currently running this internal-gateway/gateway, and PRs seem to be doing no worse, and sometimes better afaict, than the nginx in GCP, save for the Connection reset retrying which once in a handful of PRs will stall the test until timeout. If we decide to merge this I would want to watch a few subsequent PRs to confirm that they're not stalling and if so I would feel confident rolling out envoy to gcp as well (and can resize the k8s pool immediately after!)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12425#issuecomment-1303825690
https://github.com/hail-is/hail/pull/12425#issuecomment-1303825690:230,Testability,test,test,230,"Azure is currently running this internal-gateway/gateway, and PRs seem to be doing no worse, and sometimes better afaict, than the nginx in GCP, save for the Connection reset retrying which once in a handful of PRs will stall the test until timeout. If we decide to merge this I would want to watch a few subsequent PRs to confirm that they're not stalling and if so I would feel confident rolling out envoy to gcp as well (and can resize the k8s pool immediately after!)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12425#issuecomment-1303825690
https://github.com/hail-is/hail/pull/12428#issuecomment-1304186719:38,Availability,error,errors,38,Looks like there's quite a few rebase errors to touch up as well.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1304186719
https://github.com/hail-is/hail/pull/12428#issuecomment-1320568267:73,Testability,test,tested,73,@danking Can you give this another look from a **high level**. I haven't tested it at all and can flesh out the smaller stuff later on.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1320568267
https://github.com/hail-is/hail/pull/12428#issuecomment-1339804624:179,Deployability,configurat,configuration,179,@danking This should be really close to having the tests passing. The only other thing left to do once it passes in GCP is to copy the data over to Azure and make a default Azure configuration.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1339804624
https://github.com/hail-is/hail/pull/12428#issuecomment-1339804624:179,Modifiability,config,configuration,179,@danking This should be really close to having the tests passing. The only other thing left to do once it passes in GCP is to copy the data over to Azure and make a default Azure configuration.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1339804624
https://github.com/hail-is/hail/pull/12428#issuecomment-1339804624:51,Testability,test,tests,51,@danking This should be really close to having the tests passing. The only other thing left to do once it passes in GCP is to copy the data over to Azure and make a default Azure configuration.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1339804624
https://github.com/hail-is/hail/pull/12428#issuecomment-1426081475:64,Integrability,depend,depend,64,"@jigold upon review of the flags PR, I don't see why this would depend on that; do you recall the issue?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1426081475
https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281:109,Integrability,interface,interface,109,I was playing whack-a-mole with randomness tests and adding the GCS_REQUESTER_PAYS_BUCKET flag and the flags interface and testing infrastructure was making it impossible for the VEP tests to pass or the other tests for randomness that were failing. I'll revisit this PR again next week to see if your flags PR actually fixed the issue.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281
https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281:43,Testability,test,tests,43,I was playing whack-a-mole with randomness tests and adding the GCS_REQUESTER_PAYS_BUCKET flag and the flags interface and testing infrastructure was making it impossible for the VEP tests to pass or the other tests for randomness that were failing. I'll revisit this PR again next week to see if your flags PR actually fixed the issue.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281
https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281:123,Testability,test,testing,123,I was playing whack-a-mole with randomness tests and adding the GCS_REQUESTER_PAYS_BUCKET flag and the flags interface and testing infrastructure was making it impossible for the VEP tests to pass or the other tests for randomness that were failing. I'll revisit this PR again next week to see if your flags PR actually fixed the issue.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281
https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281:183,Testability,test,tests,183,I was playing whack-a-mole with randomness tests and adding the GCS_REQUESTER_PAYS_BUCKET flag and the flags interface and testing infrastructure was making it impossible for the VEP tests to pass or the other tests for randomness that were failing. I'll revisit this PR again next week to see if your flags PR actually fixed the issue.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281
https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281:210,Testability,test,tests,210,I was playing whack-a-mole with randomness tests and adding the GCS_REQUESTER_PAYS_BUCKET flag and the flags interface and testing infrastructure was making it impossible for the VEP tests to pass or the other tests for randomness that were failing. I'll revisit this PR again next week to see if your flags PR actually fixed the issue.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1426177281
https://github.com/hail-is/hail/pull/12428#issuecomment-1446698641:28,Availability,failure,failures,28,"The flags PR fixed the test failures!!! I think the last thing is being in agreement on what tests are needed. As painful as it is, I think we should spin up a dataproc cluster, run VEP and save the output into the test_resources folder and use that for the test. Before I do that, is there anything else I need to add?. The last thing for this PR is to modify the cloud run functions for ACR cleanup to cleanup the vep images generated by CI. We can make a follow up PR for Azure once we've transferred the data to the public storage source.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1446698641
https://github.com/hail-is/hail/pull/12428#issuecomment-1446698641:23,Testability,test,test,23,"The flags PR fixed the test failures!!! I think the last thing is being in agreement on what tests are needed. As painful as it is, I think we should spin up a dataproc cluster, run VEP and save the output into the test_resources folder and use that for the test. Before I do that, is there anything else I need to add?. The last thing for this PR is to modify the cloud run functions for ACR cleanup to cleanup the vep images generated by CI. We can make a follow up PR for Azure once we've transferred the data to the public storage source.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1446698641
https://github.com/hail-is/hail/pull/12428#issuecomment-1446698641:93,Testability,test,tests,93,"The flags PR fixed the test failures!!! I think the last thing is being in agreement on what tests are needed. As painful as it is, I think we should spin up a dataproc cluster, run VEP and save the output into the test_resources folder and use that for the test. Before I do that, is there anything else I need to add?. The last thing for this PR is to modify the cloud run functions for ACR cleanup to cleanup the vep images generated by CI. We can make a follow up PR for Azure once we've transferred the data to the public storage source.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1446698641
https://github.com/hail-is/hail/pull/12428#issuecomment-1446698641:258,Testability,test,test,258,"The flags PR fixed the test failures!!! I think the last thing is being in agreement on what tests are needed. As painful as it is, I think we should spin up a dataproc cluster, run VEP and save the output into the test_resources folder and use that for the test. Before I do that, is there anything else I need to add?. The last thing for this PR is to modify the cloud run functions for ACR cleanup to cleanup the vep images generated by CI. We can make a follow up PR for Azure once we've transferred the data to the public storage source.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1446698641
https://github.com/hail-is/hail/pull/12428#issuecomment-1446721694:30,Performance,cache,cached,30,I added the cleanup of old PR cached VEP images to the Archive Registry Cloud Run cleanup functions.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1446721694
https://github.com/hail-is/hail/pull/12428#issuecomment-1446791627:70,Testability,test,test,70,"Ah, I understand. Yeah, I think comparing to dataproc is a sufficient test. A handful of variants is probably fine. It looks like we at one point had test data, but John C commented that out when he made VEP requester pays. I'm not sure why. Look in hail/python/cluster-tests.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1446791627
https://github.com/hail-is/hail/pull/12428#issuecomment-1446791627:150,Testability,test,test,150,"Ah, I understand. Yeah, I think comparing to dataproc is a sufficient test. A handful of variants is probably fine. It looks like we at one point had test data, but John C commented that out when he made VEP requester pays. I'm not sure why. Look in hail/python/cluster-tests.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1446791627
https://github.com/hail-is/hail/pull/12428#issuecomment-1446791627:270,Testability,test,tests,270,"Ah, I understand. Yeah, I think comparing to dataproc is a sufficient test. A handful of variants is probably fine. It looks like we at one point had test data, but John C commented that out when he made VEP requester pays. I'm not sure why. Look in hail/python/cluster-tests.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1446791627
https://github.com/hail-is/hail/pull/12428#issuecomment-1487359963:17,Testability,test,tests,17,@danking Service tests all passed. I think this is ready for review!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1487359963
https://github.com/hail-is/hail/pull/12428#issuecomment-1487367426:24,Testability,test,test,24,AHH!; ```; [gw1] PASSED test/hail/methods/test_qc.py::Tests::test_vep_grch37_against_dataproc ; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1487367426
https://github.com/hail-is/hail/pull/12428#issuecomment-1487367426:54,Testability,Test,Tests,54,AHH!; ```; [gw1] PASSED test/hail/methods/test_qc.py::Tests::test_vep_grch37_against_dataproc ; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1487367426
https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947:198,Integrability,interface,interface,198,"I think the only two things I'm stuck on are:; (a) Do we want users to pass a VEPConfig instead of a `config` dictionary (and add documentation)?; (b) What is the best way to expose the VEP command interface so a user can customize it to their setup? I wanted to do something like this, but I don't see how to do this with the bash script being called with an argument `/bin/bash -c ""...."" csq` or `/bin/bash -c ""..."" vep`. ```python3; vep_85_grch37_command = '''; #!/bin/bash. if [ $VEP_CONSEQUENCE -ne 0 ]; then; vcf_or_json=""--vcf""; else; vcf_or_json=""--json""; fi. export VEP_COMMAND=/vep/vep \; ${VEP_INPUT_FILE:+--input_file $VEP_INPUT_FILE} \; --format vcf \; ${vcf_or_json} \; --everything \; --allele_number \; --no_stats \; --cache \; --offline \; --minimal \; --assembly GRCh37 \; --dir=${VEP_DATA_DIR} \; --plugin LoF,human_ancestor_fa:${VEP_DATA_DIR}/loftee_data/human_ancestor.fa.gz,filter_position:0.05,min_intron_size:15,conservation_file:${VEP_DATA_DIR}/loftee_data/phylocsf_gerp.sql,gerp_file:${VEP_DATA_DIR}/loftee_data/GERP_scores.final.sorted.txt.gz \; -o STDOUT. exec vep.py ""$@""; '''. supported_vep_configs = {; ('GRCh37', 'gcp', 'us-central1', 'hail.is'): VEPConfig(; 'hail-qob-vep-grch37-us-central1',; ['us-central1'],; HAIL_GENETICS_QOB_VEP_GRCH37_IMAGE,; '/vep_data/',; {},; VEPConfig.default_vep_json_typ,; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""vep""],; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""csq_header""],; True,; 'gcp',; ),; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947
https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947:102,Modifiability,config,config,102,"I think the only two things I'm stuck on are:; (a) Do we want users to pass a VEPConfig instead of a `config` dictionary (and add documentation)?; (b) What is the best way to expose the VEP command interface so a user can customize it to their setup? I wanted to do something like this, but I don't see how to do this with the bash script being called with an argument `/bin/bash -c ""...."" csq` or `/bin/bash -c ""..."" vep`. ```python3; vep_85_grch37_command = '''; #!/bin/bash. if [ $VEP_CONSEQUENCE -ne 0 ]; then; vcf_or_json=""--vcf""; else; vcf_or_json=""--json""; fi. export VEP_COMMAND=/vep/vep \; ${VEP_INPUT_FILE:+--input_file $VEP_INPUT_FILE} \; --format vcf \; ${vcf_or_json} \; --everything \; --allele_number \; --no_stats \; --cache \; --offline \; --minimal \; --assembly GRCh37 \; --dir=${VEP_DATA_DIR} \; --plugin LoF,human_ancestor_fa:${VEP_DATA_DIR}/loftee_data/human_ancestor.fa.gz,filter_position:0.05,min_intron_size:15,conservation_file:${VEP_DATA_DIR}/loftee_data/phylocsf_gerp.sql,gerp_file:${VEP_DATA_DIR}/loftee_data/GERP_scores.final.sorted.txt.gz \; -o STDOUT. exec vep.py ""$@""; '''. supported_vep_configs = {; ('GRCh37', 'gcp', 'us-central1', 'hail.is'): VEPConfig(; 'hail-qob-vep-grch37-us-central1',; ['us-central1'],; HAIL_GENETICS_QOB_VEP_GRCH37_IMAGE,; '/vep_data/',; {},; VEPConfig.default_vep_json_typ,; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""vep""],; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""csq_header""],; True,; 'gcp',; ),; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947
https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947:818,Modifiability,plugin,plugin,818,"I think the only two things I'm stuck on are:; (a) Do we want users to pass a VEPConfig instead of a `config` dictionary (and add documentation)?; (b) What is the best way to expose the VEP command interface so a user can customize it to their setup? I wanted to do something like this, but I don't see how to do this with the bash script being called with an argument `/bin/bash -c ""...."" csq` or `/bin/bash -c ""..."" vep`. ```python3; vep_85_grch37_command = '''; #!/bin/bash. if [ $VEP_CONSEQUENCE -ne 0 ]; then; vcf_or_json=""--vcf""; else; vcf_or_json=""--json""; fi. export VEP_COMMAND=/vep/vep \; ${VEP_INPUT_FILE:+--input_file $VEP_INPUT_FILE} \; --format vcf \; ${vcf_or_json} \; --everything \; --allele_number \; --no_stats \; --cache \; --offline \; --minimal \; --assembly GRCh37 \; --dir=${VEP_DATA_DIR} \; --plugin LoF,human_ancestor_fa:${VEP_DATA_DIR}/loftee_data/human_ancestor.fa.gz,filter_position:0.05,min_intron_size:15,conservation_file:${VEP_DATA_DIR}/loftee_data/phylocsf_gerp.sql,gerp_file:${VEP_DATA_DIR}/loftee_data/GERP_scores.final.sorted.txt.gz \; -o STDOUT. exec vep.py ""$@""; '''. supported_vep_configs = {; ('GRCh37', 'gcp', 'us-central1', 'hail.is'): VEPConfig(; 'hail-qob-vep-grch37-us-central1',; ['us-central1'],; HAIL_GENETICS_QOB_VEP_GRCH37_IMAGE,; '/vep_data/',; {},; VEPConfig.default_vep_json_typ,; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""vep""],; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""csq_header""],; True,; 'gcp',; ),; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947
https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947:735,Performance,cache,cache,735,"I think the only two things I'm stuck on are:; (a) Do we want users to pass a VEPConfig instead of a `config` dictionary (and add documentation)?; (b) What is the best way to expose the VEP command interface so a user can customize it to their setup? I wanted to do something like this, but I don't see how to do this with the bash script being called with an argument `/bin/bash -c ""...."" csq` or `/bin/bash -c ""..."" vep`. ```python3; vep_85_grch37_command = '''; #!/bin/bash. if [ $VEP_CONSEQUENCE -ne 0 ]; then; vcf_or_json=""--vcf""; else; vcf_or_json=""--json""; fi. export VEP_COMMAND=/vep/vep \; ${VEP_INPUT_FILE:+--input_file $VEP_INPUT_FILE} \; --format vcf \; ${vcf_or_json} \; --everything \; --allele_number \; --no_stats \; --cache \; --offline \; --minimal \; --assembly GRCh37 \; --dir=${VEP_DATA_DIR} \; --plugin LoF,human_ancestor_fa:${VEP_DATA_DIR}/loftee_data/human_ancestor.fa.gz,filter_position:0.05,min_intron_size:15,conservation_file:${VEP_DATA_DIR}/loftee_data/phylocsf_gerp.sql,gerp_file:${VEP_DATA_DIR}/loftee_data/GERP_scores.final.sorted.txt.gz \; -o STDOUT. exec vep.py ""$@""; '''. supported_vep_configs = {; ('GRCh37', 'gcp', 'us-central1', 'hail.is'): VEPConfig(; 'hail-qob-vep-grch37-us-central1',; ['us-central1'],; HAIL_GENETICS_QOB_VEP_GRCH37_IMAGE,; '/vep_data/',; {},; VEPConfig.default_vep_json_typ,; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""vep""],; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""csq_header""],; True,; 'gcp',; ),; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947
https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947:175,Security,expose,expose,175,"I think the only two things I'm stuck on are:; (a) Do we want users to pass a VEPConfig instead of a `config` dictionary (and add documentation)?; (b) What is the best way to expose the VEP command interface so a user can customize it to their setup? I wanted to do something like this, but I don't see how to do this with the bash script being called with an argument `/bin/bash -c ""...."" csq` or `/bin/bash -c ""..."" vep`. ```python3; vep_85_grch37_command = '''; #!/bin/bash. if [ $VEP_CONSEQUENCE -ne 0 ]; then; vcf_or_json=""--vcf""; else; vcf_or_json=""--json""; fi. export VEP_COMMAND=/vep/vep \; ${VEP_INPUT_FILE:+--input_file $VEP_INPUT_FILE} \; --format vcf \; ${vcf_or_json} \; --everything \; --allele_number \; --no_stats \; --cache \; --offline \; --minimal \; --assembly GRCh37 \; --dir=${VEP_DATA_DIR} \; --plugin LoF,human_ancestor_fa:${VEP_DATA_DIR}/loftee_data/human_ancestor.fa.gz,filter_position:0.05,min_intron_size:15,conservation_file:${VEP_DATA_DIR}/loftee_data/phylocsf_gerp.sql,gerp_file:${VEP_DATA_DIR}/loftee_data/GERP_scores.final.sorted.txt.gz \; -o STDOUT. exec vep.py ""$@""; '''. supported_vep_configs = {; ('GRCh37', 'gcp', 'us-central1', 'hail.is'): VEPConfig(; 'hail-qob-vep-grch37-us-central1',; ['us-central1'],; HAIL_GENETICS_QOB_VEP_GRCH37_IMAGE,; '/vep_data/',; {},; VEPConfig.default_vep_json_typ,; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""vep""],; [""/bin/bash"", ""-c"", vep_85_grch37_command, ""csq_header""],; True,; 'gcp',; ),; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1498124947
https://github.com/hail-is/hail/pull/12428#issuecomment-1503376729:494,Availability,echo,echo,494,"Sure thing, I think you basically want the following in the top-level Makefile instead of docker/Makefile (note that it is not PHONY):. ```make; vep-grch37-image: hail-ubuntu-image; $(eval VEP_GRCH37_IMAGE := $(DOCKER_PREFIX)/hailgenetics/vep-85-grch37:$(TOKEN)); 	python3 ci/jinja2_render.py '{""hail_ubuntu_image"":{""image"":""'$$(cat hail-ubuntu-image)'""}}' docker/vep/Dockerfile.GRCh37 docker/vep/Dockerfile.GRCh37.out; 	./docker-build.sh docker/vep Dockerfile.GRCh37.out $(VEP_GRCH37_IMAGE); 	echo $(VEP_GRCH37_IMAGE) > $@; ```. Side note: I do also agree with Dan's stylistic suggestion of having a directory structure like `docker/hailgenetics/vep/grch37/Dockerfile`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1503376729
https://github.com/hail-is/hail/pull/12428#issuecomment-1514682815:104,Deployability,configurat,configurations,104,Tests are all passing. One question that remains is should we put a manifest file with the current Hail configurations somewhere in hail-common?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1514682815
https://github.com/hail-is/hail/pull/12428#issuecomment-1514682815:104,Modifiability,config,configurations,104,Tests are all passing. One question that remains is should we put a manifest file with the current Hail configurations somewhere in hail-common?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1514682815
https://github.com/hail-is/hail/pull/12428#issuecomment-1514682815:0,Testability,Test,Tests,0,Tests are all passing. One question that remains is should we put a manifest file with the current Hail configurations somewhere in hail-common?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1514682815
https://github.com/hail-is/hail/pull/12428#issuecomment-1514997203:20,Deployability,release,release,20,"My concern is if we release the code as is now, then we cannot change the buckets where the VEP data is stored without breaking backwards compatibility. Therefore, one idea I had was to keep a single up-to-date hail manifest file in GCS with the current information on what configurations are supported, where the data lives, what VEP version etc as a way of versioning the supported configurations. I did not try and implement this yet. I wanted to run the idea by you first.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1514997203
https://github.com/hail-is/hail/pull/12428#issuecomment-1514997203:274,Deployability,configurat,configurations,274,"My concern is if we release the code as is now, then we cannot change the buckets where the VEP data is stored without breaking backwards compatibility. Therefore, one idea I had was to keep a single up-to-date hail manifest file in GCS with the current information on what configurations are supported, where the data lives, what VEP version etc as a way of versioning the supported configurations. I did not try and implement this yet. I wanted to run the idea by you first.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1514997203
https://github.com/hail-is/hail/pull/12428#issuecomment-1514997203:384,Deployability,configurat,configurations,384,"My concern is if we release the code as is now, then we cannot change the buckets where the VEP data is stored without breaking backwards compatibility. Therefore, one idea I had was to keep a single up-to-date hail manifest file in GCS with the current information on what configurations are supported, where the data lives, what VEP version etc as a way of versioning the supported configurations. I did not try and implement this yet. I wanted to run the idea by you first.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1514997203
https://github.com/hail-is/hail/pull/12428#issuecomment-1514997203:274,Modifiability,config,configurations,274,"My concern is if we release the code as is now, then we cannot change the buckets where the VEP data is stored without breaking backwards compatibility. Therefore, one idea I had was to keep a single up-to-date hail manifest file in GCS with the current information on what configurations are supported, where the data lives, what VEP version etc as a way of versioning the supported configurations. I did not try and implement this yet. I wanted to run the idea by you first.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1514997203
https://github.com/hail-is/hail/pull/12428#issuecomment-1514997203:384,Modifiability,config,configurations,384,"My concern is if we release the code as is now, then we cannot change the buckets where the VEP data is stored without breaking backwards compatibility. Therefore, one idea I had was to keep a single up-to-date hail manifest file in GCS with the current information on what configurations are supported, where the data lives, what VEP version etc as a way of versioning the supported configurations. I did not try and implement this yet. I wanted to run the idea by you first.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1514997203
https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056:201,Deployability,configurat,configuration,201,"That's a legitimate concern. We don't currently do this for `datasets.json` / the annotation database. For now let's leave it as it is. If the files move the user always has the option of fixing their configuration by explicitly specifying a config. Having some sort of remote configuration seems valuable, but this PR is large already. Whatever solution we come up with for remote configuration should also support the annotation database case. Let's not worry about it for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056
https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056:277,Deployability,configurat,configuration,277,"That's a legitimate concern. We don't currently do this for `datasets.json` / the annotation database. For now let's leave it as it is. If the files move the user always has the option of fixing their configuration by explicitly specifying a config. Having some sort of remote configuration seems valuable, but this PR is large already. Whatever solution we come up with for remote configuration should also support the annotation database case. Let's not worry about it for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056
https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056:382,Deployability,configurat,configuration,382,"That's a legitimate concern. We don't currently do this for `datasets.json` / the annotation database. For now let's leave it as it is. If the files move the user always has the option of fixing their configuration by explicitly specifying a config. Having some sort of remote configuration seems valuable, but this PR is large already. Whatever solution we come up with for remote configuration should also support the annotation database case. Let's not worry about it for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056
https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056:201,Modifiability,config,configuration,201,"That's a legitimate concern. We don't currently do this for `datasets.json` / the annotation database. For now let's leave it as it is. If the files move the user always has the option of fixing their configuration by explicitly specifying a config. Having some sort of remote configuration seems valuable, but this PR is large already. Whatever solution we come up with for remote configuration should also support the annotation database case. Let's not worry about it for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056
https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056:242,Modifiability,config,config,242,"That's a legitimate concern. We don't currently do this for `datasets.json` / the annotation database. For now let's leave it as it is. If the files move the user always has the option of fixing their configuration by explicitly specifying a config. Having some sort of remote configuration seems valuable, but this PR is large already. Whatever solution we come up with for remote configuration should also support the annotation database case. Let's not worry about it for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056
https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056:277,Modifiability,config,configuration,277,"That's a legitimate concern. We don't currently do this for `datasets.json` / the annotation database. For now let's leave it as it is. If the files move the user always has the option of fixing their configuration by explicitly specifying a config. Having some sort of remote configuration seems valuable, but this PR is large already. Whatever solution we come up with for remote configuration should also support the annotation database case. Let's not worry about it for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056
https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056:382,Modifiability,config,configuration,382,"That's a legitimate concern. We don't currently do this for `datasets.json` / the annotation database. For now let's leave it as it is. If the files move the user always has the option of fixing their configuration by explicitly specifying a config. Having some sort of remote configuration seems valuable, but this PR is large already. Whatever solution we come up with for remote configuration should also support the annotation database case. Let's not worry about it for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1515016056
https://github.com/hail-is/hail/pull/12428#issuecomment-1522373710:58,Availability,error,error,58,Tests are passing again! I know there were concerns about error handling in the `vep.py` code. I tried to make it exactly the same as the existing Scala code.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1522373710
https://github.com/hail-is/hail/pull/12428#issuecomment-1522373710:0,Testability,Test,Tests,0,Tests are passing again! I know there were concerns about error handling in the `vep.py` code. I tried to make it exactly the same as the existing Scala code.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12428#issuecomment-1522373710
https://github.com/hail-is/hail/pull/12433#issuecomment-1307291111:31,Integrability,depend,dependency,31,unassigning while I figure out dependency issues.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12433#issuecomment-1307291111
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12436#issuecomment-1307733989
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12437#issuecomment-1307733810
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12441#issuecomment-1309502249
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12442#issuecomment-1309502094
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12448#issuecomment-1310783073
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12449#issuecomment-1310881955
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869486:30,Integrability,depend,dependabot,30,"Ha, you THINK this would work dependabot… you've never sparred with spark",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869486
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12450#issuecomment-1310869520
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12455#issuecomment-1312824031
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12456#issuecomment-1312824088
https://github.com/hail-is/hail/pull/12457#issuecomment-1314247012:41,Integrability,message,message,41,Can you force push an edit to the commit message that includes a `CHANGELOG:` line indicating that pca and hwe_normalized_pca are now supported in Query-on-Batch?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12457#issuecomment-1314247012
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12460#issuecomment-1314545932
https://github.com/hail-is/hail/pull/12464#issuecomment-1324194896:184,Performance,concurren,concurrent,184,This is pseudo-stacked on #12490 in that I made a change here to serialize `_async_execute_many` but in #12490 I remove it altogether which takes care of the complications of multiple concurrent Query Drivers in the same batch.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12464#issuecomment-1324194896
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12466#issuecomment-1315789952
https://github.com/hail-is/hail/pull/12468#issuecomment-1834392857:173,Availability,error,error,173,"With [this code](https://github.com/hail-is/hail/blob/81b0b20ea96278ca74c17b7618d53c330a5ee15f/hail/src/main/scala/is/hail/backend/service/Worker.scala#L182) commented out, error looks like [this](https://gist.github.com/iris-garden/33e7b0508f06f7e6aa4c17bd8c4d92b7)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12468#issuecomment-1834392857
https://github.com/hail-is/hail/pull/12468#issuecomment-2161303529:165,Availability,Error,Error,165,@iris-garden do you have a sense of what work remains to be done here or whether this branch is worth reviving? Just had a support issue because of a `Hail Internal Error: … 404 …` that turned out to be the worker jobs ran out of memory,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12468#issuecomment-2161303529
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:15,Availability,failure,failure,15,"The flaky test failure can be seen here: https://ci.hail.is/batches/6627486/jobs/105; ```; During handling of the above exception, another exception occurred:. @skip_unless_service_backend(); def test_tiny_driver_has_tiny_memory():; try:; hl.utils.range_table(100_000_000, 50).to_pandas(); except Exception as exc:; # Sometimes the JVM properly OOMs, sometimes it just dies.; > assert (; 'java.lang.OutOfMemoryError: Java heap space' in exc.args[0] or; 'batch.worker.jvm_entryway_protocol.EndOfStream' in exc.args[0]; ); E assert ('java.lang.OutOfMemoryError: Java heap space' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 5",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:24409,Deployability,update,update-fast,24409,t-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.802 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.852 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.866 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.917 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.934 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.985 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.999 Requester: INF,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:24522,Deployability,update,update-fast,24522,Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.802 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.852 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.866 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.917 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.934 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.985 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.999 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:19.049 Requester: INFO: requ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:24604,Deployability,update,update,24604,hail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.802 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.852 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.866 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.917 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.934 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.985 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.999 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:19.049 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:19.068 Re,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:88402,Deployability,update,update-fast,88402,t-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.802 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.852 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.866 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.917 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.934 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.985 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.999 Requester: INF,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:88515,Deployability,update,update-fast,88515,Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.802 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.852 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.866 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.917 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.934 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.985 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.999 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:19.049 Requester: INFO: requ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:88597,Deployability,update,update,88597,hail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.802 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.852 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.866 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.917 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.934 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.985 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.999 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:19.049 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:19.068 Re,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:62029,Energy Efficiency,allocate,allocated,62029,"ha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:62211,Energy Efficiency,allocate,allocated,62211,"kend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:62394,Energy Efficiency,allocate,allocated,62394,"AndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:62577,Energy Efficiency,allocate,allocated,62577,"F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:62760,Energy Efficiency,allocate,allocated,62760,"9 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, threa",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:62943,Energy Efficiency,allocate,allocated,62943,"1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thr",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:63126,Energy Efficiency,allocate,allocated,63126,"ead-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, t",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:63309,Energy Efficiency,allocate,allocated,63309,"ead-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, t",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:63492,Energy Efficiency,allocate,allocated,63492,"ead-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_m",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:63676,Energy Efficiency,allocate,allocated,63676,"ad-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'clo",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:63861,Energy Efficiency,allocate,allocated,63861,"-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main':",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:64046,Energy Efficiency,allocate,allocated,64046,"\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secret",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:64229,Energy Efficiency,allocate,allocated,64229,"\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPo",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:126022,Energy Efficiency,allocate,allocated,126022,"ha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:126204,Energy Efficiency,allocate,allocated,126204,"kend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:126387,Energy Efficiency,allocate,allocated,126387,"AndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:126570,Energy Efficiency,allocate,allocated,126570,"F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:126753,Energy Efficiency,allocate,allocated,126753,"9 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, threa",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:126936,Energy Efficiency,allocate,allocated,126936,"1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thr",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:127119,Energy Efficiency,allocate,allocated,127119,"ead-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, t",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:127302,Energy Efficiency,allocate,allocated,127302,"ead-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, t",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:127485,Energy Efficiency,allocate,allocated,127485,"ead-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_m",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:127669,Energy Efficiency,allocate,allocated,127669,"d (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}}). test/hail/backend/test_service_backend.py:12: AssertionError; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:127854,Energy Efficiency,allocate,allocated,127854,"d (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}}). test/hail/backend/test_service_backend.py:12: AssertionError; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:128039,Energy Efficiency,allocate,allocated,128039,"d (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}}). test/hail/backend/test_service_backend.py:12: AssertionError; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:128222,Energy Efficiency,allocate,allocated,128222,"d (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}}). test/hail/backend/test_service_backend.py:12: AssertionError; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:992,Modifiability,config,config,992,"e seen here: https://ci.hail.is/batches/6627486/jobs/105; ```; During handling of the above exception, another exception occurred:. @skip_unless_service_backend(); def test_tiny_driver_has_tiny_memory():; try:; hl.utils.range_table(100_000_000, 50).to_pandas(); except Exception as exc:; # Sometimes the JVM properly OOMs, sometimes it just dies.; > assert (; 'java.lang.OutOfMemoryError: Java heap space' in exc.args[0] or; 'batch.worker.jvm_entryway_protocol.EndOfStream' in exc.args[0]; ); E assert ('java.lang.OutOfMemoryError: Java heap space' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:1065,Modifiability,config,config,1065,"e seen here: https://ci.hail.is/batches/6627486/jobs/105; ```; During handling of the above exception, another exception occurred:. @skip_unless_service_backend(); def test_tiny_driver_has_tiny_memory():; try:; hl.utils.range_table(100_000_000, 50).to_pandas(); except Exception as exc:; # Sometimes the JVM properly OOMs, sometimes it just dies.; > assert (; 'java.lang.OutOfMemoryError: Java heap space' in exc.args[0] or; 'batch.worker.jvm_entryway_protocol.EndOfStream' in exc.args[0]; ); E assert ('java.lang.OutOfMemoryError: Java heap space' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:1076,Modifiability,config,config,1076,"e seen here: https://ci.hail.is/batches/6627486/jobs/105; ```; During handling of the above exception, another exception occurred:. @skip_unless_service_backend(); def test_tiny_driver_has_tiny_memory():; try:; hl.utils.range_table(100_000_000, 50).to_pandas(); except Exception as exc:; # Sometimes the JVM properly OOMs, sometimes it just dies.; > assert (; 'java.lang.OutOfMemoryError: Java heap space' in exc.args[0] or; 'batch.worker.jvm_entryway_protocol.EndOfStream' in exc.args[0]; ); E assert ('java.lang.OutOfMemoryError: Java heap space' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:64985,Modifiability,config,config,64985,"REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:65058,Modifiability,config,config,65058,"REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:65069,Modifiability,config,config,65069,"REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:1412,Performance,optimiz,optimize,1412,"': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:1421,Performance,optimiz,optimize,1421,"': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:1857,Performance,optimiz,optimize,1857,"04 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:1866,Performance,optimiz,optimize,1866,"04 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:2124,Performance,optimiz,optimize,2124,"tialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:2133,Performance,optimiz,optimize,2133,"tialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:2407,Performance,optimiz,optimize,2407,"akeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\n __iruid_459\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct\n (__iruid_455 (Ref __iruid_455))\n (__iruid_458 (Ref __iruid_458)))\n (Let __iruid_458\n (GetField __iruid_458 (Ref __iruid_459))\n (Let __iruid_455\n (GetField __irui",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:2416,Performance,optimiz,optimize,2416,"akeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\n __iruid_459\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct\n (__iruid_455 (Ref __iruid_455))\n (__iruid_458 (Ref __iruid_458)))\n (Let __iruid_458\n (GetField __iruid_458 (Ref __iruid_459))\n (Let __iruid_455\n (GetField __irui",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:2825,Performance,optimiz,optimize,2825,"2-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\n __iruid_459\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct\n (__iruid_455 (Ref __iruid_455))\n (__iruid_458 (Ref __iruid_458)))\n (Let __iruid_458\n (GetField __iruid_458 (Ref __iruid_459))\n (Let __iruid_455\n (GetField __iruid_455 (Ref __iruid_459))\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_458))))\n (StreamFor row\n (StreamMap __iruid_457\n (StreamRange -1 True\n (GetField start (Ref __iruid_456))\n (GetField end (Ref __iruid_456))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_457))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref row)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))))\n (NA String))\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_458))))\n (StreamFor __iruid_461\n (ToStream True (Ref __iruid_460))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_461))))))\n (Let __iruid_454\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx\n (GetTupleElement 0 (Ref __iruid_454)))))))))))\n2022-11-15 20:30:18.168 root: INFO: Prune: MakeStruct: eliminating field '__iruid_455'\n2022-11-15 20:3",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:2834,Performance,optimiz,optimize,2834,"2-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\n __iruid_459\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct\n (__iruid_455 (Ref __iruid_455))\n (__iruid_458 (Ref __iruid_458)))\n (Let __iruid_458\n (GetField __iruid_458 (Ref __iruid_459))\n (Let __iruid_455\n (GetField __iruid_455 (Ref __iruid_459))\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_458))))\n (StreamFor row\n (StreamMap __iruid_457\n (StreamRange -1 True\n (GetField start (Ref __iruid_456))\n (GetField end (Ref __iruid_456))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_457))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref row)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))))\n (NA String))\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_458))))\n (StreamFor __iruid_461\n (ToStream True (Ref __iruid_460))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_461))))))\n (Let __iruid_454\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx\n (GetTupleElement 0 (Ref __iruid_454)))))))))))\n2022-11-15 20:30:18.168 root: INFO: Prune: MakeStruct: eliminating field '__iruid_455'\n2022-11-15 20:3",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:4747,Performance,optimiz,optimize,4747,"Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx\n (GetTupleElement 0 (Ref __iruid_454)))))))))))\n2022-11-15 20:30:18.168 root: INFO: Prune: MakeStruct: eliminating field '__iruid_455'\n2022-11-15 20:30:18.178 root: INFO: optimize optimize: compileLowerer, initial IR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_485\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_486\n __iruid_487\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_484)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_487)))))\n (StreamFor __iruid_488\n (StreamMap __iruid_489\n (StreamRange -1 True\n (GetField start (Ref __iruid_486))\n (GetField end (Ref __iruid_486))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_489))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_488)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_484))))\n (StreamFor __iruid_490\n (ToStream True (Ref __iruid_485))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.180 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PI",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:4756,Performance,optimiz,optimize,4756,"Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx\n (GetTupleElement 0 (Ref __iruid_454)))))))))))\n2022-11-15 20:30:18.168 root: INFO: Prune: MakeStruct: eliminating field '__iruid_455'\n2022-11-15 20:30:18.178 root: INFO: optimize optimize: compileLowerer, initial IR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_485\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_486\n __iruid_487\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_484)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_487)))))\n (StreamFor __iruid_488\n (StreamMap __iruid_489\n (StreamRange -1 True\n (GetField start (Ref __iruid_486))\n (GetField end (Ref __iruid_486))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_489))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_488)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_484))))\n (StreamFor __iruid_490\n (ToStream True (Ref __iruid_485))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.180 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PI",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:6316,Performance,optimiz,optimize,6316,"leElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.180 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_485\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_486\n __iruid_487\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_484)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_487)))))\n (StreamFor __iruid_488\n (StreamMap __iruid_489\n (StreamRange -1 True\n (GetField start (Ref __iruid_486))\n (GetField end (Ref __iruid_486))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_489))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_488)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_484))))\n (StreamFor __iruid_490\n (ToStream True (Ref __iruid_485))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.191 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:6325,Performance,optimiz,optimize,6325,"leElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.180 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_485\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_486\n __iruid_487\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_484)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_487)))))\n (StreamFor __iruid_488\n (StreamMap __iruid_489\n (StreamRange -1 True\n (GetField start (Ref __iruid_486))\n (GetField end (Ref __iruid_486))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_489))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_488)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_484))))\n (StreamFor __iruid_490\n (ToStream True (Ref __iruid_485))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.191 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:7896,Performance,optimiz,optimize,7896,"pleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.191 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_509\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_510\n __iruid_511\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_508)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_511)))))\n (StreamFor __iruid_512\n (StreamMap __iruid_513\n (StreamRange -1 True\n (GetField start (Ref __iruid_510))\n (GetField end (Ref __iruid_510))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_513))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_512)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_508))))\n (StreamFor __iruid_514\n (ToStream True (Ref __iruid_509))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.195 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (Coll",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:7905,Performance,optimiz,optimize,7905,"pleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.191 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_509\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_510\n __iruid_511\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_508)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_511)))))\n (StreamFor __iruid_512\n (StreamMap __iruid_513\n (StreamRange -1 True\n (GetField start (Ref __iruid_510))\n (GetField end (Ref __iruid_510))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_513))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_512)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_508))))\n (StreamFor __iruid_514\n (ToStream True (Ref __iruid_509))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.195 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (Coll",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:9474,Performance,optimiz,optimize,9474,"ment 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.195 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_509\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_510\n __iruid_511\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_508)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_511)))))\n (StreamFor __iruid_512\n (StreamMap __iruid_513\n (StreamRange -1 True\n (GetField start (Ref __iruid_510))\n (GetField end (Ref __iruid_510))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_513))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_512)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_508))))\n (StreamFor __iruid_514\n (ToStream True (Ref __iruid_509))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.206 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_532\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:9483,Performance,optimiz,optimize,9483,"ment 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.195 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_509\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_510\n __iruid_511\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_508)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_511)))))\n (StreamFor __iruid_512\n (StreamMap __iruid_513\n (StreamRange -1 True\n (GetField start (Ref __iruid_510))\n (GetField end (Ref __iruid_510))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_513))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_512)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_508))))\n (StreamFor __iruid_514\n (ToStream True (Ref __iruid_509))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.206 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_532\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:11064,Performance,optimiz,optimize,11064,"ement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.206 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_532\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_533\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_534\n __iruid_535\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_532)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_535)))))\n (StreamFor __iruid_536\n (StreamMap __iruid_537\n (StreamRange -1 True\n (GetField start (Ref __iruid_534))\n (GetField end (Ref __iruid_534))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_537))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_536)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_532))))\n (StreamFor __iruid_538\n (ToStream True (Ref __iruid_533))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_538))))))\n (Let __iruid_539\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_539)))))))))\n2022-11-15 20:30:18.222 root: INFO: instruction count: 3: __C1122HailClassLoaderContainer.<init>\n2022-11-15 20:30:18.222 root: INFO: instruction count: 3: __C1122HailClassLoaderContainer.<clinit>\n2022-11-15 20:30:18.222 root",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:11073,Performance,optimiz,optimize,11073,"ement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.206 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_532\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_533\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_534\n __iruid_535\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_532)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_535)))))\n (StreamFor __iruid_536\n (StreamMap __iruid_537\n (StreamRange -1 True\n (GetField start (Ref __iruid_534))\n (GetField end (Ref __iruid_534))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_537))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_536)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_532))))\n (StreamFor __iruid_538\n (ToStream True (Ref __iruid_533))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_538))))))\n (Let __iruid_539\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_539)))))))))\n2022-11-15 20:30:18.222 root: INFO: instruction count: 3: __C1122HailClassLoaderContainer.<init>\n2022-11-15 20:30:18.222 root: INFO: instruction count: 3: __C1122HailClassLoaderContainer.<clinit>\n2022-11-15 20:30:18.222 root",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:17784,Performance,cache,cache,17784,ruction count: 16: __C1124collect_distributed_array_table_aggregate_singlestage.__m1168ENCODE_SBinaryPointer_TO_r_binary\n2022-11-15 20:30:18.227 root: INFO: instruction count: 9: __C1124collect_distributed_array_table_aggregate_singlestage.setPartitionIndex\n2022-11-15 20:30:18.227 root: INFO: instruction count: 4: __C1124collect_distributed_array_table_aggregate_singlestage.addPartitionRegion\n2022-11-15 20:30:18.227 root: INFO: instruction count: 4: __C1124collect_distributed_array_table_aggregate_singlestage.setPool\n2022-11-15 20:30:18.227 root: INFO: instruction count: 3: __C1124collect_distributed_array_table_aggregate_singlestage.addHailClassLoader\n2022-11-15 20:30:18.227 root: INFO: instruction count: 3: __C1124collect_distributed_array_table_aggregate_singlestage.addFS\n2022-11-15 20:30:18.228 root: INFO: instruction count: 3: __C1148Tuple3.<init>\n2022-11-15 20:30:18.228 root: INFO: instruction count: 12: __C1148Tuple3.<init>\n2022-11-15 20:30:18.237 root: INFO: encoder cache hit\n2022-11-15 20:30:18.237 root: INFO: instruction count: 3: __C1093HailClassLoaderContainer.<init>\n2022-11-15 20:30:18.238 root: INFO: instruction count: 3: __C1093HailClassLoaderContainer.<clinit>\n2022-11-15 20:30:18.238 root: INFO: instruction count: 3: __C1094FSContainer.<init>\n2022-11-15 20:30:18.238 root: INFO: instruction count: 3: __C1094FSContainer.<clinit>\n2022-11-15 20:30:18.245 root: INFO: instruction count: 3: __C1095Compiled.<init>\n2022-11-15 20:30:18.245 root: INFO: instruction count: 222: __C1095Compiled.apply\n2022-11-15 20:30:18.245 root: INFO: instruction count: 73: __C1095Compiled.__m1103begin_group_0\n2022-11-15 20:30:18.245 root: INFO: instruction count: 11: __C1095Compiled.__m1106setup_null\n2022-11-15 20:30:18.245 root: INFO: instruction count: 109: __C1095Compiled.__m1108blockLinkedListSerialize\n2022-11-15 20:30:18.245 root: INFO: instruction count: 4: __C1095Compiled.__m1109ENCODE_SInt32$_TO_r_int32\n2022-11-15 20:30:18.246 root: INFO: instruction co,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:65405,Performance,optimiz,optimize,65405,"': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:65414,Performance,optimiz,optimize,65414,"': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:65850,Performance,optimiz,optimize,65850,"04 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:65859,Performance,optimiz,optimize,65859,"04 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:66117,Performance,optimiz,optimize,66117,"tialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:66126,Performance,optimiz,optimize,66126,"tialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:66400,Performance,optimiz,optimize,66400,"akeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\n __iruid_459\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct\n (__iruid_455 (Ref __iruid_455))\n (__iruid_458 (Ref __iruid_458)))\n (Let __iruid_458\n (GetField __iruid_458 (Ref __iruid_459))\n (Let __iruid_455\n (GetField __irui",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:66409,Performance,optimiz,optimize,66409,"akeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: before: IR size 8: \n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.148 root: INFO: optimize optimize: darrayLowerer, after LowerMatrixToTable: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row))))))))\n2022-11-15 20:30:18.160 root: INFO: Aggregate: useTreeAggregate=false\n2022-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\n __iruid_459\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct\n (__iruid_455 (Ref __iruid_455))\n (__iruid_458 (Ref __iruid_458)))\n (Let __iruid_458\n (GetField __iruid_458 (Ref __iruid_459))\n (Let __iruid_455\n (GetField __irui",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:66818,Performance,optimiz,optimize,66818,"2-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\n __iruid_459\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct\n (__iruid_455 (Ref __iruid_455))\n (__iruid_458 (Ref __iruid_458)))\n (Let __iruid_458\n (GetField __iruid_458 (Ref __iruid_459))\n (Let __iruid_455\n (GetField __iruid_455 (Ref __iruid_459))\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_458))))\n (StreamFor row\n (StreamMap __iruid_457\n (StreamRange -1 True\n (GetField start (Ref __iruid_456))\n (GetField end (Ref __iruid_456))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_457))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref row)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))))\n (NA String))\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_458))))\n (StreamFor __iruid_461\n (ToStream True (Ref __iruid_460))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_461))))))\n (Let __iruid_454\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx\n (GetTupleElement 0 (Ref __iruid_454)))))))))))\n2022-11-15 20:30:18.168 root: INFO: Prune: MakeStruct: eliminating field '__iruid_455'\n2022-11-15 20:3",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:66827,Performance,optimiz,optimize,66827,"2-11-15 20:30:18.160 root: INFO: Aggregate: commutative=false\n2022-11-15 20:30:18.163 root: INFO: optimize optimize: compileLowerer, initial IR: before: IR size 70: \n(MakeTuple (0)\n (Let __iruid_455\n (MakeStruct)\n (Let __iruid_458\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))\n (Let __iruid_460\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_456\n __iruid_459\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct\n (__iruid_455 (Ref __iruid_455))\n (__iruid_458 (Ref __iruid_458)))\n (Let __iruid_458\n (GetField __iruid_458 (Ref __iruid_459))\n (Let __iruid_455\n (GetField __iruid_455 (Ref __iruid_459))\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_458))))\n (StreamFor row\n (StreamMap __iruid_457\n (StreamRange -1 True\n (GetField start (Ref __iruid_456))\n (GetField end (Ref __iruid_456))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_457))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref row)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32)))))))\n (NA String))\n (Let global\n (Ref __iruid_455)\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_458))))\n (StreamFor __iruid_461\n (ToStream True (Ref __iruid_460))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_461))))))\n (Let __iruid_454\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx\n (GetTupleElement 0 (Ref __iruid_454)))))))))))\n2022-11-15 20:30:18.168 root: INFO: Prune: MakeStruct: eliminating field '__iruid_455'\n2022-11-15 20:3",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:68740,Performance,optimiz,optimize,68740,"Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx\n (GetTupleElement 0 (Ref __iruid_454)))))))))))\n2022-11-15 20:30:18.168 root: INFO: Prune: MakeStruct: eliminating field '__iruid_455'\n2022-11-15 20:30:18.178 root: INFO: optimize optimize: compileLowerer, initial IR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_485\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_486\n __iruid_487\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_484)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_487)))))\n (StreamFor __iruid_488\n (StreamMap __iruid_489\n (StreamRange -1 True\n (GetField start (Ref __iruid_486))\n (GetField end (Ref __iruid_486))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_489))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_488)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_484))))\n (StreamFor __iruid_490\n (ToStream True (Ref __iruid_485))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.180 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PI",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:68749,Performance,optimiz,optimize,68749,"Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx\n (GetTupleElement 0 (Ref __iruid_454)))))))))))\n2022-11-15 20:30:18.168 root: INFO: Prune: MakeStruct: eliminating field '__iruid_455'\n2022-11-15 20:30:18.178 root: INFO: optimize optimize: compileLowerer, initial IR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_485\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_486\n __iruid_487\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_484)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_487)))))\n (StreamFor __iruid_488\n (StreamMap __iruid_489\n (StreamRange -1 True\n (GetField start (Ref __iruid_486))\n (GetField end (Ref __iruid_486))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_489))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_488)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_484))))\n (StreamFor __iruid_490\n (ToStream True (Ref __iruid_485))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.180 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PI",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:70309,Performance,optimiz,optimize,70309,"leElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.180 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_485\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_486\n __iruid_487\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_484)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_487)))))\n (StreamFor __iruid_488\n (StreamMap __iruid_489\n (StreamRange -1 True\n (GetField start (Ref __iruid_486))\n (GetField end (Ref __iruid_486))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_489))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_488)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_484))))\n (StreamFor __iruid_490\n (ToStream True (Ref __iruid_485))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.191 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:70318,Performance,optimiz,optimize,70318,"leElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.180 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_484\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_485\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_486\n __iruid_487\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_484)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_487)))))\n (StreamFor __iruid_488\n (StreamMap __iruid_489\n (StreamRange -1 True\n (GetField start (Ref __iruid_486))\n (GetField end (Ref __iruid_486))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_489))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_488)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_484))))\n (StreamFor __iruid_490\n (ToStream True (Ref __iruid_485))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.191 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:71889,Performance,optimiz,optimize,71889,"pleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.191 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_509\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_510\n __iruid_511\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_508)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_511)))))\n (StreamFor __iruid_512\n (StreamMap __iruid_513\n (StreamRange -1 True\n (GetField start (Ref __iruid_510))\n (GetField end (Ref __iruid_510))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_513))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_512)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_508))))\n (StreamFor __iruid_514\n (ToStream True (Ref __iruid_509))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.195 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (Coll",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:71898,Performance,optimiz,optimize,71898,"pleElement 0 (Ref __iruid_490))))))\n (Let __iruid_491\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_491)))))))))\n2022-11-15 20:30:18.191 root: INFO: optimize optimize: compileLowerer, after InlineApplyIR: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_509\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_510\n __iruid_511\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_508)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_511)))))\n (StreamFor __iruid_512\n (StreamMap __iruid_513\n (StreamRange -1 True\n (GetField start (Ref __iruid_510))\n (GetField end (Ref __iruid_510))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_513))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_512)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_508))))\n (StreamFor __iruid_514\n (ToStream True (Ref __iruid_509))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.195 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (Coll",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:73467,Performance,optimiz,optimize,73467,"ment 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.195 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_509\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_510\n __iruid_511\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_508)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_511)))))\n (StreamFor __iruid_512\n (StreamMap __iruid_513\n (StreamRange -1 True\n (GetField start (Ref __iruid_510))\n (GetField end (Ref __iruid_510))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_513))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_512)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_508))))\n (StreamFor __iruid_514\n (ToStream True (Ref __iruid_509))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.206 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_532\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:73476,Performance,optimiz,optimize,73476,"ment 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.195 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: before: IR size 56: \n(MakeTuple (0)\n (Let __iruid_508\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_509\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_510\n __iruid_511\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_508)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_511)))))\n (StreamFor __iruid_512\n (StreamMap __iruid_513\n (StreamRange -1 True\n (GetField start (Ref __iruid_510))\n (GetField end (Ref __iruid_510))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_513))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_512)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_508))))\n (StreamFor __iruid_514\n (ToStream True (Ref __iruid_509))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.206 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_532\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:75057,Performance,optimiz,optimize,75057,"ement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.206 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_532\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_533\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_534\n __iruid_535\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_532)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_535)))))\n (StreamFor __iruid_536\n (StreamMap __iruid_537\n (StreamRange -1 True\n (GetField start (Ref __iruid_534))\n (GetField end (Ref __iruid_534))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_537))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_536)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_532))))\n (StreamFor __iruid_538\n (ToStream True (Ref __iruid_533))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_538))))))\n (Let __iruid_539\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_539)))))))))\n2022-11-15 20:30:18.222 root: INFO: instruction count: 3: __C1122HailClassLoaderContainer.<init>\n2022-11-15 20:30:18.222 root: INFO: instruction count: 3: __C1122HailClassLoaderContainer.<clinit>\n2022-11-15 20:30:18.222 root",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:75066,Performance,optimiz,optimize,75066,"ement 0 (Ref __iruid_514))))))\n (Let __iruid_515\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_515)))))))))\n2022-11-15 20:30:18.206 root: INFO: optimize optimize: compileLowerer, after LowerArrayAggsToRunAggs: after: IR size 56:\n(MakeTuple (0)\n (Let __iruid_532\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (InitOp 0 (Collect (CollectStateSig +PInt32)) ()))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (Let __iruid_533\n (CollectDistributedArray\n table_aggregate_singlestage __iruid_534\n __iruid_535\n (ToStream False\n (Literal Array[Struct{start:Int32,end:Int32}]\n <literal value>))\n (MakeStruct (__iruid_458 (Ref __iruid_532)))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0\n (GetField __iruid_458 (Ref __iruid_535)))))\n (StreamFor __iruid_536\n (StreamMap __iruid_537\n (StreamRange -1 True\n (GetField start (Ref __iruid_534))\n (GetField end (Ref __iruid_534))\n (I32 1))\n (MakeStruct (idx (Ref __iruid_537))))\n (Begin\n (SeqOp 0 (Collect (CollectStateSig +PInt32))\n ((GetField idx (Ref __iruid_536)))))))\n (MakeTuple (0)\n (AggStateValue 0 (CollectStateSig +PInt32))))\n (NA String))\n (RunAgg ((CollectStateSig +PInt32))\n (Begin\n (Begin\n (InitFromSerializedValue 0 \n (CollectStateSig +PInt32)\n (GetTupleElement 0 (Ref __iruid_532))))\n (StreamFor __iruid_538\n (ToStream True (Ref __iruid_533))\n (Begin\n (CombOpValue 0 (Collect (CollectStateSig +PInt32))\n (GetTupleElement 0 (Ref __iruid_538))))))\n (Let __iruid_539\n (MakeTuple (0)\n (ResultOp 0 (Collect (CollectStateSig +PInt32))))\n (MakeStruct\n (idx (GetTupleElement 0 (Ref __iruid_539)))))))))\n2022-11-15 20:30:18.222 root: INFO: instruction count: 3: __C1122HailClassLoaderContainer.<init>\n2022-11-15 20:30:18.222 root: INFO: instruction count: 3: __C1122HailClassLoaderContainer.<clinit>\n2022-11-15 20:30:18.222 root",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:81777,Performance,cache,cache,81777,ruction count: 16: __C1124collect_distributed_array_table_aggregate_singlestage.__m1168ENCODE_SBinaryPointer_TO_r_binary\n2022-11-15 20:30:18.227 root: INFO: instruction count: 9: __C1124collect_distributed_array_table_aggregate_singlestage.setPartitionIndex\n2022-11-15 20:30:18.227 root: INFO: instruction count: 4: __C1124collect_distributed_array_table_aggregate_singlestage.addPartitionRegion\n2022-11-15 20:30:18.227 root: INFO: instruction count: 4: __C1124collect_distributed_array_table_aggregate_singlestage.setPool\n2022-11-15 20:30:18.227 root: INFO: instruction count: 3: __C1124collect_distributed_array_table_aggregate_singlestage.addHailClassLoader\n2022-11-15 20:30:18.227 root: INFO: instruction count: 3: __C1124collect_distributed_array_table_aggregate_singlestage.addFS\n2022-11-15 20:30:18.228 root: INFO: instruction count: 3: __C1148Tuple3.<init>\n2022-11-15 20:30:18.228 root: INFO: instruction count: 12: __C1148Tuple3.<init>\n2022-11-15 20:30:18.237 root: INFO: encoder cache hit\n2022-11-15 20:30:18.237 root: INFO: instruction count: 3: __C1093HailClassLoaderContainer.<init>\n2022-11-15 20:30:18.238 root: INFO: instruction count: 3: __C1093HailClassLoaderContainer.<clinit>\n2022-11-15 20:30:18.238 root: INFO: instruction count: 3: __C1094FSContainer.<init>\n2022-11-15 20:30:18.238 root: INFO: instruction count: 3: __C1094FSContainer.<clinit>\n2022-11-15 20:30:18.245 root: INFO: instruction count: 3: __C1095Compiled.<init>\n2022-11-15 20:30:18.245 root: INFO: instruction count: 222: __C1095Compiled.apply\n2022-11-15 20:30:18.245 root: INFO: instruction count: 73: __C1095Compiled.__m1103begin_group_0\n2022-11-15 20:30:18.245 root: INFO: instruction count: 11: __C1095Compiled.__m1106setup_null\n2022-11-15 20:30:18.245 root: INFO: instruction count: 109: __C1095Compiled.__m1108blockLinkedListSerialize\n2022-11-15 20:30:18.245 root: INFO: instruction count: 4: __C1095Compiled.__m1109ENCODE_SInt32$_TO_r_int32\n2022-11-15 20:30:18.246 root: INFO: instruction co,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:10,Testability,test,test,10,"The flaky test failure can be seen here: https://ci.hail.is/batches/6627486/jobs/105; ```; During handling of the above exception, another exception occurred:. @skip_unless_service_backend(); def test_tiny_driver_has_tiny_memory():; try:; hl.utils.range_table(100_000_000, 50).to_pandas(); except Exception as exc:; # Sometimes the JVM properly OOMs, sometimes it just dies.; > assert (; 'java.lang.OutOfMemoryError: Java heap space' in exc.args[0] or; 'batch.worker.jvm_entryway_protocol.EndOfStream' in exc.args[0]; ); E assert ('java.lang.OutOfMemoryError: Java heap space' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 5",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:378,Testability,assert,assert,378,"The flaky test failure can be seen here: https://ci.hail.is/batches/6627486/jobs/105; ```; During handling of the above exception, another exception occurred:. @skip_unless_service_backend(); def test_tiny_driver_has_tiny_memory():; try:; hl.utils.range_table(100_000_000, 50).to_pandas(); except Exception as exc:; # Sometimes the JVM properly OOMs, sometimes it just dies.; > assert (; 'java.lang.OutOfMemoryError: Java heap space' in exc.args[0] or; 'batch.worker.jvm_entryway_protocol.EndOfStream' in exc.args[0]; ); E assert ('java.lang.OutOfMemoryError: Java heap space' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 5",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:523,Testability,assert,assert,523,"The flaky test failure can be seen here: https://ci.hail.is/batches/6627486/jobs/105; ```; During handling of the above exception, another exception occurred:. @skip_unless_service_backend(); def test_tiny_driver_has_tiny_memory():; try:; hl.utils.range_table(100_000_000, 50).to_pandas(); except Exception as exc:; # Sometimes the JVM properly OOMs, sometimes it just dies.; > assert (; 'java.lang.OutOfMemoryError: Java heap space' in exc.args[0] or; 'batch.worker.jvm_entryway_protocol.EndOfStream' in exc.args[0]; ); E assert ('java.lang.OutOfMemoryError: Java heap space' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 5",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:678,Testability,test,test,678,"The flaky test failure can be seen here: https://ci.hail.is/batches/6627486/jobs/105; ```; During handling of the above exception, another exception occurred:. @skip_unless_service_backend(); def test_tiny_driver_has_tiny_memory():; try:; hl.utils.range_table(100_000_000, 50).to_pandas(); except Exception as exc:; # Sometimes the JVM properly OOMs, sometimes it just dies.; > assert (; 'java.lang.OutOfMemoryError: Java heap space' in exc.args[0] or; 'batch.worker.jvm_entryway_protocol.EndOfStream' in exc.args[0]; ); E assert ('java.lang.OutOfMemoryError: Java heap space' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 5",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:815,Testability,test,test,815,"The flaky test failure can be seen here: https://ci.hail.is/batches/6627486/jobs/105; ```; During handling of the above exception, another exception occurred:. @skip_unless_service_backend(); def test_tiny_driver_has_tiny_memory():; try:; hl.utils.range_table(100_000_000, 50).to_pandas(); except Exception as exc:; # Sometimes the JVM properly OOMs, sometimes it just dies.; > assert (; 'java.lang.OutOfMemoryError: Java heap space' in exc.args[0] or; 'batch.worker.jvm_entryway_protocol.EndOfStream' in exc.args[0]; ); E assert ('java.lang.OutOfMemoryError: Java heap space' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 5",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:860,Testability,log,log,860,"The flaky test failure can be seen here: https://ci.hail.is/batches/6627486/jobs/105; ```; During handling of the above exception, another exception occurred:. @skip_unless_service_backend(); def test_tiny_driver_has_tiny_memory():; try:; hl.utils.range_table(100_000_000, 50).to_pandas(); except Exception as exc:; # Sometimes the JVM properly OOMs, sometimes it just dies.; > assert (; 'java.lang.OutOfMemoryError: Java heap space' in exc.args[0] or; 'batch.worker.jvm_entryway_protocol.EndOfStream' in exc.args[0]; ); E assert ('java.lang.OutOfMemoryError: Java heap space' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: darrayLowerer, initial IR: after: IR size 8:\n(MakeTuple (0)\n (TableAggregate\n (TableOrderBy (Aidx) (TableRange 100000000 5",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:23406,Testability,test,test-,23406,NFO: instruction count: 3: __C1235__m1112split_LetSpills.<init>\n2022-11-15 20:30:18.247 root: INFO: instruction count: 3: __C1182staticWrapperClass_1.<init>\n2022-11-15 20:30:18.247 root: INFO: instruction count: 3: __C1203Tuple3.<init>\n2022-11-15 20:30:18.247 root: INFO: instruction count: 12: __C1203Tuple3.<init>\n2022-11-15 20:30:18.262 root: INFO: executing D-Array [table_aggregate_singlestage] with 50 tasks\n2022-11-15 20:30:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: nPartitions 50\n2022-11-15 20:30:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing f and contexts\n2022-11-15 20:30:18.263 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing contexts\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.69,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:23615,Testability,test,test-,23615, 3: __C1203Tuple3.<init>\n2022-11-15 20:30:18.247 root: INFO: instruction count: 12: __C1203Tuple3.<init>\n2022-11-15 20:30:18.262 root: INFO: executing D-Array [table_aggregate_singlestage] with 50 tasks\n2022-11-15 20:30:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: nPartitions 50\n2022-11-15 20:30:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing f and contexts\n2022-11-15 20:30:18.263 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing contexts\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:23831,Testability,test,test-,23831,:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: nPartitions 50\n2022-11-15 20:30:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing f and contexts\n2022-11-15 20:30:18.263 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing contexts\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.802 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.852 Requester:,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:24060,Testability,test,test-,24060,KNvkh8SC3EzvXjgv6-LMY=: writing f and contexts\n2022-11-15 20:30:18.263 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing contexts\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.802 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.852 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.866 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.917 Requester: INFO: reque,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:35534,Testability,test,test-,35534,: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:15.929 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:18.037 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:22.827 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:22.846 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:27.847 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:27.880 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:27.880 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: reading results\n2022-11-15 20:31:27.881 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:35749,Testability,test,test-,35749,INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:22.827 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:22.846 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:27.847 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:27.880 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:27.880 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: reading results\n2022-11-15 20:31:27.881 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:36059,Testability,test,test-,36059,.847 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:27.880 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:27.880 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: reading results\n2022-11-15 20:31:27.881 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:36274,Testability,test,test-,36274,80 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: reading results\n2022-11-15 20:31:27.881 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:36584,Testability,test,test-,36584,vXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:36799,Testability,test,test-,36799,vXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:37109,Testability,test,test-,37109,vXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:37324,Testability,test,test-,37324,vXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:37634,Testability,test,test-,37634,vXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:37849,Testability,test,test-,37849,vXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:38159,Testability,test,test-,38159,vXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:38374,Testability,test,test-,38374,vXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:38684,Testability,test,test-,38684,vXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:38899,Testability,test,test-,38899,vXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:39209,Testability,test,test-,39209,vXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:39424,Testability,test,test-,39424,vXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:39734,Testability,test,test-,39734,vXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:39949,Testability,test,test-,39949,vXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objec,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:40259,Testability,test,test-,40259,vXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/obj,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:40474,Testability,test,test-,40474,vXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/ob,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:40784,Testability,test,test-,40784,vXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:41000,Testability,test,test-,41000,Xjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:41312,Testability,test,test-,41312,gv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:41528,Testability,test,test-,41528,v6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:41840,Testability,test,test-,41840,-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:42056,Testability,test,test-,42056,-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:42368,Testability,test,test-,42368,-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:42584,Testability,test,test-,42584,-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:42896,Testability,test,test-,42896,-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:43112,Testability,test,test-,43112,-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:43424,Testability,test,test-,43424,-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:43640,Testability,test,test-,43640,-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:43952,Testability,test,test-,43952,-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:44168,Testability,test,test-,44168,-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:44480,Testability,test,test-,44480,-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:44696,Testability,test,test-,44696,-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:45008,Testability,test,test-,45008,-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:45224,Testability,test,test-,45224,-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:45536,Testability,test,test-,45536,-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:45752,Testability,test,test-,45752,-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:46064,Testability,test,test-,46064,-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:46280,Testability,test,test-,46280,-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:46592,Testability,test,test-,46592,-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:46808,Testability,test,test-,46808,-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:47120,Testability,test,test-,47120,-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:47336,Testability,test,test-,47336,-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:47648,Testability,test,test-,47648,-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:47864,Testability,test,test-,47864,-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:48176,Testability,test,test-,48176,-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:48392,Testability,test,test-,48392,-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:48704,Testability,test,test-,48704,-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:48920,Testability,test,test-,48920,-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:49232,Testability,test,test-,49232,-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:49448,Testability,test,test-,49448,-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:49760,Testability,test,test-,49760,-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:49976,Testability,test,test-,49976,-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:50288,Testability,test,test-,50288,-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:50504,Testability,test,test-,50504,-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:50816,Testability,test,test-,50816,-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:51032,Testability,test,test-,51032,-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:51344,Testability,test,test-,51344,-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:51560,Testability,test,test-,51560,-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:51872,Testability,test,test-,51872,-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:52088,Testability,test,test-,52088,-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:52400,Testability,test,test-,52400,-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:52616,Testability,test,test-,52616,-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:52928,Testability,test,test-,52928,-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:53144,Testability,test,test-,53144,-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:53456,Testability,test,test-,53456,-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:53672,Testability,test,test-,53672,-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:53984,Testability,test,test-,53984,-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:54200,Testability,test,test-,54200,-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:54512,Testability,test,test-,54512,-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:54728,Testability,test,test-,54728,-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:55040,Testability,test,test-,55040,-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:55256,Testability,test,test-,55256,-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:55568,Testability,test,test-,55568,-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:55784,Testability,test,test-,55784,-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:56096,Testability,test,test-,56096,-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:56312,Testability,test,test-,56312,-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:56624,Testability,test,test-,56624,-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:56840,Testability,test,test-,56840,-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:57152,Testability,test,test-,57152,-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:57368,Testability,test,test-,57368,-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:57680,Testability,test,test-,57680,-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:57896,Testability,test,test-,57896,-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:58208,Testability,test,test-,58208,-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:58424,Testability,test,test-,58424,-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:58736,Testability,test,test-,58736,-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:58952,Testability,test,test-,58952,-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:59264,Testability,test,test-,59264,-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:59480,Testability,test,test-,59480,-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:59792,Testability,test,test-,59792,-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:60008,Testability,test,test-,60008,-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:60320,Testability,test,test-,60320,-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:60536,Testability,test,test-,60536,-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:60848,Testability,test,test-,60848,-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:3,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:61064,Testability,test,test-,61064,"-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 curr",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:61376,Testability,test,test-,61376,"-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (1",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:61592,Testability,test,test-,61592,"-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), reg",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:64460,Testability,test,test,64460,"ead 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:64671,Testability,test,test,64671,"FO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertField",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:64808,Testability,test,test,64808," pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Colle",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:64853,Testability,log,log,64853,"d (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}} or 'batch.worker.jvm_entryway_protocol.EndOfStream' in {'batch_status': {'attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'closed': True, 'complete': True, ...}, 'job_status': {'attributes': {'name': 'driver'}, 'batch_id': 6627669, 'billing_project': 'test', 'cost': 0.0015413897092729028, ...}, 'log': {'main': ""2022-11-15 20:30:18.004 Tokens: INFO: tokens found for namespaces {default}\n2022-11-15 20:30:18.004 tls: INFO: ssl config file found at /batch/2bbb233e4e3c4a96bbffb515019daac9/secrets/ssl-config/ssl-config.json\n2022-11-15 20:30:18.006 GoogleStorageFS$: INFO: Initializing google storage client from service account key\n2022-11-15 20:30:18.114 root: INFO: RegionPool: initialized for thread 8: pool-1-thread-1\n2022-11-15 20:30:18.114 ServiceBackend$: INFO: executing: cEPZ5IV9gUtSnCiAiHXOPs None\n2022-11-15 20:30:18.127 root: INFO: optimize optimize: darrayLowerer, initial IR: before: IR size 17: \n(Let __rng_state\n (RNGStateLiteral (0 0 0 0))\n (MakeTuple (0)\n (TableAggregate\n (TableMapRows\n (TableOrderBy (Aidx) (TableRange 100000000 50))\n (InsertFields\n (SelectFields () (SelectFields (idx) (Ref row)))\n None\n (idx (GetField idx (Ref row)))))\n (MakeStruct\n (idx\n (ApplyAggOp Collect\n ()\n ((GetField idx (Ref row)))))))))\n2022-11-15 20:30:18.146 root: INFO: optimize optimize: ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:87399,Testability,test,test-,87399,NFO: instruction count: 3: __C1235__m1112split_LetSpills.<init>\n2022-11-15 20:30:18.247 root: INFO: instruction count: 3: __C1182staticWrapperClass_1.<init>\n2022-11-15 20:30:18.247 root: INFO: instruction count: 3: __C1203Tuple3.<init>\n2022-11-15 20:30:18.247 root: INFO: instruction count: 12: __C1203Tuple3.<init>\n2022-11-15 20:30:18.262 root: INFO: executing D-Array [table_aggregate_singlestage] with 50 tasks\n2022-11-15 20:30:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: nPartitions 50\n2022-11-15 20:30:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing f and contexts\n2022-11-15 20:30:18.263 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing contexts\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.69,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:87608,Testability,test,test-,87608, 3: __C1203Tuple3.<init>\n2022-11-15 20:30:18.247 root: INFO: instruction count: 12: __C1203Tuple3.<init>\n2022-11-15 20:30:18.262 root: INFO: executing D-Array [table_aggregate_singlestage] with 50 tasks\n2022-11-15 20:30:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: nPartitions 50\n2022-11-15 20:30:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing f and contexts\n2022-11-15 20:30:18.263 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing contexts\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:87824,Testability,test,test-,87824,:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: nPartitions 50\n2022-11-15 20:30:18.262 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing f and contexts\n2022-11-15 20:30:18.263 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing contexts\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.802 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.852 Requester:,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:88053,Testability,test,test-,88053,KNvkh8SC3EzvXjgv6-LMY=: writing f and contexts\n2022-11-15 20:30:18.263 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: writing contexts\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff\n2022-11-15 20:30:18.264 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts\n2022-11-15 20:30:18.318 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fcontexts response 200\n2022-11-15 20:30:18.331 Requester: INFO: request POST http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Ff response 200\n2022-11-15 20:30:18.332 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: running job\n2022-11-15 20:30:18.333 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast\n2022-11-15 20:30:18.697 Requester: INFO: request POST http://batch.hail/api/v1alpha/batches/6627669/update-fast response 200\n2022-11-15 20:30:18.697 BatchClient: INFO: run: created update 2 for batch 6627669\n2022-11-15 20:30:18.697 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.802 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.852 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:30:18.866 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:30:18.917 Requester: INFO: reque,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:99527,Testability,test,test-,99527,: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:15.929 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:18.037 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:22.827 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:22.846 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:27.847 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:27.880 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:27.880 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: reading results\n2022-11-15 20:31:27.881 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:99742,Testability,test,test-,99742,INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:22.827 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:22.846 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:27.847 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:27.880 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:27.880 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: reading results\n2022-11-15 20:31:27.881 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:100052,Testability,test,test-,100052,.847 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669\n2022-11-15 20:31:27.880 Requester: INFO: request GET http://batch.hail/api/v1alpha/batches/6627669 response 200\n2022-11-15 20:31:27.880 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: reading results\n2022-11-15 20:31:27.881 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:100267,Testability,test,test-,100267,80 ServiceBackend$: INFO: parallelizeAndComputeWithIndex: pty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY=: reading results\n2022-11-15 20:31:27.881 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:100577,Testability,test,test-,100577,vXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:100792,Testability,test,test-,100792,vXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:101102,Testability,test,test-,101102,vXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:101317,Testability,test,test-,101317,vXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:101627,Testability,test,test-,101627,vXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:101842,Testability,test,test-,101842,vXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:102152,Testability,test,test-,102152,vXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:102367,Testability,test,test-,102367,vXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:102677,Testability,test,test-,102677,vXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:102892,Testability,test,test-,102892,vXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:103202,Testability,test,test-,103202,vXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:103417,Testability,test,test-,103417,vXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:103727,Testability,test,test-,103727,vXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:103942,Testability,test,test-,103942,vXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objec,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:104252,Testability,test,test-,104252,vXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/obj,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:104467,Testability,test,test-,104467,vXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/ob,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:104777,Testability,test,test-,104777,vXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:104993,Testability,test,test-,104993,Xjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:105305,Testability,test,test-,105305,gv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:105521,Testability,test,test-,105521,v6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:105833,Testability,test,test-,105833,-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:106049,Testability,test,test-,106049,-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:106361,Testability,test,test-,106361,-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:106577,Testability,test,test-,106577,-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:106889,Testability,test,test-,106889,-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:107105,Testability,test,test-,107105,-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:107417,Testability,test,test-,107417,-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:107633,Testability,test,test-,107633,-LMY%3D%2Fresult.13 response 200\n2022-11-15 20:31:31.213 ServiceBackend$: INFO: result 13 complete - 8157265 bytes\n2022-11-15 20:31:31.213 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:107945,Testability,test,test-,107945,-LMY%3D%2Fresult.14\n2022-11-15 20:31:31.518 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:108161,Testability,test,test-,108161,-LMY%3D%2Fresult.14 response 200\n2022-11-15 20:31:31.545 ServiceBackend$: INFO: result 14 complete - 8157265 bytes\n2022-11-15 20:31:31.545 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:108473,Testability,test,test-,108473,-LMY%3D%2Fresult.15\n2022-11-15 20:31:31.742 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:108689,Testability,test,test-,108689,-LMY%3D%2Fresult.15 response 200\n2022-11-15 20:31:31.760 ServiceBackend$: INFO: result 15 complete - 8157265 bytes\n2022-11-15 20:31:31.761 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:109001,Testability,test,test-,109001,-LMY%3D%2Fresult.16\n2022-11-15 20:31:31.925 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:109217,Testability,test,test-,109217,-LMY%3D%2Fresult.16 response 200\n2022-11-15 20:31:31.949 ServiceBackend$: INFO: result 16 complete - 8157265 bytes\n2022-11-15 20:31:31.950 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:109529,Testability,test,test-,109529,-LMY%3D%2Fresult.17\n2022-11-15 20:31:32.168 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:109745,Testability,test,test-,109745,-LMY%3D%2Fresult.17 response 200\n2022-11-15 20:31:34.006 ServiceBackend$: INFO: result 17 complete - 8157265 bytes\n2022-11-15 20:31:34.007 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:110057,Testability,test,test-,110057,-LMY%3D%2Fresult.18\n2022-11-15 20:31:34.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:110273,Testability,test,test-,110273,-LMY%3D%2Fresult.18 response 200\n2022-11-15 20:31:34.236 ServiceBackend$: INFO: result 18 complete - 8157265 bytes\n2022-11-15 20:31:34.236 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:110585,Testability,test,test-,110585,-LMY%3D%2Fresult.19\n2022-11-15 20:31:34.397 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:110801,Testability,test,test-,110801,-LMY%3D%2Fresult.19 response 200\n2022-11-15 20:31:34.417 ServiceBackend$: INFO: result 19 complete - 8157265 bytes\n2022-11-15 20:31:34.417 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:111113,Testability,test,test-,111113,-LMY%3D%2Fresult.20\n2022-11-15 20:31:34.653 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:111329,Testability,test,test-,111329,-LMY%3D%2Fresult.20 response 200\n2022-11-15 20:31:34.672 ServiceBackend$: INFO: result 20 complete - 8157265 bytes\n2022-11-15 20:31:34.672 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:111641,Testability,test,test-,111641,-LMY%3D%2Fresult.21\n2022-11-15 20:31:34.852 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:111857,Testability,test,test-,111857,-LMY%3D%2Fresult.21 response 200\n2022-11-15 20:31:34.872 ServiceBackend$: INFO: result 21 complete - 8157265 bytes\n2022-11-15 20:31:34.873 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:112169,Testability,test,test-,112169,-LMY%3D%2Fresult.22\n2022-11-15 20:31:35.103 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:112385,Testability,test,test-,112385,-LMY%3D%2Fresult.22 response 200\n2022-11-15 20:31:35.122 ServiceBackend$: INFO: result 22 complete - 8157265 bytes\n2022-11-15 20:31:35.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:112697,Testability,test,test-,112697,-LMY%3D%2Fresult.23\n2022-11-15 20:31:35.354 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:112913,Testability,test,test-,112913,-LMY%3D%2Fresult.23 response 200\n2022-11-15 20:31:35.373 ServiceBackend$: INFO: result 23 complete - 8157265 bytes\n2022-11-15 20:31:35.374 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:113225,Testability,test,test-,113225,-LMY%3D%2Fresult.24\n2022-11-15 20:31:35.570 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:113441,Testability,test,test-,113441,-LMY%3D%2Fresult.24 response 200\n2022-11-15 20:31:35.601 ServiceBackend$: INFO: result 24 complete - 8157265 bytes\n2022-11-15 20:31:35.601 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:113753,Testability,test,test-,113753,-LMY%3D%2Fresult.25\n2022-11-15 20:31:35.762 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:113969,Testability,test,test-,113969,-LMY%3D%2Fresult.25 response 200\n2022-11-15 20:31:35.782 ServiceBackend$: INFO: result 25 complete - 8157265 bytes\n2022-11-15 20:31:35.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:114281,Testability,test,test-,114281,-LMY%3D%2Fresult.26\n2022-11-15 20:31:35.961 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:114497,Testability,test,test-,114497,-LMY%3D%2Fresult.26 response 200\n2022-11-15 20:31:36.046 ServiceBackend$: INFO: result 26 complete - 8157265 bytes\n2022-11-15 20:31:36.046 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:114809,Testability,test,test-,114809,-LMY%3D%2Fresult.27\n2022-11-15 20:31:36.217 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:115025,Testability,test,test-,115025,-LMY%3D%2Fresult.27 response 200\n2022-11-15 20:31:36.238 ServiceBackend$: INFO: result 27 complete - 8157265 bytes\n2022-11-15 20:31:36.238 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:115337,Testability,test,test-,115337,-LMY%3D%2Fresult.28\n2022-11-15 20:31:36.449 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:115553,Testability,test,test-,115553,-LMY%3D%2Fresult.28 response 200\n2022-11-15 20:31:36.469 ServiceBackend$: INFO: result 28 complete - 8157265 bytes\n2022-11-15 20:31:36.469 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:115865,Testability,test,test-,115865,-LMY%3D%2Fresult.29\n2022-11-15 20:31:36.695 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:116081,Testability,test,test-,116081,-LMY%3D%2Fresult.29 response 200\n2022-11-15 20:31:36.732 ServiceBackend$: INFO: result 29 complete - 8157265 bytes\n2022-11-15 20:31:36.732 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:116393,Testability,test,test-,116393,-LMY%3D%2Fresult.30\n2022-11-15 20:31:36.902 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:116609,Testability,test,test-,116609,-LMY%3D%2Fresult.30 response 200\n2022-11-15 20:31:36.930 ServiceBackend$: INFO: result 30 complete - 8157265 bytes\n2022-11-15 20:31:36.931 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:116921,Testability,test,test-,116921,-LMY%3D%2Fresult.31\n2022-11-15 20:31:37.122 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:117137,Testability,test,test-,117137,-LMY%3D%2Fresult.31 response 200\n2022-11-15 20:31:37.146 ServiceBackend$: INFO: result 31 complete - 8157265 bytes\n2022-11-15 20:31:37.146 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:117449,Testability,test,test-,117449,-LMY%3D%2Fresult.32\n2022-11-15 20:31:37.413 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:117665,Testability,test,test-,117665,-LMY%3D%2Fresult.32 response 200\n2022-11-15 20:31:37.434 ServiceBackend$: INFO: result 32 complete - 8157265 bytes\n2022-11-15 20:31:37.434 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:117977,Testability,test,test-,117977,-LMY%3D%2Fresult.33\n2022-11-15 20:31:37.610 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:118193,Testability,test,test-,118193,-LMY%3D%2Fresult.33 response 200\n2022-11-15 20:31:37.637 ServiceBackend$: INFO: result 33 complete - 8157265 bytes\n2022-11-15 20:31:37.637 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:118505,Testability,test,test-,118505,-LMY%3D%2Fresult.34\n2022-11-15 20:31:37.848 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:118721,Testability,test,test-,118721,-LMY%3D%2Fresult.34 response 200\n2022-11-15 20:31:37.870 ServiceBackend$: INFO: result 34 complete - 8157265 bytes\n2022-11-15 20:31:37.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:119033,Testability,test,test-,119033,-LMY%3D%2Fresult.35\n2022-11-15 20:31:38.077 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:119249,Testability,test,test-,119249,-LMY%3D%2Fresult.35 response 200\n2022-11-15 20:31:38.170 ServiceBackend$: INFO: result 35 complete - 8157265 bytes\n2022-11-15 20:31:38.170 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:119561,Testability,test,test-,119561,-LMY%3D%2Fresult.36\n2022-11-15 20:31:38.305 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:119777,Testability,test,test-,119777,-LMY%3D%2Fresult.36 response 200\n2022-11-15 20:31:38.359 ServiceBackend$: INFO: result 36 complete - 8157265 bytes\n2022-11-15 20:31:38.359 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:120089,Testability,test,test-,120089,-LMY%3D%2Fresult.37\n2022-11-15 20:31:38.531 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:120305,Testability,test,test-,120305,-LMY%3D%2Fresult.37 response 200\n2022-11-15 20:31:38.559 ServiceBackend$: INFO: result 37 complete - 8157265 bytes\n2022-11-15 20:31:38.559 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:120617,Testability,test,test-,120617,-LMY%3D%2Fresult.38\n2022-11-15 20:31:38.829 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:120833,Testability,test,test-,120833,-LMY%3D%2Fresult.38 response 200\n2022-11-15 20:31:38.856 ServiceBackend$: INFO: result 38 complete - 8157265 bytes\n2022-11-15 20:31:38.856 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:121145,Testability,test,test-,121145,-LMY%3D%2Fresult.39\n2022-11-15 20:31:38.999 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:121361,Testability,test,test-,121361,-LMY%3D%2Fresult.39 response 200\n2022-11-15 20:31:39.031 ServiceBackend$: INFO: result 39 complete - 8157265 bytes\n2022-11-15 20:31:39.031 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:121673,Testability,test,test-,121673,-LMY%3D%2Fresult.40\n2022-11-15 20:31:39.200 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:121889,Testability,test,test-,121889,-LMY%3D%2Fresult.40 response 200\n2022-11-15 20:31:39.251 ServiceBackend$: INFO: result 40 complete - 8157265 bytes\n2022-11-15 20:31:39.252 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:122201,Testability,test,test-,122201,-LMY%3D%2Fresult.41\n2022-11-15 20:31:39.439 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:122417,Testability,test,test-,122417,-LMY%3D%2Fresult.41 response 200\n2022-11-15 20:31:39.460 ServiceBackend$: INFO: result 41 complete - 8157265 bytes\n2022-11-15 20:31:39.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:122729,Testability,test,test-,122729,-LMY%3D%2Fresult.42\n2022-11-15 20:31:39.669 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:122945,Testability,test,test-,122945,-LMY%3D%2Fresult.42 response 200\n2022-11-15 20:31:39.693 ServiceBackend$: INFO: result 42 complete - 8157265 bytes\n2022-11-15 20:31:39.693 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:123257,Testability,test,test-,123257,-LMY%3D%2Fresult.43\n2022-11-15 20:31:39.938 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:123473,Testability,test,test-,123473,-LMY%3D%2Fresult.43 response 200\n2022-11-15 20:31:39.965 ServiceBackend$: INFO: result 43 complete - 8157265 bytes\n2022-11-15 20:31:39.966 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:123785,Testability,test,test-,123785,-LMY%3D%2Fresult.44\n2022-11-15 20:31:40.151 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:124001,Testability,test,test-,124001,-LMY%3D%2Fresult.44 response 200\n2022-11-15 20:31:40.186 ServiceBackend$: INFO: result 44 complete - 8157265 bytes\n2022-11-15 20:31:40.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:124313,Testability,test,test-,124313,-LMY%3D%2Fresult.45\n2022-11-15 20:31:40.377 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:124529,Testability,test,test-,124529,-LMY%3D%2Fresult.45 response 200\n2022-11-15 20:31:40.461 ServiceBackend$: INFO: result 45 complete - 8157265 bytes\n2022-11-15 20:31:40.461 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:124841,Testability,test,test-,124841,-LMY%3D%2Fresult.46\n2022-11-15 20:31:40.643 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:3,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:125057,Testability,test,test-,125057,"-LMY%3D%2Fresult.46 response 200\n2022-11-15 20:31:40.671 ServiceBackend$: INFO: result 46 complete - 8157265 bytes\n2022-11-15 20:31:40.671 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 curr",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:125369,Testability,test,test-,125369,"-LMY%3D%2Fresult.47\n2022-11-15 20:31:40.870 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (1",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:125585,Testability,test,test-,125585,"-LMY%3D%2Fresult.47 response 200\n2022-11-15 20:31:40.893 ServiceBackend$: INFO: result 47 complete - 8157265 bytes\n2022-11-15 20:31:40.893 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48\n2022-11-15 20:31:41.050 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.48 response 200\n2022-11-15 20:31:41.071 ServiceBackend$: INFO: result 48 complete - 8157265 bytes\n2022-11-15 20:31:41.071 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49\n2022-11-15 20:31:41.231 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.49 response 200\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: result 49 complete - 8157265 bytes\n2022-11-15 20:31:41.330 ServiceBackend$: INFO: all results complete\n2022-11-15 20:31:41.331 root: INFO: executed D-Array [table_aggregate_singlestage] in 1m23.1s\n2022-11-15 20:31:41.331 root: INFO: RegionPool: REPORT_THRESHOLD: 8.2M allocated (192.0K blocks / 8.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.335 root: INFO: RegionPool: REPORT_THRESHOLD: 16.2M allocated (192.0K blocks / 16.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.339 root: INFO: RegionPool: REPORT_THRESHOLD: 24.2M allocated (192.0K blocks / 24.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.345 root: INFO: RegionPool: REPORT_THRESHOLD: 32.2M allocated (192.0K blocks / 32.0M chunks), reg",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:128453,Testability,test,test,128453,"d (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}}). test/hail/backend/test_service_backend.py:12: AssertionError; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:128513,Testability,test,test,128513,"d (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}}). test/hail/backend/test_service_backend.py:12: AssertionError; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:128559,Testability,Assert,AssertionError,128559,"d (192.0K blocks / 32.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.351 root: INFO: RegionPool: REPORT_THRESHOLD: 40.2M allocated (192.0K blocks / 40.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.357 root: INFO: RegionPool: REPORT_THRESHOLD: 48.2M allocated (192.0K blocks / 48.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.362 root: INFO: RegionPool: REPORT_THRESHOLD: 56.2M allocated (192.0K blocks / 56.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.368 root: INFO: RegionPool: REPORT_THRESHOLD: 64.2M allocated (192.0K blocks / 64.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.374 root: INFO: RegionPool: REPORT_THRESHOLD: 72.2M allocated (192.0K blocks / 72.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.414 root: INFO: RegionPool: REPORT_THRESHOLD: 128.2M allocated (192.0K blocks / 128.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.506 root: INFO: RegionPool: REPORT_THRESHOLD: 256.2M allocated (192.0K blocks / 256.0M chunks), regions.size = 3, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:41.910 root: INFO: RegionPool: REPORT_THRESHOLD: 512.0M allocated (111.9M blocks / 400.1M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1\n2022-11-15 20:31:42.730 root: INFO: RegionPool: REPORT_THRESHOLD: 1.2G allocated (439.1M blocks / 781.5M chunks), regions.size = 5, 0 current java objects, thread 8: pool-1-thread-1""}, 'service_backend_debug_info': {'batch_attributes': {'name': 'test_tiny_driver_has_tiny_memory'}, 'billing_project': 'test', 'driver_cores': None, 'driver_memory': None, ...}}). test/hail/backend/test_service_backend.py:12: AssertionError; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284
https://github.com/hail-is/hail/pull/12471#issuecomment-1323968044:224,Deployability,configurat,configurations,224,"> I'm inclined to set `HAIL_QUERY_BACKEND=batch` by default, though I can see how this would also be useful to run a local-mode Spark-Hail. I'm happy to be overruled here but I like the ""just copy their config"" approach for configurations like these where both the local and batch backend could make sense, so the behavior is as consistent as is reasonable across environments. It will Just Work in the way you want if the user has the backend set to batch in their config ;)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1323968044
https://github.com/hail-is/hail/pull/12471#issuecomment-1323968044:203,Modifiability,config,config,203,"> I'm inclined to set `HAIL_QUERY_BACKEND=batch` by default, though I can see how this would also be useful to run a local-mode Spark-Hail. I'm happy to be overruled here but I like the ""just copy their config"" approach for configurations like these where both the local and batch backend could make sense, so the behavior is as consistent as is reasonable across environments. It will Just Work in the way you want if the user has the backend set to batch in their config ;)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1323968044
https://github.com/hail-is/hail/pull/12471#issuecomment-1323968044:224,Modifiability,config,configurations,224,"> I'm inclined to set `HAIL_QUERY_BACKEND=batch` by default, though I can see how this would also be useful to run a local-mode Spark-Hail. I'm happy to be overruled here but I like the ""just copy their config"" approach for configurations like these where both the local and batch backend could make sense, so the behavior is as consistent as is reasonable across environments. It will Just Work in the way you want if the user has the backend set to batch in their config ;)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1323968044
https://github.com/hail-is/hail/pull/12471#issuecomment-1323968044:466,Modifiability,config,config,466,"> I'm inclined to set `HAIL_QUERY_BACKEND=batch` by default, though I can see how this would also be useful to run a local-mode Spark-Hail. I'm happy to be overruled here but I like the ""just copy their config"" approach for configurations like these where both the local and batch backend could make sense, so the behavior is as consistent as is reasonable across environments. It will Just Work in the way you want if the user has the backend set to batch in their config ;)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1323968044
https://github.com/hail-is/hail/pull/12471#issuecomment-1324113118:114,Deployability,pipeline,pipeline,114,"Let's enumerate the use-cases. In all cases, the point is to run the client script in the cloud.; 1. Submit a QoB pipeline.; 2. Submit a Batch pipeline.; 3. Submit a single-Python-job batch to execute some python code remotely.; 4. Same as (3) but using local-mode Hail (as opposed to (1)). I think use-case (4) is rare, though useful. If we're pitching `hailctl batch submit` as the QoB replacement for `hailctl dataproc submit`, then I think people will be very confused if (4) happens. I am somewhat frustrated that we have these different deployment strategies. It seems like unnecessary intellectual burden for a user to think about when they're just trying to run some Hail code. One option is to have different commands. Submitting a QoB job is done like this:; ```; hailctl qob submit ...; ```; And submitting a batch job is done like this:; ```; hailctl batch submit ...; ```. It pains me to think about trying to explain the difference between (1) and (4) to a scientist. At least with two distinct commands we can sort of ignore (4) and say: if you want to run Hail Query on Hail Batch use `hailctl qob` and if you want to run a normal batch pipeline use `hailctl batch`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324113118
https://github.com/hail-is/hail/pull/12471#issuecomment-1324113118:143,Deployability,pipeline,pipeline,143,"Let's enumerate the use-cases. In all cases, the point is to run the client script in the cloud.; 1. Submit a QoB pipeline.; 2. Submit a Batch pipeline.; 3. Submit a single-Python-job batch to execute some python code remotely.; 4. Same as (3) but using local-mode Hail (as opposed to (1)). I think use-case (4) is rare, though useful. If we're pitching `hailctl batch submit` as the QoB replacement for `hailctl dataproc submit`, then I think people will be very confused if (4) happens. I am somewhat frustrated that we have these different deployment strategies. It seems like unnecessary intellectual burden for a user to think about when they're just trying to run some Hail code. One option is to have different commands. Submitting a QoB job is done like this:; ```; hailctl qob submit ...; ```; And submitting a batch job is done like this:; ```; hailctl batch submit ...; ```. It pains me to think about trying to explain the difference between (1) and (4) to a scientist. At least with two distinct commands we can sort of ignore (4) and say: if you want to run Hail Query on Hail Batch use `hailctl qob` and if you want to run a normal batch pipeline use `hailctl batch`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324113118
https://github.com/hail-is/hail/pull/12471#issuecomment-1324113118:543,Deployability,deploy,deployment,543,"Let's enumerate the use-cases. In all cases, the point is to run the client script in the cloud.; 1. Submit a QoB pipeline.; 2. Submit a Batch pipeline.; 3. Submit a single-Python-job batch to execute some python code remotely.; 4. Same as (3) but using local-mode Hail (as opposed to (1)). I think use-case (4) is rare, though useful. If we're pitching `hailctl batch submit` as the QoB replacement for `hailctl dataproc submit`, then I think people will be very confused if (4) happens. I am somewhat frustrated that we have these different deployment strategies. It seems like unnecessary intellectual burden for a user to think about when they're just trying to run some Hail code. One option is to have different commands. Submitting a QoB job is done like this:; ```; hailctl qob submit ...; ```; And submitting a batch job is done like this:; ```; hailctl batch submit ...; ```. It pains me to think about trying to explain the difference between (1) and (4) to a scientist. At least with two distinct commands we can sort of ignore (4) and say: if you want to run Hail Query on Hail Batch use `hailctl qob` and if you want to run a normal batch pipeline use `hailctl batch`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324113118
https://github.com/hail-is/hail/pull/12471#issuecomment-1324113118:1153,Deployability,pipeline,pipeline,1153,"Let's enumerate the use-cases. In all cases, the point is to run the client script in the cloud.; 1. Submit a QoB pipeline.; 2. Submit a Batch pipeline.; 3. Submit a single-Python-job batch to execute some python code remotely.; 4. Same as (3) but using local-mode Hail (as opposed to (1)). I think use-case (4) is rare, though useful. If we're pitching `hailctl batch submit` as the QoB replacement for `hailctl dataproc submit`, then I think people will be very confused if (4) happens. I am somewhat frustrated that we have these different deployment strategies. It seems like unnecessary intellectual burden for a user to think about when they're just trying to run some Hail code. One option is to have different commands. Submitting a QoB job is done like this:; ```; hailctl qob submit ...; ```; And submitting a batch job is done like this:; ```; hailctl batch submit ...; ```. It pains me to think about trying to explain the difference between (1) and (4) to a scientist. At least with two distinct commands we can sort of ignore (4) and say: if you want to run Hail Query on Hail Batch use `hailctl qob` and if you want to run a normal batch pipeline use `hailctl batch`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324113118
https://github.com/hail-is/hail/pull/12471#issuecomment-1324131496:218,Integrability,interface,interface,218,"Hmph, ya this seems annoyingly complicated, and I'd prefer to make one command with opinionated but configurable defaults than have different commands. One thing that feels inconsistent here is what we do in the Batch interface. We don't have the equivalent of `HAIL_QUERY_BACKEND` and a user specifically has to create a `ServiceBackend` as opposed to relying on the environment dictating which model to use. I feel like it would be OK if we documented `hailctl batch submit` as ""distribute everything on batch by default""",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324131496
https://github.com/hail-is/hail/pull/12471#issuecomment-1324131496:100,Modifiability,config,configurable,100,"Hmph, ya this seems annoyingly complicated, and I'd prefer to make one command with opinionated but configurable defaults than have different commands. One thing that feels inconsistent here is what we do in the Batch interface. We don't have the equivalent of `HAIL_QUERY_BACKEND` and a user specifically has to create a `ServiceBackend` as opposed to relying on the environment dictating which model to use. I feel like it would be OK if we documented `hailctl batch submit` as ""distribute everything on batch by default""",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324131496
https://github.com/hail-is/hail/pull/12471#issuecomment-1324141580:4,Testability,test,testing,4,"Re: testing, I wanted to wait on the spawned batch and ensure that it passed, but I had trouble doing that because it looks like the new rich progress bars are printed to stdout so I can't make use of json output and `jq`. Can we print the progress bars to stderr instead?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324141580
https://github.com/hail-is/hail/pull/12471#issuecomment-1324141580:142,Usability,progress bar,progress bars,142,"Re: testing, I wanted to wait on the spawned batch and ensure that it passed, but I had trouble doing that because it looks like the new rich progress bars are printed to stdout so I can't make use of json output and `jq`. Can we print the progress bars to stderr instead?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324141580
https://github.com/hail-is/hail/pull/12471#issuecomment-1324141580:240,Usability,progress bar,progress bars,240,"Re: testing, I wanted to wait on the spawned batch and ensure that it passed, but I had trouble doing that because it looks like the new rich progress bars are printed to stdout so I can't make use of json output and `jq`. Can we print the progress bars to stderr instead?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324141580
https://github.com/hail-is/hail/pull/12471#issuecomment-1324143394:77,Modifiability,config,config,77,"As an aside, we should definitely have a `HAIL_BATCH_BACKEND` and associated config variables. There is no end to my annoyance that `hb.Batch()` gives me a local backend batch. It seems to me that, given the precedent of `hailctl dataproc submit`, `hailctl batch submit` conveys the intent to use QoB or Batch-in-Batch, not ""local mode Batch"" or ""local mode Hail"". It seems very reasonable to have a `--local-mode-query` override (I think we should ignore local mode Batch as much as possible since container-in-container is fraught). We need a better name for local mode Spark or Query. I'm slowly realizing that lots of people don't realize you can use Hail on a laptop. Are there other tools that have already settled on terminology here?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324143394
https://github.com/hail-is/hail/pull/12471#issuecomment-1324143394:84,Modifiability,variab,variables,84,"As an aside, we should definitely have a `HAIL_BATCH_BACKEND` and associated config variables. There is no end to my annoyance that `hb.Batch()` gives me a local backend batch. It seems to me that, given the precedent of `hailctl dataproc submit`, `hailctl batch submit` conveys the intent to use QoB or Batch-in-Batch, not ""local mode Batch"" or ""local mode Hail"". It seems very reasonable to have a `--local-mode-query` override (I think we should ignore local mode Batch as much as possible since container-in-container is fraught). We need a better name for local mode Spark or Query. I'm slowly realizing that lots of people don't realize you can use Hail on a laptop. Are there other tools that have already settled on terminology here?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324143394
https://github.com/hail-is/hail/pull/12471#issuecomment-1324145967:6,Testability,test,testing,6,"> Re: testing, I wanted to wait on the spawned batch and ensure that it passed, but I had trouble doing that because it looks like the new rich progress bars are printed to stdout so I can't make use of json output and `jq`. Can we print the progress bars to stderr instead?. I think this is possible but I haven't looked into it. I'm opposed to stderr in Notebooks because I don't want it to appear with red background. I've recently realized that a lot of users find it concerning that we print so much red background text. You might also have a quiet mode? If you don't `wait` on the batch, do you still get a progress bar?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324145967
https://github.com/hail-is/hail/pull/12471#issuecomment-1324145967:144,Usability,progress bar,progress bars,144,"> Re: testing, I wanted to wait on the spawned batch and ensure that it passed, but I had trouble doing that because it looks like the new rich progress bars are printed to stdout so I can't make use of json output and `jq`. Can we print the progress bars to stderr instead?. I think this is possible but I haven't looked into it. I'm opposed to stderr in Notebooks because I don't want it to appear with red background. I've recently realized that a lot of users find it concerning that we print so much red background text. You might also have a quiet mode? If you don't `wait` on the batch, do you still get a progress bar?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324145967
https://github.com/hail-is/hail/pull/12471#issuecomment-1324145967:242,Usability,progress bar,progress bars,242,"> Re: testing, I wanted to wait on the spawned batch and ensure that it passed, but I had trouble doing that because it looks like the new rich progress bars are printed to stdout so I can't make use of json output and `jq`. Can we print the progress bars to stderr instead?. I think this is possible but I haven't looked into it. I'm opposed to stderr in Notebooks because I don't want it to appear with red background. I've recently realized that a lot of users find it concerning that we print so much red background text. You might also have a quiet mode? If you don't `wait` on the batch, do you still get a progress bar?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324145967
https://github.com/hail-is/hail/pull/12471#issuecomment-1324145967:613,Usability,progress bar,progress bar,613,"> Re: testing, I wanted to wait on the spawned batch and ensure that it passed, but I had trouble doing that because it looks like the new rich progress bars are printed to stdout so I can't make use of json output and `jq`. Can we print the progress bars to stderr instead?. I think this is possible but I haven't looked into it. I'm opposed to stderr in Notebooks because I don't want it to appear with red background. I've recently realized that a lot of users find it concerning that we print so much red background text. You might also have a quiet mode? If you don't `wait` on the batch, do you still get a progress bar?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324145967
https://github.com/hail-is/hail/pull/12471#issuecomment-1324152841:7,Usability,progress bar,progress bars,7,Ya the progress bars I mentioned were the file upload summary and the batch submission. I can try to make a quiet mode so it can cleanly print just the json. My intention was not to wait it in `submit.py` but to print out a json and then use `hailctl batch wait`,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324152841
https://github.com/hail-is/hail/pull/12471#issuecomment-1324238614:71,Testability,test,test,71,My inclination is to assume the arg parser works correctly and to just test calling a function that returns the information you need.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324238614
https://github.com/hail-is/hail/pull/12471#issuecomment-1324259408:862,Deployability,configurat,configuration,862,"> As an aside, we should definitely have a `HAIL_BATCH_BACKEND` and associated config variables. There is no end to my annoyance that `hb.Batch()` gives me a local backend batch.; > ; > It seems to me that, given the precedent of `hailctl dataproc submit`, `hailctl batch submit` conveys the intent to use QoB or Batch-in-Batch, not ""local mode Batch"" or ""local mode Hail"". It seems very reasonable to have a `--local-mode-query` override (I think we should ignore local mode Batch as much as possible since container-in-container is fraught).; > ; > We need a better name for local mode Spark or Query. I'm slowly realizing that lots of people don't realize you can use Hail on a laptop. Are there other tools that have already settled on terminology here?. @danking Wait so shall I set `HAIL_QUERY_BACKEND=batch`? I can follow up with a PR that adds a similar configuration variable for batch so we don't default to the local backend, but it would be nice to keep this behavior consistent from the start",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324259408
https://github.com/hail-is/hail/pull/12471#issuecomment-1324259408:79,Modifiability,config,config,79,"> As an aside, we should definitely have a `HAIL_BATCH_BACKEND` and associated config variables. There is no end to my annoyance that `hb.Batch()` gives me a local backend batch.; > ; > It seems to me that, given the precedent of `hailctl dataproc submit`, `hailctl batch submit` conveys the intent to use QoB or Batch-in-Batch, not ""local mode Batch"" or ""local mode Hail"". It seems very reasonable to have a `--local-mode-query` override (I think we should ignore local mode Batch as much as possible since container-in-container is fraught).; > ; > We need a better name for local mode Spark or Query. I'm slowly realizing that lots of people don't realize you can use Hail on a laptop. Are there other tools that have already settled on terminology here?. @danking Wait so shall I set `HAIL_QUERY_BACKEND=batch`? I can follow up with a PR that adds a similar configuration variable for batch so we don't default to the local backend, but it would be nice to keep this behavior consistent from the start",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324259408
https://github.com/hail-is/hail/pull/12471#issuecomment-1324259408:86,Modifiability,variab,variables,86,"> As an aside, we should definitely have a `HAIL_BATCH_BACKEND` and associated config variables. There is no end to my annoyance that `hb.Batch()` gives me a local backend batch.; > ; > It seems to me that, given the precedent of `hailctl dataproc submit`, `hailctl batch submit` conveys the intent to use QoB or Batch-in-Batch, not ""local mode Batch"" or ""local mode Hail"". It seems very reasonable to have a `--local-mode-query` override (I think we should ignore local mode Batch as much as possible since container-in-container is fraught).; > ; > We need a better name for local mode Spark or Query. I'm slowly realizing that lots of people don't realize you can use Hail on a laptop. Are there other tools that have already settled on terminology here?. @danking Wait so shall I set `HAIL_QUERY_BACKEND=batch`? I can follow up with a PR that adds a similar configuration variable for batch so we don't default to the local backend, but it would be nice to keep this behavior consistent from the start",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324259408
https://github.com/hail-is/hail/pull/12471#issuecomment-1324259408:862,Modifiability,config,configuration,862,"> As an aside, we should definitely have a `HAIL_BATCH_BACKEND` and associated config variables. There is no end to my annoyance that `hb.Batch()` gives me a local backend batch.; > ; > It seems to me that, given the precedent of `hailctl dataproc submit`, `hailctl batch submit` conveys the intent to use QoB or Batch-in-Batch, not ""local mode Batch"" or ""local mode Hail"". It seems very reasonable to have a `--local-mode-query` override (I think we should ignore local mode Batch as much as possible since container-in-container is fraught).; > ; > We need a better name for local mode Spark or Query. I'm slowly realizing that lots of people don't realize you can use Hail on a laptop. Are there other tools that have already settled on terminology here?. @danking Wait so shall I set `HAIL_QUERY_BACKEND=batch`? I can follow up with a PR that adds a similar configuration variable for batch so we don't default to the local backend, but it would be nice to keep this behavior consistent from the start",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324259408
https://github.com/hail-is/hail/pull/12471#issuecomment-1324259408:876,Modifiability,variab,variable,876,"> As an aside, we should definitely have a `HAIL_BATCH_BACKEND` and associated config variables. There is no end to my annoyance that `hb.Batch()` gives me a local backend batch.; > ; > It seems to me that, given the precedent of `hailctl dataproc submit`, `hailctl batch submit` conveys the intent to use QoB or Batch-in-Batch, not ""local mode Batch"" or ""local mode Hail"". It seems very reasonable to have a `--local-mode-query` override (I think we should ignore local mode Batch as much as possible since container-in-container is fraught).; > ; > We need a better name for local mode Spark or Query. I'm slowly realizing that lots of people don't realize you can use Hail on a laptop. Are there other tools that have already settled on terminology here?. @danking Wait so shall I set `HAIL_QUERY_BACKEND=batch`? I can follow up with a PR that adds a similar configuration variable for batch so we don't default to the local backend, but it would be nice to keep this behavior consistent from the start",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324259408
https://github.com/hail-is/hail/pull/12476#issuecomment-1319054705:20,Deployability,update,update,20,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12476#issuecomment-1319054705
https://github.com/hail-is/hail/pull/12476#issuecomment-1319054705:133,Deployability,update,update,133,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12476#issuecomment-1319054705
https://github.com/hail-is/hail/pull/12476#issuecomment-1319054705:0,Integrability,Depend,Dependabot,0,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12476#issuecomment-1319054705
https://github.com/hail-is/hail/pull/12476#issuecomment-1319054705:156,Integrability,depend,dependabot,156,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12476#issuecomment-1319054705
https://github.com/hail-is/hail/pull/12476#issuecomment-1322640281:20,Deployability,update,update,20,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12476#issuecomment-1322640281
https://github.com/hail-is/hail/pull/12476#issuecomment-1322640281:133,Deployability,update,update,133,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12476#issuecomment-1322640281
https://github.com/hail-is/hail/pull/12476#issuecomment-1322640281:0,Integrability,Depend,Dependabot,0,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12476#issuecomment-1322640281
https://github.com/hail-is/hail/pull/12476#issuecomment-1322640281:156,Integrability,depend,dependabot,156,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12476#issuecomment-1322640281
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090640:21,Integrability,depend,dependabot,21,"I've told you before dependabot, this doesn't work",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090640
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090687
https://github.com/hail-is/hail/pull/12477#issuecomment-1319090961:1,Integrability,depend,dependabot,1,@dependabot ignore this major version,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12477#issuecomment-1319090961
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:130,Availability,failure,failures,130,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:30,Testability,test,tests,30,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:215,Testability,test,test,215,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:281,Testability,assert,assert,281,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:305,Testability,test,test,305,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:371,Testability,assert,assert,371,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:395,Testability,test,test,395,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:461,Testability,assert,assert,461,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:484,Testability,test,test,484,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:550,Testability,assert,assert,550,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:573,Testability,test,test,573,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:639,Testability,assert,assert,639,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:663,Testability,test,test,663,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:729,Testability,assert,assert,729,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:753,Testability,test,test,753,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:819,Testability,assert,assert,819,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:842,Testability,test,test,842,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:908,Testability,assert,assert,908,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:931,Testability,test,test,931,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:997,Testability,assert,assert,997,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1021,Testability,test,test,1021,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1087,Testability,assert,assert,1087,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1111,Testability,test,test,1111,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1177,Testability,assert,assert,1177,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1200,Testability,test,test,1200,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1266,Testability,assert,assert,1266,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1289,Testability,test,test,1289,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1355,Testability,assert,assert,1355,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1379,Testability,test,test,1379,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1445,Testability,assert,assert,1445,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1469,Testability,test,test,1469,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1535,Testability,assert,assert,1535,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1558,Testability,test,test,1558,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867:1624,Testability,assert,assert,1624,"@tpoterba this actually fails tests, am I being overly optimistic about what extract intervals can achieve? The following are the failures and they're all about the number of partitions after a filter.; ```; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_mt_gt[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_lt[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_le[Locus] - assert 20 == 15; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_ge[Locus] - assert 20 == 6; FAILED test/hail/extract_intervals/test_full_key.py::test_ht_gt[Locus] - assert 20 == 6; ======================================================================================================================================= 16 failed, 34 passed in 19.17s =======================================================================================================================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1319322867
https://github.com/hail-is/hail/pull/12484#issuecomment-1320225527:45,Testability,test,tests,45,"OK, well, I'll remove the variant inequality tests for now, but I think we should figure out how to interval query a string-keyed table.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12484#issuecomment-1320225527
https://github.com/hail-is/hail/issues/12489#issuecomment-1335445679:254,Usability,simpl,simple,254,"Hail doesn't have this built in. I think your best bet would be to generate a dot file and then run [DOT](https://en.wikipedia.org/wiki/DOT_(graph_description_language)) on it. You could maybe use [pydot](https://github.com/pydot/pydot). It should be as simple as grabbing the samples from your MT and creating a bunch of nodes, then grabbing the edges from the pc relate table and generating edges.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12489#issuecomment-1335445679
https://github.com/hail-is/hail/pull/12492#issuecomment-1332686868:425,Availability,error,error,425,"Hmm, idempotency is a bit hard to talk about here. This change makes it impossible to not ""cleanup"" the chunks iterator if you hit an exception midway through the chunks iterator. In particular, this now works:; ```; try:; with chunks(...) as data:; raise ValueError(); except ValueError:; pass; with chunks(...) as data:; ... use data ...; ```. In the current code, that does not work. The second call to `chunks` raises an error unless chunks is empty. ---. But you're probably asking about the code that uses chunks? In the Google case it is idempotent: lines 206-215 construct a new request before iterating chunks. The PUT request includes the specific range of bytes we want to write to, so even if we partially succeeded with a previous PUT, this subsequent PUT should overwrite (or, more likely, error). In practice, I don't think we can partially succeed. I think either we write fully or we terminate the connection early and google drops the data. Summary: I think Google is fine. As for Azure, we use a randomly generated block_id. If we error while inside `stage_block` that block_id is never added to `self.block_ids`. As a result, we can safely make a second attempt to upload the block with a new id.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12492#issuecomment-1332686868
https://github.com/hail-is/hail/pull/12492#issuecomment-1332686868:804,Availability,error,error,804,"Hmm, idempotency is a bit hard to talk about here. This change makes it impossible to not ""cleanup"" the chunks iterator if you hit an exception midway through the chunks iterator. In particular, this now works:; ```; try:; with chunks(...) as data:; raise ValueError(); except ValueError:; pass; with chunks(...) as data:; ... use data ...; ```. In the current code, that does not work. The second call to `chunks` raises an error unless chunks is empty. ---. But you're probably asking about the code that uses chunks? In the Google case it is idempotent: lines 206-215 construct a new request before iterating chunks. The PUT request includes the specific range of bytes we want to write to, so even if we partially succeeded with a previous PUT, this subsequent PUT should overwrite (or, more likely, error). In practice, I don't think we can partially succeed. I think either we write fully or we terminate the connection early and google drops the data. Summary: I think Google is fine. As for Azure, we use a randomly generated block_id. If we error while inside `stage_block` that block_id is never added to `self.block_ids`. As a result, we can safely make a second attempt to upload the block with a new id.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12492#issuecomment-1332686868
https://github.com/hail-is/hail/pull/12492#issuecomment-1332686868:1050,Availability,error,error,1050,"Hmm, idempotency is a bit hard to talk about here. This change makes it impossible to not ""cleanup"" the chunks iterator if you hit an exception midway through the chunks iterator. In particular, this now works:; ```; try:; with chunks(...) as data:; raise ValueError(); except ValueError:; pass; with chunks(...) as data:; ... use data ...; ```. In the current code, that does not work. The second call to `chunks` raises an error unless chunks is empty. ---. But you're probably asking about the code that uses chunks? In the Google case it is idempotent: lines 206-215 construct a new request before iterating chunks. The PUT request includes the specific range of bytes we want to write to, so even if we partially succeeded with a previous PUT, this subsequent PUT should overwrite (or, more likely, error). In practice, I don't think we can partially succeed. I think either we write fully or we terminate the connection early and google drops the data. Summary: I think Google is fine. As for Azure, we use a randomly generated block_id. If we error while inside `stage_block` that block_id is never added to `self.block_ids`. As a result, we can safely make a second attempt to upload the block with a new id.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12492#issuecomment-1332686868
https://github.com/hail-is/hail/pull/12492#issuecomment-1332686868:1153,Safety,safe,safely,1153,"Hmm, idempotency is a bit hard to talk about here. This change makes it impossible to not ""cleanup"" the chunks iterator if you hit an exception midway through the chunks iterator. In particular, this now works:; ```; try:; with chunks(...) as data:; raise ValueError(); except ValueError:; pass; with chunks(...) as data:; ... use data ...; ```. In the current code, that does not work. The second call to `chunks` raises an error unless chunks is empty. ---. But you're probably asking about the code that uses chunks? In the Google case it is idempotent: lines 206-215 construct a new request before iterating chunks. The PUT request includes the specific range of bytes we want to write to, so even if we partially succeeded with a previous PUT, this subsequent PUT should overwrite (or, more likely, error). In practice, I don't think we can partially succeed. I think either we write fully or we terminate the connection early and google drops the data. Summary: I think Google is fine. As for Azure, we use a randomly generated block_id. If we error while inside `stage_block` that block_id is never added to `self.block_ids`. As a result, we can safely make a second attempt to upload the block with a new id.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12492#issuecomment-1332686868
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12500#issuecomment-1328002032
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12507#issuecomment-1329750997
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12508#issuecomment-1329750781
https://github.com/hail-is/hail/pull/12510#issuecomment-1329684853:27,Deployability,deploy,deploys,27,test_dataproc only runs on deploys AFAIK,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1329684853
https://github.com/hail-is/hail/pull/12510#issuecomment-1329692943:7,Deployability,release,release,7,"Like a release? I think the terminology is a little overloaded. In services code we consider ""deploy"" as the CI pipeline that runs whenever main is updated.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1329692943
https://github.com/hail-is/hail/pull/12510#issuecomment-1329692943:94,Deployability,deploy,deploy,94,"Like a release? I think the terminology is a little overloaded. In services code we consider ""deploy"" as the CI pipeline that runs whenever main is updated.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1329692943
https://github.com/hail-is/hail/pull/12510#issuecomment-1329692943:112,Deployability,pipeline,pipeline,112,"Like a release? I think the terminology is a little overloaded. In services code we consider ""deploy"" as the CI pipeline that runs whenever main is updated.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1329692943
https://github.com/hail-is/hail/pull/12510#issuecomment-1329692943:148,Deployability,update,updated,148,"Like a release? I think the terminology is a little overloaded. In services code we consider ""deploy"" as the CI pipeline that runs whenever main is updated.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1329692943
https://github.com/hail-is/hail/pull/12510#issuecomment-1329699051:48,Deployability,release,release,48,"Ah I see, all these steps cut out early for non-release deploys. So we wouldn't have released a broken package which is good, but we'd still end up with a broken deploy, which is annoying.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1329699051
https://github.com/hail-is/hail/pull/12510#issuecomment-1329699051:56,Deployability,deploy,deploys,56,"Ah I see, all these steps cut out early for non-release deploys. So we wouldn't have released a broken package which is good, but we'd still end up with a broken deploy, which is annoying.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1329699051
https://github.com/hail-is/hail/pull/12510#issuecomment-1329699051:85,Deployability,release,released,85,"Ah I see, all these steps cut out early for non-release deploys. So we wouldn't have released a broken package which is good, but we'd still end up with a broken deploy, which is annoying.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1329699051
https://github.com/hail-is/hail/pull/12510#issuecomment-1329699051:162,Deployability,deploy,deploy,162,"Ah I see, all these steps cut out early for non-release deploys. So we wouldn't have released a broken package which is good, but we'd still end up with a broken deploy, which is annoying.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1329699051
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:232,Deployability,deploy,deploy,232,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:272,Deployability,install,install-on-cluster,272,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:706,Deployability,install,install-on-cluster,706,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:822,Deployability,install,installing,822,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:855,Deployability,update,updated,855,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:1036,Deployability,update,updated,1036,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:130,Integrability,depend,dependency,130,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:346,Integrability,depend,dependency,346,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:1130,Integrability,depend,dependence,1130,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:524,Performance,perform,performed,524,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256:555,Testability,test,testing,555,"Because of the unpredictable way that git clone might realize the requirements files, I removed the pinned-requirements file as a dependency of the changed targets. In both cases, regenerating that file (either in CI as part of the deploy.yaml target or on a cluster for `install-on-cluster`) could cause a dataproc cluster running with untested dependency versions even if the requirements.txt files are unchanged. I do, however, require that the pinned-requirements files be compatible using the same check we do in CI. I performed the following manual testing:; 1. Creating a dataproc cluster through `hailctl dataproc start`; 2. ssh'ing into said cluster, cloning this branch and running `make -C hail install-on-cluster` to completion; 3. Updating the requirements.txt file to something incompatible and successfully installing on cluster again with updated pinned requirements. However, I'm not sure I'm actually doing this right. I checked that in step 2 I was *not* regenerating any pinned-requirments files, but in step 3 make updated the pinned requirements without me telling it to, I'm guessing because of the wheel's dependence on `PY_FILES` and I changed the source under hail/python. So I don't entirely understand why I have this desirable result.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1338482256
https://github.com/hail-is/hail/pull/12510#issuecomment-1344624461:90,Deployability,release,release,90,@danking Sorry for the delay on this. Trying to move this along faster now to unblock the release,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12510#issuecomment-1344624461
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12515#issuecomment-1332729793
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12516#issuecomment-1332696713
https://github.com/hail-is/hail/pull/12518#issuecomment-1334218563:113,Deployability,update,updated,113,"A newer version of protobuf exists, but since this PR has been edited by someone other than Dependabot I haven't updated it. You'll get a PR for the updated version as normal once this PR is merged.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12518#issuecomment-1334218563
https://github.com/hail-is/hail/pull/12518#issuecomment-1334218563:149,Deployability,update,updated,149,"A newer version of protobuf exists, but since this PR has been edited by someone other than Dependabot I haven't updated it. You'll get a PR for the updated version as normal once this PR is merged.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12518#issuecomment-1334218563
https://github.com/hail-is/hail/pull/12518#issuecomment-1334218563:92,Integrability,Depend,Dependabot,92,"A newer version of protobuf exists, but since this PR has been edited by someone other than Dependabot I haven't updated it. You'll get a PR for the updated version as normal once this PR is merged.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12518#issuecomment-1334218563
https://github.com/hail-is/hail/pull/12526#issuecomment-1338187502:321,Testability,log,login,321,"@lgruen to address your question directly, AFAIK, if you set `GOOGLE_APPLICATION_CREDENTIALS`, tools will use those credentials. That's at least the intended behavior of all Hail tools. I think `gcloud auth activate-service-account` is primarily used to tell gcloud & gsutil about a key. `gcloud auth application-default login` likewise seems to be useful for getting ADC credentials if one lacks them but not necessary for using credentials with tools that check the env var.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12526#issuecomment-1338187502
https://github.com/hail-is/hail/pull/12526#issuecomment-1352514979:65,Deployability,install,installs,65,"Oh yikes, looks like something in the LLVM dependencies requires/installs python3.8. I wonder whether that is necessary",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12526#issuecomment-1352514979
https://github.com/hail-is/hail/pull/12526#issuecomment-1352514979:43,Integrability,depend,dependencies,43,"Oh yikes, looks like something in the LLVM dependencies requires/installs python3.8. I wonder whether that is necessary",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12526#issuecomment-1352514979
https://github.com/hail-is/hail/pull/12526#issuecomment-1355202497:52,Deployability,update,update-alternatives,52,"Yeah. I think the main issue is that we need to run update-alternatives after we install a new version of Python. If query-build is just for native compiler stuff, then I'm fine with using 3.8 there. I'll see if I can get back to this PR later.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12526#issuecomment-1355202497
https://github.com/hail-is/hail/pull/12526#issuecomment-1355202497:81,Deployability,install,install,81,"Yeah. I think the main issue is that we need to run update-alternatives after we install a new version of Python. If query-build is just for native compiler stuff, then I'm fine with using 3.8 there. I'll see if I can get back to this PR later.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12526#issuecomment-1355202497
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12528#issuecomment-1419571103
https://github.com/hail-is/hail/pull/12530#issuecomment-1334441229:278,Availability,error,error,278,"Looks like it was opened and closed here #12381. I haven't taken a look at this yet, but there are two footguns that should be avoided as much as possible:. - A job waiting on a batch that it is a part of. We add the batch id into the container so we should be able to throw an error here; - Waiting on a batch in general is really wonky when there is more than 1 entity controlling it. I don't know of a good way to control this, so it might just be a ""be sure you know what you're doing thing"", but worth thinking about.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1334441229
https://github.com/hail-is/hail/pull/12530#issuecomment-1334441229:127,Safety,avoid,avoided,127,"Looks like it was opened and closed here #12381. I haven't taken a look at this yet, but there are two footguns that should be avoided as much as possible:. - A job waiting on a batch that it is a part of. We add the batch id into the container so we should be able to throw an error here; - Waiting on a batch in general is really wonky when there is more than 1 entity controlling it. I don't know of a good way to control this, so it might just be a ""be sure you know what you're doing thing"", but worth thinking about.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1334441229
https://github.com/hail-is/hail/pull/12530#issuecomment-1372626480:33,Safety,avoid,avoid,33,I changed some things to try and avoid rewriting Python functions if the job has already been submitted previously.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1372626480
https://github.com/hail-is/hail/pull/12530#issuecomment-1372795141:13,Availability,failure,failure,13,The one test failure was a transient blob Not Found on Azure.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1372795141
https://github.com/hail-is/hail/pull/12530#issuecomment-1372795141:8,Testability,test,test,8,The one test failure was a transient blob Not Found on Azure.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1372795141
https://github.com/hail-is/hail/pull/12530#issuecomment-1426386771:229,Performance,cache,cache,229,"I understand what is going on now. The issue is that the temp directory is getting removed after the first batch.run(), but we're assuming those input files are still there. I think we should just clear the files and definitions cache after submission.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1426386771
https://github.com/hail-is/hail/pull/12530#issuecomment-1426386771:197,Usability,clear,clear,197,"I understand what is going on now. The issue is that the temp directory is getting removed after the first batch.run(), but we're assuming those input files are still there. I think we should just clear the files and definitions cache after submission.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1426386771
https://github.com/hail-is/hail/pull/12530#issuecomment-1428760971:238,Performance,cache,cache,238,"> I understand what is going on now. The issue is that the temp directory is getting removed after the first batch.run(), but we're assuming those input files are still there.; > ; > I think we should just clear the files and definitions cache after submission. Ah I see, ya let's not go that far. In that case we don't need any of the changes in this PR that deal with the python input files right? Other than to clear those dictionaries after submit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1428760971
https://github.com/hail-is/hail/pull/12530#issuecomment-1428760971:206,Usability,clear,clear,206,"> I understand what is going on now. The issue is that the temp directory is getting removed after the first batch.run(), but we're assuming those input files are still there.; > ; > I think we should just clear the files and definitions cache after submission. Ah I see, ya let's not go that far. In that case we don't need any of the changes in this PR that deal with the python input files right? Other than to clear those dictionaries after submit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1428760971
https://github.com/hail-is/hail/pull/12530#issuecomment-1428760971:414,Usability,clear,clear,414,"> I understand what is going on now. The issue is that the temp directory is getting removed after the first batch.run(), but we're assuming those input files are still there.; > ; > I think we should just clear the files and definitions cache after submission. Ah I see, ya let's not go that far. In that case we don't need any of the changes in this PR that deal with the python input files right? Other than to clear those dictionaries after submit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1428760971
https://github.com/hail-is/hail/pull/12530#issuecomment-1443661758:27,Availability,error,error,27,The tests are passing. The error on Azure was cleaning up the base image timed out.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1443661758
https://github.com/hail-is/hail/pull/12530#issuecomment-1443661758:4,Testability,test,tests,4,The tests are passing. The error on Azure was cleaning up the base image timed out.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1443661758
https://github.com/hail-is/hail/issues/12533#issuecomment-1341807609:26,Availability,down,down,26,"I was able to narrow this down a bit further. The issue appears due to this statement: https://github.com/broadinstitute/gnomad-browser/blob/80430090645ce087aa54d67688a4f0920ad1c8fd/data-pipeline/src/data_pipeline/datasets/gnomad_v3/gnomad_v3_variants.py#L127-L143. `subsets` contains 8 elements: `{'non_cancer', 'tgp', 'controls_and_biobanks', 'non_neuro', None, 'non_topmed', 'hgdp', 'non_v2'}`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12533#issuecomment-1341807609
https://github.com/hail-is/hail/issues/12533#issuecomment-1341807609:187,Deployability,pipeline,pipeline,187,"I was able to narrow this down a bit further. The issue appears due to this statement: https://github.com/broadinstitute/gnomad-browser/blob/80430090645ce087aa54d67688a4f0920ad1c8fd/data-pipeline/src/data_pipeline/datasets/gnomad_v3/gnomad_v3_variants.py#L127-L143. `subsets` contains 8 elements: `{'non_cancer', 'tgp', 'controls_and_biobanks', 'non_neuro', None, 'non_topmed', 'hgdp', 'non_v2'}`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12533#issuecomment-1341807609
https://github.com/hail-is/hail/pull/12539#issuecomment-1349720433:78,Testability,stub,stub,78,"ugh, this PR is quite mislabeled. This was meant to be the secondary indexing stub -- the last commit here -- but was stacked on the keyed_intersection stuff (which has merged to main in another PR) and I didn't fix up the title. I'll rebase to make this clearer as an example for us to poke at indexing for seqr, and make the warning fix in another PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12539#issuecomment-1349720433
https://github.com/hail-is/hail/pull/12539#issuecomment-1349720433:255,Usability,clear,clearer,255,"ugh, this PR is quite mislabeled. This was meant to be the secondary indexing stub -- the last commit here -- but was stacked on the keyed_intersection stuff (which has merged to main in another PR) and I didn't fix up the title. I'll rebase to make this clearer as an example for us to poke at indexing for seqr, and make the warning fix in another PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12539#issuecomment-1349720433
https://github.com/hail-is/hail/issues/12540#issuecomment-1363220199:157,Modifiability,config,config,157,"@bw2, it looks like you're picking up the router_fs, which should only be used when you have the QoB backend enabled. What settings do you have for `hailctl config get query/backend` and `HAIL_QUERY_BACKEND`? You can prefer the Spark backend with: `hailctl config set query/backend spark` and `HAIL_QUERY_BACKEND=spark`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12540#issuecomment-1363220199
https://github.com/hail-is/hail/issues/12540#issuecomment-1363220199:257,Modifiability,config,config,257,"@bw2, it looks like you're picking up the router_fs, which should only be used when you have the QoB backend enabled. What settings do you have for `hailctl config get query/backend` and `HAIL_QUERY_BACKEND`? You can prefer the Spark backend with: `hailctl config set query/backend spark` and `HAIL_QUERY_BACKEND=spark`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12540#issuecomment-1363220199
https://github.com/hail-is/hail/issues/12540#issuecomment-1363231471:39,Modifiability,config,config,39,HAIL_QUERY_BACKEND is unset. $ hailctl config get query/backend; batch. I will set it to spark,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12540#issuecomment-1363231471
https://github.com/hail-is/hail/pull/12542#issuecomment-1342840441:36,Testability,test,test,36,"If you're okay with this, I need to test backwards compatibility with the older version of resource usage files.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12542#issuecomment-1342840441
https://github.com/hail-is/hail/pull/12542#issuecomment-1370274153:73,Availability,error,errors,73,This should be all set. I tested backwards compatibility and caught some errors that showed up in the worker logs with regards to iptables lock errors with simultaneous shell calls.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12542#issuecomment-1370274153
https://github.com/hail-is/hail/pull/12542#issuecomment-1370274153:144,Availability,error,errors,144,This should be all set. I tested backwards compatibility and caught some errors that showed up in the worker logs with regards to iptables lock errors with simultaneous shell calls.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12542#issuecomment-1370274153
https://github.com/hail-is/hail/pull/12542#issuecomment-1370274153:26,Testability,test,tested,26,This should be all set. I tested backwards compatibility and caught some errors that showed up in the worker logs with regards to iptables lock errors with simultaneous shell calls.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12542#issuecomment-1370274153
https://github.com/hail-is/hail/pull/12542#issuecomment-1370274153:109,Testability,log,logs,109,This should be all set. I tested backwards compatibility and caught some errors that showed up in the worker logs with regards to iptables lock errors with simultaneous shell calls.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12542#issuecomment-1370274153
https://github.com/hail-is/hail/pull/12542#issuecomment-1371296492:65,Integrability,depend,dependent,65,"We could use the library, but I thought (1) we were trying to be dependent on external libraries and (2) it's easier for me to see what's being run with the shell commands as it's easier to search for examples.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12542#issuecomment-1371296492
https://github.com/hail-is/hail/pull/12542#issuecomment-1371317794:334,Availability,reliab,reliability,334,"I don't really put this in the same category as other external libraries. It's just bindings to the C API that `iptables` itself uses. In general, I think we should prefer just directly calling C libraries instead of shelling out and parsing strings, but I doubt this will have a major impact on worker speed. I worry a bit about the reliability of parsing text, but `iptables` seems like the sort of core utility that would be machine-parsable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12542#issuecomment-1371317794
https://github.com/hail-is/hail/pull/12544#issuecomment-1349545278:24,Deployability,patch,patch,24,"@danking I'd apply this patch. Not sure why we install those dependencies in the auth dockerfile, they're already in the docker requirements:. ```diff; diff --git a/auth/Dockerfile b/auth/Dockerfile; index 0c2bfa4dad..a94928c697 100644; --- a/auth/Dockerfile; +++ b/auth/Dockerfile; @@ -1,9 +1,5 @@; FROM {{ service_base_image.image }}; ; -RUN hail-pip-install \; - google-auth-oauthlib==0.4.6 \; - google-auth==1.25.0; -; COPY auth/setup.py auth/MANIFEST.in /auth/; COPY auth/auth /auth/auth/; RUN hail-pip-install /auth && rm -rf /auth; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12544#issuecomment-1349545278
https://github.com/hail-is/hail/pull/12544#issuecomment-1349545278:47,Deployability,install,install,47,"@danking I'd apply this patch. Not sure why we install those dependencies in the auth dockerfile, they're already in the docker requirements:. ```diff; diff --git a/auth/Dockerfile b/auth/Dockerfile; index 0c2bfa4dad..a94928c697 100644; --- a/auth/Dockerfile; +++ b/auth/Dockerfile; @@ -1,9 +1,5 @@; FROM {{ service_base_image.image }}; ; -RUN hail-pip-install \; - google-auth-oauthlib==0.4.6 \; - google-auth==1.25.0; -; COPY auth/setup.py auth/MANIFEST.in /auth/; COPY auth/auth /auth/auth/; RUN hail-pip-install /auth && rm -rf /auth; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12544#issuecomment-1349545278
https://github.com/hail-is/hail/pull/12544#issuecomment-1349545278:353,Deployability,install,install,353,"@danking I'd apply this patch. Not sure why we install those dependencies in the auth dockerfile, they're already in the docker requirements:. ```diff; diff --git a/auth/Dockerfile b/auth/Dockerfile; index 0c2bfa4dad..a94928c697 100644; --- a/auth/Dockerfile; +++ b/auth/Dockerfile; @@ -1,9 +1,5 @@; FROM {{ service_base_image.image }}; ; -RUN hail-pip-install \; - google-auth-oauthlib==0.4.6 \; - google-auth==1.25.0; -; COPY auth/setup.py auth/MANIFEST.in /auth/; COPY auth/auth /auth/auth/; RUN hail-pip-install /auth && rm -rf /auth; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12544#issuecomment-1349545278
https://github.com/hail-is/hail/pull/12544#issuecomment-1349545278:508,Deployability,install,install,508,"@danking I'd apply this patch. Not sure why we install those dependencies in the auth dockerfile, they're already in the docker requirements:. ```diff; diff --git a/auth/Dockerfile b/auth/Dockerfile; index 0c2bfa4dad..a94928c697 100644; --- a/auth/Dockerfile; +++ b/auth/Dockerfile; @@ -1,9 +1,5 @@; FROM {{ service_base_image.image }}; ; -RUN hail-pip-install \; - google-auth-oauthlib==0.4.6 \; - google-auth==1.25.0; -; COPY auth/setup.py auth/MANIFEST.in /auth/; COPY auth/auth /auth/auth/; RUN hail-pip-install /auth && rm -rf /auth; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12544#issuecomment-1349545278
https://github.com/hail-is/hail/pull/12544#issuecomment-1349545278:61,Integrability,depend,dependencies,61,"@danking I'd apply this patch. Not sure why we install those dependencies in the auth dockerfile, they're already in the docker requirements:. ```diff; diff --git a/auth/Dockerfile b/auth/Dockerfile; index 0c2bfa4dad..a94928c697 100644; --- a/auth/Dockerfile; +++ b/auth/Dockerfile; @@ -1,9 +1,5 @@; FROM {{ service_base_image.image }}; ; -RUN hail-pip-install \; - google-auth-oauthlib==0.4.6 \; - google-auth==1.25.0; -; COPY auth/setup.py auth/MANIFEST.in /auth/; COPY auth/auth /auth/auth/; RUN hail-pip-install /auth && rm -rf /auth; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12544#issuecomment-1349545278
https://github.com/hail-is/hail/pull/12555#issuecomment-1397345833:100,Availability,failure,failures,100,I am so glad I added those requester pays tests. They changed the exception type for requester pays failures and that broke our try-catch. The requester pays situation in GCP is so harebrained.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12555#issuecomment-1397345833
https://github.com/hail-is/hail/pull/12555#issuecomment-1397345833:42,Testability,test,tests,42,I am so glad I added those requester pays tests. They changed the exception type for requester pays failures and that broke our try-catch. The requester pays situation in GCP is so harebrained.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12555#issuecomment-1397345833
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12563#issuecomment-1353743286
https://github.com/hail-is/hail/pull/12571#issuecomment-1397707655:0,Testability,test,tests,0,tests and lints resolved,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12571#issuecomment-1397707655
https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548:682,Availability,down,down,682,"There are a few small cosmetic changes in here that were a result of an updated pylint, but I put those in a separate commit to hopefully make that less confusing. There are a few follow-ups after this that I want to tackle; - simplifying the images for testing query (Dockerfile.hail-build, Dockerfile.hail-base, Dockerfile.hail-run). I think these are the only things that use `base_image` so we might be able to collapse a bunch of these; - updating to python 3.8 to avoid accidentally installing that in some of our images; - trying to produce eStargz images so that buildkit can lazily pull the base image when building new images. I hope that can bring some image build times down even further by not having to localize the installed pip dependencies when making changes to our python code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548
https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548:72,Deployability,update,updated,72,"There are a few small cosmetic changes in here that were a result of an updated pylint, but I put those in a separate commit to hopefully make that less confusing. There are a few follow-ups after this that I want to tackle; - simplifying the images for testing query (Dockerfile.hail-build, Dockerfile.hail-base, Dockerfile.hail-run). I think these are the only things that use `base_image` so we might be able to collapse a bunch of these; - updating to python 3.8 to avoid accidentally installing that in some of our images; - trying to produce eStargz images so that buildkit can lazily pull the base image when building new images. I hope that can bring some image build times down even further by not having to localize the installed pip dependencies when making changes to our python code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548
https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548:489,Deployability,install,installing,489,"There are a few small cosmetic changes in here that were a result of an updated pylint, but I put those in a separate commit to hopefully make that less confusing. There are a few follow-ups after this that I want to tackle; - simplifying the images for testing query (Dockerfile.hail-build, Dockerfile.hail-base, Dockerfile.hail-run). I think these are the only things that use `base_image` so we might be able to collapse a bunch of these; - updating to python 3.8 to avoid accidentally installing that in some of our images; - trying to produce eStargz images so that buildkit can lazily pull the base image when building new images. I hope that can bring some image build times down even further by not having to localize the installed pip dependencies when making changes to our python code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548
https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548:730,Deployability,install,installed,730,"There are a few small cosmetic changes in here that were a result of an updated pylint, but I put those in a separate commit to hopefully make that less confusing. There are a few follow-ups after this that I want to tackle; - simplifying the images for testing query (Dockerfile.hail-build, Dockerfile.hail-base, Dockerfile.hail-run). I think these are the only things that use `base_image` so we might be able to collapse a bunch of these; - updating to python 3.8 to avoid accidentally installing that in some of our images; - trying to produce eStargz images so that buildkit can lazily pull the base image when building new images. I hope that can bring some image build times down even further by not having to localize the installed pip dependencies when making changes to our python code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548
https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548:744,Integrability,depend,dependencies,744,"There are a few small cosmetic changes in here that were a result of an updated pylint, but I put those in a separate commit to hopefully make that less confusing. There are a few follow-ups after this that I want to tackle; - simplifying the images for testing query (Dockerfile.hail-build, Dockerfile.hail-base, Dockerfile.hail-run). I think these are the only things that use `base_image` so we might be able to collapse a bunch of these; - updating to python 3.8 to avoid accidentally installing that in some of our images; - trying to produce eStargz images so that buildkit can lazily pull the base image when building new images. I hope that can bring some image build times down even further by not having to localize the installed pip dependencies when making changes to our python code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548
https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548:470,Safety,avoid,avoid,470,"There are a few small cosmetic changes in here that were a result of an updated pylint, but I put those in a separate commit to hopefully make that less confusing. There are a few follow-ups after this that I want to tackle; - simplifying the images for testing query (Dockerfile.hail-build, Dockerfile.hail-base, Dockerfile.hail-run). I think these are the only things that use `base_image` so we might be able to collapse a bunch of these; - updating to python 3.8 to avoid accidentally installing that in some of our images; - trying to produce eStargz images so that buildkit can lazily pull the base image when building new images. I hope that can bring some image build times down even further by not having to localize the installed pip dependencies when making changes to our python code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548
https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548:254,Testability,test,testing,254,"There are a few small cosmetic changes in here that were a result of an updated pylint, but I put those in a separate commit to hopefully make that less confusing. There are a few follow-ups after this that I want to tackle; - simplifying the images for testing query (Dockerfile.hail-build, Dockerfile.hail-base, Dockerfile.hail-run). I think these are the only things that use `base_image` so we might be able to collapse a bunch of these; - updating to python 3.8 to avoid accidentally installing that in some of our images; - trying to produce eStargz images so that buildkit can lazily pull the base image when building new images. I hope that can bring some image build times down even further by not having to localize the installed pip dependencies when making changes to our python code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548
https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548:227,Usability,simpl,simplifying,227,"There are a few small cosmetic changes in here that were a result of an updated pylint, but I put those in a separate commit to hopefully make that less confusing. There are a few follow-ups after this that I want to tackle; - simplifying the images for testing query (Dockerfile.hail-build, Dockerfile.hail-base, Dockerfile.hail-run). I think these are the only things that use `base_image` so we might be able to collapse a bunch of these; - updating to python 3.8 to avoid accidentally installing that in some of our images; - trying to produce eStargz images so that buildkit can lazily pull the base image when building new images. I hope that can bring some image build times down even further by not having to localize the installed pip dependencies when making changes to our python code.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458470548
https://github.com/hail-is/hail/pull/12578#issuecomment-1458571966:231,Performance,cache,caches,231,"Just starting to explore this PR. I compared this in-progress CI run to 7126798 (from #12737). The time to service backend starting is ~7 minutes. In the other PR, its ~8 minutes. I suppose that's because this PR isn't hitting any caches, right?. Hmm, it also seems like the critical path to the service backend test is through `build_hail_jar_and_wheel_only`. I wonder if we double the cores, would the time halve? On my laptop a fresh build is like 3m. <img width=""1512"" alt=""Screen Shot 2023-03-07 at 10 27 05"" src=""https://user-images.githubusercontent.com/106194/223501120-ea93c58b-f47f-4e49-8405-8a53d97d76e7.png"">",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458571966
https://github.com/hail-is/hail/pull/12578#issuecomment-1458571966:312,Testability,test,test,312,"Just starting to explore this PR. I compared this in-progress CI run to 7126798 (from #12737). The time to service backend starting is ~7 minutes. In the other PR, its ~8 minutes. I suppose that's because this PR isn't hitting any caches, right?. Hmm, it also seems like the critical path to the service backend test is through `build_hail_jar_and_wheel_only`. I wonder if we double the cores, would the time halve? On my laptop a fresh build is like 3m. <img width=""1512"" alt=""Screen Shot 2023-03-07 at 10 27 05"" src=""https://user-images.githubusercontent.com/106194/223501120-ea93c58b-f47f-4e49-8405-8a53d97d76e7.png"">",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458571966
https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223:949,Deployability,install,installed,949,"> Just starting to explore this PR. I compared this in-progress CI run to 7126798 (from #12737). The time to service backend starting is ~7 minutes. In the other PR, its ~8 minutes. I suppose that's because this PR isn't hitting any caches, right?; > ; > Hmm, it also seems like the critical path to the service backend test is through `build_hail_jar_and_wheel_only`. I wonder if we double the cores, would the time halve? On my laptop a fresh build is like 3m.; > . Ya I really only focus here on docker image steps, not on the overall critical path. But I like the idea of adding more cores I'll try that. The docker images are hitting cache though since every PR caches from its own previous runs in addition to main. The reason some images still take ~1 minute is because they introduce a new layer (normally the hail_version has changed since the SHA has changed) and they spend most of the time localizing the layer that has the dependencies installed (why I want lazy pulling). A retry of this PR should build the images very quickly, though I haven't tried that recently.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223
https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223:936,Integrability,depend,dependencies,936,"> Just starting to explore this PR. I compared this in-progress CI run to 7126798 (from #12737). The time to service backend starting is ~7 minutes. In the other PR, its ~8 minutes. I suppose that's because this PR isn't hitting any caches, right?; > ; > Hmm, it also seems like the critical path to the service backend test is through `build_hail_jar_and_wheel_only`. I wonder if we double the cores, would the time halve? On my laptop a fresh build is like 3m.; > . Ya I really only focus here on docker image steps, not on the overall critical path. But I like the idea of adding more cores I'll try that. The docker images are hitting cache though since every PR caches from its own previous runs in addition to main. The reason some images still take ~1 minute is because they introduce a new layer (normally the hail_version has changed since the SHA has changed) and they spend most of the time localizing the layer that has the dependencies installed (why I want lazy pulling). A retry of this PR should build the images very quickly, though I haven't tried that recently.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223
https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223:233,Performance,cache,caches,233,"> Just starting to explore this PR. I compared this in-progress CI run to 7126798 (from #12737). The time to service backend starting is ~7 minutes. In the other PR, its ~8 minutes. I suppose that's because this PR isn't hitting any caches, right?; > ; > Hmm, it also seems like the critical path to the service backend test is through `build_hail_jar_and_wheel_only`. I wonder if we double the cores, would the time halve? On my laptop a fresh build is like 3m.; > . Ya I really only focus here on docker image steps, not on the overall critical path. But I like the idea of adding more cores I'll try that. The docker images are hitting cache though since every PR caches from its own previous runs in addition to main. The reason some images still take ~1 minute is because they introduce a new layer (normally the hail_version has changed since the SHA has changed) and they spend most of the time localizing the layer that has the dependencies installed (why I want lazy pulling). A retry of this PR should build the images very quickly, though I haven't tried that recently.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223
https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223:639,Performance,cache,cache,639,"> Just starting to explore this PR. I compared this in-progress CI run to 7126798 (from #12737). The time to service backend starting is ~7 minutes. In the other PR, its ~8 minutes. I suppose that's because this PR isn't hitting any caches, right?; > ; > Hmm, it also seems like the critical path to the service backend test is through `build_hail_jar_and_wheel_only`. I wonder if we double the cores, would the time halve? On my laptop a fresh build is like 3m.; > . Ya I really only focus here on docker image steps, not on the overall critical path. But I like the idea of adding more cores I'll try that. The docker images are hitting cache though since every PR caches from its own previous runs in addition to main. The reason some images still take ~1 minute is because they introduce a new layer (normally the hail_version has changed since the SHA has changed) and they spend most of the time localizing the layer that has the dependencies installed (why I want lazy pulling). A retry of this PR should build the images very quickly, though I haven't tried that recently.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223
https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223:667,Performance,cache,caches,667,"> Just starting to explore this PR. I compared this in-progress CI run to 7126798 (from #12737). The time to service backend starting is ~7 minutes. In the other PR, its ~8 minutes. I suppose that's because this PR isn't hitting any caches, right?; > ; > Hmm, it also seems like the critical path to the service backend test is through `build_hail_jar_and_wheel_only`. I wonder if we double the cores, would the time halve? On my laptop a fresh build is like 3m.; > . Ya I really only focus here on docker image steps, not on the overall critical path. But I like the idea of adding more cores I'll try that. The docker images are hitting cache though since every PR caches from its own previous runs in addition to main. The reason some images still take ~1 minute is because they introduce a new layer (normally the hail_version has changed since the SHA has changed) and they spend most of the time localizing the layer that has the dependencies installed (why I want lazy pulling). A retry of this PR should build the images very quickly, though I haven't tried that recently.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223
https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223:320,Testability,test,test,320,"> Just starting to explore this PR. I compared this in-progress CI run to 7126798 (from #12737). The time to service backend starting is ~7 minutes. In the other PR, its ~8 minutes. I suppose that's because this PR isn't hitting any caches, right?; > ; > Hmm, it also seems like the critical path to the service backend test is through `build_hail_jar_and_wheel_only`. I wonder if we double the cores, would the time halve? On my laptop a fresh build is like 3m.; > . Ya I really only focus here on docker image steps, not on the overall critical path. But I like the idea of adding more cores I'll try that. The docker images are hitting cache though since every PR caches from its own previous runs in addition to main. The reason some images still take ~1 minute is because they introduce a new layer (normally the hail_version has changed since the SHA has changed) and they spend most of the time localizing the layer that has the dependencies installed (why I want lazy pulling). A retry of this PR should build the images very quickly, though I haven't tried that recently.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1458611223
https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308:33,Availability,down,down,33,"Looking at the auth image, it is down from 2.76GB in main to 674MB. The hail-ubuntu image underneath it has stayed basically the same at about half the new auth image. Nearly all of the 674MB is split evenly between the layer that installs python in hail-ubuntu and the layer that installs the pip dependencies in the auth image. I've not yet inspected the hail-ubuntu layer, but for the pip dependencies the main offenders are:. ```; 77M	/usr/local/lib/python3.7/dist-packages/googleapiclient; 76M	/usr/local/lib/python3.7/dist-packages/botocore; 33M	/usr/local/lib/python3.7/dist-packages/_sass.abi3.so; 29M	/usr/local/lib/python3.7/dist-packages/kubernetes_asyncio; 20M	/usr/local/lib/python3.7/dist-packages/uvloop; 14M	/usr/local/lib/python3.7/dist-packages/pip; 14M	/usr/local/lib/python3.7/dist-packages/cryptography; 8.9M	/usr/local/lib/python3.7/dist-packages/google; 7.9M	/usr/local/lib/python3.7/dist-packages/pygments; 7.0M	/usr/local/lib/python3.7/dist-packages/azure; 5.0M	/usr/local/lib/python3.7/dist-packages/setuptools; 4.2M	/usr/local/lib/python3.7/dist-packages/aiohttp; 2.5M	/usr/local/lib/python3.7/dist-packages/googlecloudprofiler; 2.2M	/usr/local/lib/python3.7/dist-packages/yaml; 2.2M	/usr/local/lib/python3.7/dist-packages/hailtop; 2.0M	/usr/local/lib/python3.7/dist-packages/rich; 1.6M	/usr/local/lib/python3.7/dist-packages/pyasn1_modules; 1.5M	/usr/local/lib/python3.7/dist-packages/boto3; 1.4M	/usr/local/lib/python3.7/dist-packages/pkg_resources; 1.4M	/usr/local/lib/python3.7/dist-packages/oauthlib; 1.1M	/usr/local/lib/python3.7/dist-packages/pycparser; ```. Most of a gigabyte still feels annoyingly bloated but might just have to do for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308
https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308:231,Deployability,install,installs,231,"Looking at the auth image, it is down from 2.76GB in main to 674MB. The hail-ubuntu image underneath it has stayed basically the same at about half the new auth image. Nearly all of the 674MB is split evenly between the layer that installs python in hail-ubuntu and the layer that installs the pip dependencies in the auth image. I've not yet inspected the hail-ubuntu layer, but for the pip dependencies the main offenders are:. ```; 77M	/usr/local/lib/python3.7/dist-packages/googleapiclient; 76M	/usr/local/lib/python3.7/dist-packages/botocore; 33M	/usr/local/lib/python3.7/dist-packages/_sass.abi3.so; 29M	/usr/local/lib/python3.7/dist-packages/kubernetes_asyncio; 20M	/usr/local/lib/python3.7/dist-packages/uvloop; 14M	/usr/local/lib/python3.7/dist-packages/pip; 14M	/usr/local/lib/python3.7/dist-packages/cryptography; 8.9M	/usr/local/lib/python3.7/dist-packages/google; 7.9M	/usr/local/lib/python3.7/dist-packages/pygments; 7.0M	/usr/local/lib/python3.7/dist-packages/azure; 5.0M	/usr/local/lib/python3.7/dist-packages/setuptools; 4.2M	/usr/local/lib/python3.7/dist-packages/aiohttp; 2.5M	/usr/local/lib/python3.7/dist-packages/googlecloudprofiler; 2.2M	/usr/local/lib/python3.7/dist-packages/yaml; 2.2M	/usr/local/lib/python3.7/dist-packages/hailtop; 2.0M	/usr/local/lib/python3.7/dist-packages/rich; 1.6M	/usr/local/lib/python3.7/dist-packages/pyasn1_modules; 1.5M	/usr/local/lib/python3.7/dist-packages/boto3; 1.4M	/usr/local/lib/python3.7/dist-packages/pkg_resources; 1.4M	/usr/local/lib/python3.7/dist-packages/oauthlib; 1.1M	/usr/local/lib/python3.7/dist-packages/pycparser; ```. Most of a gigabyte still feels annoyingly bloated but might just have to do for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308
https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308:281,Deployability,install,installs,281,"Looking at the auth image, it is down from 2.76GB in main to 674MB. The hail-ubuntu image underneath it has stayed basically the same at about half the new auth image. Nearly all of the 674MB is split evenly between the layer that installs python in hail-ubuntu and the layer that installs the pip dependencies in the auth image. I've not yet inspected the hail-ubuntu layer, but for the pip dependencies the main offenders are:. ```; 77M	/usr/local/lib/python3.7/dist-packages/googleapiclient; 76M	/usr/local/lib/python3.7/dist-packages/botocore; 33M	/usr/local/lib/python3.7/dist-packages/_sass.abi3.so; 29M	/usr/local/lib/python3.7/dist-packages/kubernetes_asyncio; 20M	/usr/local/lib/python3.7/dist-packages/uvloop; 14M	/usr/local/lib/python3.7/dist-packages/pip; 14M	/usr/local/lib/python3.7/dist-packages/cryptography; 8.9M	/usr/local/lib/python3.7/dist-packages/google; 7.9M	/usr/local/lib/python3.7/dist-packages/pygments; 7.0M	/usr/local/lib/python3.7/dist-packages/azure; 5.0M	/usr/local/lib/python3.7/dist-packages/setuptools; 4.2M	/usr/local/lib/python3.7/dist-packages/aiohttp; 2.5M	/usr/local/lib/python3.7/dist-packages/googlecloudprofiler; 2.2M	/usr/local/lib/python3.7/dist-packages/yaml; 2.2M	/usr/local/lib/python3.7/dist-packages/hailtop; 2.0M	/usr/local/lib/python3.7/dist-packages/rich; 1.6M	/usr/local/lib/python3.7/dist-packages/pyasn1_modules; 1.5M	/usr/local/lib/python3.7/dist-packages/boto3; 1.4M	/usr/local/lib/python3.7/dist-packages/pkg_resources; 1.4M	/usr/local/lib/python3.7/dist-packages/oauthlib; 1.1M	/usr/local/lib/python3.7/dist-packages/pycparser; ```. Most of a gigabyte still feels annoyingly bloated but might just have to do for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308
https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308:298,Integrability,depend,dependencies,298,"Looking at the auth image, it is down from 2.76GB in main to 674MB. The hail-ubuntu image underneath it has stayed basically the same at about half the new auth image. Nearly all of the 674MB is split evenly between the layer that installs python in hail-ubuntu and the layer that installs the pip dependencies in the auth image. I've not yet inspected the hail-ubuntu layer, but for the pip dependencies the main offenders are:. ```; 77M	/usr/local/lib/python3.7/dist-packages/googleapiclient; 76M	/usr/local/lib/python3.7/dist-packages/botocore; 33M	/usr/local/lib/python3.7/dist-packages/_sass.abi3.so; 29M	/usr/local/lib/python3.7/dist-packages/kubernetes_asyncio; 20M	/usr/local/lib/python3.7/dist-packages/uvloop; 14M	/usr/local/lib/python3.7/dist-packages/pip; 14M	/usr/local/lib/python3.7/dist-packages/cryptography; 8.9M	/usr/local/lib/python3.7/dist-packages/google; 7.9M	/usr/local/lib/python3.7/dist-packages/pygments; 7.0M	/usr/local/lib/python3.7/dist-packages/azure; 5.0M	/usr/local/lib/python3.7/dist-packages/setuptools; 4.2M	/usr/local/lib/python3.7/dist-packages/aiohttp; 2.5M	/usr/local/lib/python3.7/dist-packages/googlecloudprofiler; 2.2M	/usr/local/lib/python3.7/dist-packages/yaml; 2.2M	/usr/local/lib/python3.7/dist-packages/hailtop; 2.0M	/usr/local/lib/python3.7/dist-packages/rich; 1.6M	/usr/local/lib/python3.7/dist-packages/pyasn1_modules; 1.5M	/usr/local/lib/python3.7/dist-packages/boto3; 1.4M	/usr/local/lib/python3.7/dist-packages/pkg_resources; 1.4M	/usr/local/lib/python3.7/dist-packages/oauthlib; 1.1M	/usr/local/lib/python3.7/dist-packages/pycparser; ```. Most of a gigabyte still feels annoyingly bloated but might just have to do for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308
https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308:392,Integrability,depend,dependencies,392,"Looking at the auth image, it is down from 2.76GB in main to 674MB. The hail-ubuntu image underneath it has stayed basically the same at about half the new auth image. Nearly all of the 674MB is split evenly between the layer that installs python in hail-ubuntu and the layer that installs the pip dependencies in the auth image. I've not yet inspected the hail-ubuntu layer, but for the pip dependencies the main offenders are:. ```; 77M	/usr/local/lib/python3.7/dist-packages/googleapiclient; 76M	/usr/local/lib/python3.7/dist-packages/botocore; 33M	/usr/local/lib/python3.7/dist-packages/_sass.abi3.so; 29M	/usr/local/lib/python3.7/dist-packages/kubernetes_asyncio; 20M	/usr/local/lib/python3.7/dist-packages/uvloop; 14M	/usr/local/lib/python3.7/dist-packages/pip; 14M	/usr/local/lib/python3.7/dist-packages/cryptography; 8.9M	/usr/local/lib/python3.7/dist-packages/google; 7.9M	/usr/local/lib/python3.7/dist-packages/pygments; 7.0M	/usr/local/lib/python3.7/dist-packages/azure; 5.0M	/usr/local/lib/python3.7/dist-packages/setuptools; 4.2M	/usr/local/lib/python3.7/dist-packages/aiohttp; 2.5M	/usr/local/lib/python3.7/dist-packages/googlecloudprofiler; 2.2M	/usr/local/lib/python3.7/dist-packages/yaml; 2.2M	/usr/local/lib/python3.7/dist-packages/hailtop; 2.0M	/usr/local/lib/python3.7/dist-packages/rich; 1.6M	/usr/local/lib/python3.7/dist-packages/pyasn1_modules; 1.5M	/usr/local/lib/python3.7/dist-packages/boto3; 1.4M	/usr/local/lib/python3.7/dist-packages/pkg_resources; 1.4M	/usr/local/lib/python3.7/dist-packages/oauthlib; 1.1M	/usr/local/lib/python3.7/dist-packages/pycparser; ```. Most of a gigabyte still feels annoyingly bloated but might just have to do for now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12578#issuecomment-1459376308
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:2,Deployability,install,installed,2,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:39,Testability,test,test,39,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:138,Testability,test,test,138,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:212,Testability,test,test,212,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:243,Testability,Test,Tests,243,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:298,Testability,test,test,298,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:329,Testability,Test,Tests,329,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:378,Testability,test,test,378,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:409,Testability,Test,Tests,409,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:449,Testability,test,test,449,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:480,Testability,Test,Tests,480,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:518,Testability,test,test,518,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:572,Testability,test,test,572,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:634,Testability,test,test,634,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:698,Testability,test,test,698,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:761,Testability,test,test,761,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811:842,Testability,test,test,842,"I installed pandas 1.5.2 and ran every test with the word pandas in the name:; ```; =============================================== short test summary info ===============================================; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_mismatched_object_rows; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_objects; PASSED test/hail/table/test_table.py::Tests::test_from_pandas_works; PASSED test/hail/table/test_table.py::test_to_pandas; PASSED test/hail/table/test_table.py::test_to_pandas_flatten; PASSED test/hail/table/test_table.py::test_to_pandas_null_ints; PASSED test/hail/table/test_table.py::test_to_pandas_nd_array; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int64; PASSED test/hail/table/test_table.py::test_literal_of_pandas_NA_and_numpy_int32; ======================================== 10 passed, 1357 deselected in 40.40s =========================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12580#issuecomment-1396345811
https://github.com/hail-is/hail/pull/12587#issuecomment-1407126299:243,Integrability,depend,depend,243,"> How do I use a single non-optional allowedOverlap to express this versus a TMP function that doesn't care about keying/sorting at all?. Ah, I see. I think the answer is: you can't. You would need another integer parameter to say ""I actually depend on this prefix of the key being sorted"". It seems like allowedOverlap and requiredSortedPrefix are completely independent. In the single key case (for simplicity), you may or may not care if keys are localized in one partition, and you may or may not care if they're sorted. I don't see any connection.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12587#issuecomment-1407126299
https://github.com/hail-is/hail/pull/12587#issuecomment-1407126299:401,Usability,simpl,simplicity,401,"> How do I use a single non-optional allowedOverlap to express this versus a TMP function that doesn't care about keying/sorting at all?. Ah, I see. I think the answer is: you can't. You would need another integer parameter to say ""I actually depend on this prefix of the key being sorted"". It seems like allowedOverlap and requiredSortedPrefix are completely independent. In the single key case (for simplicity), you may or may not care if keys are localized in one partition, and you may or may not care if they're sorted. I don't see any connection.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12587#issuecomment-1407126299
https://github.com/hail-is/hail/pull/12588#issuecomment-1396401327:86,Testability,test,test,86,This was introduced last month https://github.com/hail-is/hail/blame/main/hail/python/test/hail/methods/test_statgen.py#L15-L17 . The tests all appear to still pass.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1396401327
https://github.com/hail-is/hail/pull/12588#issuecomment-1396401327:134,Testability,test,tests,134,This was introduced last month https://github.com/hail-is/hail/blame/main/hail/python/test/hail/methods/test_statgen.py#L15-L17 . The tests all appear to still pass.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1396401327
https://github.com/hail-is/hail/pull/12588#issuecomment-1397329460:70,Deployability,update,update,70,"@patrick-schultz do we expect that after the randomness PR we need to update random tests (in this case, balding Nichols) because the sequence of generated numbers has changed?. (Context: it appears the randomness PR accidentally disabled the test_statgen.py tests which included a balding Nichols test)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397329460
https://github.com/hail-is/hail/pull/12588#issuecomment-1397329460:84,Testability,test,tests,84,"@patrick-schultz do we expect that after the randomness PR we need to update random tests (in this case, balding Nichols) because the sequence of generated numbers has changed?. (Context: it appears the randomness PR accidentally disabled the test_statgen.py tests which included a balding Nichols test)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397329460
https://github.com/hail-is/hail/pull/12588#issuecomment-1397329460:259,Testability,test,tests,259,"@patrick-schultz do we expect that after the randomness PR we need to update random tests (in this case, balding Nichols) because the sequence of generated numbers has changed?. (Context: it appears the randomness PR accidentally disabled the test_statgen.py tests which included a balding Nichols test)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397329460
https://github.com/hail-is/hail/pull/12588#issuecomment-1397329460:298,Testability,test,test,298,"@patrick-schultz do we expect that after the randomness PR we need to update random tests (in this case, balding Nichols) because the sequence of generated numbers has changed?. (Context: it appears the randomness PR accidentally disabled the test_statgen.py tests which included a balding Nichols test)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397329460
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:4663,Deployability,update,updated,4663," Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E Call(alleles=[0, 0], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 1], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E ]. test/hail/methods/test_statgen.py:1642: AssertionError; ------------------------------ Captured log call -------------------------------; WARNING backend.service_backend:java.py:186 To ensure reproducible randomness across Hail sessions, you must set the ""global_seed"" parameter in hl.init(), in addition to the local seed in each random function.; INFO backend.service_backend:java.py:190 balding_nichols_model: generating genotypes for 1 populations, 5 samples, and 5 variants...; INFO batch_client.aioclient:aioclient.py:741 created batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:4727,Deployability,update,updated,4727," Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E Call(alleles=[0, 0], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 1], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E ]. test/hail/methods/test_statgen.py:1642: AssertionError; ------------------------------ Captured log call -------------------------------; WARNING backend.service_backend:java.py:186 To ensure reproducible randomness across Hail sessions, you must set the ""global_seed"" parameter in hl.init(), in addition to the local seed in each random function.; INFO backend.service_backend:java.py:190 balding_nichols_model: generating genotypes for 1 populations, 5 samples, and 5 variants...; INFO batch_client.aioclient:aioclient.py:741 created batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:4791,Deployability,update,updated,4791," Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E Call(alleles=[0, 0], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 1], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E ]. test/hail/methods/test_statgen.py:1642: AssertionError; ------------------------------ Captured log call -------------------------------; WARNING backend.service_backend:java.py:186 To ensure reproducible randomness across Hail sessions, you must set the ""global_seed"" parameter in hl.init(), in addition to the local seed in each random function.; INFO backend.service_backend:java.py:190 balding_nichols_model: generating genotypes for 1 populations, 5 samples, and 5 variants...; INFO batch_client.aioclient:aioclient.py:741 created batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:4,Testability,test,test,4,"the test:; ```; ___________________ Tests.test_balding_nichols_model_phased ____________________; [gw1] linux -- Python 3.7.15 /usr/bin/python3. self = <test.hail.methods.test_statgen.Tests testMethod=test_balding_nichols_model_phased>. def test_balding_nichols_model_phased(self):; bn_ds = hl.balding_nichols_model(1, 5, 5, phased=True); assert bn_ds.aggregate_entries(hl.agg.all(bn_ds.GT.phased)) == True; actual = bn_ds.GT.collect(); expected = [; hl.Call(a, phased=True); for a in [; [0, 1], [0, 0], [0, 1], [0, 0], [1, 0],; [1, 1], [0, 1], [1, 1], [0, 0], [0, 1],; [1, 0], [0, 0], [1, 0], [0, 0], [0, 0],; [1, 1], [1, 1], [1, 0], [0, 1], [1, 1],; [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]]]; > assert actual == expected; E assert [Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True)] == [Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 0], phased=True), Call",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:36,Testability,Test,Tests,36,"the test:; ```; ___________________ Tests.test_balding_nichols_model_phased ____________________; [gw1] linux -- Python 3.7.15 /usr/bin/python3. self = <test.hail.methods.test_statgen.Tests testMethod=test_balding_nichols_model_phased>. def test_balding_nichols_model_phased(self):; bn_ds = hl.balding_nichols_model(1, 5, 5, phased=True); assert bn_ds.aggregate_entries(hl.agg.all(bn_ds.GT.phased)) == True; actual = bn_ds.GT.collect(); expected = [; hl.Call(a, phased=True); for a in [; [0, 1], [0, 0], [0, 1], [0, 0], [1, 0],; [1, 1], [0, 1], [1, 1], [0, 0], [0, 1],; [1, 0], [0, 0], [1, 0], [0, 0], [0, 0],; [1, 1], [1, 1], [1, 0], [0, 1], [1, 1],; [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]]]; > assert actual == expected; E assert [Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True)] == [Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 0], phased=True), Call",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:153,Testability,test,test,153,"the test:; ```; ___________________ Tests.test_balding_nichols_model_phased ____________________; [gw1] linux -- Python 3.7.15 /usr/bin/python3. self = <test.hail.methods.test_statgen.Tests testMethod=test_balding_nichols_model_phased>. def test_balding_nichols_model_phased(self):; bn_ds = hl.balding_nichols_model(1, 5, 5, phased=True); assert bn_ds.aggregate_entries(hl.agg.all(bn_ds.GT.phased)) == True; actual = bn_ds.GT.collect(); expected = [; hl.Call(a, phased=True); for a in [; [0, 1], [0, 0], [0, 1], [0, 0], [1, 0],; [1, 1], [0, 1], [1, 1], [0, 0], [0, 1],; [1, 0], [0, 0], [1, 0], [0, 0], [0, 0],; [1, 1], [1, 1], [1, 0], [0, 1], [1, 1],; [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]]]; > assert actual == expected; E assert [Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True)] == [Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 0], phased=True), Call",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:184,Testability,Test,Tests,184,"the test:; ```; ___________________ Tests.test_balding_nichols_model_phased ____________________; [gw1] linux -- Python 3.7.15 /usr/bin/python3. self = <test.hail.methods.test_statgen.Tests testMethod=test_balding_nichols_model_phased>. def test_balding_nichols_model_phased(self):; bn_ds = hl.balding_nichols_model(1, 5, 5, phased=True); assert bn_ds.aggregate_entries(hl.agg.all(bn_ds.GT.phased)) == True; actual = bn_ds.GT.collect(); expected = [; hl.Call(a, phased=True); for a in [; [0, 1], [0, 0], [0, 1], [0, 0], [1, 0],; [1, 1], [0, 1], [1, 1], [0, 0], [0, 1],; [1, 0], [0, 0], [1, 0], [0, 0], [0, 0],; [1, 1], [1, 1], [1, 0], [0, 1], [1, 1],; [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]]]; > assert actual == expected; E assert [Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True)] == [Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 0], phased=True), Call",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:190,Testability,test,testMethod,190,"the test:; ```; ___________________ Tests.test_balding_nichols_model_phased ____________________; [gw1] linux -- Python 3.7.15 /usr/bin/python3. self = <test.hail.methods.test_statgen.Tests testMethod=test_balding_nichols_model_phased>. def test_balding_nichols_model_phased(self):; bn_ds = hl.balding_nichols_model(1, 5, 5, phased=True); assert bn_ds.aggregate_entries(hl.agg.all(bn_ds.GT.phased)) == True; actual = bn_ds.GT.collect(); expected = [; hl.Call(a, phased=True); for a in [; [0, 1], [0, 0], [0, 1], [0, 0], [1, 0],; [1, 1], [0, 1], [1, 1], [0, 0], [0, 1],; [1, 0], [0, 0], [1, 0], [0, 0], [0, 0],; [1, 1], [1, 1], [1, 0], [0, 1], [1, 1],; [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]]]; > assert actual == expected; E assert [Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True)] == [Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 0], phased=True), Call",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:339,Testability,assert,assert,339,"the test:; ```; ___________________ Tests.test_balding_nichols_model_phased ____________________; [gw1] linux -- Python 3.7.15 /usr/bin/python3. self = <test.hail.methods.test_statgen.Tests testMethod=test_balding_nichols_model_phased>. def test_balding_nichols_model_phased(self):; bn_ds = hl.balding_nichols_model(1, 5, 5, phased=True); assert bn_ds.aggregate_entries(hl.agg.all(bn_ds.GT.phased)) == True; actual = bn_ds.GT.collect(); expected = [; hl.Call(a, phased=True); for a in [; [0, 1], [0, 0], [0, 1], [0, 0], [1, 0],; [1, 1], [0, 1], [1, 1], [0, 0], [0, 1],; [1, 0], [0, 0], [1, 0], [0, 0], [0, 0],; [1, 1], [1, 1], [1, 0], [0, 1], [1, 1],; [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]]]; > assert actual == expected; E assert [Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True)] == [Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 0], phased=True), Call",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:696,Testability,assert,assert,696,"Call(a, phased=True); for a in [; [0, 1], [0, 0], [0, 1], [0, 0], [1, 0],; [1, 1], [0, 1], [1, 1], [0, 0], [0, 1],; [1, 0], [0, 0], [1, 0], [0, 0], [0, 0],; [1, 1], [1, 1], [1, 0], [0, 1], [1, 1],; [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]]]; > assert actual == expected; E assert [Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True)] == [Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 0], phased=True), Call",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:725,Testability,assert,assert,725,"Call(a, phased=True); for a in [; [0, 1], [0, 0], [0, 1], [0, 0], [1, 0],; [1, 1], [0, 1], [1, 1], [0, 0], [0, 1],; [1, 0], [0, 0], [1, 0], [0, 0], [0, 0],; [1, 1], [1, 1], [1, 0], [0, 1], [1, 1],; [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]]]; > assert actual == expected; E assert [Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True)] == [Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 0], phased=True), Call",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:4071,Testability,test,test,4071," Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E Call(alleles=[0, 0], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 1], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E ]. test/hail/methods/test_statgen.py:1642: AssertionError; ------------------------------ Captured log call -------------------------------; WARNING backend.service_backend:java.py:186 To ensure reproducible randomness across Hail sessions, you must set the ""global_seed"" parameter in hl.init(), in addition to the local seed in each random function.; INFO backend.service_backend:java.py:190 balding_nichols_model: generating genotypes for 1 populations, 5 samples, and 5 variants...; INFO batch_client.aioclient:aioclient.py:741 created batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:4111,Testability,Assert,AssertionError,4111," Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E Call(alleles=[0, 0], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 1], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E ]. test/hail/methods/test_statgen.py:1642: AssertionError; ------------------------------ Captured log call -------------------------------; WARNING backend.service_backend:java.py:186 To ensure reproducible randomness across Hail sessions, you must set the ""global_seed"" parameter in hl.init(), in addition to the local seed in each random function.; INFO backend.service_backend:java.py:190 balding_nichols_model: generating genotypes for 1 populations, 5 samples, and 5 variants...; INFO batch_client.aioclient:aioclient.py:741 created batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:4167,Testability,log,log,4167," Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E + Call(alleles=[0, 0], phased=True),; E Call(alleles=[0, 0], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 1], phased=True),; E - Call(alleles=[1, 1], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[0, 0], phased=True),; E - Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 0], phased=True),; E Call(alleles=[0, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E + Call(alleles=[1, 1], phased=True),; E ]. test/hail/methods/test_statgen.py:1642: AssertionError; ------------------------------ Captured log call -------------------------------; WARNING backend.service_backend:java.py:186 To ensure reproducible randomness across Hail sessions, you must set the ""global_seed"" parameter in hl.init(), in addition to the local seed in each random function.; INFO backend.service_backend:java.py:190 balding_nichols_model: generating genotypes for 1 populations, 5 samples, and 5 variants...; INFO batch_client.aioclient:aioclient.py:741 created batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859; INFO batch_client.aioclient:aioclient.py:758 updated batch 859. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495
https://github.com/hail-is/hail/pull/12588#issuecomment-1397385080:6,Deployability,update,update,6,"I did update all the random tests in the randomness PR, if I disabled any it was definitely unintentional.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397385080
https://github.com/hail-is/hail/pull/12588#issuecomment-1397385080:28,Testability,test,tests,28,"I did update all the random tests in the randomness PR, if I disabled any it was definitely unintentional.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397385080
https://github.com/hail-is/hail/pull/12588#issuecomment-1397387396:45,Testability,test,test,45,I remember having to fix the balding_nichols test multiple times. It's possible there's some issue with it I didn't properly diagnose.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397387396
https://github.com/hail-is/hail/pull/12588#issuecomment-1397413095:13,Testability,test,tests,13,The seed for tests is set in a pytest fixture [here](https://github.com/hail-is/hail/blob/567acfd7e2b42e5074ea46a24df75ce168b3de16/hail/python/test/hail/conftest.py#L39). Is there some reason that would work differently in the service backend tests?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397413095
https://github.com/hail-is/hail/pull/12588#issuecomment-1397413095:143,Testability,test,test,143,The seed for tests is set in a pytest fixture [here](https://github.com/hail-is/hail/blob/567acfd7e2b42e5074ea46a24df75ce168b3de16/hail/python/test/hail/conftest.py#L39). Is there some reason that would work differently in the service backend tests?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397413095
https://github.com/hail-is/hail/pull/12588#issuecomment-1397413095:243,Testability,test,tests,243,The seed for tests is set in a pytest fixture [here](https://github.com/hail-is/hail/blob/567acfd7e2b42e5074ea46a24df75ce168b3de16/hail/python/test/hail/conftest.py#L39). Is there some reason that would work differently in the service backend tests?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397413095
https://github.com/hail-is/hail/pull/12588#issuecomment-1397706166:63,Deployability,configurat,configurations,63,"wtf. It passes in azure, passes on my laptop under a number of configurations. passes in google on everything but QoB. What's going on",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397706166
https://github.com/hail-is/hail/pull/12588#issuecomment-1397706166:63,Modifiability,config,configurations,63,"wtf. It passes in azure, passes on my laptop under a number of configurations. passes in google on everything but QoB. What's going on",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397706166
https://github.com/hail-is/hail/pull/12588#issuecomment-1407889708:29,Testability,test,test,29,I marked the balding Nichols test as failing for now because its far more important that we actually run the statgen tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1407889708
https://github.com/hail-is/hail/pull/12588#issuecomment-1407889708:117,Testability,test,tests,117,I marked the balding Nichols test as failing for now because its far more important that we actually run the statgen tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1407889708
https://github.com/hail-is/hail/pull/12593#issuecomment-1381008906:65,Deployability,pipeline,pipeline,65,Can see an example of this running (with the import / export VCF pipeline) [here](https://batch.azure.hail.is/batches/3423869),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12593#issuecomment-1381008906
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12598#issuecomment-1385529323
https://github.com/hail-is/hail/issues/12608#issuecomment-1452594239:36,Performance,latency,latency,36,Hi @barneyhill ! Sorry for the high latency. We don't do a great job of watching GitHub issues. In the future a post on https://discuss.hail.is will get a faster response. This sounds like a versioning issue. What is your environment? What version of Spark do you have?. This appears to be a fairly common issue that might be caused by class path issues or native library loading issues:; 1. https://github.com/luben/zstd-jni/issues/139; 2. https://github.com/luben/zstd-jni/issues/190; 3. https://github.com/luben/zstd-jni/issues/60,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12608#issuecomment-1452594239
https://github.com/hail-is/hail/issues/12608#issuecomment-1452594239:372,Performance,load,loading,372,Hi @barneyhill ! Sorry for the high latency. We don't do a great job of watching GitHub issues. In the future a post on https://discuss.hail.is will get a faster response. This sounds like a versioning issue. What is your environment? What version of Spark do you have?. This appears to be a fairly common issue that might be caused by class path issues or native library loading issues:; 1. https://github.com/luben/zstd-jni/issues/139; 2. https://github.com/luben/zstd-jni/issues/190; 3. https://github.com/luben/zstd-jni/issues/60,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12608#issuecomment-1452594239
https://github.com/hail-is/hail/pull/12610#issuecomment-1479559147:20,Deployability,update,update,20,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1479559147
https://github.com/hail-is/hail/pull/12610#issuecomment-1479559147:133,Deployability,update,update,133,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1479559147
https://github.com/hail-is/hail/pull/12610#issuecomment-1479559147:0,Integrability,Depend,Dependabot,0,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1479559147
https://github.com/hail-is/hail/pull/12610#issuecomment-1479559147:156,Integrability,depend,dependabot,156,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1479559147
https://github.com/hail-is/hail/pull/12610#issuecomment-1481494043:20,Deployability,update,update,20,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1481494043
https://github.com/hail-is/hail/pull/12610#issuecomment-1481494043:133,Deployability,update,update,133,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1481494043
https://github.com/hail-is/hail/pull/12610#issuecomment-1481494043:0,Integrability,Depend,Dependabot,0,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1481494043
https://github.com/hail-is/hail/pull/12610#issuecomment-1481494043:156,Integrability,depend,dependabot,156,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1481494043
https://github.com/hail-is/hail/pull/12610#issuecomment-1498239669:20,Deployability,update,update,20,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1498239669
https://github.com/hail-is/hail/pull/12610#issuecomment-1498239669:133,Deployability,update,update,133,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1498239669
https://github.com/hail-is/hail/pull/12610#issuecomment-1498239669:0,Integrability,Depend,Dependabot,0,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1498239669
https://github.com/hail-is/hail/pull/12610#issuecomment-1498239669:156,Integrability,depend,dependabot,156,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1498239669
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12610#issuecomment-1515292703
https://github.com/hail-is/hail/pull/12612#issuecomment-1400479921:78,Integrability,message,message,78,@lgruen This breaks the `test_hailctl_batch` test. You need to make sure this message doesn't get printed when running `hailctl batch submit` with the `-o json` option.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12612#issuecomment-1400479921
https://github.com/hail-is/hail/pull/12612#issuecomment-1400479921:45,Testability,test,test,45,@lgruen This breaks the `test_hailctl_batch` test. You need to make sure this message doesn't get printed when running `hailctl batch submit` with the `-o json` option.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12612#issuecomment-1400479921
https://github.com/hail-is/hail/issues/12614#issuecomment-1402163573:89,Testability,log,logs,89,Thanks @lgruen for pointing this out! Looks like we erroneously assume we can decode job logs as utf-8 strings on the worker and [invalid utf-8 strings such as '\\x80'](https://stackoverflow.com/questions/59624160/how-many-bytes-does-the-python-string-x80-in-utf8-occupy) cause writing the log or fetching it from the worker to fail. I made a branch with a couple small changes to be more careful about utf-8 decoding and was able to successfully see the log from the example you gave here. Now just need to make a backwards-compatible change to how we ship job logs around. Fix should be out soon!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12614#issuecomment-1402163573
https://github.com/hail-is/hail/issues/12614#issuecomment-1402163573:290,Testability,log,log,290,Thanks @lgruen for pointing this out! Looks like we erroneously assume we can decode job logs as utf-8 strings on the worker and [invalid utf-8 strings such as '\\x80'](https://stackoverflow.com/questions/59624160/how-many-bytes-does-the-python-string-x80-in-utf8-occupy) cause writing the log or fetching it from the worker to fail. I made a branch with a couple small changes to be more careful about utf-8 decoding and was able to successfully see the log from the example you gave here. Now just need to make a backwards-compatible change to how we ship job logs around. Fix should be out soon!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12614#issuecomment-1402163573
https://github.com/hail-is/hail/issues/12614#issuecomment-1402163573:455,Testability,log,log,455,Thanks @lgruen for pointing this out! Looks like we erroneously assume we can decode job logs as utf-8 strings on the worker and [invalid utf-8 strings such as '\\x80'](https://stackoverflow.com/questions/59624160/how-many-bytes-does-the-python-string-x80-in-utf8-occupy) cause writing the log or fetching it from the worker to fail. I made a branch with a couple small changes to be more careful about utf-8 decoding and was able to successfully see the log from the example you gave here. Now just need to make a backwards-compatible change to how we ship job logs around. Fix should be out soon!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12614#issuecomment-1402163573
https://github.com/hail-is/hail/issues/12614#issuecomment-1402163573:562,Testability,log,logs,562,Thanks @lgruen for pointing this out! Looks like we erroneously assume we can decode job logs as utf-8 strings on the worker and [invalid utf-8 strings such as '\\x80'](https://stackoverflow.com/questions/59624160/how-many-bytes-does-the-python-string-x80-in-utf8-occupy) cause writing the log or fetching it from the worker to fail. I made a branch with a couple small changes to be more careful about utf-8 decoding and was able to successfully see the log from the example you gave here. Now just need to make a backwards-compatible change to how we ship job logs around. Fix should be out soon!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12614#issuecomment-1402163573
https://github.com/hail-is/hail/pull/12622#issuecomment-1405267179:15,Testability,log,log,15,Let's keep the log statements as it's helpful for debugging order of events and context from the logs.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12622#issuecomment-1405267179
https://github.com/hail-is/hail/pull/12622#issuecomment-1405267179:97,Testability,log,logs,97,Let's keep the log statements as it's helpful for debugging order of events and context from the logs.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12622#issuecomment-1405267179
https://github.com/hail-is/hail/pull/12629#issuecomment-1409418048:45,Availability,checkpoint,checkpoints,45,"@patrick-schultz Are you okay with where the checkpoints are? If yes, then I'll do one last set of benchmarks and then this is ready to go!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12629#issuecomment-1409418048
https://github.com/hail-is/hail/pull/12629#issuecomment-1409418048:99,Testability,benchmark,benchmarks,99,"@patrick-schultz Are you okay with where the checkpoints are? If yes, then I'll do one last set of benchmarks and then this is ready to go!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12629#issuecomment-1409418048
https://github.com/hail-is/hail/issues/12630#issuecomment-1409342941:131,Performance,response time,response time,131,"Hi @esebesty, can you ask this question on discuss.hail.is? We try to consolidate bug reports there and you will get a much faster response time.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12630#issuecomment-1409342941
https://github.com/hail-is/hail/pull/12637#issuecomment-1411233669:56,Usability,clear,clearly,56,Comments addressed. Still gotta work on the verbiage to clearly explain the present of P_0.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12637#issuecomment-1411233669
https://github.com/hail-is/hail/pull/12637#issuecomment-1412855103:38,Testability,test,tests,38,"@patrick-schultz Alright. This passes tests locally. I'm happy with the docs verbiage. I am eager for your review!. <img width=""1105"" alt=""Screen Shot 2023-02-01 at 17 54 00"" src=""https://user-images.githubusercontent.com/106194/216184499-6b30a121-9e07-40a6-8825-dc6e7c6194bf.png"">. <img width=""1105"" alt=""Screen Shot 2023-02-01 at 17 54 10"" src=""https://user-images.githubusercontent.com/106194/216184498-5f9eaeaf-fa76-4161-acdd-81682e06aa3f.png"">",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12637#issuecomment-1412855103
https://github.com/hail-is/hail/pull/12643#issuecomment-1419295599:442,Availability,error,errors,442,"Hmm. I trust the code now. I test against several R SKAT runs. I'm not sure I understand how we derive that Q is generalized chi-squared distributed. We use the residual phenotypes in the calculation of Q, but those are inverse-logit transformed normal variables. The derivation for the linear case doesn't apply, as far as I can tell. I assume the residuals are Bernoulli distributed? Maybe not. I guess the phenotypes are Bernoulli but the errors aren't? I'm not sure.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12643#issuecomment-1419295599
https://github.com/hail-is/hail/pull/12643#issuecomment-1419295599:253,Modifiability,variab,variables,253,"Hmm. I trust the code now. I test against several R SKAT runs. I'm not sure I understand how we derive that Q is generalized chi-squared distributed. We use the residual phenotypes in the calculation of Q, but those are inverse-logit transformed normal variables. The derivation for the linear case doesn't apply, as far as I can tell. I assume the residuals are Bernoulli distributed? Maybe not. I guess the phenotypes are Bernoulli but the errors aren't? I'm not sure.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12643#issuecomment-1419295599
https://github.com/hail-is/hail/pull/12643#issuecomment-1419295599:29,Testability,test,test,29,"Hmm. I trust the code now. I test against several R SKAT runs. I'm not sure I understand how we derive that Q is generalized chi-squared distributed. We use the residual phenotypes in the calculation of Q, but those are inverse-logit transformed normal variables. The derivation for the linear case doesn't apply, as far as I can tell. I assume the residuals are Bernoulli distributed? Maybe not. I guess the phenotypes are Bernoulli but the errors aren't? I'm not sure.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12643#issuecomment-1419295599
https://github.com/hail-is/hail/pull/12643#issuecomment-1419295599:228,Testability,log,logit,228,"Hmm. I trust the code now. I test against several R SKAT runs. I'm not sure I understand how we derive that Q is generalized chi-squared distributed. We use the residual phenotypes in the calculation of Q, but those are inverse-logit transformed normal variables. The derivation for the linear case doesn't apply, as far as I can tell. I assume the residuals are Bernoulli distributed? Maybe not. I guess the phenotypes are Bernoulli but the errors aren't? I'm not sure.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12643#issuecomment-1419295599
https://github.com/hail-is/hail/pull/12643#issuecomment-1433881634:56,Availability,error,errors,56,"Thanks for clarifying these points and pointing out the errors!. <img width=""1559"" alt=""Screen Shot 2023-02-16 at 18 31 01"" src=""https://user-images.githubusercontent.com/106194/219511417-004e5529-c41c-4068-bc85-d679fca58058.png"">; <img width=""1559"" alt=""Screen Shot 2023-02-16 at 18 31 04"" src=""https://user-images.githubusercontent.com/106194/219511421-ba3600ad-b0a3-4564-862a-78f6b7501467.png"">; <img width=""1559"" alt=""Screen Shot 2023-02-16 at 18 31 09"" src=""https://user-images.githubusercontent.com/106194/219511419-cfa45641-bcf4-4e29-a5f1-bf431981c0c6.png"">",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12643#issuecomment-1433881634
https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586:2262,Availability,error,errorclass,2262,"imits; await _handle_api_error(_edit_billing_limit, db, billing_project, limit); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 212, in _handle_api_error; await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2227, in _edit_billing_limit; await insert() # pylint: disable=no-value-for-parameter; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 34, in wrapper; return await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 64, in wrapper; return await fun(tx, *args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2212, in insert; (billing_project,),; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 209, in execute_and_fetchone; await cursor.execute(sql, args); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 239, in execute; await self._query(query); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 457, in _query; await conn.query(q); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 469, in query; await self._read_query_result(unbuffered=unbuffered); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 672, in _read_query_result; await result.read(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 1153, in read; first_packet = await self.connection._read_packet(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 641, in _read_packet; packet.raise_for_error(); File ""/usr/local/lib/python3.7/dist-packages/pymysql/protocol.py"", line 221, in raise_for_error; err.raise_mysql_exception(self._data); File ""/usr/local/lib/python3.7/dist-packages/pymysql/err.py"", line 143, in raise_mysql_exception; raise errorclass(errno, errval); pymysql.err.OperationalError: (1205, 'Lock wait timeout exceeded; try restarting transaction'); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586
https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586:847,Integrability,wrap,wrapper,847,"hmm. I think this query locks more aggressively, not sure why. I guess the aggregation must be somewhat time consuming. In main, that aggregation happens without locking the billing projects (ergo preventing changes to limits). . I get these spammed in the front end logs:; ```; File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2237, in post_edit_billing_limits; await _handle_api_error(_edit_billing_limit, db, billing_project, limit); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 212, in _handle_api_error; await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2227, in _edit_billing_limit; await insert() # pylint: disable=no-value-for-parameter; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 34, in wrapper; return await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 64, in wrapper; return await fun(tx, *args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2212, in insert; (billing_project,),; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 209, in execute_and_fetchone; await cursor.execute(sql, args); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 239, in execute; await self._query(query); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 457, in _query; await conn.query(q); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 469, in query; await self._read_query_result(unbuffered=unbuffered); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 672, in _read_query_result; await result.read(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 1153, in read; first_packet = await self.connection._read_packet(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 641, in _read_packet; packe",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586
https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586:965,Integrability,wrap,wrapper,965,"hmm. I think this query locks more aggressively, not sure why. I guess the aggregation must be somewhat time consuming. In main, that aggregation happens without locking the billing projects (ergo preventing changes to limits). . I get these spammed in the front end logs:; ```; File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2237, in post_edit_billing_limits; await _handle_api_error(_edit_billing_limit, db, billing_project, limit); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 212, in _handle_api_error; await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2227, in _edit_billing_limit; await insert() # pylint: disable=no-value-for-parameter; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 34, in wrapper; return await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 64, in wrapper; return await fun(tx, *args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2212, in insert; (billing_project,),; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 209, in execute_and_fetchone; await cursor.execute(sql, args); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 239, in execute; await self._query(query); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 457, in _query; await conn.query(q); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 469, in query; await self._read_query_result(unbuffered=unbuffered); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 672, in _read_query_result; await result.read(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 1153, in read; first_packet = await self.connection._read_packet(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 641, in _read_packet; packe",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586
https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586:2075,Integrability,protocol,protocol,2075,"imits; await _handle_api_error(_edit_billing_limit, db, billing_project, limit); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 212, in _handle_api_error; await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2227, in _edit_billing_limit; await insert() # pylint: disable=no-value-for-parameter; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 34, in wrapper; return await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 64, in wrapper; return await fun(tx, *args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2212, in insert; (billing_project,),; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 209, in execute_and_fetchone; await cursor.execute(sql, args); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 239, in execute; await self._query(query); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 457, in _query; await conn.query(q); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 469, in query; await self._read_query_result(unbuffered=unbuffered); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 672, in _read_query_result; await result.read(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 1153, in read; first_packet = await self.connection._read_packet(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 641, in _read_packet; packet.raise_for_error(); File ""/usr/local/lib/python3.7/dist-packages/pymysql/protocol.py"", line 221, in raise_for_error; err.raise_mysql_exception(self._data); File ""/usr/local/lib/python3.7/dist-packages/pymysql/err.py"", line 143, in raise_mysql_exception; raise errorclass(errno, errval); pymysql.err.OperationalError: (1205, 'Lock wait timeout exceeded; try restarting transaction'); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586
https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586:2337,Safety,timeout,timeout,2337,"imits; await _handle_api_error(_edit_billing_limit, db, billing_project, limit); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 212, in _handle_api_error; await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2227, in _edit_billing_limit; await insert() # pylint: disable=no-value-for-parameter; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 34, in wrapper; return await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 64, in wrapper; return await fun(tx, *args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2212, in insert; (billing_project,),; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 209, in execute_and_fetchone; await cursor.execute(sql, args); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 239, in execute; await self._query(query); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 457, in _query; await conn.query(q); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 469, in query; await self._read_query_result(unbuffered=unbuffered); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 672, in _read_query_result; await result.read(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 1153, in read; first_packet = await self.connection._read_packet(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 641, in _read_packet; packet.raise_for_error(); File ""/usr/local/lib/python3.7/dist-packages/pymysql/protocol.py"", line 221, in raise_for_error; err.raise_mysql_exception(self._data); File ""/usr/local/lib/python3.7/dist-packages/pymysql/err.py"", line 143, in raise_mysql_exception; raise errorclass(errno, errval); pymysql.err.OperationalError: (1205, 'Lock wait timeout exceeded; try restarting transaction'); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586
https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586:267,Testability,log,logs,267,"hmm. I think this query locks more aggressively, not sure why. I guess the aggregation must be somewhat time consuming. In main, that aggregation happens without locking the billing projects (ergo preventing changes to limits). . I get these spammed in the front end logs:; ```; File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2237, in post_edit_billing_limits; await _handle_api_error(_edit_billing_limit, db, billing_project, limit); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 212, in _handle_api_error; await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2227, in _edit_billing_limit; await insert() # pylint: disable=no-value-for-parameter; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 34, in wrapper; return await f(*args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 64, in wrapper; return await fun(tx, *args, **kwargs); File ""/usr/local/lib/python3.7/dist-packages/batch/front_end/front_end.py"", line 2212, in insert; (billing_project,),; File ""/usr/local/lib/python3.7/dist-packages/gear/database.py"", line 209, in execute_and_fetchone; await cursor.execute(sql, args); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 239, in execute; await self._query(query); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/cursors.py"", line 457, in _query; await conn.query(q); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 469, in query; await self._read_query_result(unbuffered=unbuffered); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 672, in _read_query_result; await result.read(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 1153, in read; first_packet = await self.connection._read_packet(); File ""/usr/local/lib/python3.7/dist-packages/aiomysql/connection.py"", line 641, in _read_packet; packe",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12652#issuecomment-1416434586
https://github.com/hail-is/hail/pull/12654#issuecomment-1426351960:95,Testability,test,test,95,I'm putting the WIP tag for Monday. I changed the code slightly from before. I checked and the test PR driver logs were at least clean.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12654#issuecomment-1426351960
https://github.com/hail-is/hail/pull/12654#issuecomment-1426351960:110,Testability,log,logs,110,I'm putting the WIP tag for Monday. I changed the code slightly from before. I checked and the test PR driver logs were at least clean.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12654#issuecomment-1426351960
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12656#issuecomment-1420876567
https://github.com/hail-is/hail/pull/12662#issuecomment-1420873523:32,Modifiability,variab,variable,32,I thought I'd proposed this env variable but then we ended up going with [this](https://github.com/hail-is/hail/pull/12246)?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12662#issuecomment-1420873523
https://github.com/hail-is/hail/pull/12662#issuecomment-1420895778:141,Deployability,configurat,configuration,141,"I thought the config file was better for QoB where versioning and backwards compatibility is important and there could be substantially more configuration in the future. I don't think we mount that config file in the worker regardless for DockerJobs, but I could be wrong.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12662#issuecomment-1420895778
https://github.com/hail-is/hail/pull/12662#issuecomment-1420895778:14,Modifiability,config,config,14,"I thought the config file was better for QoB where versioning and backwards compatibility is important and there could be substantially more configuration in the future. I don't think we mount that config file in the worker regardless for DockerJobs, but I could be wrong.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12662#issuecomment-1420895778
https://github.com/hail-is/hail/pull/12662#issuecomment-1420895778:141,Modifiability,config,configuration,141,"I thought the config file was better for QoB where versioning and backwards compatibility is important and there could be substantially more configuration in the future. I don't think we mount that config file in the worker regardless for DockerJobs, but I could be wrong.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12662#issuecomment-1420895778
https://github.com/hail-is/hail/pull/12662#issuecomment-1420895778:198,Modifiability,config,config,198,"I thought the config file was better for QoB where versioning and backwards compatibility is important and there could be substantially more configuration in the future. I don't think we mount that config file in the worker regardless for DockerJobs, but I could be wrong.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12662#issuecomment-1420895778
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12665#issuecomment-1431716616
https://github.com/hail-is/hail/pull/12666#issuecomment-1422737869:78,Performance,load,load,78,An additional detail that I fixed in this change is that we no longer need to load the log file into memory on the worker in order to send it to the batch pod (by using `FileResponse`). It would also be nice to do this; - when the worker is uploading the file; - on the batch pod by somehow chaining the StreamResponse from the worker/blob storage to the client. but these felt like bigger changes that would've needed to touch more of the code so I left those out for now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1422737869
https://github.com/hail-is/hail/pull/12666#issuecomment-1422737869:87,Testability,log,log,87,An additional detail that I fixed in this change is that we no longer need to load the log file into memory on the worker in order to send it to the batch pod (by using `FileResponse`). It would also be nice to do this; - when the worker is uploading the file; - on the batch pod by somehow chaining the StreamResponse from the worker/blob storage to the client. but these felt like bigger changes that would've needed to touch more of the code so I left those out for now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1422737869
https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756:248,Availability,down,download,248,"Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756
https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756:84,Integrability,interface,interface,84,"Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756
https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756:79,Testability,log,logs,79,"Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756
https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756:143,Testability,log,logs,143,"Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756
https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756:296,Testability,log,logs,296,"Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426340756
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:250,Availability,down,download,250,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:394,Availability,down,download,394,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:424,Availability,down,download,424,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:491,Availability,down,download,491,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:627,Availability,down,download,627,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:86,Integrability,interface,interface,86,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:81,Testability,log,logs,81,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:145,Testability,log,logs,145,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:298,Testability,log,logs,298,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:511,Testability,log,log,511,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:562,Testability,log,logs,562,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:591,Testability,log,logic,591,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373:653,Testability,log,log,653,"> Just so I understand correctly (and sorry if this is obvious), the current job logs interface is still the same. But if you want a container's logs, then you'll get bytes which the user will have to decode themselves. How does that affect the file download button in the UI and the hailctl batch logs functionality you have? Will you see text or a random byte string?. Good question. For the download button, the file you download is still a normal text file and I've confirmed that I can download and view a log file as I would expect. For the `hailctl batch logs` functionality, I added logic to the CLI in this PR where I download the bytes of the log and if I can decode it as UTF-8 I do, so it prints exactly as before, and if I can't I just print the bytes.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12666#issuecomment-1426373373
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12668#issuecomment-1422574833
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12670#issuecomment-1423015979
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12674#issuecomment-1424170648
https://github.com/hail-is/hail/pull/12679#issuecomment-1428168367:7,Safety,unsafe,unsafe,7,"AFAIK, unsafe key-by would still do an unnecessary scan across the data to compute partition bounds. This IR is exactly 1 pass (instead of 2).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12679#issuecomment-1428168367
https://github.com/hail-is/hail/pull/12691#issuecomment-1428161623:70,Testability,test,test,70,"With these changes, I was not only able to get #12423 to pass but the test that was failing (`test_vcf_parser_golden_master__gvcf_GRCh37`) now uses the memory service! I think that test was actually OOM'ing when sending to memory and triggering a GCS retry.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12691#issuecomment-1428161623
https://github.com/hail-is/hail/pull/12691#issuecomment-1428161623:181,Testability,test,test,181,"With these changes, I was not only able to get #12423 to pass but the test that was failing (`test_vcf_parser_golden_master__gvcf_GRCh37`) now uses the memory service! I think that test was actually OOM'ing when sending to memory and triggering a GCS retry.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12691#issuecomment-1428161623
https://github.com/hail-is/hail/pull/12691#issuecomment-1432381359:499,Availability,error,erroring,499,"I believe that regardless of chunking, the total body of the request is not to exceed aiohttp's [client_max_size](https://docs.aiohttp.org/en/stable/web_reference.html?highlight=client_max_size#application). Internal-gateway will stream transparently to aiohttp which will buffer the chunks [here](https://github.com/hail-is/hail/blob/235d2bcba1d4594a27a3dea6947c91cc4043de72/memory/memory/memory.py#L61) and blow up. It could be that adding chunking will help java to better see the 429 instead of erroring with `Connection closed` or hanging, but that is just wishful thinking, it could be happening at a deeper level of the network stack.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12691#issuecomment-1432381359
https://github.com/hail-is/hail/pull/12692#issuecomment-1432253012:26,Modifiability,refactor,refactor,26,I'm definitely here for a refactor that structures these things using an exit stack or just plain try-finallies.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12692#issuecomment-1432253012
https://github.com/hail-is/hail/pull/12697#issuecomment-1438856316:94,Availability,redundant,redundant,94,Sorry. I need to get my head back into this again and I need to do the billing fixes from the redundant resource prices first. Unassigning you for now until it's ready.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1438856316
https://github.com/hail-is/hail/pull/12697#issuecomment-1438856316:94,Safety,redund,redundant,94,Sorry. I need to get my head back into this again and I need to do the billing fixes from the redundant resource prices first. Unassigning you for now until it's ready.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1438856316
https://github.com/hail-is/hail/pull/12697#issuecomment-1439147838:238,Performance,perform,performance,238,"The full text search is there because we don't know how long the path name will be and I thought this was better for looking for prefix matches with ""LIKE"". Maybe I'm wrong. The cancellation_op_id is gone, but I'm still worried about the performance of some of these queries.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1439147838
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:144,Deployability,update,updates,144,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:161,Deployability,update,updates,161,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:222,Deployability,update,update,222,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:427,Deployability,PATCH,PATCH,427,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:456,Deployability,update,update,456,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:593,Deployability,configurat,configuration,593,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:524,Integrability,interface,interface,524,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:593,Modifiability,config,configuration,593,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:765,Testability,benchmark,benchmark,765,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:800,Usability,simpl,simpler,800,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163:1150,Usability,clear,clear,1150,"I want cancel_after_n_failures to be on a job group. The things a job group doesn't have which maybe it should is:; - callback; - attributes; - updates. I think updates should be on a batch and not part of a job group. An update can add jobs to multiple job groups. Otherwise, the batches table should only have static fields that apply to the entire batch. I think we can do callbacks and attributes on a job group. I added a PATCH endpoint to be able to update a job group's cancel_after_n_attributes as the hailtop.batch interface was going to automatically generate job groups without any configuration settings. As for the full text search, I think prefix searches are faster with full text search than with a regular index, but I could be wrong. We'd have to benchmark it. > If we made batches simpler, does that ease complexity and decrease code duplication? In particular, what if batches didn't contain jobs at all? Instead, a batch contains exactly one job group. That job group contains zero or more job groups. Job groups manage: resource aggregation, cancellation, etc. I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450603163
https://github.com/hail-is/hail/pull/12697#issuecomment-1450841695:40,Usability,feedback,feedback,40,Closing for now while I incorporate the feedback and make a working prototype.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450841695
https://github.com/hail-is/hail/pull/12697#issuecomment-1450945048:224,Deployability,update,updates,224,"I agree cancel_after_n_failures should be on the group. That lets us match Spark semantics for QoB. 1. I agree, callback per group seems valuable.; 2. I agree attributes seem useful on groups.; 3. I agree, not much value in updates being at the job-group level. . Depends what you mean by prefix search, if that means `LIKE ""X%""`, I think that'll be quite fast on a normal index because you can jump directly to the first record whose prefix is X. I don't see how a fulltext index could do any better in that case. On the other hand, if you mean `LIKE ""%X""` then I agree, a normal index is useless and MySQL will do a table scan. In that case, I expect a fulltext index to be a substantial improvement. > I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1. Ah, that sounds good. So the plan would be to drop, for example, `aggregated_batch_resources_v2` and the other tables which are now replaced with the job group ones? That's exactly what I had in mind.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450945048
https://github.com/hail-is/hail/pull/12697#issuecomment-1450945048:264,Integrability,Depend,Depends,264,"I agree cancel_after_n_failures should be on the group. That lets us match Spark semantics for QoB. 1. I agree, callback per group seems valuable.; 2. I agree attributes seem useful on groups.; 3. I agree, not much value in updates being at the job-group level. . Depends what you mean by prefix search, if that means `LIKE ""X%""`, I think that'll be quite fast on a normal index because you can jump directly to the first record whose prefix is X. I don't see how a fulltext index could do any better in that case. On the other hand, if you mean `LIKE ""%X""` then I agree, a normal index is useless and MySQL will do a table scan. In that case, I expect a fulltext index to be a substantial improvement. > I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1. Ah, that sounds good. So the plan would be to drop, for example, `aggregated_batch_resources_v2` and the other tables which are now replaced with the job group ones? That's exactly what I had in mind.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450945048
https://github.com/hail-is/hail/pull/12697#issuecomment-1450945048:772,Usability,clear,clear,772,"I agree cancel_after_n_failures should be on the group. That lets us match Spark semantics for QoB. 1. I agree, callback per group seems valuable.; 2. I agree attributes seem useful on groups.; 3. I agree, not much value in updates being at the job-group level. . Depends what you mean by prefix search, if that means `LIKE ""X%""`, I think that'll be quite fast on a normal index because you can jump directly to the first record whose prefix is X. I don't see how a fulltext index could do any better in that case. On the other hand, if you mean `LIKE ""%X""` then I agree, a normal index is useless and MySQL will do a table scan. In that case, I expect a fulltext index to be a substantial improvement. > I believe my plan is basically already doing this. It might not be clear because I didn't put the migrations in. But basically all of the current batches tables are now indexed by batch_id, job_group_id where the current ""batch"" has job_group_id = 1. Ah, that sounds good. So the plan would be to drop, for example, `aggregated_batch_resources_v2` and the other tables which are now replaced with the job group ones? That's exactly what I had in mind.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12697#issuecomment-1450945048
https://github.com/hail-is/hail/pull/12699#issuecomment-1442055878:925,Usability,guid,guidance,925,"NOTE:. There are a few places yet that I have not plumbed through the `HailStateManager`:. hail/src/main/scala/is/hail/rvd/RVDContext.scala; 42: private[this] val theRvb = new RegionValueBuilder(HailStateManager(Map.empty), r). hail/src/main/scala/is/hail/linalg/BlockMatrix.scala; 2136: val rvb = new RegionValueBuilder(HailStateManager(Map.empty), region). hail/src/main/scala/is/hail/expr/ir/MatrixValue.scala; 34: val rvb = new RegionValueBuilder(HailStateManager(Map.empty), prevGlobals.value.region). hail/src/main/scala/is/hail/expr/ir/agg/ApproxCDFStateManager.scala; 649: val rvb = new RegionValueBuilder(HailStateManager(Map.empty), r). hail/src/main/scala/is/hail/expr/ir/agg/LinearRegressionAggregator.scala; 34: val rvb = new RegionValueBuilder(HailStateManager(Map.empty), region). These places looked like either worthless effort to plumb through or difficult (the RVB in MatrixValue) so would appreciate some guidance on how to handle these use cases. ""Just do the additional plumbing"" is valid advice or a workaround if it's not desirable to add that plumbing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12699#issuecomment-1442055878
https://github.com/hail-is/hail/pull/12699#issuecomment-1442231548:371,Integrability,wrap,wrapped,371,"I looked at all of these usages. Since the only value types that use the state manager are sets and dicts with locus in the elt/key, it's impossible to construct a failing example for most of these. It's possible for a usage of the RVDContext RVB in `orderedLeftJoinDistinctAndInsert`, but we can replace the implementation of `TableLeftJoinRightDistinct.execute` with a wrapped call to the lowered implementation (not necessary in this PR).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12699#issuecomment-1442231548
https://github.com/hail-is/hail/pull/12706#issuecomment-1464139738:8,Energy Efficiency,green,green,8,This is green!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12706#issuecomment-1464139738
https://github.com/hail-is/hail/pull/12710#issuecomment-1443672380:157,Performance,perform,performance,157,@danking Can you confirm whether we can just drop the table in one shot or do we need to use truncate or delete rows in chunks first? I'm just worried about performance here and I can't find a solid answer on whether this operation is instant or could take days.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12710#issuecomment-1443672380
https://github.com/hail-is/hail/pull/12710#issuecomment-1446634047:0,Testability,Test,Tested,0,"Tested deletion in a separate database. 0 rows is instantaneous. 100,000,000 rows is 10 seconds. So at worst, it's probably on order of 10 minutes to drop a table since the table I had was very simple with not a lot of columns. Will rebase and then get this merged.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12710#issuecomment-1446634047
https://github.com/hail-is/hail/pull/12710#issuecomment-1446634047:194,Usability,simpl,simple,194,"Tested deletion in a separate database. 0 rows is instantaneous. 100,000,000 rows is 10 seconds. So at worst, it's probably on order of 10 minutes to drop a table since the table I had was very simple with not a lot of columns. Will rebase and then get this merged.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12710#issuecomment-1446634047
https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106:216,Availability,error,errors,216,"See for example https://cloudlogging.app.goo.gl/ziaRD9HKxxca8Nd3A. in which ~15 MJCs have to retry because of `ServerDisconnectedError` or `TimeoutError`. With this PR, I think we would have seen just the three ""two errors observed"" warning messages. Here's a possible extension to this PR that fuses the thinking of both PRs (this one and #12505): use the total delay instead of `errors = 2`. We retry really quickly, so two errors could occur in ~500ms which really isn't enough time for batch driver to fix itself.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106
https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106:381,Availability,error,errors,381,"See for example https://cloudlogging.app.goo.gl/ziaRD9HKxxca8Nd3A. in which ~15 MJCs have to retry because of `ServerDisconnectedError` or `TimeoutError`. With this PR, I think we would have seen just the three ""two errors observed"" warning messages. Here's a possible extension to this PR that fuses the thinking of both PRs (this one and #12505): use the total delay instead of `errors = 2`. We retry really quickly, so two errors could occur in ~500ms which really isn't enough time for batch driver to fix itself.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106
https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106:426,Availability,error,errors,426,"See for example https://cloudlogging.app.goo.gl/ziaRD9HKxxca8Nd3A. in which ~15 MJCs have to retry because of `ServerDisconnectedError` or `TimeoutError`. With this PR, I think we would have seen just the three ""two errors observed"" warning messages. Here's a possible extension to this PR that fuses the thinking of both PRs (this one and #12505): use the total delay instead of `errors = 2`. We retry really quickly, so two errors could occur in ~500ms which really isn't enough time for batch driver to fix itself.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106
https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106:241,Integrability,message,messages,241,"See for example https://cloudlogging.app.goo.gl/ziaRD9HKxxca8Nd3A. in which ~15 MJCs have to retry because of `ServerDisconnectedError` or `TimeoutError`. With this PR, I think we would have seen just the three ""two errors observed"" warning messages. Here's a possible extension to this PR that fuses the thinking of both PRs (this one and #12505): use the total delay instead of `errors = 2`. We retry really quickly, so two errors could occur in ~500ms which really isn't enough time for batch driver to fix itself.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106
https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106:140,Safety,Timeout,TimeoutError,140,"See for example https://cloudlogging.app.goo.gl/ziaRD9HKxxca8Nd3A. in which ~15 MJCs have to retry because of `ServerDisconnectedError` or `TimeoutError`. With this PR, I think we would have seen just the three ""two errors observed"" warning messages. Here's a possible extension to this PR that fuses the thinking of both PRs (this one and #12505): use the total delay instead of `errors = 2`. We retry really quickly, so two errors could occur in ~500ms which really isn't enough time for batch driver to fix itself.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12712#issuecomment-1434824106
https://github.com/hail-is/hail/pull/12716#issuecomment-1435318302:42,Testability,test,test,42,+1-4. Net -3 lines for a 1/2 reduction in test time is pretty good 😉,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12716#issuecomment-1435318302
https://github.com/hail-is/hail/issues/12717#issuecomment-1452599951:52,Deployability,install,install,52,"Hi @alanmejiamaza ,. Just to be clear, you did `pip install hail` and then you opened a notebook and ran something like:; ```; import hail as hl; hl.init(); from hail.plot import show; from pprint import pprint; hl.plot.output_notebook(); ht = hl.utils.range_table(1000); ht = mt.annotate(DP = hl.rand_unif(0, 100)); p = hl.plot.histogram(ht.DP, range=(0,30), bins=30, title='DP Histogram', legend='DP'); show(p); ```; And the plot didn't appear? Did you get a message saying ""BokehJS 1.4.0 successfully loaded.""? What version of Jupyter are you using? What web browser are you using?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12717#issuecomment-1452599951
https://github.com/hail-is/hail/issues/12717#issuecomment-1452599951:461,Integrability,message,message,461,"Hi @alanmejiamaza ,. Just to be clear, you did `pip install hail` and then you opened a notebook and ran something like:; ```; import hail as hl; hl.init(); from hail.plot import show; from pprint import pprint; hl.plot.output_notebook(); ht = hl.utils.range_table(1000); ht = mt.annotate(DP = hl.rand_unif(0, 100)); p = hl.plot.histogram(ht.DP, range=(0,30), bins=30, title='DP Histogram', legend='DP'); show(p); ```; And the plot didn't appear? Did you get a message saying ""BokehJS 1.4.0 successfully loaded.""? What version of Jupyter are you using? What web browser are you using?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12717#issuecomment-1452599951
https://github.com/hail-is/hail/issues/12717#issuecomment-1452599951:504,Performance,load,loaded,504,"Hi @alanmejiamaza ,. Just to be clear, you did `pip install hail` and then you opened a notebook and ran something like:; ```; import hail as hl; hl.init(); from hail.plot import show; from pprint import pprint; hl.plot.output_notebook(); ht = hl.utils.range_table(1000); ht = mt.annotate(DP = hl.rand_unif(0, 100)); p = hl.plot.histogram(ht.DP, range=(0,30), bins=30, title='DP Histogram', legend='DP'); show(p); ```; And the plot didn't appear? Did you get a message saying ""BokehJS 1.4.0 successfully loaded.""? What version of Jupyter are you using? What web browser are you using?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12717#issuecomment-1452599951
https://github.com/hail-is/hail/issues/12717#issuecomment-1452599951:32,Usability,clear,clear,32,"Hi @alanmejiamaza ,. Just to be clear, you did `pip install hail` and then you opened a notebook and ran something like:; ```; import hail as hl; hl.init(); from hail.plot import show; from pprint import pprint; hl.plot.output_notebook(); ht = hl.utils.range_table(1000); ht = mt.annotate(DP = hl.rand_unif(0, 100)); p = hl.plot.histogram(ht.DP, range=(0,30), bins=30, title='DP Histogram', legend='DP'); show(p); ```; And the plot didn't appear? Did you get a message saying ""BokehJS 1.4.0 successfully loaded.""? What version of Jupyter are you using? What web browser are you using?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12717#issuecomment-1452599951
https://github.com/hail-is/hail/issues/12717#issuecomment-1458661804:42,Integrability,message,message,42,"Hey @alanmejiamaza, could you reply to my message above? I can't replicate the issue without more information.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12717#issuecomment-1458661804
https://github.com/hail-is/hail/issues/12717#issuecomment-1467001174:69,Availability,ping,ping,69,Closing due to lack of reproduction. Please feel free to comment and ping me if you can provide more details!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12717#issuecomment-1467001174
https://github.com/hail-is/hail/pull/12724#issuecomment-1454085562:72,Deployability,deploy,deployment,72,I put the WIP tag back on until I've fully debugged and fixed the azure deployment.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12724#issuecomment-1454085562
https://github.com/hail-is/hail/pull/12729#issuecomment-1443933050:64,Security,validat,validator,64,"~Note to self, there's a backwards compatibility issue with the validator.~ [FIXED]",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12729#issuecomment-1443933050
https://github.com/hail-is/hail/pull/12731#issuecomment-1499652542:169,Testability,test,testing,169,"So I think I'd appreciate a review on this. Would especially appreciate feedback about the question I wrote in the PR body as well as what to do about documentation and testing:. - We have pretty expansive FS testing, but not for these new shim functions. Should we convert some of our tests to use these functions instead of the FS objects themselves?; - We don't have `hailtop` docs, and afaik this is the first module outside of `hailtop.batch` that would be public. Where should its docs go?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1499652542
https://github.com/hail-is/hail/pull/12731#issuecomment-1499652542:209,Testability,test,testing,209,"So I think I'd appreciate a review on this. Would especially appreciate feedback about the question I wrote in the PR body as well as what to do about documentation and testing:. - We have pretty expansive FS testing, but not for these new shim functions. Should we convert some of our tests to use these functions instead of the FS objects themselves?; - We don't have `hailtop` docs, and afaik this is the first module outside of `hailtop.batch` that would be public. Where should its docs go?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1499652542
https://github.com/hail-is/hail/pull/12731#issuecomment-1499652542:286,Testability,test,tests,286,"So I think I'd appreciate a review on this. Would especially appreciate feedback about the question I wrote in the PR body as well as what to do about documentation and testing:. - We have pretty expansive FS testing, but not for these new shim functions. Should we convert some of our tests to use these functions instead of the FS objects themselves?; - We don't have `hailtop` docs, and afaik this is the first module outside of `hailtop.batch` that would be public. Where should its docs go?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1499652542
https://github.com/hail-is/hail/pull/12731#issuecomment-1499652542:72,Usability,feedback,feedback,72,"So I think I'd appreciate a review on this. Would especially appreciate feedback about the question I wrote in the PR body as well as what to do about documentation and testing:. - We have pretty expansive FS testing, but not for these new shim functions. Should we convert some of our tests to use these functions instead of the FS objects themselves?; - We don't have `hailtop` docs, and afaik this is the first module outside of `hailtop.batch` that would be public. Where should its docs go?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1499652542
https://github.com/hail-is/hail/pull/12731#issuecomment-1507043318:48,Testability,test,test,48,"Huh, quite confused as to why the local backend test hung in GCP and not azure. As far as I can tell the test that hung is `test/hail/utils/test_utils.py::Tests::test_hadoop_ls_glob_2` but it passed in azure and locally. Any ideas?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507043318
https://github.com/hail-is/hail/pull/12731#issuecomment-1507043318:105,Testability,test,test,105,"Huh, quite confused as to why the local backend test hung in GCP and not azure. As far as I can tell the test that hung is `test/hail/utils/test_utils.py::Tests::test_hadoop_ls_glob_2` but it passed in azure and locally. Any ideas?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507043318
https://github.com/hail-is/hail/pull/12731#issuecomment-1507043318:124,Testability,test,test,124,"Huh, quite confused as to why the local backend test hung in GCP and not azure. As far as I can tell the test that hung is `test/hail/utils/test_utils.py::Tests::test_hadoop_ls_glob_2` but it passed in azure and locally. Any ideas?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507043318
https://github.com/hail-is/hail/pull/12731#issuecomment-1507043318:155,Testability,Test,Tests,155,"Huh, quite confused as to why the local backend test hung in GCP and not azure. As far as I can tell the test that hung is `test/hail/utils/test_utils.py::Tests::test_hadoop_ls_glob_2` but it passed in azure and locally. Any ideas?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507043318
https://github.com/hail-is/hail/pull/12731#issuecomment-1507071339:249,Testability,test,test,249,Next thing I would try is running the full split. Maybe we need to run that in a memory limited way?; ```; HAIL_RUN_IMAGE_SPLITS=14 \; HAIL_RUN_IMAGE_SPLIT_INDEX=2 \; HAIL_CLOUD=gcp \; HAIL_TEST_STORAGE_URI=/tmp/ \; HAIL_TEST_RESOURCES_DIR=./../src/test/resources/ \; HAIL_DOCTEST_DATA_DIR=./hail/docs/data \; HAIL_QUERY_BACKEND=local python3 -m pytest -Werror:::hail -Werror:::hailtop --log-cli-level=INFO -s -r A -vv --instafail --durations=50 --ignore=test/hailtop/ test; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507071339
https://github.com/hail-is/hail/pull/12731#issuecomment-1507071339:388,Testability,log,log-cli-level,388,Next thing I would try is running the full split. Maybe we need to run that in a memory limited way?; ```; HAIL_RUN_IMAGE_SPLITS=14 \; HAIL_RUN_IMAGE_SPLIT_INDEX=2 \; HAIL_CLOUD=gcp \; HAIL_TEST_STORAGE_URI=/tmp/ \; HAIL_TEST_RESOURCES_DIR=./../src/test/resources/ \; HAIL_DOCTEST_DATA_DIR=./hail/docs/data \; HAIL_QUERY_BACKEND=local python3 -m pytest -Werror:::hail -Werror:::hailtop --log-cli-level=INFO -s -r A -vv --instafail --durations=50 --ignore=test/hailtop/ test; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507071339
https://github.com/hail-is/hail/pull/12731#issuecomment-1507071339:455,Testability,test,test,455,Next thing I would try is running the full split. Maybe we need to run that in a memory limited way?; ```; HAIL_RUN_IMAGE_SPLITS=14 \; HAIL_RUN_IMAGE_SPLIT_INDEX=2 \; HAIL_CLOUD=gcp \; HAIL_TEST_STORAGE_URI=/tmp/ \; HAIL_TEST_RESOURCES_DIR=./../src/test/resources/ \; HAIL_DOCTEST_DATA_DIR=./hail/docs/data \; HAIL_QUERY_BACKEND=local python3 -m pytest -Werror:::hail -Werror:::hailtop --log-cli-level=INFO -s -r A -vv --instafail --durations=50 --ignore=test/hailtop/ test; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507071339
https://github.com/hail-is/hail/pull/12731#issuecomment-1507071339:469,Testability,test,test,469,Next thing I would try is running the full split. Maybe we need to run that in a memory limited way?; ```; HAIL_RUN_IMAGE_SPLITS=14 \; HAIL_RUN_IMAGE_SPLIT_INDEX=2 \; HAIL_CLOUD=gcp \; HAIL_TEST_STORAGE_URI=/tmp/ \; HAIL_TEST_RESOURCES_DIR=./../src/test/resources/ \; HAIL_DOCTEST_DATA_DIR=./hail/docs/data \; HAIL_QUERY_BACKEND=local python3 -m pytest -Werror:::hail -Werror:::hailtop --log-cli-level=INFO -s -r A -vv --instafail --durations=50 --ignore=test/hailtop/ test; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507071339
https://github.com/hail-is/hail/pull/12731#issuecomment-1507073010:56,Testability,test,test,56,"Also not the most sophisticated thing but littering the test and the things it calls with print statements, making sure the tests print in real-time, and kicking off another test is something else I'd try.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507073010
https://github.com/hail-is/hail/pull/12731#issuecomment-1507073010:124,Testability,test,tests,124,"Also not the most sophisticated thing but littering the test and the things it calls with print statements, making sure the tests print in real-time, and kicking off another test is something else I'd try.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507073010
https://github.com/hail-is/hail/pull/12731#issuecomment-1507073010:174,Testability,test,test,174,"Also not the most sophisticated thing but littering the test and the things it calls with print statements, making sure the tests print in real-time, and kicking off another test is something else I'd try.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507073010
https://github.com/hail-is/hail/pull/12731#issuecomment-1507077467:32,Availability,avail,available,32,"Also ask Tim about limiting RAM available to Hail & Java, we should probably keep at least a gig dedicated to Python. Maybe that will cause memory errors to appear closer to where they belong.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507077467
https://github.com/hail-is/hail/pull/12731#issuecomment-1507077467:147,Availability,error,errors,147,"Also ask Tim about limiting RAM available to Hail & Java, we should probably keep at least a gig dedicated to Python. Maybe that will cause memory errors to appear closer to where they belong.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1507077467
https://github.com/hail-is/hail/pull/12731#issuecomment-1513805552:48,Testability,test,tests,48,"Hm, I added timestamper and merged main and the tests passed… getting retested now though",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1513805552
https://github.com/hail-is/hail/pull/12731#issuecomment-1518359172:8,Testability,test,tests,8,All the tests are passing but something is hanging.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1518359172
https://github.com/hail-is/hail/pull/12731#issuecomment-1518360615:27,Testability,test,test,27,CPU use is flat after that test completes successfully.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1518360615
https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066:206,Availability,error,error,206,"So, there was a test run that got cancelled (probably main branch changed) but which passed the service backend tests. It confirms that this most recent run ran all the tests, but it has some fishy looking error outputs:; ```; [gw2] PASSED [2023-04-21 18:31:07] test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; ```; Are we not cleaning up files somewhere and that's somehow hanging the system?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066
https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066:16,Testability,test,test,16,"So, there was a test run that got cancelled (probably main branch changed) but which passed the service backend tests. It confirms that this most recent run ran all the tests, but it has some fishy looking error outputs:; ```; [gw2] PASSED [2023-04-21 18:31:07] test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; ```; Are we not cleaning up files somewhere and that's somehow hanging the system?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066
https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066:112,Testability,test,tests,112,"So, there was a test run that got cancelled (probably main branch changed) but which passed the service backend tests. It confirms that this most recent run ran all the tests, but it has some fishy looking error outputs:; ```; [gw2] PASSED [2023-04-21 18:31:07] test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; ```; Are we not cleaning up files somewhere and that's somehow hanging the system?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066
https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066:169,Testability,test,tests,169,"So, there was a test run that got cancelled (probably main branch changed) but which passed the service backend tests. It confirms that this most recent run ran all the tests, but it has some fishy looking error outputs:; ```; [gw2] PASSED [2023-04-21 18:31:07] test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; ```; Are we not cleaning up files somewhere and that's somehow hanging the system?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066
https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066:262,Testability,test,test,262,"So, there was a test run that got cancelled (probably main branch changed) but which passed the service backend tests. It confirms that this most recent run ran all the tests, but it has some fishy looking error outputs:; ```; [gw2] PASSED [2023-04-21 18:31:07] test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; ```; Are we not cleaning up files somewhere and that's somehow hanging the system?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066
https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066:293,Testability,Test,Tests,293,"So, there was a test run that got cancelled (probably main branch changed) but which passed the service backend tests. It confirms that this most recent run ran all the tests, but it has some fishy looking error outputs:; ```; [gw2] PASSED [2023-04-21 18:31:07] test/hail/table/test_table.py::Tests::test_from_pandas_missing_and_nans Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; Exception ignored in: <_io.FileIO name=0 mode='rb' closefd=True>; ResourceWarning: unclosed file <_io.TextIOWrapper name=0 mode='r' encoding='UTF-8'>; ```; Are we not cleaning up files somewhere and that's somehow hanging the system?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1518364066
https://github.com/hail-is/hail/pull/12731#issuecomment-1518368590:28,Availability,error,error,28,"I pushed a commit that will error on resource warning. Hopefully we can figure out where we're leaking, fix the leaks, and stop the hangs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12731#issuecomment-1518368590
https://github.com/hail-is/hail/pull/12733#issuecomment-1444597452:25,Testability,test,test,25,"Heh. I checked the range test with `vcf.bgz` and it's embarrassingly slow. In terms of compressed output bytes, it's 251 KiB/s. In terms of decompressed output bytes it's 80 MiB/s. I guess this makes sense though: we can't generate data fast enough to keep up with bgzip. I seem to recall bgzip writes at ~50 MiB/s. At those compression ratios we'd need to generate data at ~15GiB/s, which we are _so_ far from doing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12733#issuecomment-1444597452
https://github.com/hail-is/hail/pull/12735#issuecomment-1449276699:30,Testability,test,tests,30,"@patrick-schultz I added some tests and fixed behavior as a result. I think this is a valuable change, but since I've edited it directly seems like someone else should do review as well.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12735#issuecomment-1449276699
https://github.com/hail-is/hail/pull/12736#issuecomment-1478404495:57,Modifiability,config,config,57,@tpoterba I just realized I forgot to propagate the FUSE config through to worker jobs. Should I be and I got lucky that the singular test is just doing everything driver-side? Or is there a test we can write to ensure that worker jobs access the FASTA data?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1478404495
https://github.com/hail-is/hail/pull/12736#issuecomment-1478404495:236,Security,access,access,236,@tpoterba I just realized I forgot to propagate the FUSE config through to worker jobs. Should I be and I got lucky that the singular test is just doing everything driver-side? Or is there a test we can write to ensure that worker jobs access the FASTA data?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1478404495
https://github.com/hail-is/hail/pull/12736#issuecomment-1478404495:134,Testability,test,test,134,@tpoterba I just realized I forgot to propagate the FUSE config through to worker jobs. Should I be and I got lucky that the singular test is just doing everything driver-side? Or is there a test we can write to ensure that worker jobs access the FASTA data?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1478404495
https://github.com/hail-is/hail/pull/12736#issuecomment-1478404495:191,Testability,test,test,191,@tpoterba I just realized I forgot to propagate the FUSE config through to worker jobs. Should I be and I got lucky that the singular test is just doing everything driver-side? Or is there a test we can write to ensure that worker jobs access the FASTA data?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1478404495
https://github.com/hail-is/hail/pull/12736#issuecomment-1485546827:61,Performance,optimiz,optimization,61,"@daniel-goldstein, BackendUtils.scala `collectDArray` has an optimization for single partition jobs. They're run on the driver.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1485546827
https://github.com/hail-is/hail/pull/12736#issuecomment-1485548034:89,Deployability,pipeline,pipelines,89,Admittedly a debatable choice but worthwhile in the context of tests which generate tiny pipelines dominated by CDA overhead,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1485548034
https://github.com/hail-is/hail/pull/12736#issuecomment-1485548034:63,Testability,test,tests,63,Admittedly a debatable choice but worthwhile in the context of tests which generate tiny pipelines dominated by CDA overhead,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1485548034
https://github.com/hail-is/hail/pull/12736#issuecomment-1499151688:462,Availability,failure,failure,462,"@tpoterba fixed the config issue and changed n_partitions to ensure workers are scheduled for the FASTA reading. I tested this on a single batch worker so the jobs overlapped and flexed the shared mount code, but we don't really have a guarantee in our test setup because batch has no way to force collocation of jobs (and even so we can't exactly force that the runtimes will overlap). I suppose if there's an issue here it will bubble up as a nondeterministic failure. Not great but perhaps good enough for now?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1499151688
https://github.com/hail-is/hail/pull/12736#issuecomment-1499151688:80,Energy Efficiency,schedul,scheduled,80,"@tpoterba fixed the config issue and changed n_partitions to ensure workers are scheduled for the FASTA reading. I tested this on a single batch worker so the jobs overlapped and flexed the shared mount code, but we don't really have a guarantee in our test setup because batch has no way to force collocation of jobs (and even so we can't exactly force that the runtimes will overlap). I suppose if there's an issue here it will bubble up as a nondeterministic failure. Not great but perhaps good enough for now?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1499151688
https://github.com/hail-is/hail/pull/12736#issuecomment-1499151688:20,Modifiability,config,config,20,"@tpoterba fixed the config issue and changed n_partitions to ensure workers are scheduled for the FASTA reading. I tested this on a single batch worker so the jobs overlapped and flexed the shared mount code, but we don't really have a guarantee in our test setup because batch has no way to force collocation of jobs (and even so we can't exactly force that the runtimes will overlap). I suppose if there's an issue here it will bubble up as a nondeterministic failure. Not great but perhaps good enough for now?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1499151688
https://github.com/hail-is/hail/pull/12736#issuecomment-1499151688:115,Testability,test,tested,115,"@tpoterba fixed the config issue and changed n_partitions to ensure workers are scheduled for the FASTA reading. I tested this on a single batch worker so the jobs overlapped and flexed the shared mount code, but we don't really have a guarantee in our test setup because batch has no way to force collocation of jobs (and even so we can't exactly force that the runtimes will overlap). I suppose if there's an issue here it will bubble up as a nondeterministic failure. Not great but perhaps good enough for now?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1499151688
https://github.com/hail-is/hail/pull/12736#issuecomment-1499151688:253,Testability,test,test,253,"@tpoterba fixed the config issue and changed n_partitions to ensure workers are scheduled for the FASTA reading. I tested this on a single batch worker so the jobs overlapped and flexed the shared mount code, but we don't really have a guarantee in our test setup because batch has no way to force collocation of jobs (and even so we can't exactly force that the runtimes will overlap). I suppose if there's an issue here it will bubble up as a nondeterministic failure. Not great but perhaps good enough for now?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1499151688
https://github.com/hail-is/hail/pull/12736#issuecomment-1499155038:40,Deployability,release,release,40,"Right now we run dataproc tests only on release, not on every commit, because they're too expensive/slow. That way we never release a version that can't pass. I wonder if that's also the right strategy here -- adding QoB release tests for things that only go wrong at scale. That said, I don't want to block on that. Awesome change, thank you!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1499155038
https://github.com/hail-is/hail/pull/12736#issuecomment-1499155038:124,Deployability,release,release,124,"Right now we run dataproc tests only on release, not on every commit, because they're too expensive/slow. That way we never release a version that can't pass. I wonder if that's also the right strategy here -- adding QoB release tests for things that only go wrong at scale. That said, I don't want to block on that. Awesome change, thank you!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1499155038
https://github.com/hail-is/hail/pull/12736#issuecomment-1499155038:221,Deployability,release,release,221,"Right now we run dataproc tests only on release, not on every commit, because they're too expensive/slow. That way we never release a version that can't pass. I wonder if that's also the right strategy here -- adding QoB release tests for things that only go wrong at scale. That said, I don't want to block on that. Awesome change, thank you!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1499155038
https://github.com/hail-is/hail/pull/12736#issuecomment-1499155038:26,Testability,test,tests,26,"Right now we run dataproc tests only on release, not on every commit, because they're too expensive/slow. That way we never release a version that can't pass. I wonder if that's also the right strategy here -- adding QoB release tests for things that only go wrong at scale. That said, I don't want to block on that. Awesome change, thank you!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1499155038
https://github.com/hail-is/hail/pull/12736#issuecomment-1499155038:229,Testability,test,tests,229,"Right now we run dataproc tests only on release, not on every commit, because they're too expensive/slow. That way we never release a version that can't pass. I wonder if that's also the right strategy here -- adding QoB release tests for things that only go wrong at scale. That said, I don't want to block on that. Awesome change, thank you!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12736#issuecomment-1499155038
https://github.com/hail-is/hail/pull/12742#issuecomment-1458692668:61,Availability,error,errors,61,This is ready for review. I keep getting unrelated transient errors in this PR.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12742#issuecomment-1458692668
https://github.com/hail-is/hail/pull/12748#issuecomment-1468431358:226,Availability,avail,available,226,I timed creating the new indices. Confirmed the operations are not blocking and they took 50 minutes on a 4 core database. We'd want to change the database size to 6 or 8 cores before doing this as it used about 70-80% of the available CPU on a 4 core machine.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12748#issuecomment-1468431358
https://github.com/hail-is/hail/pull/12748#issuecomment-1548471068:85,Security,expose,exposes,85,"Also, to be more specific. The scope of work needed is 4 PRs. This is just 1 PR that exposes the REST API and the parser. There's still the list_batches query to implement as well as both UI search boxes with the help dropdown.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12748#issuecomment-1548471068
https://github.com/hail-is/hail/pull/12748#issuecomment-1583061748:46,Availability,avail,available,46,"I fixed the SQL query. I had to use a feature available in MySQL v8.0.14 and later called lateral joins. I believe what this does is it scans the first table for rows that match, then scans the second lateral table for that matching row and applies the filter. So basically we have an iterator of the two tables joined together rather than a realized temporary table with the results of the entire subquery.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12748#issuecomment-1583061748
https://github.com/hail-is/hail/pull/12751#issuecomment-1458579094:39,Deployability,deploy,deployment,39,This PR contains some fixes to the GCP deployment scripts. LMK if you want me to pull those into a separate PR.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12751#issuecomment-1458579094
https://github.com/hail-is/hail/pull/12753#issuecomment-1476371102:20,Testability,test,tests,20,latest commit fixed tests -- forgot to remove review!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12753#issuecomment-1476371102
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:3,Availability,failure,failure,3,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:54,Availability,Error,Error,54,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:6547,Availability,Error,Error,6547,	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:20); E 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); E 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:454); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:490); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); E 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); E 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:342); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:487); E 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); E 	at is.hail.backend.spark.SparkBackend.executeEncode(SparkBackend.scala:486); E 	at jdk.internal.reflect.GeneratedMethodAccessor72.invoke(Unknown Source); E 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); E 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); E 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); E 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); E 	at py4j.Gateway.invoke(Gateway.java:282); E 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); E 	at py4j.commands.CallCommand.execute(CallCommand.java:79); E 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182); E 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106); E 	at java.base/java.lang.Thread.run(Thread.java:834); E ; E ; E ; E Hail version: 0.2.109-c163bcb21073; E Error summary: AssertionError: assertion failed. hail/backend/py4j_backend.py:35: FatalError. ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:4365,Energy Efficiency,adapt,adapted,4365,.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:53); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.apply(LowerOrInterpretNonCompilable.scala:72); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); E 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:22); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:20); E 	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); E 	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); E 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); E 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:20); E 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); E 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:454); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:490); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); E 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:814,Integrability,wrap,wrapper,814,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:1031,Integrability,wrap,wrapper,1031,"sertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.e",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:2313,Integrability,protocol,protocol,2313,".py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMatrixIR.scala:393); E 	at is.hail.expr.ir.Interpret$.run(Interpret.scala:875); E 	at is.hail.expr.ir.Interpret$.alreadyLowered(Interpret.scala:59); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.evaluate$1(LowerOrInterpretNonCompilable.scala:20); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(Low",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:4597,Integrability,Wrap,WrappedArray,4597,pretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); E 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:22); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:20); E 	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); E 	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); E 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); E 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:20); E 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); E 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:454); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:490); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); E 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); E 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:342); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:487); E 	at is.hail.utils.ExecutionTimer$.time(Execut,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:4618,Integrability,Wrap,WrappedArray,4618,Pass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); E 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:22); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:20); E 	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); E 	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); E 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); E 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:20); E 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); E 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:454); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:490); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); E 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); E 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:342); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:487); E 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:646,Modifiability,extend,extend,646,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:3305,Modifiability,rewrite,rewrite,3305,"JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMatrixIR.scala:393); E 	at is.hail.expr.ir.Interpret$.run(Interpret.scala:875); E 	at is.hail.expr.ir.Interpret$.alreadyLowered(Interpret.scala:59); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.evaluate$1(LowerOrInterpretNonCompilable.scala:20); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:67); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:53); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.apply(LowerOrInterpretNonCompilable.scala:72); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); E 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:22); E 	at is.hail.expr.ir.low",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:3409,Modifiability,rewrite,rewrite,3409,"y iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMatrixIR.scala:393); E 	at is.hail.expr.ir.Interpret$.run(Interpret.scala:875); E 	at is.hail.expr.ir.Interpret$.alreadyLowered(Interpret.scala:59); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.evaluate$1(LowerOrInterpretNonCompilable.scala:20); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:67); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:53); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.apply(LowerOrInterpretNonCompilable.scala:72); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); E 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:22); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:20); E 	at scala.collection.Index",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:4365,Modifiability,adapt,adapted,4365,.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:53); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.apply(LowerOrInterpretNonCompilable.scala:72); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$1(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.apply(LoweringPass.scala:14); E 	at is.hail.expr.ir.lowering.LoweringPass.apply$(LoweringPass.scala:13); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.apply(LoweringPass.scala:64); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1(LoweringPipeline.scala:22); E 	at is.hail.expr.ir.lowering.LoweringPipeline.$anonfun$apply$1$adapted(LoweringPipeline.scala:20); E 	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36); E 	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33); E 	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38); E 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:20); E 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); E 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:454); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:490); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); E 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:69,Testability,Assert,AssertionError,69,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:85,Testability,assert,assertion,85,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:111,Testability,test,test,111,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:140,Testability,Test,Tests,140,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:146,Testability,test,testMethod,146,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:471,Testability,test,test,471,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:592,Testability,test,test,592,"ci failure:; ```; hail version: 0.2.109-c163bcb21073; Error summary: AssertionError: assertion failed; self = <test.hail.linalg.test_linalg.Tests testMethod=test_tree_matmul>. @fails_service_backend(); @fails_local_backend(); def test_tree_matmul(self):; nm = np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]); m = BlockMatrix.from_numpy(nm, block_size=2); nrow = np.array([[7.0, 8.0, 9.0]]); row = BlockMatrix.from_numpy(nrow, block_size=2); ; > with BatchedAsserts() as b:. test/hail/linalg/test_linalg.py:612: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/linalg/test_linalg.py:96: in __exit__; vals.extend(list(hl.eval(tuple([all_bms[k] for k in bm_keys[batch_start:batch_start + batch_size]])))); <decorator-gen-692>:2: in eval; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: asserti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:1853,Testability,Assert,AssertionError,1853,"in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:1869,Testability,assert,assertion,1869,"in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:1925,Testability,Assert,AssertionError,1925,"in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:1941,Testability,assert,assertion,1941,"in eval; return eval_timed(expression)[0]; <decorator-gen-690>:2: in eval_timed; ???; hail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:1978,Testability,Assert,AssertionError,1978,"ail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMat",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:1994,Testability,assert,assertion,1994,"ail/typecheck/check.py:577: in wrapper; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMat",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:2031,Testability,assert,assert,2031,"; return __original_func(*args_, **kwargs_); hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend().execute(MakeTuple([ir]), timed=True)[0]; hail/backend/py4j_backend.py:82: in execute; raise e.maybe_user_error(ir) from None; hail/backend/py4j_backend.py:76: in execute; result_tuple = self._jbackend.executeEncode(jir, stream_codec, timed); ../../.venv/lib/python3.10/site-packages/py4j/java_gateway.py:1321: in __call__; return_value = get_return_value(; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . args = ('xro549', <py4j.clientserver.JavaClient object at 0x7fd0d58f6fb0>, 'o1', 'executeEncode'); kwargs = {}; pyspark = <module 'pyspark' from '/home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMatrixIR.scala:393); E 	at is.hail.expr.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:2725,Testability,Assert,AssertionError,2725,"home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMatrixIR.scala:393); E 	at is.hail.expr.ir.Interpret$.run(Interpret.scala:875); E 	at is.hail.expr.ir.Interpret$.alreadyLowered(Interpret.scala:59); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.evaluate$1(LowerOrInterpretNonCompilable.scala:20); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:67); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:53); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.apply(LowerOrInterpretNonCompilable.scala:72); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at i",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:2741,Testability,assert,assertion,2741,"home/edmund/.local/src/hail/.venv/lib/python3.10/site-packages/pyspark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMatrixIR.scala:393); E 	at is.hail.expr.ir.Interpret$.run(Interpret.scala:875); E 	at is.hail.expr.ir.Interpret$.alreadyLowered(Interpret.scala:59); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.evaluate$1(LowerOrInterpretNonCompilable.scala:20); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:67); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:53); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.apply(LowerOrInterpretNonCompilable.scala:72); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at i",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:2796,Testability,Assert,AssertionError,2796,"ark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMatrixIR.scala:393); E 	at is.hail.expr.ir.Interpret$.run(Interpret.scala:875); E 	at is.hail.expr.ir.Interpret$.alreadyLowered(Interpret.scala:59); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.evaluate$1(LowerOrInterpretNonCompilable.scala:20); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:67); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:53); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.apply(LowerOrInterpretNonCompilable.scala:72); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:2812,Testability,assert,assertion,2812,"ark/__init__.py'>; s = 'java.lang.AssertionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMatrixIR.scala:393); E 	at is.hail.expr.ir.Interpret$.run(Interpret.scala:875); E 	at is.hail.expr.ir.Interpret$.alreadyLowered(Interpret.scala:59); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.evaluate$1(LowerOrInterpretNonCompilable.scala:20); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:67); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:53); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.apply(LowerOrInterpretNonCompilable.scala:72); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:2850,Testability,assert,assert,2850,"rtionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMatrixIR.scala:393); E 	at is.hail.expr.ir.Interpret$.run(Interpret.scala:875); E 	at is.hail.expr.ir.Interpret$.alreadyLowered(Interpret.scala:59); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.evaluate$1(LowerOrInterpretNonCompilable.scala:20); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:67); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:53); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.apply(LowerOrInterpretNonCompilable.scala:72); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.$a",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:6562,Testability,Assert,AssertionError,6562,	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:20); E 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); E 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:454); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:490); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); E 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); E 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:342); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:487); E 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); E 	at is.hail.backend.spark.SparkBackend.executeEncode(SparkBackend.scala:486); E 	at jdk.internal.reflect.GeneratedMethodAccessor72.invoke(Unknown Source); E 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); E 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); E 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); E 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); E 	at py4j.Gateway.invoke(Gateway.java:282); E 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); E 	at py4j.commands.CallCommand.execute(CallCommand.java:79); E 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182); E 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106); E 	at java.base/java.lang.Thread.run(Thread.java:834); E ; E ; E ; E Hail version: 0.2.109-c163bcb21073; E Error summary: AssertionError: assertion failed. hail/backend/py4j_backend.py:35: FatalError. ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:6578,Testability,assert,assertion,6578,	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:20); E 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:47); E 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:454); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:490); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); E 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); E 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:342); E 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:487); E 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); E 	at is.hail.backend.spark.SparkBackend.executeEncode(SparkBackend.scala:486); E 	at jdk.internal.reflect.GeneratedMethodAccessor72.invoke(Unknown Source); E 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); E 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); E 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); E 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); E 	at py4j.Gateway.invoke(Gateway.java:282); E 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); E 	at py4j.commands.CallCommand.execute(CallCommand.java:79); E 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182); E 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106); E 	at java.base/java.lang.Thread.run(Thread.java:834); E ; E ; E ; E Hail version: 0.2.109-c163bcb21073; E Error summary: AssertionError: assertion failed. hail/backend/py4j_backend.py:35: FatalError. ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229
https://github.com/hail-is/hail/issues/12759#issuecomment-1458660443:159,Availability,down,downgrading,159,"Hey @dlcotter ! Thanks for the report. I anticipate a fix in the next version of Hail. For now, I think you can fix with `pip3 install 'parsimonious>=0.9'` or downgrading to Python 3.10",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12759#issuecomment-1458660443
https://github.com/hail-is/hail/issues/12759#issuecomment-1458660443:127,Deployability,install,install,127,"Hey @dlcotter ! Thanks for the report. I anticipate a fix in the next version of Hail. For now, I think you can fix with `pip3 install 'parsimonious>=0.9'` or downgrading to Python 3.10",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12759#issuecomment-1458660443
https://github.com/hail-is/hail/pull/12761#issuecomment-1458597618:22,Security,audit,audit,22,Note to self that the audit should test for equality here.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12761#issuecomment-1458597618
https://github.com/hail-is/hail/pull/12761#issuecomment-1458597618:35,Testability,test,test,35,Note to self that the audit should test for equality here.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12761#issuecomment-1458597618
https://github.com/hail-is/hail/pull/12768#issuecomment-1458962137:32,Testability,test,tests,32,"I gotta figure out how to write tests for this, but I've pushed so that Ally can take a look.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12768#issuecomment-1458962137
https://github.com/hail-is/hail/pull/12768#issuecomment-1478134967:17,Testability,test,tests,17,And let there be tests!. @patrick-schultz sending to you since Tim is a bit overloaded on PRs.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12768#issuecomment-1478134967
https://github.com/hail-is/hail/pull/12768#issuecomment-1478610969:48,Testability,test,tests,48,Hmm. I'm perhaps a bit too clever with my image tests. They differ between linux and OS X and its not easy to see the difference given the way our CI works.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12768#issuecomment-1478610969
https://github.com/hail-is/hail/pull/12768#issuecomment-1480307816:77,Testability,test,tests,77,"OK, in the interest of fixing these problems for people, let's merge without tests. Testing that two plots look the same will have to be future work. I think the environment/OS is influencing image generation in some subtle way such that the generated plots images are not the same.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12768#issuecomment-1480307816
https://github.com/hail-is/hail/pull/12768#issuecomment-1480307816:84,Testability,Test,Testing,84,"OK, in the interest of fixing these problems for people, let's merge without tests. Testing that two plots look the same will have to be future work. I think the environment/OS is influencing image generation in some subtle way such that the generated plots images are not the same.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12768#issuecomment-1480307816
https://github.com/hail-is/hail/pull/12770#issuecomment-1460486196:91,Deployability,release,release,91,"I have a mild preference to get https://github.com/hail-is/hail/pull/12769/files into this release so I don't have to release again tomorrow, but I will release again tomorrow if necessary.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12770#issuecomment-1460486196
https://github.com/hail-is/hail/pull/12770#issuecomment-1460486196:118,Deployability,release,release,118,"I have a mild preference to get https://github.com/hail-is/hail/pull/12769/files into this release so I don't have to release again tomorrow, but I will release again tomorrow if necessary.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12770#issuecomment-1460486196
https://github.com/hail-is/hail/pull/12770#issuecomment-1460486196:153,Deployability,release,release,153,"I have a mild preference to get https://github.com/hail-is/hail/pull/12769/files into this release so I don't have to release again tomorrow, but I will release again tomorrow if necessary.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12770#issuecomment-1460486196
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:730,Availability,echo,echo,730,"Some strangeness going on with build... ; ```. ------------------------------------------------------------; Gradle 6.8.3; ------------------------------------------------------------. Build time: 2021-02-22 16:13:28 UTC; Revision: 9e26b4a9ebb910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/ha",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:798,Availability,echo,echo,798,"Some strangeness going on with build... ; ```. ------------------------------------------------------------; Gradle 6.8.3; ------------------------------------------------------------. Build time: 2021-02-22 16:13:28 UTC; Revision: 9e26b4a9ebb910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/ha",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:856,Availability,echo,echo,856,"Some strangeness going on with build... ; ```. ------------------------------------------------------------; Gradle 6.8.3; ------------------------------------------------------------. Build time: 2021-02-22 16:13:28 UTC; Revision: 9e26b4a9ebb910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/ha",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:958,Availability,echo,echo,958,"Some strangeness going on with build... ; ```. ------------------------------------------------------------; Gradle 6.8.3; ------------------------------------------------------------. Build time: 2021-02-22 16:13:28 UTC; Revision: 9e26b4a9ebb910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/ha",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:1022,Availability,echo,echo,1022,"----------------------------------------------------------; Gradle 6.8.3; ------------------------------------------------------------. Build time: 2021-02-22 16:13:28 UTC; Revision: 9e26b4a9ebb910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:57: value of is not",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:1100,Availability,echo,echo,1100,"---; Gradle 6.8.3; ------------------------------------------------------------. Build time: 2021-02-22 16:13:28 UTC; Revision: 9e26b4a9ebb910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:57: value of is not a member of object java.nio.file.Path; [Error] /io/repo",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:1171,Availability,echo,echo,1171,"-------. Build time: 2021-02-22 16:13:28 UTC; Revision: 9e26b4a9ebb910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:57: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:674: value of is ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:1828,Availability,Error,Error,1828,"910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:57: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:674: value of is not a member of object java.nio.file.Path; three errors found; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:1960,Availability,Error,Error,1960,"910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:57: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:674: value of is not a member of object java.nio.file.Path; three errors found; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:2090,Availability,Error,Error,2090,"910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:57: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:674: value of is not a member of object java.nio.file.Path; three errors found; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450:2226,Availability,error,errors,2226,"910eaa1b8da8ff8575e514bc61c78. Kotlin: 1.4.20; Groovy: 2.5.12; Ant: Apache Ant(TM) version 1.10.9 compiled on September 27 2020; JVM: 1.8.0_362 (Private Build 25.362-b09); OS: Linux 5.4.0-1042-gcp amd64. real	0m3.621s; user	0m4.448s; sys	0m0.623s; + retry make jars wheel HAIL_DEBUG_MODE=1; BRANCH is set to ""HEAD"" which is different from old value """"; printf ""HEAD"" > env/BRANCH; SPARK_VERSION is set to ""3.3.0"" which is different from old value """"; printf ""3.3.0"" > env/SPARK_VERSION; echo '[Build Metadata]' > src/main/resources/build-info.properties; echo 'user=' >> src/main/resources/build-info.properties; echo 'revision=e1d86e1908f0911d45b03ef08a694d07e1c4627b' >> src/main/resources/build-info.properties; echo 'branch=HEAD' >> src/main/resources/build-info.properties; echo 'date=2023-03-09T23:23:56Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.0' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.110' >> src/main/resources/build-info.properties; HAIL_DEBUG_MODE is set to ""1"" which is different from old value """"; printf ""1"" > env/HAIL_DEBUG_MODE; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; javac -d build/classes/scala/debug -Xlint:all -Werror -XDenableSunApiLintControl -XDignore.symbol.file src/debug/scala/is/hail/annotations/Memory.java; ./gradlew shadowJar -Dscala.version=2.12.13 -Dspark.version=3.3.0 -Delasticsearch.major-version=7; Starting a Gradle Daemon (subsequent builds will be faster); > Task :compileJava NO-SOURCE; > Task :compileScala; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/MatrixWriter.scala:122: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:57: value of is not a member of object java.nio.file.Path; [Error] /io/repo/hail/src/main/scala/is/hail/expr/ir/TableWriter.scala:674: value of is not a member of object java.nio.file.Path; three errors found; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12773#issuecomment-1463003450
https://github.com/hail-is/hail/pull/12784#issuecomment-1470475331:194,Performance,cache,cache,194,"FYI, @lgruen we're abandoning the memory service entirely as we've started to experience similar issues to you all as people start to use QoB here at Broad. Daniel has some thoughts on a better cache layer. More soon!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12784#issuecomment-1470475331
https://github.com/hail-is/hail/pull/12788#issuecomment-1472586228:96,Modifiability,config,config,96,"Having run through a test myself, it looks like we'll actually need to add back all the deleted config aside from the last bit that starts up the jupyter server. Aside from the last block that starts up jupyter, the rest is important logic to configure extensions and content management.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12788#issuecomment-1472586228
https://github.com/hail-is/hail/pull/12788#issuecomment-1472586228:243,Modifiability,config,configure,243,"Having run through a test myself, it looks like we'll actually need to add back all the deleted config aside from the last bit that starts up the jupyter server. Aside from the last block that starts up jupyter, the rest is important logic to configure extensions and content management.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12788#issuecomment-1472586228
https://github.com/hail-is/hail/pull/12788#issuecomment-1472586228:21,Testability,test,test,21,"Having run through a test myself, it looks like we'll actually need to add back all the deleted config aside from the last bit that starts up the jupyter server. Aside from the last block that starts up jupyter, the rest is important logic to configure extensions and content management.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12788#issuecomment-1472586228
https://github.com/hail-is/hail/pull/12788#issuecomment-1472586228:234,Testability,log,logic,234,"Having run through a test myself, it looks like we'll actually need to add back all the deleted config aside from the last bit that starts up the jupyter server. Aside from the last block that starts up jupyter, the rest is important logic to configure extensions and content management.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12788#issuecomment-1472586228
https://github.com/hail-is/hail/pull/12788#issuecomment-1479689103:41,Availability,reboot,reboot,41,"One other snarl I've hit -- I'll need to reboot the jupyter service in the init script in order to use `jgscm` as the content manager, and need to find time to test that and make sure everything continues to work afterwards.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12788#issuecomment-1479689103
https://github.com/hail-is/hail/pull/12788#issuecomment-1479689103:160,Testability,test,test,160,"One other snarl I've hit -- I'll need to reboot the jupyter service in the init script in order to use `jgscm` as the content manager, and need to find time to test that and make sure everything continues to work afterwards.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12788#issuecomment-1479689103
https://github.com/hail-is/hail/pull/12793#issuecomment-1477072386:205,Usability,learn,learn,205,"With the binding changes I can't even find the regression code. We're totally swamped by the compiler. After the JIT is warm, the compiler is ~3s. The regression code is probably equally as fast as scikit learn on this tiny example.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12793#issuecomment-1477072386
https://github.com/hail-is/hail/pull/12794#issuecomment-1505755543:78,Availability,error,errors,78,@danking Can you let me know what I'm supposed to do here with these security errors? Thanks!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12794#issuecomment-1505755543
https://github.com/hail-is/hail/pull/12794#issuecomment-1505755543:69,Security,secur,security,69,@danking Can you let me know what I'm supposed to do here with these security errors? Thanks!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12794#issuecomment-1505755543
https://github.com/hail-is/hail/pull/12794#issuecomment-1505797153:79,Modifiability,config,config,79,I dismissed them as won’t fix because they’re leaking secrets as intended into config files.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12794#issuecomment-1505797153
https://github.com/hail-is/hail/pull/12799#issuecomment-1476923117:207,Modifiability,variab,variable,207,"> Found it. [#12221 (comment)](https://github.com/hail-is/hail/pull/12221#discussion_r988432928). Hm, this feels like a different change to me. This change doesn't allow the use of a `HAIL_BATCH_BUCKET` env variable. It looks to me like the argument was against being able to specify deprecated arguments, not against env variables.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12799#issuecomment-1476923117
https://github.com/hail-is/hail/pull/12799#issuecomment-1476923117:322,Modifiability,variab,variables,322,"> Found it. [#12221 (comment)](https://github.com/hail-is/hail/pull/12221#discussion_r988432928). Hm, this feels like a different change to me. This change doesn't allow the use of a `HAIL_BATCH_BUCKET` env variable. It looks to me like the argument was against being able to specify deprecated arguments, not against env variables.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12799#issuecomment-1476923117
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12809#issuecomment-1930358159
https://github.com/hail-is/hail/pull/12812#issuecomment-1479683426:176,Testability,test,testing,176,"Suggestion from Patrick: https://en.wikipedia.org/wiki/Combinatorial_number_system could be used to transform the sample into a uniform single integer in `[0, n choose k)` for testing",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12812#issuecomment-1479683426
https://github.com/hail-is/hail/pull/12813#issuecomment-1509030448:38,Deployability,configurat,configuration,38,REMINDER TO SELF: Change the database configuration before merging in both GCP and Azure!!!!!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12813#issuecomment-1509030448
https://github.com/hail-is/hail/pull/12813#issuecomment-1509030448:38,Modifiability,config,configuration,38,REMINDER TO SELF: Change the database configuration before merging in both GCP and Azure!!!!!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12813#issuecomment-1509030448
https://github.com/hail-is/hail/pull/12821#issuecomment-1509140605:117,Testability,benchmark,benchmarks,117,"> one design comment, otherwise looks great. Can you point me to the file (gs path is fine) that includes the latest benchmarks for this branch?. gs://hail-benchmarks-2/ehigham/compute-or-reload-partitions",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12821#issuecomment-1509140605
https://github.com/hail-is/hail/pull/12821#issuecomment-1509140605:156,Testability,benchmark,benchmarks-,156,"> one design comment, otherwise looks great. Can you point me to the file (gs path is fine) that includes the latest benchmarks for this branch?. gs://hail-benchmarks-2/ehigham/compute-or-reload-partitions",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12821#issuecomment-1509140605
https://github.com/hail-is/hail/pull/12825#issuecomment-1489163821:95,Modifiability,variab,variable,95,"Ah, I'm actually wrong, it was defined in the Makefile itself originally. We do have a `TOKEN` variable defined in `config.mk` but `config.mk` is only used by services Makefiles. I restored the definition of TOKEN into `upload_qob_jar.sh`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12825#issuecomment-1489163821
https://github.com/hail-is/hail/pull/12825#issuecomment-1489163821:116,Modifiability,config,config,116,"Ah, I'm actually wrong, it was defined in the Makefile itself originally. We do have a `TOKEN` variable defined in `config.mk` but `config.mk` is only used by services Makefiles. I restored the definition of TOKEN into `upload_qob_jar.sh`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12825#issuecomment-1489163821
https://github.com/hail-is/hail/pull/12825#issuecomment-1489163821:132,Modifiability,config,config,132,"Ah, I'm actually wrong, it was defined in the Makefile itself originally. We do have a `TOKEN` variable defined in `config.mk` but `config.mk` is only used by services Makefiles. I restored the definition of TOKEN into `upload_qob_jar.sh`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12825#issuecomment-1489163821
https://github.com/hail-is/hail/pull/12829#issuecomment-1500285929:173,Deployability,install,install,173,@tpoterba Instead of using `hailtop/requirements.txt` + `hail/requirements.txt` you can use `hail/pinned-requirements.txt`. It includes all the fully-pinned requirements to install hail (it is the union of the hailtop and hail requirements) and is the version of the requirements that we test with.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12829#issuecomment-1500285929
https://github.com/hail-is/hail/pull/12829#issuecomment-1500285929:288,Testability,test,test,288,@tpoterba Instead of using `hailtop/requirements.txt` + `hail/requirements.txt` you can use `hail/pinned-requirements.txt`. It includes all the fully-pinned requirements to install hail (it is the union of the hailtop and hail requirements) and is the version of the requirements that we test with.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12829#issuecomment-1500285929
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12832#issuecomment-1515280394
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12833#issuecomment-1515280563
https://github.com/hail-is/hail/pull/12838#issuecomment-1513346203:66,Testability,benchmark,benchmark,66,bump on this. Still think it's an improvement that hedges against benchmark tests killing the JVM.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1513346203
https://github.com/hail-is/hail/pull/12838#issuecomment-1513346203:76,Testability,test,tests,76,bump on this. Still think it's an improvement that hedges against benchmark tests killing the JVM.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1513346203
https://github.com/hail-is/hail/pull/12838#issuecomment-1527578232:363,Availability,failure,failures,363,"OK, but I'm not sure it's the right change to make. Now some jobs will fail silently.; I think the right thing to do would be to change how benchmark jobs are run and always collect results, regardless of job outcome (making it resiliant to some benchmark files not being in their expected locations, which we'll have to do anyway). That way, you'd still see the failures in the batch.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527578232
https://github.com/hail-is/hail/pull/12838#issuecomment-1527578232:140,Testability,benchmark,benchmark,140,"OK, but I'm not sure it's the right change to make. Now some jobs will fail silently.; I think the right thing to do would be to change how benchmark jobs are run and always collect results, regardless of job outcome (making it resiliant to some benchmark files not being in their expected locations, which we'll have to do anyway). That way, you'd still see the failures in the batch.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527578232
https://github.com/hail-is/hail/pull/12838#issuecomment-1527578232:246,Testability,benchmark,benchmark,246,"OK, but I'm not sure it's the right change to make. Now some jobs will fail silently.; I think the right thing to do would be to change how benchmark jobs are run and always collect results, regardless of job outcome (making it resiliant to some benchmark files not being in their expected locations, which we'll have to do anyway). That way, you'd still see the failures in the batch.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527578232
https://github.com/hail-is/hail/pull/12838#issuecomment-1527612619:142,Availability,failure,failure,142,"> OK, but I'm not sure it's the right change to make. Now some jobs will fail silently. I don't think this lets anything fail silently -- the failure from run() is still tracked. Agree that the right solution is to additionally track information about dead JVMs to try to provide a better error message, but that juice isn't worth the squeeze at the moment.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527612619
https://github.com/hail-is/hail/pull/12838#issuecomment-1527612619:289,Availability,error,error,289,"> OK, but I'm not sure it's the right change to make. Now some jobs will fail silently. I don't think this lets anything fail silently -- the failure from run() is still tracked. Agree that the right solution is to additionally track information about dead JVMs to try to provide a better error message, but that juice isn't worth the squeeze at the moment.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527612619
https://github.com/hail-is/hail/pull/12838#issuecomment-1527612619:295,Integrability,message,message,295,"> OK, but I'm not sure it's the right change to make. Now some jobs will fail silently. I don't think this lets anything fail silently -- the failure from run() is still tracked. Agree that the right solution is to additionally track information about dead JVMs to try to provide a better error message, but that juice isn't worth the squeeze at the moment.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527612619
https://github.com/hail-is/hail/pull/12838#issuecomment-1527648997:6,Availability,failure,failure,6,"> the failure from run() is still tracked. Is that true? When we get out-of-memory errors, doesn't `run` just return?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527648997
https://github.com/hail-is/hail/pull/12838#issuecomment-1527648997:83,Availability,error,errors,83,"> the failure from run() is still tracked. Is that true? When we get out-of-memory errors, doesn't `run` just return?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527648997
https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197:337,Availability,error,errors,337,"There's the Python process running the benchmark driver Hail client in Python, and the java process running the hail backend. We want the benchmark driver to return 0 in all cases, with information about whether the hail command finished successfully and how long it took. In current main, this works well for successful runs as well as errors that don't kill the backend (assertion, HailException, etc). It doesn't work for an error that kills the backend (segfault / oom), because while the exception handler in run() works fine, we run stop() unhandled and assume it won't throw (it only throws if the JVM is dead).. In that case, this PR lets the benchmark driver return 0 after writing a file indicating the Hail function failed, just like in an assertion error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197
https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197:428,Availability,error,error,428,"There's the Python process running the benchmark driver Hail client in Python, and the java process running the hail backend. We want the benchmark driver to return 0 in all cases, with information about whether the hail command finished successfully and how long it took. In current main, this works well for successful runs as well as errors that don't kill the backend (assertion, HailException, etc). It doesn't work for an error that kills the backend (segfault / oom), because while the exception handler in run() works fine, we run stop() unhandled and assume it won't throw (it only throws if the JVM is dead).. In that case, this PR lets the benchmark driver return 0 after writing a file indicating the Hail function failed, just like in an assertion error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197
https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197:761,Availability,error,error,761,"There's the Python process running the benchmark driver Hail client in Python, and the java process running the hail backend. We want the benchmark driver to return 0 in all cases, with information about whether the hail command finished successfully and how long it took. In current main, this works well for successful runs as well as errors that don't kill the backend (assertion, HailException, etc). It doesn't work for an error that kills the backend (segfault / oom), because while the exception handler in run() works fine, we run stop() unhandled and assume it won't throw (it only throws if the JVM is dead).. In that case, this PR lets the benchmark driver return 0 after writing a file indicating the Hail function failed, just like in an assertion error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197
https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197:39,Testability,benchmark,benchmark,39,"There's the Python process running the benchmark driver Hail client in Python, and the java process running the hail backend. We want the benchmark driver to return 0 in all cases, with information about whether the hail command finished successfully and how long it took. In current main, this works well for successful runs as well as errors that don't kill the backend (assertion, HailException, etc). It doesn't work for an error that kills the backend (segfault / oom), because while the exception handler in run() works fine, we run stop() unhandled and assume it won't throw (it only throws if the JVM is dead).. In that case, this PR lets the benchmark driver return 0 after writing a file indicating the Hail function failed, just like in an assertion error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197
https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197:138,Testability,benchmark,benchmark,138,"There's the Python process running the benchmark driver Hail client in Python, and the java process running the hail backend. We want the benchmark driver to return 0 in all cases, with information about whether the hail command finished successfully and how long it took. In current main, this works well for successful runs as well as errors that don't kill the backend (assertion, HailException, etc). It doesn't work for an error that kills the backend (segfault / oom), because while the exception handler in run() works fine, we run stop() unhandled and assume it won't throw (it only throws if the JVM is dead).. In that case, this PR lets the benchmark driver return 0 after writing a file indicating the Hail function failed, just like in an assertion error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197
https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197:373,Testability,assert,assertion,373,"There's the Python process running the benchmark driver Hail client in Python, and the java process running the hail backend. We want the benchmark driver to return 0 in all cases, with information about whether the hail command finished successfully and how long it took. In current main, this works well for successful runs as well as errors that don't kill the backend (assertion, HailException, etc). It doesn't work for an error that kills the backend (segfault / oom), because while the exception handler in run() works fine, we run stop() unhandled and assume it won't throw (it only throws if the JVM is dead).. In that case, this PR lets the benchmark driver return 0 after writing a file indicating the Hail function failed, just like in an assertion error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197
https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197:651,Testability,benchmark,benchmark,651,"There's the Python process running the benchmark driver Hail client in Python, and the java process running the hail backend. We want the benchmark driver to return 0 in all cases, with information about whether the hail command finished successfully and how long it took. In current main, this works well for successful runs as well as errors that don't kill the backend (assertion, HailException, etc). It doesn't work for an error that kills the backend (segfault / oom), because while the exception handler in run() works fine, we run stop() unhandled and assume it won't throw (it only throws if the JVM is dead).. In that case, this PR lets the benchmark driver return 0 after writing a file indicating the Hail function failed, just like in an assertion error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197
https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197:751,Testability,assert,assertion,751,"There's the Python process running the benchmark driver Hail client in Python, and the java process running the hail backend. We want the benchmark driver to return 0 in all cases, with information about whether the hail command finished successfully and how long it took. In current main, this works well for successful runs as well as errors that don't kill the backend (assertion, HailException, etc). It doesn't work for an error that kills the backend (segfault / oom), because while the exception handler in run() works fine, we run stop() unhandled and assume it won't throw (it only throws if the JVM is dead).. In that case, this PR lets the benchmark driver return 0 after writing a file indicating the Hail function failed, just like in an assertion error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12838#issuecomment-1527658197
https://github.com/hail-is/hail/pull/12840#issuecomment-1495034877:32,Availability,avail,available,32,"fwiw, `j.env(VAR, VAL)` is also available though that would set it for all the commands in the job.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12840#issuecomment-1495034877
https://github.com/hail-is/hail/pull/12841#issuecomment-1496518298:49,Energy Efficiency,monitor,monitoring,49,"Turns out we weren't running mypy on auth, gear, monitoring and website, so this triggered a bunch of lints. I fixed them in the last commit.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12841#issuecomment-1496518298
https://github.com/hail-is/hail/pull/12841#issuecomment-1497550505:32,Deployability,deploy,deploys,32,"> We should eventually lift the deploys up to the top-level too, right?. Ya, I decided just to stop just short of that for this PR for brevity and that I'll probably have to update dev docs (currently `make -C batch deploy` still works). I figured there'd be a follow-up PR for moving deploys up here as well as one or two for lifting some stuff over from the `hail/hail` Makefile (which should get reviews from query folks)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12841#issuecomment-1497550505
https://github.com/hail-is/hail/pull/12841#issuecomment-1497550505:174,Deployability,update,update,174,"> We should eventually lift the deploys up to the top-level too, right?. Ya, I decided just to stop just short of that for this PR for brevity and that I'll probably have to update dev docs (currently `make -C batch deploy` still works). I figured there'd be a follow-up PR for moving deploys up here as well as one or two for lifting some stuff over from the `hail/hail` Makefile (which should get reviews from query folks)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12841#issuecomment-1497550505
https://github.com/hail-is/hail/pull/12841#issuecomment-1497550505:216,Deployability,deploy,deploy,216,"> We should eventually lift the deploys up to the top-level too, right?. Ya, I decided just to stop just short of that for this PR for brevity and that I'll probably have to update dev docs (currently `make -C batch deploy` still works). I figured there'd be a follow-up PR for moving deploys up here as well as one or two for lifting some stuff over from the `hail/hail` Makefile (which should get reviews from query folks)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12841#issuecomment-1497550505
https://github.com/hail-is/hail/pull/12841#issuecomment-1497550505:285,Deployability,deploy,deploys,285,"> We should eventually lift the deploys up to the top-level too, right?. Ya, I decided just to stop just short of that for this PR for brevity and that I'll probably have to update dev docs (currently `make -C batch deploy` still works). I figured there'd be a follow-up PR for moving deploys up here as well as one or two for lifting some stuff over from the `hail/hail` Makefile (which should get reviews from query folks)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12841#issuecomment-1497550505
https://github.com/hail-is/hail/issues/12844#issuecomment-1501448505:53,Deployability,install,installing,53,thank you for these changes.; I am facing trouble in installing this branch of the package. i tried. pip install git+https://github.com/danking/hail.git@relax-variant-qc. git clone https://github.com/danking/hail.git --branch relax-variant-qc --single-branch; cd hail; pip install .,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1501448505
https://github.com/hail-is/hail/issues/12844#issuecomment-1501448505:105,Deployability,install,install,105,thank you for these changes.; I am facing trouble in installing this branch of the package. i tried. pip install git+https://github.com/danking/hail.git@relax-variant-qc. git clone https://github.com/danking/hail.git --branch relax-variant-qc --single-branch; cd hail; pip install .,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1501448505
https://github.com/hail-is/hail/issues/12844#issuecomment-1501448505:273,Deployability,install,install,273,thank you for these changes.; I am facing trouble in installing this branch of the package. i tried. pip install git+https://github.com/danking/hail.git@relax-variant-qc. git clone https://github.com/danking/hail.git --branch relax-variant-qc --single-branch; cd hail; pip install .,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1501448505
https://github.com/hail-is/hail/issues/12844#issuecomment-1501909992:28,Availability,error,error,28,I can’t help you without an error message or description of what didn’t work. I recommend waiting for the next release which should come out today.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1501909992
https://github.com/hail-is/hail/issues/12844#issuecomment-1501909992:111,Deployability,release,release,111,I can’t help you without an error message or description of what didn’t work. I recommend waiting for the next release which should come out today.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1501909992
https://github.com/hail-is/hail/issues/12844#issuecomment-1501909992:34,Integrability,message,message,34,I can’t help you without an error message or description of what didn’t work. I recommend waiting for the next release which should come out today.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1501909992
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:281,Availability,error,error,281,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:288,Availability,error,error,288,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:318,Availability,error,error,318,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:437,Availability,error,error,437,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:1289,Availability,error,error,1289,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:1364,Availability,error,error,1364,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:1394,Availability,error,error,1394,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:5,Deployability,install,install,5,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:39,Deployability,install,installation,39,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:138,Deployability,Install,Installing,138,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:668,Energy Efficiency,monitor,monitoring,668,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:155,Integrability,depend,dependencies,155,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290:731,Safety,avoid,avoid,731,"`pip install -e .`; Defaulting to user installation because normal site-packages is not writeable; Obtaining file:///home/skr/hail2/hail; Installing build dependencies ... done; Checking if build backend supports build_editable ... done; Getting requirements to build editable ... error; error: subprocess-exited-with-error; ; × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> [14 lines of output]; error: Multiple top-level packages discovered in a flat-layout: ['tls', 'gear', 'hail', 'auth', 'blog', 'infra', 'batch', 'query', 'docker', 'memory', 'devbin', 'gateway', 'website', 'grafana', 'notebook', 'graphics', 'datasets', 'monitoring', 'web_common', 'prometheus', 'letsencrypt'].; ; To avoid accidental inclusion of unwanted files or directories,; setuptools will not proceed with this build.; ; If you are trying to create a single distribution with multiple packages; on purpose, you should not rely on automatic discovery.; Instead, consider the following options:; ; 1. set up custom discovery (`find` directive with `include` or `exclude`); 2. use a `src-layout`; 3. explicitly set `py_modules` or `packages` with a list of names; ; To find more information, look for ""package discovery"" on setuptools docs.; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build editable did not run successfully.; │ exit code: 1; ╰─> See above for output.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502112290
https://github.com/hail-is/hail/issues/12844#issuecomment-1502218484:54,Deployability,Install,Installing,54,"The Hail python package is not a pure-Python package. Installing it from source requires building a JAR file. We have instructions [here](https://hail.is/docs/0.2/getting_started_developing.html), but I recommend waiting for the next PyPI release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502218484
https://github.com/hail-is/hail/issues/12844#issuecomment-1502218484:239,Deployability,release,release,239,"The Hail python package is not a pure-Python package. Installing it from source requires building a JAR file. We have instructions [here](https://hail.is/docs/0.2/getting_started_developing.html), but I recommend waiting for the next PyPI release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502218484
https://github.com/hail-is/hail/issues/12844#issuecomment-1502350952:22,Deployability,release,release,22,Ok I will for the new release.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12844#issuecomment-1502350952
https://github.com/hail-is/hail/pull/12848#issuecomment-1608186980:43,Performance,perform,performance,43,Closing for now until we're happy with the performance of the new v3 billing projects tables.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12848#issuecomment-1608186980
https://github.com/hail-is/hail/pull/12848#issuecomment-1680688341:35,Deployability,deploy,deploy,35,"I still need to test this with dev deploy, but at least it's on the radar again.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12848#issuecomment-1680688341
https://github.com/hail-is/hail/pull/12848#issuecomment-1680688341:16,Testability,test,test,16,"I still need to test this with dev deploy, but at least it's on the radar again.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12848#issuecomment-1680688341
https://github.com/hail-is/hail/pull/12849#issuecomment-1607879959:207,Performance,perform,performance,207,I'm debating whether this PR and #12848 are necessary right now. It's going to take a lot of effort to run the migrations with the number of rows involved and deduping these tables will not impact any query performance. The original goal was to have a consistent set of tables with the billing tables that needed to be deduped.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1607879959
https://github.com/hail-is/hail/pull/12849#issuecomment-1608187955:43,Performance,perform,performance,43,Closing for now until we're happy with the performance of the new v3 tables for billing project queries.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1608187955
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:2979,Availability,error,errors,2979,"s_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can differ between ""v2"" and ""v3"", so we just check the overall job adds up to the same usage after deduplicating the resource IDs on both tables. I recommend looking at the main function towards the bottom of the script and then working your way through it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:1400,Deployability,update,updated,1400,"`batches`, and `jobs`. The currently used version of these tables are `aggregated_*_resources_v2` with the emphasis on ""v2"". We've created new ""v3"" tables already that are almost identical to ""v2"" except we're deduplicating resources with the exact same billing rate to save space in the database. We're currently double writing to both the ""v2"" and ""v3"" tables. When we added the new ""v3"" tables, data from all newly created batches since then have been correctly populating both tables. However, we need to back fill the tables with old records. We've currently finished back-populating 3 out of 4 of the ""v3"" tables. The last one that remains is `aggregated_job_resources_v3`. I estimate the time to back fill this table will be on the order of 12 hours. How the backfilling works is we have a flag / Boolean Column on the equivalent `v2` table that says whether the rows have been migrated to the `v3` table already. There's then a trigger already in place that every time a row in the `v2` table is updated such as `update aggregated_job_resources_v2 set migrated = 1 where ...`, then we check whether the row has already been ""migrated"". If it hasn't then we insert new rows into the ""v3"" table with the deduped resource ID as the key. The exact trigger is . ```sql; DROP TRIGGER IF EXISTS aggregated_job_resources_v2_after_update $$; CREATE TRIGGER aggregated_job_resources_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:1417,Deployability,update,update,1417,"`batches`, and `jobs`. The currently used version of these tables are `aggregated_*_resources_v2` with the emphasis on ""v2"". We've created new ""v3"" tables already that are almost identical to ""v2"" except we're deduplicating resources with the exact same billing rate to save space in the database. We're currently double writing to both the ""v2"" and ""v3"" tables. When we added the new ""v3"" tables, data from all newly created batches since then have been correctly populating both tables. However, we need to back fill the tables with old records. We've currently finished back-populating 3 out of 4 of the ""v3"" tables. The last one that remains is `aggregated_job_resources_v3`. I estimate the time to back fill this table will be on the order of 12 hours. How the backfilling works is we have a flag / Boolean Column on the equivalent `v2` table that says whether the rows have been migrated to the `v3` table already. There's then a trigger already in place that every time a row in the `v2` table is updated such as `update aggregated_job_resources_v2 set migrated = 1 where ...`, then we check whether the row has already been ""migrated"". If it hasn't then we insert new rows into the ""v3"" table with the deduped resource ID as the key. The exact trigger is . ```sql; DROP TRIGGER IF EXISTS aggregated_job_resources_v2_after_update $$; CREATE TRIGGER aggregated_job_resources_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:1799,Deployability,UPDATE,UPDATE,1799,"ew ""v3"" tables, data from all newly created batches since then have been correctly populating both tables. However, we need to back fill the tables with old records. We've currently finished back-populating 3 out of 4 of the ""v3"" tables. The last one that remains is `aggregated_job_resources_v3`. I estimate the time to back fill this table will be on the order of 12 hours. How the backfilling works is we have a flag / Boolean Column on the equivalent `v2` table that says whether the rows have been migrated to the `v3` table already. There's then a trigger already in place that every time a row in the `v2` table is updated such as `update aggregated_job_resources_v2 set migrated = 1 where ...`, then we check whether the row has already been ""migrated"". If it hasn't then we insert new rows into the ""v3"" table with the deduped resource ID as the key. The exact trigger is . ```sql; DROP TRIGGER IF EXISTS aggregated_job_resources_v2_after_update $$; CREATE TRIGGER aggregated_job_resources_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the b",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:2223,Deployability,UPDATE,UPDATE,2223,"valent `v2` table that says whether the rows have been migrated to the `v3` table already. There's then a trigger already in place that every time a row in the `v2` table is updated such as `update aggregated_job_resources_v2 set migrated = 1 where ...`, then we check whether the row has already been ""migrated"". If it hasn't then we insert new rows into the ""v3"" table with the deduped resource ID as the key. The exact trigger is . ```sql; DROP TRIGGER IF EXISTS aggregated_job_resources_v2_after_update $$; CREATE TRIGGER aggregated_job_resources_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this a",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:2700,Deployability,update,update,2700," exact trigger is . ```sql; DROP TRIGGER IF EXISTS aggregated_job_resources_v2_after_update $$; CREATE TRIGGER aggregated_job_resources_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can differ between ""v2"" and ""v3"", so we just check the overall job adds up to the same usage after deduplicating the resourc",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:2817,Deployability,update,update,2817,"s_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can differ between ""v2"" and ""v3"", so we just check the overall job adds up to the same usage after deduplicating the resource IDs on both tables. I recommend looking at the main function towards the bottom of the script and then working your way through it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:3056,Deployability,update,updates,3056,"s_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can differ between ""v2"" and ""v3"", so we just check the overall job adds up to the same usage after deduplicating the resource IDs on both tables. I recommend looking at the main function towards the bottom of the script and then working your way through it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:3476,Deployability,update,updates,3476,"s_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can differ between ""v2"" and ""v3"", so we just check the overall job adds up to the same usage after deduplicating the resource IDs on both tables. I recommend looking at the main function towards the bottom of the script and then working your way through it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:2494,Performance,optimiz,optimized,2494,"been ""migrated"". If it hasn't then we insert new rows into the ""v3"" table with the deduped resource ID as the key. The exact trigger is . ```sql; DROP TRIGGER IF EXISTS aggregated_job_resources_v2_after_update $$; CREATE TRIGGER aggregated_job_resources_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can di",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:2544,Performance,perform,performance,2544,"been ""migrated"". If it hasn't then we insert new rows into the ""v3"" table with the deduped resource ID as the key. The exact trigger is . ```sql; DROP TRIGGER IF EXISTS aggregated_job_resources_v2_after_update $$; CREATE TRIGGER aggregated_job_resources_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can di",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:3088,Security,audit,audit,3088,"s_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can differ between ""v2"" and ""v3"", so we just check the overall job adds up to the same usage after deduplicating the resource IDs on both tables. I recommend looking at the main function towards the bottom of the script and then working your way through it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:3226,Security,audit,audit,3226,"s_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can differ between ""v2"" and ""v3"", so we just check the overall job adds up to the same usage after deduplicating the resource IDs on both tables. I recommend looking at the main function towards the bottom of the script and then working your way through it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:3288,Security,audit,audit,3288,"s_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can differ between ""v2"" and ""v3"", so we just check the overall job adds up to the same usage after deduplicating the resource IDs on both tables. I recommend looking at the main function towards the bottom of the script and then working your way through it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782:3336,Security,audit,audit,3336,"s_v2_after_update AFTER UPDATE ON aggregated_job_resources_v2; FOR EACH ROW; BEGIN; DECLARE new_deduped_resource_id INT;. IF OLD.migrated = 0 AND NEW.migrated = 1 THEN; SELECT deduped_resource_id INTO new_deduped_resource_id FROM resources WHERE resource_id = OLD.resource_id;. INSERT INTO aggregated_job_resources_v3 (batch_id, job_id, resource_id, `usage`); VALUES (NEW.batch_id, NEW.job_id, new_deduped_resource_id, NEW.usage); ON DUPLICATE KEY UPDATE; `usage` = `usage` + NEW.usage;; END IF;; END $$; ```. What this PR does is find the keys of all rows in the `aggregated_jobs_resources_v2` table in intervals of 100 rows. This is a ""chunk"". The reason is because we want to keep the transactions small and fast. I optimized this and found 100 rows worked best for performance. We then want to set `migrated=1` for all rows in the given chunk which activates the trigger and also maintains idempotency so we only run the update for each chunk once. . Most of the code in this PR is identifying the bounds of each chunk and then doing the update. We have a burn-in period at the beginning where we migrate chunks serially. Then we migrate the chunks in 10-way parallel. This is to get rid of deadlock errors due to row locks with the ""birthday problem"". Lastly, once all of the updates are complete, we run an audit that makes sure the ""v2"" and ""v3"" tables are equivalent and have the same total aggregate resource usage. I believe I also run this audit in chunks here as these tables are massive and a single audit query would take hours. The bounds of the audit for these chunks are on the order of `(batch_id, job_id)` rather than `(batch_id, job_id, resource_id)` which was used for the actual updates. This is because the resource_ids can differ between ""v2"" and ""v3"", so we just check the overall job adds up to the same usage after deduplicating the resource IDs on both tables. I recommend looking at the main function towards the bottom of the script and then working your way through it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12849#issuecomment-1771141782
https://github.com/hail-is/hail/pull/12850#issuecomment-1518033925:1442,Availability,Error,Error,1442,"Needs a `python3 -m black batch --line-length=120 --skip-string-normalization`; ```; PYTHONPATH=${PYTHONPATH:+${PYTHONPATH}:}../hail/python:../gear:../web_common python3 -m black . --line-length=120 --skip-string-normalization --check --diff; --- batch/driver/main.py	2023-04-05 14:40:12.638902 +0000; +++ batch/driver/main.py	2023-04-05 14:44:25.172615 +0000; @@ -1226,11 +1226,12 @@; ; INSERT INTO aggregated_billing_project_user_resources_v3 (billing_project, `user`, resource_id, token, `usage`); SELECT billing_project, `user`, resource_id, 0, `usage`; FROM scratch; ON DUPLICATE KEY UPDATE `usage` = `usage` + scratch.`usage`;; -'''); +'''; + ); ; await compact() # pylint: disable=no-value-for-parameter; ; ; async def compact_agg_billing_project_users_by_date_table(app):; @@ -1254,11 +1255,12 @@; ; INSERT INTO aggregated_billing_project_user_resources_by_date_v3 (billing_date, billing_project, `user`, resource_id, token, `usage`); SELECT billing_date, billing_project, `user`, resource_id, 0, `usage`; FROM scratch; ON DUPLICATE KEY UPDATE `usage` = `usage` + scratch.`usage`;; -'''); +'''; + ); ; await compact() # pylint: disable=no-value-for-parameter; ; ; USER_CORES = pc.Gauge('batch_user_cores', 'Batch user cores (i.e. total in-use cores)', ['state', 'user', 'inst_coll']); would reformat batch/driver/main.py. Oh no! 💥 💔 💥; 1 file would be reformatted, 93 files would be left unchanged.; make[1]: *** [Makefile:18: check] Error 1; make[1]: Leaving directory '/io/repo/batch'; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12850#issuecomment-1518033925
https://github.com/hail-is/hail/pull/12850#issuecomment-1518033925:589,Deployability,UPDATE,UPDATE,589,"Needs a `python3 -m black batch --line-length=120 --skip-string-normalization`; ```; PYTHONPATH=${PYTHONPATH:+${PYTHONPATH}:}../hail/python:../gear:../web_common python3 -m black . --line-length=120 --skip-string-normalization --check --diff; --- batch/driver/main.py	2023-04-05 14:40:12.638902 +0000; +++ batch/driver/main.py	2023-04-05 14:44:25.172615 +0000; @@ -1226,11 +1226,12 @@; ; INSERT INTO aggregated_billing_project_user_resources_v3 (billing_project, `user`, resource_id, token, `usage`); SELECT billing_project, `user`, resource_id, 0, `usage`; FROM scratch; ON DUPLICATE KEY UPDATE `usage` = `usage` + scratch.`usage`;; -'''); +'''; + ); ; await compact() # pylint: disable=no-value-for-parameter; ; ; async def compact_agg_billing_project_users_by_date_table(app):; @@ -1254,11 +1255,12 @@; ; INSERT INTO aggregated_billing_project_user_resources_by_date_v3 (billing_date, billing_project, `user`, resource_id, token, `usage`); SELECT billing_date, billing_project, `user`, resource_id, 0, `usage`; FROM scratch; ON DUPLICATE KEY UPDATE `usage` = `usage` + scratch.`usage`;; -'''); +'''; + ); ; await compact() # pylint: disable=no-value-for-parameter; ; ; USER_CORES = pc.Gauge('batch_user_cores', 'Batch user cores (i.e. total in-use cores)', ['state', 'user', 'inst_coll']); would reformat batch/driver/main.py. Oh no! 💥 💔 💥; 1 file would be reformatted, 93 files would be left unchanged.; make[1]: *** [Makefile:18: check] Error 1; make[1]: Leaving directory '/io/repo/batch'; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12850#issuecomment-1518033925
https://github.com/hail-is/hail/pull/12850#issuecomment-1518033925:1045,Deployability,UPDATE,UPDATE,1045,"Needs a `python3 -m black batch --line-length=120 --skip-string-normalization`; ```; PYTHONPATH=${PYTHONPATH:+${PYTHONPATH}:}../hail/python:../gear:../web_common python3 -m black . --line-length=120 --skip-string-normalization --check --diff; --- batch/driver/main.py	2023-04-05 14:40:12.638902 +0000; +++ batch/driver/main.py	2023-04-05 14:44:25.172615 +0000; @@ -1226,11 +1226,12 @@; ; INSERT INTO aggregated_billing_project_user_resources_v3 (billing_project, `user`, resource_id, token, `usage`); SELECT billing_project, `user`, resource_id, 0, `usage`; FROM scratch; ON DUPLICATE KEY UPDATE `usage` = `usage` + scratch.`usage`;; -'''); +'''; + ); ; await compact() # pylint: disable=no-value-for-parameter; ; ; async def compact_agg_billing_project_users_by_date_table(app):; @@ -1254,11 +1255,12 @@; ; INSERT INTO aggregated_billing_project_user_resources_by_date_v3 (billing_date, billing_project, `user`, resource_id, token, `usage`); SELECT billing_date, billing_project, `user`, resource_id, 0, `usage`; FROM scratch; ON DUPLICATE KEY UPDATE `usage` = `usage` + scratch.`usage`;; -'''); +'''; + ); ; await compact() # pylint: disable=no-value-for-parameter; ; ; USER_CORES = pc.Gauge('batch_user_cores', 'Batch user cores (i.e. total in-use cores)', ['state', 'user', 'inst_coll']); would reformat batch/driver/main.py. Oh no! 💥 💔 💥; 1 file would be reformatted, 93 files would be left unchanged.; make[1]: *** [Makefile:18: check] Error 1; make[1]: Leaving directory '/io/repo/batch'; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12850#issuecomment-1518033925
https://github.com/hail-is/hail/pull/12851#issuecomment-1501410278:53,Deployability,install,installing,53,thank you for these changes.; I am facing trouble in installing this branch of the package. i tried. `pip install git+https://github.com/danking/hail.git@relax-variant-qc`. ```; git clone https://github.com/danking/hail.git --branch relax-variant-qc --single-branch; cd hail; pip install .; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12851#issuecomment-1501410278
https://github.com/hail-is/hail/pull/12851#issuecomment-1501410278:106,Deployability,install,install,106,thank you for these changes.; I am facing trouble in installing this branch of the package. i tried. `pip install git+https://github.com/danking/hail.git@relax-variant-qc`. ```; git clone https://github.com/danking/hail.git --branch relax-variant-qc --single-branch; cd hail; pip install .; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12851#issuecomment-1501410278
https://github.com/hail-is/hail/pull/12851#issuecomment-1501410278:280,Deployability,install,install,280,thank you for these changes.; I am facing trouble in installing this branch of the package. i tried. `pip install git+https://github.com/danking/hail.git@relax-variant-qc`. ```; git clone https://github.com/danking/hail.git --branch relax-variant-qc --single-branch; cd hail; pip install .; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12851#issuecomment-1501410278
https://github.com/hail-is/hail/issues/12852#issuecomment-1570828503:155,Deployability,patch,patch,155,What do you think about a solution where we only upload/send the last 50MB of the log file and then worry about a nicer interface later on? This will also patch up a liability we've had where someone could write a huge log file that we'd then have to pay for.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570828503
https://github.com/hail-is/hail/issues/12852#issuecomment-1570828503:120,Integrability,interface,interface,120,What do you think about a solution where we only upload/send the last 50MB of the log file and then worry about a nicer interface later on? This will also patch up a liability we've had where someone could write a huge log file that we'd then have to pay for.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570828503
https://github.com/hail-is/hail/issues/12852#issuecomment-1570828503:82,Testability,log,log,82,What do you think about a solution where we only upload/send the last 50MB of the log file and then worry about a nicer interface later on? This will also patch up a liability we've had where someone could write a huge log file that we'd then have to pay for.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570828503
https://github.com/hail-is/hail/issues/12852#issuecomment-1570828503:219,Testability,log,log,219,What do you think about a solution where we only upload/send the last 50MB of the log file and then worry about a nicer interface later on? This will also patch up a liability we've had where someone could write a huge log file that we'd then have to pay for.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570828503
https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197:172,Availability,down,download,172,"Do you mean when showing the log in the UI or the final upload to blob storage?. I think that's a great idea for the UI, where we show a truncated view in the page and the download button provides a way to stream the log file without loading it into memory on the front-end. In terms of the final upload, I'm a little wary about making a breaking change like that. It's probably true that if you're spewing tons of logs as a user you probably want to not do that. But if we move later to hosting logs in user-provided buckets instead of our own bucket there's no reason why they shouldn't be able to write large logs if they want to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197
https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197:234,Performance,load,loading,234,"Do you mean when showing the log in the UI or the final upload to blob storage?. I think that's a great idea for the UI, where we show a truncated view in the page and the download button provides a way to stream the log file without loading it into memory on the front-end. In terms of the final upload, I'm a little wary about making a breaking change like that. It's probably true that if you're spewing tons of logs as a user you probably want to not do that. But if we move later to hosting logs in user-provided buckets instead of our own bucket there's no reason why they shouldn't be able to write large logs if they want to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197
https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197:29,Testability,log,log,29,"Do you mean when showing the log in the UI or the final upload to blob storage?. I think that's a great idea for the UI, where we show a truncated view in the page and the download button provides a way to stream the log file without loading it into memory on the front-end. In terms of the final upload, I'm a little wary about making a breaking change like that. It's probably true that if you're spewing tons of logs as a user you probably want to not do that. But if we move later to hosting logs in user-provided buckets instead of our own bucket there's no reason why they shouldn't be able to write large logs if they want to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197
https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197:217,Testability,log,log,217,"Do you mean when showing the log in the UI or the final upload to blob storage?. I think that's a great idea for the UI, where we show a truncated view in the page and the download button provides a way to stream the log file without loading it into memory on the front-end. In terms of the final upload, I'm a little wary about making a breaking change like that. It's probably true that if you're spewing tons of logs as a user you probably want to not do that. But if we move later to hosting logs in user-provided buckets instead of our own bucket there's no reason why they shouldn't be able to write large logs if they want to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197
https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197:415,Testability,log,logs,415,"Do you mean when showing the log in the UI or the final upload to blob storage?. I think that's a great idea for the UI, where we show a truncated view in the page and the download button provides a way to stream the log file without loading it into memory on the front-end. In terms of the final upload, I'm a little wary about making a breaking change like that. It's probably true that if you're spewing tons of logs as a user you probably want to not do that. But if we move later to hosting logs in user-provided buckets instead of our own bucket there's no reason why they shouldn't be able to write large logs if they want to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197
https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197:496,Testability,log,logs,496,"Do you mean when showing the log in the UI or the final upload to blob storage?. I think that's a great idea for the UI, where we show a truncated view in the page and the download button provides a way to stream the log file without loading it into memory on the front-end. In terms of the final upload, I'm a little wary about making a breaking change like that. It's probably true that if you're spewing tons of logs as a user you probably want to not do that. But if we move later to hosting logs in user-provided buckets instead of our own bucket there's no reason why they shouldn't be able to write large logs if they want to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197
https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197:612,Testability,log,logs,612,"Do you mean when showing the log in the UI or the final upload to blob storage?. I think that's a great idea for the UI, where we show a truncated view in the page and the download button provides a way to stream the log file without loading it into memory on the front-end. In terms of the final upload, I'm a little wary about making a breaking change like that. It's probably true that if you're spewing tons of logs as a user you probably want to not do that. But if we move later to hosting logs in user-provided buckets instead of our own bucket there's no reason why they shouldn't be able to write large logs if they want to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570846197
https://github.com/hail-is/hail/issues/12852#issuecomment-1570847814:34,Testability,log,logs,34,> But if we move later to hosting logs in user-provided buckets instead of our own bucket there's no reason why they shouldn't be able to write large logs if they want to. Good point. I'll think about this more once I've done a bit more research.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570847814
https://github.com/hail-is/hail/issues/12852#issuecomment-1570847814:150,Testability,log,logs,150,> But if we move later to hosting logs in user-provided buckets instead of our own bucket there's no reason why they shouldn't be able to write large logs if they want to. Good point. I'll think about this more once I've done a bit more research.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1570847814
https://github.com/hail-is/hail/issues/12852#issuecomment-1653991936:170,Availability,down,download,170,"In the short term, a fix which makes the UI usable again for these kinds of jobs is to check blob size, if it's over some threshold, show no log and instruct the user to download it. Then fix the download to use aiohttp's StreamResponse. We should maybe split this issue into a frontend-side and worker-side.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1653991936
https://github.com/hail-is/hail/issues/12852#issuecomment-1653991936:196,Availability,down,download,196,"In the short term, a fix which makes the UI usable again for these kinds of jobs is to check blob size, if it's over some threshold, show no log and instruct the user to download it. Then fix the download to use aiohttp's StreamResponse. We should maybe split this issue into a frontend-side and worker-side.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1653991936
https://github.com/hail-is/hail/issues/12852#issuecomment-1653991936:141,Testability,log,log,141,"In the short term, a fix which makes the UI usable again for these kinds of jobs is to check blob size, if it's over some threshold, show no log and instruct the user to download it. Then fix the download to use aiohttp's StreamResponse. We should maybe split this issue into a frontend-side and worker-side.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1653991936
https://github.com/hail-is/hail/issues/12852#issuecomment-1653991936:44,Usability,usab,usable,44,"In the short term, a fix which makes the UI usable again for these kinds of jobs is to check blob size, if it's over some threshold, show no log and instruct the user to download it. Then fix the download to use aiohttp's StreamResponse. We should maybe split this issue into a frontend-side and worker-side.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12852#issuecomment-1653991936
https://github.com/hail-is/hail/pull/12853#issuecomment-1500328024:26,Availability,ping,ping,26,@daniel-goldstein can you ping #general when this merges about:; > - (hail#12801) Hitting CTRL-C while interactively using Query on Batch cancels the underlying batch.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12853#issuecomment-1500328024
https://github.com/hail-is/hail/pull/12853#issuecomment-1500424252:63,Deployability,release,release,63,Let's get https://github.com/hail-is/hail/pull/12854 into this release. I slapped high:prio on it.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12853#issuecomment-1500424252
https://github.com/hail-is/hail/pull/12854#issuecomment-1500393140:23,Performance,concurren,concurrency,23,"### readAllBytes, Java concurrency, no semaphore:; 3.97912865 s.; 502.6226030666287 result/s.p; 0.007669412278238353 MiB/s.; https://batch.hail.is/batches/7228525/jobs/1; ### readAllBytes, Java concurrency, semaphore 100; 4.931811728 s.; 405.53048459760674 result/s.; 0.0061879041228882865 MiB/s.; https://batch.hail.is/batches/7228527/jobs/1; ### readAllBytes, Scala concurrency, semaphore 100; 112.306885221 s.; 17.808347155780833 result/s.; 2.7173381280183156E-4 MiB/s.; https://batch.hail.is/batches/7228528/jobs/1",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12854#issuecomment-1500393140
https://github.com/hail-is/hail/pull/12854#issuecomment-1500393140:194,Performance,concurren,concurrency,194,"### readAllBytes, Java concurrency, no semaphore:; 3.97912865 s.; 502.6226030666287 result/s.p; 0.007669412278238353 MiB/s.; https://batch.hail.is/batches/7228525/jobs/1; ### readAllBytes, Java concurrency, semaphore 100; 4.931811728 s.; 405.53048459760674 result/s.; 0.0061879041228882865 MiB/s.; https://batch.hail.is/batches/7228527/jobs/1; ### readAllBytes, Scala concurrency, semaphore 100; 112.306885221 s.; 17.808347155780833 result/s.; 2.7173381280183156E-4 MiB/s.; https://batch.hail.is/batches/7228528/jobs/1",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12854#issuecomment-1500393140
https://github.com/hail-is/hail/pull/12854#issuecomment-1500393140:368,Performance,concurren,concurrency,368,"### readAllBytes, Java concurrency, no semaphore:; 3.97912865 s.; 502.6226030666287 result/s.p; 0.007669412278238353 MiB/s.; https://batch.hail.is/batches/7228525/jobs/1; ### readAllBytes, Java concurrency, semaphore 100; 4.931811728 s.; 405.53048459760674 result/s.; 0.0061879041228882865 MiB/s.; https://batch.hail.is/batches/7228527/jobs/1; ### readAllBytes, Scala concurrency, semaphore 100; 112.306885221 s.; 17.808347155780833 result/s.; 2.7173381280183156E-4 MiB/s.; https://batch.hail.is/batches/7228528/jobs/1",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12854#issuecomment-1500393140
https://github.com/hail-is/hail/pull/12856#issuecomment-1503596842:617,Usability,clear,clearer,617,"> Love this! I think this graph would be easier to reason about if you made all the bars the positive percentage runtime (i.e. runtime_i / mean(runtime)). Then add a gray line at 100% to indicate whether you're faster or slower. In this representation, the relative sizes of the bar are easy to see and meaningful (if bar 1 is half the size of bar 2, then option 1 is 2x as fast). I've taken a different approach. I've made the first argument the baseline against which all other runs are compared. the baseline result isn't plotted anymore, instead differences to the baseline are plotted. I think the plot is a lot clearer now. I also think negative values make more sense as we're comparing runs directly against a baseline. Let me know what you think!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12856#issuecomment-1503596842
https://github.com/hail-is/hail/issues/12859#issuecomment-1502215008:38,Deployability,patch,patching,38,This is caused by VariantSpark monkey patching Hail. I've asked them to [stop doing this](https://github.com/aehrc/VariantSpark/issues/228).,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12859#issuecomment-1502215008
https://github.com/hail-is/hail/pull/12864#issuecomment-1516489544:333,Availability,robust,robust,333,"> Drive by comment here as I review PRs, but this is The Python Way, for better or worse. People call it ""easer to ask forgiveness than permission"". I don't personally have strong feelings one way or the other but we do this in many places in our codebase. Be that as it may, throwing if something does not exist is clearer and more robust that catching an error because some operation failed for what is arguably unexceptional, and just hoping that the `KeyError` that that operation threw is because the item did not exist, rather than another `KeyError` risen in any subsequent work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12864#issuecomment-1516489544
https://github.com/hail-is/hail/pull/12864#issuecomment-1516489544:357,Availability,error,error,357,"> Drive by comment here as I review PRs, but this is The Python Way, for better or worse. People call it ""easer to ask forgiveness than permission"". I don't personally have strong feelings one way or the other but we do this in many places in our codebase. Be that as it may, throwing if something does not exist is clearer and more robust that catching an error because some operation failed for what is arguably unexceptional, and just hoping that the `KeyError` that that operation threw is because the item did not exist, rather than another `KeyError` risen in any subsequent work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12864#issuecomment-1516489544
https://github.com/hail-is/hail/pull/12864#issuecomment-1516489544:316,Usability,clear,clearer,316,"> Drive by comment here as I review PRs, but this is The Python Way, for better or worse. People call it ""easer to ask forgiveness than permission"". I don't personally have strong feelings one way or the other but we do this in many places in our codebase. Be that as it may, throwing if something does not exist is clearer and more robust that catching an error because some operation failed for what is arguably unexceptional, and just hoping that the `KeyError` that that operation threw is because the item did not exist, rather than another `KeyError` risen in any subsequent work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12864#issuecomment-1516489544
https://github.com/hail-is/hail/pull/12864#issuecomment-1516511437:125,Availability,error,error,125,"I agree this is the most compelling critique. I think the Pythonistas would make two points: a) KeyError is the one specific error you get in this case and b) it should be written like this:; ```python3; try:; persisted_bm = self._persisted_locations[bm]; except KeyError as err:; raise ValueError(f'{bm} is not persisted') from err; persisted_bm.__exit__(None, None, None); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12864#issuecomment-1516511437
https://github.com/hail-is/hail/pull/12864#issuecomment-1516535470:127,Availability,error,error,127,"> I agree this is the most compelling critique. I think the Pythonistas would make two points: a) KeyError is the one specific error you get in this case and b) it should be written like this:; > ; > ```python; > try:; > persisted_bm = self._persisted_locations[bm]; > except KeyError as err:; > raise ValueError(f'{bm} is not persisted') from err; > persisted_bm.__exit__(None, None, None); > ```. Updated my comment - I think my argument still holds with `KeyError`. Furthermore, you're still leaving around state in that dict, opening yourself up to calling `__exit__` twice.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12864#issuecomment-1516535470
https://github.com/hail-is/hail/pull/12864#issuecomment-1516535470:399,Deployability,Update,Updated,399,"> I agree this is the most compelling critique. I think the Pythonistas would make two points: a) KeyError is the one specific error you get in this case and b) it should be written like this:; > ; > ```python; > try:; > persisted_bm = self._persisted_locations[bm]; > except KeyError as err:; > raise ValueError(f'{bm} is not persisted') from err; > persisted_bm.__exit__(None, None, None); > ```. Updated my comment - I think my argument still holds with `KeyError`. Furthermore, you're still leaving around state in that dict, opening yourself up to calling `__exit__` twice.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12864#issuecomment-1516535470
https://github.com/hail-is/hail/pull/12877#issuecomment-1522222236:116,Testability,test,tests,116,"Also, you can use `haildev` for the RG and `22cd45fe-f996-4c51-af67-ef329d977519` for the subscription id for these tests. The changes to the tests you made seem totally reasonable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12877#issuecomment-1522222236
https://github.com/hail-is/hail/pull/12877#issuecomment-1522222236:142,Testability,test,tests,142,"Also, you can use `haildev` for the RG and `22cd45fe-f996-4c51-af67-ef329d977519` for the subscription id for these tests. The changes to the tests you made seem totally reasonable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12877#issuecomment-1522222236
https://github.com/hail-is/hail/pull/12882#issuecomment-1507162756:415,Deployability,update,updated,415,"The terraform plan for `gcp-broad` has 4 changes after appropriately importing. The bucket, ci_config, and hail_ci_0_1_github_oauth_token are actually unchanged. I do not know why they are listed as a change. That secret currently has three files: hail-ci-0-1.key, oauth-token, user1, user2. AFAICT, only `user1` is used, so the new secret only has `user1`. ```; # module.ci[0].google_storage_bucket.bucket will be updated in-place; ~ resource ""google_storage_bucket"" ""bucket"" {; id = ""hail-ci-bpk3h""; # Warning: this attribute value will be marked as sensitive and will not; # display in UI output after applying this change. The value is unchanged.; ~ location = (sensitive value); name = ""hail-ci-bpk3h""; # Warning: this attribute value will be marked as sensitive and will not; # display in UI output after applying this change. The value is unchanged.; ~ storage_class = (sensitive value); # (8 unchanged attributes hidden). # (2 unchanged blocks hidden); }. # module.ci[0].kubernetes_secret.ci_config will be updated in-place; ~ resource ""kubernetes_secret"" ""ci_config"" {; id = ""default/ci-config""; # (3 unchanged attributes hidden). # (1 unchanged block hidden); }. # module.ci[0].kubernetes_secret.hail_ci_0_1_github_oauth_token will be updated in-place; ~ resource ""kubernetes_secret"" ""hail_ci_0_1_github_oauth_token"" {; id = ""default/hail-ci-0-1-github-oauth-token""; # (3 unchanged attributes hidden). # (1 unchanged block hidden); }. # module.ci[0].kubernetes_secret.hail_ci_0_1_service_account_key will be updated in-place; ~ resource ""kubernetes_secret"" ""hail_ci_0_1_service_account_key"" {; ~ data = (sensitive value); id = ""default/hail-ci-0-1-service-account-key""; # (2 unchanged attributes hidden). # (1 unchanged block hidden); }; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12882#issuecomment-1507162756
https://github.com/hail-is/hail/pull/12882#issuecomment-1507162756:1015,Deployability,update,updated,1015,"The terraform plan for `gcp-broad` has 4 changes after appropriately importing. The bucket, ci_config, and hail_ci_0_1_github_oauth_token are actually unchanged. I do not know why they are listed as a change. That secret currently has three files: hail-ci-0-1.key, oauth-token, user1, user2. AFAICT, only `user1` is used, so the new secret only has `user1`. ```; # module.ci[0].google_storage_bucket.bucket will be updated in-place; ~ resource ""google_storage_bucket"" ""bucket"" {; id = ""hail-ci-bpk3h""; # Warning: this attribute value will be marked as sensitive and will not; # display in UI output after applying this change. The value is unchanged.; ~ location = (sensitive value); name = ""hail-ci-bpk3h""; # Warning: this attribute value will be marked as sensitive and will not; # display in UI output after applying this change. The value is unchanged.; ~ storage_class = (sensitive value); # (8 unchanged attributes hidden). # (2 unchanged blocks hidden); }. # module.ci[0].kubernetes_secret.ci_config will be updated in-place; ~ resource ""kubernetes_secret"" ""ci_config"" {; id = ""default/ci-config""; # (3 unchanged attributes hidden). # (1 unchanged block hidden); }. # module.ci[0].kubernetes_secret.hail_ci_0_1_github_oauth_token will be updated in-place; ~ resource ""kubernetes_secret"" ""hail_ci_0_1_github_oauth_token"" {; id = ""default/hail-ci-0-1-github-oauth-token""; # (3 unchanged attributes hidden). # (1 unchanged block hidden); }. # module.ci[0].kubernetes_secret.hail_ci_0_1_service_account_key will be updated in-place; ~ resource ""kubernetes_secret"" ""hail_ci_0_1_service_account_key"" {; ~ data = (sensitive value); id = ""default/hail-ci-0-1-service-account-key""; # (2 unchanged attributes hidden). # (1 unchanged block hidden); }; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12882#issuecomment-1507162756
https://github.com/hail-is/hail/pull/12882#issuecomment-1507162756:1245,Deployability,update,updated,1245,"The terraform plan for `gcp-broad` has 4 changes after appropriately importing. The bucket, ci_config, and hail_ci_0_1_github_oauth_token are actually unchanged. I do not know why they are listed as a change. That secret currently has three files: hail-ci-0-1.key, oauth-token, user1, user2. AFAICT, only `user1` is used, so the new secret only has `user1`. ```; # module.ci[0].google_storage_bucket.bucket will be updated in-place; ~ resource ""google_storage_bucket"" ""bucket"" {; id = ""hail-ci-bpk3h""; # Warning: this attribute value will be marked as sensitive and will not; # display in UI output after applying this change. The value is unchanged.; ~ location = (sensitive value); name = ""hail-ci-bpk3h""; # Warning: this attribute value will be marked as sensitive and will not; # display in UI output after applying this change. The value is unchanged.; ~ storage_class = (sensitive value); # (8 unchanged attributes hidden). # (2 unchanged blocks hidden); }. # module.ci[0].kubernetes_secret.ci_config will be updated in-place; ~ resource ""kubernetes_secret"" ""ci_config"" {; id = ""default/ci-config""; # (3 unchanged attributes hidden). # (1 unchanged block hidden); }. # module.ci[0].kubernetes_secret.hail_ci_0_1_github_oauth_token will be updated in-place; ~ resource ""kubernetes_secret"" ""hail_ci_0_1_github_oauth_token"" {; id = ""default/hail-ci-0-1-github-oauth-token""; # (3 unchanged attributes hidden). # (1 unchanged block hidden); }. # module.ci[0].kubernetes_secret.hail_ci_0_1_service_account_key will be updated in-place; ~ resource ""kubernetes_secret"" ""hail_ci_0_1_service_account_key"" {; ~ data = (sensitive value); id = ""default/hail-ci-0-1-service-account-key""; # (2 unchanged attributes hidden). # (1 unchanged block hidden); }; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12882#issuecomment-1507162756
https://github.com/hail-is/hail/pull/12882#issuecomment-1507162756:1518,Deployability,update,updated,1518,"The terraform plan for `gcp-broad` has 4 changes after appropriately importing. The bucket, ci_config, and hail_ci_0_1_github_oauth_token are actually unchanged. I do not know why they are listed as a change. That secret currently has three files: hail-ci-0-1.key, oauth-token, user1, user2. AFAICT, only `user1` is used, so the new secret only has `user1`. ```; # module.ci[0].google_storage_bucket.bucket will be updated in-place; ~ resource ""google_storage_bucket"" ""bucket"" {; id = ""hail-ci-bpk3h""; # Warning: this attribute value will be marked as sensitive and will not; # display in UI output after applying this change. The value is unchanged.; ~ location = (sensitive value); name = ""hail-ci-bpk3h""; # Warning: this attribute value will be marked as sensitive and will not; # display in UI output after applying this change. The value is unchanged.; ~ storage_class = (sensitive value); # (8 unchanged attributes hidden). # (2 unchanged blocks hidden); }. # module.ci[0].kubernetes_secret.ci_config will be updated in-place; ~ resource ""kubernetes_secret"" ""ci_config"" {; id = ""default/ci-config""; # (3 unchanged attributes hidden). # (1 unchanged block hidden); }. # module.ci[0].kubernetes_secret.hail_ci_0_1_github_oauth_token will be updated in-place; ~ resource ""kubernetes_secret"" ""hail_ci_0_1_github_oauth_token"" {; id = ""default/hail-ci-0-1-github-oauth-token""; # (3 unchanged attributes hidden). # (1 unchanged block hidden); }. # module.ci[0].kubernetes_secret.hail_ci_0_1_service_account_key will be updated in-place; ~ resource ""kubernetes_secret"" ""hail_ci_0_1_service_account_key"" {; ~ data = (sensitive value); id = ""default/hail-ci-0-1-service-account-key""; # (2 unchanged attributes hidden). # (1 unchanged block hidden); }; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12882#issuecomment-1507162756
https://github.com/hail-is/hail/pull/12882#issuecomment-1507162756:1096,Modifiability,config,config,1096,"The terraform plan for `gcp-broad` has 4 changes after appropriately importing. The bucket, ci_config, and hail_ci_0_1_github_oauth_token are actually unchanged. I do not know why they are listed as a change. That secret currently has three files: hail-ci-0-1.key, oauth-token, user1, user2. AFAICT, only `user1` is used, so the new secret only has `user1`. ```; # module.ci[0].google_storage_bucket.bucket will be updated in-place; ~ resource ""google_storage_bucket"" ""bucket"" {; id = ""hail-ci-bpk3h""; # Warning: this attribute value will be marked as sensitive and will not; # display in UI output after applying this change. The value is unchanged.; ~ location = (sensitive value); name = ""hail-ci-bpk3h""; # Warning: this attribute value will be marked as sensitive and will not; # display in UI output after applying this change. The value is unchanged.; ~ storage_class = (sensitive value); # (8 unchanged attributes hidden). # (2 unchanged blocks hidden); }. # module.ci[0].kubernetes_secret.ci_config will be updated in-place; ~ resource ""kubernetes_secret"" ""ci_config"" {; id = ""default/ci-config""; # (3 unchanged attributes hidden). # (1 unchanged block hidden); }. # module.ci[0].kubernetes_secret.hail_ci_0_1_github_oauth_token will be updated in-place; ~ resource ""kubernetes_secret"" ""hail_ci_0_1_github_oauth_token"" {; id = ""default/hail-ci-0-1-github-oauth-token""; # (3 unchanged attributes hidden). # (1 unchanged block hidden); }. # module.ci[0].kubernetes_secret.hail_ci_0_1_service_account_key will be updated in-place; ~ resource ""kubernetes_secret"" ""hail_ci_0_1_service_account_key"" {; ~ data = (sensitive value); id = ""default/hail-ci-0-1-service-account-key""; # (2 unchanged attributes hidden). # (1 unchanged block hidden); }; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12882#issuecomment-1507162756
https://github.com/hail-is/hail/pull/12882#issuecomment-1520905705:245,Security,secur,security,245,"I reverted the `gcp` changes entirely. Let's just get to work on having tracked infrastructure in GCP. We'll resolve the differences between `gcp` and `gcp-broad` (as much as possible) at some later date. In the short term, we need to get these security changes in.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12882#issuecomment-1520905705
https://github.com/hail-is/hail/pull/12884#issuecomment-1507487049:33,Testability,test,test,33,"I think this might break the one test where we query batches / jobs based on name. I'll take a look at the tests later, but otherwise, this seems fine to me.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12884#issuecomment-1507487049
https://github.com/hail-is/hail/pull/12884#issuecomment-1507487049:107,Testability,test,tests,107,"I think this might break the one test where we query batches / jobs based on name. I'll take a look at the tests later, but otherwise, this seems fine to me.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12884#issuecomment-1507487049
https://github.com/hail-is/hail/pull/12884#issuecomment-1507496352:172,Testability,test,test,172,"Ya I hit that at first, but I made sure in to allow the caller to override the name attribute, so this just sets the name for batches where the name isn't specified in the test",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12884#issuecomment-1507496352
https://github.com/hail-is/hail/pull/12884#issuecomment-1507496654:168,Testability,test,test,168,"Ya I hit that at first, so I made sure to allow the caller to override the name attribute, so this just sets the name for batches where the name isn't specified in the test",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12884#issuecomment-1507496654
https://github.com/hail-is/hail/pull/12889#issuecomment-1510514388:28,Testability,test,tested,28,"Thanks @daniel-goldstein! I tested the single user, but hadn't tested the multi user endpoint - with that test I have resolved a `TypeError: object async_generator can't be used in 'await' expression` in a follow-up commit.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12889#issuecomment-1510514388
https://github.com/hail-is/hail/pull/12889#issuecomment-1510514388:63,Testability,test,tested,63,"Thanks @daniel-goldstein! I tested the single user, but hadn't tested the multi user endpoint - with that test I have resolved a `TypeError: object async_generator can't be used in 'await' expression` in a follow-up commit.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12889#issuecomment-1510514388
https://github.com/hail-is/hail/pull/12889#issuecomment-1510514388:106,Testability,test,test,106,"Thanks @daniel-goldstein! I tested the single user, but hadn't tested the multi user endpoint - with that test I have resolved a `TypeError: object async_generator can't be used in 'await' expression` in a follow-up commit.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12889#issuecomment-1510514388
https://github.com/hail-is/hail/pull/12889#issuecomment-1512194141:31,Testability,test,test,31,"Hey @daniel-goldstein, the `ci-test` is marked as failing on GitHub, but the CI job looks like it finished in a complete state.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12889#issuecomment-1512194141
https://github.com/hail-is/hail/pull/12889#issuecomment-1515270732:252,Availability,Error,Error,252,"```; + make -k check-services; PYTHONPATH=""hail/python:auth:batch:ci:memory:notebook:monitoring:website:gear:web_common"" python3 -m flake8 --config setup.cfg auth; auth/auth/auth.py:515:86: W291 trailing whitespace; make: *** [Makefile:42: check-auth] Error 1; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12889#issuecomment-1515270732
https://github.com/hail-is/hail/pull/12889#issuecomment-1515270732:85,Energy Efficiency,monitor,monitoring,85,"```; + make -k check-services; PYTHONPATH=""hail/python:auth:batch:ci:memory:notebook:monitoring:website:gear:web_common"" python3 -m flake8 --config setup.cfg auth; auth/auth/auth.py:515:86: W291 trailing whitespace; make: *** [Makefile:42: check-auth] Error 1; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12889#issuecomment-1515270732
https://github.com/hail-is/hail/pull/12889#issuecomment-1515270732:141,Modifiability,config,config,141,"```; + make -k check-services; PYTHONPATH=""hail/python:auth:batch:ci:memory:notebook:monitoring:website:gear:web_common"" python3 -m flake8 --config setup.cfg auth; auth/auth/auth.py:515:86: W291 trailing whitespace; make: *** [Makefile:42: check-auth] Error 1; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12889#issuecomment-1515270732
https://github.com/hail-is/hail/pull/12891#issuecomment-1514980397:88,Deployability,release,released,88,Assigning to Tim so it shows up in his review queue. He has some fixes he wanted to get released that probably need to be added to the change log.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12891#issuecomment-1514980397
https://github.com/hail-is/hail/pull/12891#issuecomment-1514980397:46,Performance,queue,queue,46,Assigning to Tim so it shows up in his review queue. He has some fixes he wanted to get released that probably need to be added to the change log.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12891#issuecomment-1514980397
https://github.com/hail-is/hail/pull/12891#issuecomment-1514980397:142,Testability,log,log,142,Assigning to Tim so it shows up in his review queue. He has some fixes he wanted to get released that probably need to be added to the change log.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12891#issuecomment-1514980397
https://github.com/hail-is/hail/pull/12895#issuecomment-1515071184:121,Deployability,update,updates,121,These strict pins belong in the pinned-requirements.txt not as a requirement for our users. We have a different PR which updates numpy to 1.24.2 https://github.com/hail-is/hail/pull/12898,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12895#issuecomment-1515071184
https://github.com/hail-is/hail/pull/12896#issuecomment-1518317989:94,Deployability,install,installation,94,I'm gonna close on account of this is the dev requirements. We don't mandate developer python installation systems and they might be using a package manager for this. Developers should update using whatever system they're using to manage python.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12896#issuecomment-1518317989
https://github.com/hail-is/hail/pull/12896#issuecomment-1518317989:185,Deployability,update,update,185,I'm gonna close on account of this is the dev requirements. We don't mandate developer python installation systems and they might be using a package manager for this. Developers should update using whatever system they're using to manage python.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12896#issuecomment-1518317989
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12897#issuecomment-1708528789
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12898#issuecomment-1515238043
https://github.com/hail-is/hail/pull/12901#issuecomment-1520908811:24,Performance,load,load,24,Lightening Tim's review load a bit.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12901#issuecomment-1520908811
https://github.com/hail-is/hail/issues/12905#issuecomment-1775395559:62,Deployability,release,released,62,"gnomAD team has a Batch-based VQSR method. After gnomAD v4 is released and ASHG 2023 is over, we should lean on gnomAD team to get this into Hail mainline. https://github.com/broadinstitute/gnomad_methods/pull/470",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12905#issuecomment-1775395559
https://github.com/hail-is/hail/pull/12906#issuecomment-1519857581:457,Availability,failure,failure,457,"Note that pandas 2.0.0 [removes the deprecated `DataFrame.iteritems()`](https://pandas.pydata.org/docs/whatsnew/v2.0.0.html#removal-of-prior-version-deprecations-changes), which is used by bokeh-1.4.0. That particular old version of bokeh is listed in _hail/python/requirements.txt_ but it is thus incompatible with pandas 2; so one or the other of these pinnings probably needs to be revisited. (This incompatibility has caused the [large_cohort unit test failure](https://github.com/populationgenomics/production-pipelines/actions/runs/4782280056/jobs/8501466504?pr=354#step:5:134) in populationgenomics/production-pipelines#354.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1519857581
https://github.com/hail-is/hail/pull/12906#issuecomment-1519857581:515,Deployability,pipeline,pipelines,515,"Note that pandas 2.0.0 [removes the deprecated `DataFrame.iteritems()`](https://pandas.pydata.org/docs/whatsnew/v2.0.0.html#removal-of-prior-version-deprecations-changes), which is used by bokeh-1.4.0. That particular old version of bokeh is listed in _hail/python/requirements.txt_ but it is thus incompatible with pandas 2; so one or the other of these pinnings probably needs to be revisited. (This incompatibility has caused the [large_cohort unit test failure](https://github.com/populationgenomics/production-pipelines/actions/runs/4782280056/jobs/8501466504?pr=354#step:5:134) in populationgenomics/production-pipelines#354.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1519857581
https://github.com/hail-is/hail/pull/12906#issuecomment-1519857581:617,Deployability,pipeline,pipelines,617,"Note that pandas 2.0.0 [removes the deprecated `DataFrame.iteritems()`](https://pandas.pydata.org/docs/whatsnew/v2.0.0.html#removal-of-prior-version-deprecations-changes), which is used by bokeh-1.4.0. That particular old version of bokeh is listed in _hail/python/requirements.txt_ but it is thus incompatible with pandas 2; so one or the other of these pinnings probably needs to be revisited. (This incompatibility has caused the [large_cohort unit test failure](https://github.com/populationgenomics/production-pipelines/actions/runs/4782280056/jobs/8501466504?pr=354#step:5:134) in populationgenomics/production-pipelines#354.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1519857581
https://github.com/hail-is/hail/pull/12906#issuecomment-1519857581:452,Testability,test,test,452,"Note that pandas 2.0.0 [removes the deprecated `DataFrame.iteritems()`](https://pandas.pydata.org/docs/whatsnew/v2.0.0.html#removal-of-prior-version-deprecations-changes), which is used by bokeh-1.4.0. That particular old version of bokeh is listed in _hail/python/requirements.txt_ but it is thus incompatible with pandas 2; so one or the other of these pinnings probably needs to be revisited. (This incompatibility has caused the [large_cohort unit test failure](https://github.com/populationgenomics/production-pipelines/actions/runs/4782280056/jobs/8501466504?pr=354#step:5:134) in populationgenomics/production-pipelines#354.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1519857581
https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276:77,Deployability,update,updated,77,"Thanks @jmarshall for bringing this to our attention. It looks like while we updated the upper bound here, we did not update our fully-pinned requirements which we use to test in CI, so it did not catch this incompatibility. That being said, I don't think that was necessarily a mistake, because by testing our minimum-compatible-version we make sure not to introduce incompatibilities on that end of the spectrum either.. I think I don't see a good way in which we can confidently support more than one major version of a dependency at a given point in time. Even without the bokeh issue, there could easily be places in our codebase where we use pandas 1.x functionality that has been removed in 2.0. @danking thoughts on moving the pandas pin to >= the 2.x.x version that we test with and <3?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276
https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276:118,Deployability,update,update,118,"Thanks @jmarshall for bringing this to our attention. It looks like while we updated the upper bound here, we did not update our fully-pinned requirements which we use to test in CI, so it did not catch this incompatibility. That being said, I don't think that was necessarily a mistake, because by testing our minimum-compatible-version we make sure not to introduce incompatibilities on that end of the spectrum either.. I think I don't see a good way in which we can confidently support more than one major version of a dependency at a given point in time. Even without the bokeh issue, there could easily be places in our codebase where we use pandas 1.x functionality that has been removed in 2.0. @danking thoughts on moving the pandas pin to >= the 2.x.x version that we test with and <3?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276
https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276:523,Integrability,depend,dependency,523,"Thanks @jmarshall for bringing this to our attention. It looks like while we updated the upper bound here, we did not update our fully-pinned requirements which we use to test in CI, so it did not catch this incompatibility. That being said, I don't think that was necessarily a mistake, because by testing our minimum-compatible-version we make sure not to introduce incompatibilities on that end of the spectrum either.. I think I don't see a good way in which we can confidently support more than one major version of a dependency at a given point in time. Even without the bokeh issue, there could easily be places in our codebase where we use pandas 1.x functionality that has been removed in 2.0. @danking thoughts on moving the pandas pin to >= the 2.x.x version that we test with and <3?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276
https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276:171,Testability,test,test,171,"Thanks @jmarshall for bringing this to our attention. It looks like while we updated the upper bound here, we did not update our fully-pinned requirements which we use to test in CI, so it did not catch this incompatibility. That being said, I don't think that was necessarily a mistake, because by testing our minimum-compatible-version we make sure not to introduce incompatibilities on that end of the spectrum either.. I think I don't see a good way in which we can confidently support more than one major version of a dependency at a given point in time. Even without the bokeh issue, there could easily be places in our codebase where we use pandas 1.x functionality that has been removed in 2.0. @danking thoughts on moving the pandas pin to >= the 2.x.x version that we test with and <3?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276
https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276:299,Testability,test,testing,299,"Thanks @jmarshall for bringing this to our attention. It looks like while we updated the upper bound here, we did not update our fully-pinned requirements which we use to test in CI, so it did not catch this incompatibility. That being said, I don't think that was necessarily a mistake, because by testing our minimum-compatible-version we make sure not to introduce incompatibilities on that end of the spectrum either.. I think I don't see a good way in which we can confidently support more than one major version of a dependency at a given point in time. Even without the bokeh issue, there could easily be places in our codebase where we use pandas 1.x functionality that has been removed in 2.0. @danking thoughts on moving the pandas pin to >= the 2.x.x version that we test with and <3?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276
https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276:778,Testability,test,test,778,"Thanks @jmarshall for bringing this to our attention. It looks like while we updated the upper bound here, we did not update our fully-pinned requirements which we use to test in CI, so it did not catch this incompatibility. That being said, I don't think that was necessarily a mistake, because by testing our minimum-compatible-version we make sure not to introduce incompatibilities on that end of the spectrum either.. I think I don't see a good way in which we can confidently support more than one major version of a dependency at a given point in time. Even without the bokeh issue, there could easily be places in our codebase where we use pandas 1.x functionality that has been removed in 2.0. @danking thoughts on moving the pandas pin to >= the 2.x.x version that we test with and <3?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520406276
https://github.com/hail-is/hail/pull/12906#issuecomment-1520463643:236,Deployability,upgrade,upgrade,236,"So, certain versions of bokeh require certain versions of pandas. I don't think we can simultaneously support bokeh 1.4 and pandas 2 in the Hail code base (because old bokeh is broken on new pandas). I think the fix is to just forcibly upgrade everyone to latest bokeh (3.x) and update Hail to support latest bokeh. I have a PR coming for this. I haven't checked if new bokeh supports old pandas. Nor do I know if we have old pandas usage lurking in the codebase. Can we make our `pinned-requirements.txt` use pandas 2.0, fix whatever issues arise, but leave `requirements.txt` flexible for folks?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520463643
https://github.com/hail-is/hail/pull/12906#issuecomment-1520463643:279,Deployability,update,update,279,"So, certain versions of bokeh require certain versions of pandas. I don't think we can simultaneously support bokeh 1.4 and pandas 2 in the Hail code base (because old bokeh is broken on new pandas). I think the fix is to just forcibly upgrade everyone to latest bokeh (3.x) and update Hail to support latest bokeh. I have a PR coming for this. I haven't checked if new bokeh supports old pandas. Nor do I know if we have old pandas usage lurking in the codebase. Can we make our `pinned-requirements.txt` use pandas 2.0, fix whatever issues arise, but leave `requirements.txt` flexible for folks?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520463643
https://github.com/hail-is/hail/pull/12906#issuecomment-1520463643:578,Modifiability,flexible,flexible,578,"So, certain versions of bokeh require certain versions of pandas. I don't think we can simultaneously support bokeh 1.4 and pandas 2 in the Hail code base (because old bokeh is broken on new pandas). I think the fix is to just forcibly upgrade everyone to latest bokeh (3.x) and update Hail to support latest bokeh. I have a PR coming for this. I haven't checked if new bokeh supports old pandas. Nor do I know if we have old pandas usage lurking in the codebase. Can we make our `pinned-requirements.txt` use pandas 2.0, fix whatever issues arise, but leave `requirements.txt` flexible for folks?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520463643
https://github.com/hail-is/hail/pull/12906#issuecomment-1520500573:878,Deployability,release,release,878,"> I haven't checked if new bokeh supports old pandas. Nor do I know if we have old pandas usage lurking in the codebase. Can we make our pinned-requirements.txt use pandas 2.0, fix whatever issues arise, but leave requirements.txt flexible for folks?. I think there are compromises either way, but I would be surprised if this just worked. It seems very easy to accidentally adopt new functionality so at that point why even have a lower-bound? I think that, while it's very hard to make sure that all our dependencies are compatible at all possible version combinations, and these things will happen, it just feels like an easily-avoidable lie to say we support 1.x and 2.x but then use functionality exclusive to 2.x. So I'm ok keeping the bounds more relaxed if we can guarantee that *our* usage of pandas is compatible with both. FWIW, I think that our primary dependencies release major versions infrequently enough that it is reasonable to only support the most recent major version, in much the same way that we don't support python versions indefinitely.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520500573
https://github.com/hail-is/hail/pull/12906#issuecomment-1520500573:506,Integrability,depend,dependencies,506,"> I haven't checked if new bokeh supports old pandas. Nor do I know if we have old pandas usage lurking in the codebase. Can we make our pinned-requirements.txt use pandas 2.0, fix whatever issues arise, but leave requirements.txt flexible for folks?. I think there are compromises either way, but I would be surprised if this just worked. It seems very easy to accidentally adopt new functionality so at that point why even have a lower-bound? I think that, while it's very hard to make sure that all our dependencies are compatible at all possible version combinations, and these things will happen, it just feels like an easily-avoidable lie to say we support 1.x and 2.x but then use functionality exclusive to 2.x. So I'm ok keeping the bounds more relaxed if we can guarantee that *our* usage of pandas is compatible with both. FWIW, I think that our primary dependencies release major versions infrequently enough that it is reasonable to only support the most recent major version, in much the same way that we don't support python versions indefinitely.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520500573
https://github.com/hail-is/hail/pull/12906#issuecomment-1520500573:865,Integrability,depend,dependencies,865,"> I haven't checked if new bokeh supports old pandas. Nor do I know if we have old pandas usage lurking in the codebase. Can we make our pinned-requirements.txt use pandas 2.0, fix whatever issues arise, but leave requirements.txt flexible for folks?. I think there are compromises either way, but I would be surprised if this just worked. It seems very easy to accidentally adopt new functionality so at that point why even have a lower-bound? I think that, while it's very hard to make sure that all our dependencies are compatible at all possible version combinations, and these things will happen, it just feels like an easily-avoidable lie to say we support 1.x and 2.x but then use functionality exclusive to 2.x. So I'm ok keeping the bounds more relaxed if we can guarantee that *our* usage of pandas is compatible with both. FWIW, I think that our primary dependencies release major versions infrequently enough that it is reasonable to only support the most recent major version, in much the same way that we don't support python versions indefinitely.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520500573
https://github.com/hail-is/hail/pull/12906#issuecomment-1520500573:231,Modifiability,flexible,flexible,231,"> I haven't checked if new bokeh supports old pandas. Nor do I know if we have old pandas usage lurking in the codebase. Can we make our pinned-requirements.txt use pandas 2.0, fix whatever issues arise, but leave requirements.txt flexible for folks?. I think there are compromises either way, but I would be surprised if this just worked. It seems very easy to accidentally adopt new functionality so at that point why even have a lower-bound? I think that, while it's very hard to make sure that all our dependencies are compatible at all possible version combinations, and these things will happen, it just feels like an easily-avoidable lie to say we support 1.x and 2.x but then use functionality exclusive to 2.x. So I'm ok keeping the bounds more relaxed if we can guarantee that *our* usage of pandas is compatible with both. FWIW, I think that our primary dependencies release major versions infrequently enough that it is reasonable to only support the most recent major version, in much the same way that we don't support python versions indefinitely.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520500573
https://github.com/hail-is/hail/pull/12906#issuecomment-1520500573:631,Safety,avoid,avoidable,631,"> I haven't checked if new bokeh supports old pandas. Nor do I know if we have old pandas usage lurking in the codebase. Can we make our pinned-requirements.txt use pandas 2.0, fix whatever issues arise, but leave requirements.txt flexible for folks?. I think there are compromises either way, but I would be surprised if this just worked. It seems very easy to accidentally adopt new functionality so at that point why even have a lower-bound? I think that, while it's very hard to make sure that all our dependencies are compatible at all possible version combinations, and these things will happen, it just feels like an easily-avoidable lie to say we support 1.x and 2.x but then use functionality exclusive to 2.x. So I'm ok keeping the bounds more relaxed if we can guarantee that *our* usage of pandas is compatible with both. FWIW, I think that our primary dependencies release major versions infrequently enough that it is reasonable to only support the most recent major version, in much the same way that we don't support python versions indefinitely.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520500573
https://github.com/hail-is/hail/pull/12906#issuecomment-1520506773:406,Availability,fault,faulted,406,"I think in an ideal world, every project including ours, our dependencies, and our end users, maintain public wide-open requirements files and private fully-pinned lockfiles. Our users know we need X and Y and they pin whatever versions are compatible with the union of our code and theirs. If we don't want our end users to have to do that, we need to compromise by narrowing the window and accepting the faulted but practical middle-ground. @jmarshall, out of curiosity does your group fully pin your dependencies / do you have any thoughts? It would be interesting to hear from the perspectives of end users but also third-party collaborators.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520506773
https://github.com/hail-is/hail/pull/12906#issuecomment-1520506773:61,Integrability,depend,dependencies,61,"I think in an ideal world, every project including ours, our dependencies, and our end users, maintain public wide-open requirements files and private fully-pinned lockfiles. Our users know we need X and Y and they pin whatever versions are compatible with the union of our code and theirs. If we don't want our end users to have to do that, we need to compromise by narrowing the window and accepting the faulted but practical middle-ground. @jmarshall, out of curiosity does your group fully pin your dependencies / do you have any thoughts? It would be interesting to hear from the perspectives of end users but also third-party collaborators.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520506773
https://github.com/hail-is/hail/pull/12906#issuecomment-1520506773:503,Integrability,depend,dependencies,503,"I think in an ideal world, every project including ours, our dependencies, and our end users, maintain public wide-open requirements files and private fully-pinned lockfiles. Our users know we need X and Y and they pin whatever versions are compatible with the union of our code and theirs. If we don't want our end users to have to do that, we need to compromise by narrowing the window and accepting the faulted but practical middle-ground. @jmarshall, out of curiosity does your group fully pin your dependencies / do you have any thoughts? It would be interesting to hear from the perspectives of end users but also third-party collaborators.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12906#issuecomment-1520506773
https://github.com/hail-is/hail/pull/12908#issuecomment-1515268289:115,Deployability,update,updated,115,"Haha, I had intentionally not assigned you until I sorted what I anticipate is a long tail of issues. Nonetheless, updated.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12908#issuecomment-1515268289
https://github.com/hail-is/hail/pull/12908#issuecomment-1520876419:190,Testability,test,tests,190,I'm gonna submit a new PR which subsumes this and #12927 because they're both entangled in a bunch of the same issues and its increasingly apparent that I need them together to pass all the tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12908#issuecomment-1520876419
https://github.com/hail-is/hail/pull/12911#issuecomment-1532088026:28,Availability,down,down,28,"This has slipped far enough down my todo list that it isn't gonna get done, at least not by me",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12911#issuecomment-1532088026
https://github.com/hail-is/hail/issues/12912#issuecomment-1517847031:50,Deployability,pipeline,pipeline,50,That is indeed concerning. Can you share the full pipeline back to the read of `mt` and the creation of `sample_list`? Can you also confirm this bad behavior exists in the latest 0.2.113?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12912#issuecomment-1517847031
https://github.com/hail-is/hail/pull/12913#issuecomment-1518350329:68,Performance,queue,queue,68,"If ready for review, ""assign"" someone and it'll show up in their CI queue :)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12913#issuecomment-1518350329
https://github.com/hail-is/hail/issues/12915#issuecomment-1518349628:35,Testability,test,test,35,"Thanks for taking a look. The unit test contains a total of 454 jobs, so it's not completely outrageously sized. So I think a sub-DAG won't always be orders of magnitude smaller than the full DAG, so that won't necessarily make the critical difference. Short-circuiting the `add_dependents()` recursion on paths that have already been seen made the full DAG computation take <1 second. So whether the computation is on the full DAG or a sub-DAG, I think what really makes the difference is memoizing the computation properly — akin to `seen` in the similar `schedule_jobs` helper in _hailtop/batch/batch.py_.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12915#issuecomment-1518349628
https://github.com/hail-is/hail/issues/12915#issuecomment-1518367237:182,Usability,intuit,intuitive,182,"Hi @jmarshall, you're very right about the memoization aspect. I ended up just scrapping the data structure entirely in #12918 and doing this in a breadth-first way that seemed more intuitive anyway.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12915#issuecomment-1518367237
https://github.com/hail-is/hail/pull/12918#issuecomment-1518386154:30,Testability,test,test,30,"Thanks, that returns our unit test to taking its expected 20 seconds runtime. The 454 jobs cause a total of 37844 entries to be added to `child_jobs`, which is both trivial and as expected for the number of edges.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12918#issuecomment-1518386154
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:92,Availability,down,download,92,I used the gsutil storage bandwidth tool and confirmed we get 1.2 Gibit / second upload and download speeds from within a 1 core job and 10 Gi storage. Adding more cores didn't change anything. I ran a test job with the copy tool on a 10 Gi random file and matched 1.2 Gibit / second. I'm wondering if the problem is actually workload-dependent and is based on the number of jobs / number of files. The GCS best practices states the initial capacity is 5000 read requests / second per bucket including list operations until the bucket has time to scale up its capacity. https://cloud.google.com/storage/docs/request-rate#best-practices. ```. ==============================================================================; DIAGNOSTIC RESULTS ; ==============================================================================. ------------------------------------------------------------------------------; Latency ; ------------------------------------------------------------------------------; Operation Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write thr,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:1284,Availability,Down,Download,1284,ndering if the problem is actually workload-dependent and is based on the number of jobs / number of files. The GCS best practices states the initial capacity is 5000 read requests / second per bucket including list operations until the bucket has time to scale up its capacity. https://cloud.google.com/storage/docs/request-rate#best-practices. ```. ==============================================================================; DIAGNOSTIC RESULTS ; ==============================================================================. ------------------------------------------------------------------------------; Latency ; ------------------------------------------------------------------------------; Operation Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write throughput: 977.7 Mibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; Read Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 G,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:1320,Availability,Down,Download,1320,rkload-dependent and is based on the number of jobs / number of files. The GCS best practices states the initial capacity is 5000 read requests / second per bucket including list operations until the bucket has time to scale up its capacity. https://cloud.google.com/storage/docs/request-rate#best-practices. ```. ==============================================================================; DIAGNOSTIC RESULTS ; ==============================================================================. ------------------------------------------------------------------------------; Latency ; ------------------------------------------------------------------------------; Operation Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write throughput: 977.7 Mibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; Read Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Read throughput: 1.11 Gibit/s.; ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:1360,Availability,Down,Download,1360,er of jobs / number of files. The GCS best practices states the initial capacity is 5000 read requests / second per bucket including list operations until the bucket has time to scale up its capacity. https://cloud.google.com/storage/docs/request-rate#best-practices. ```. ==============================================================================; DIAGNOSTIC RESULTS ; ==============================================================================. ------------------------------------------------------------------------------; Latency ; ------------------------------------------------------------------------------; Operation Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write throughput: 977.7 Mibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; Read Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Read throughput: 1.11 Gibit/s.; Parallelism strategy: both. -------------,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:1401,Availability,Down,Download,1401,st practices states the initial capacity is 5000 read requests / second per bucket including list operations until the bucket has time to scale up its capacity. https://cloud.google.com/storage/docs/request-rate#best-practices. ```. ==============================================================================; DIAGNOSTIC RESULTS ; ==============================================================================. ------------------------------------------------------------------------------; Latency ; ------------------------------------------------------------------------------; Operation Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write throughput: 977.7 Mibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; Read Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Read throughput: 1.11 Gibit/s.; Parallelism strategy: both. -----------------------------------------------------,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:3689,Availability,avail,available,3689,": ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Addresses: ; 142.250.128.128; 142.251.6.128; 108.177.112.128; 74.125.124.128; 172.217.212.128; 172.217.214.128; 172.253.119.128; 108.177.111.128; 142.250.1.128; 108.177.121.128; 142.250.103.128; 108.177.120.128; 142.250.159.128; 142.251.120.128; 142.251.161.128; 74.125.126.128; Google Server Hostnames: ; ib-in-f128.1e100.net; ic-in-f128.1e100.net; jo-in-f128.1e100.net; jp-in-f128.1e100.net; jq-in-f128.1e100.net; jr-in-f128.1e100.net; jt-in-f128.1e100.net; jv-in-f128.1e100.net; jw-in-f128.1e100.net; jx-in-f128.1e100.net; jy-in-f128.1e100.net; jz-in-f128.1e100.net; ie-in-f128.1e100.net; if-in-f128.1e100.net; ig-in-f128.1e100.net; ik-in-f128.1e100.net; Google DNS thinks your IP is: ; ; CPU Count: ; 16; CPU Load Average: ; [32.39, 33.2, 19.0]; Total Memory: ; 57.5 GiB; Free Memory: ; 38.41 GiB; TCP segment counts not available because ""netstat"" was not found during test runs; Disk Counter Deltas:; disk reads writes rbytes wbytes rtime wtime ; loop0 0 0 0 0 0 0 ; loop1 0 0 0 0 0 0 ; loop3 0 0 0 0 0 0 ; loop4 0 0 0 0 0 0 ; loop5 0 0 0 0 0 0 ; nvme0n1 4385 4694 581857280 1743810560 6453 527129 ; sda1 0 544 0 3731456 0 429 ; sda14 0 0 0 0 0 0 ; sda15 0 0 0 0 0 0 ; TCP /proc values:; tcp_timestamps = 1; tcp_sack = 1; tcp_window_scaling = 1; Boto HTTPS Enabled: ; True; Requests routed through proxy: ; False; Latency of the DNS lookup for Google Storage server (ms): ; 1.5; Latencies connecting to Google Storage server IPs (ms):; 74.125.126.128 = 1.1. ------------------------------------------------------------------------------; In-Process HTTP Statistics ; ------------------------------------------------------------------------------; Total HTTP requests made: 149; HTTP 5xx errors: 0; HTTP connections broken: 0; Availability: 100%. Output file written to '/tmp/output.json'.; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:4557,Availability,error,errors,4557,": ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Addresses: ; 142.250.128.128; 142.251.6.128; 108.177.112.128; 74.125.124.128; 172.217.212.128; 172.217.214.128; 172.253.119.128; 108.177.111.128; 142.250.1.128; 108.177.121.128; 142.250.103.128; 108.177.120.128; 142.250.159.128; 142.251.120.128; 142.251.161.128; 74.125.126.128; Google Server Hostnames: ; ib-in-f128.1e100.net; ic-in-f128.1e100.net; jo-in-f128.1e100.net; jp-in-f128.1e100.net; jq-in-f128.1e100.net; jr-in-f128.1e100.net; jt-in-f128.1e100.net; jv-in-f128.1e100.net; jw-in-f128.1e100.net; jx-in-f128.1e100.net; jy-in-f128.1e100.net; jz-in-f128.1e100.net; ie-in-f128.1e100.net; if-in-f128.1e100.net; ig-in-f128.1e100.net; ik-in-f128.1e100.net; Google DNS thinks your IP is: ; ; CPU Count: ; 16; CPU Load Average: ; [32.39, 33.2, 19.0]; Total Memory: ; 57.5 GiB; Free Memory: ; 38.41 GiB; TCP segment counts not available because ""netstat"" was not found during test runs; Disk Counter Deltas:; disk reads writes rbytes wbytes rtime wtime ; loop0 0 0 0 0 0 0 ; loop1 0 0 0 0 0 0 ; loop3 0 0 0 0 0 0 ; loop4 0 0 0 0 0 0 ; loop5 0 0 0 0 0 0 ; nvme0n1 4385 4694 581857280 1743810560 6453 527129 ; sda1 0 544 0 3731456 0 429 ; sda14 0 0 0 0 0 0 ; sda15 0 0 0 0 0 0 ; TCP /proc values:; tcp_timestamps = 1; tcp_sack = 1; tcp_window_scaling = 1; Boto HTTPS Enabled: ; True; Requests routed through proxy: ; False; Latency of the DNS lookup for Google Storage server (ms): ; 1.5; Latencies connecting to Google Storage server IPs (ms):; 74.125.126.128 = 1.1. ------------------------------------------------------------------------------; In-Process HTTP Statistics ; ------------------------------------------------------------------------------; Total HTTP requests made: 149; HTTP 5xx errors: 0; HTTP connections broken: 0; Availability: 100%. Output file written to '/tmp/output.json'.; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:4596,Availability,Avail,Availability,4596,": ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Addresses: ; 142.250.128.128; 142.251.6.128; 108.177.112.128; 74.125.124.128; 172.217.212.128; 172.217.214.128; 172.253.119.128; 108.177.111.128; 142.250.1.128; 108.177.121.128; 142.250.103.128; 108.177.120.128; 142.250.159.128; 142.251.120.128; 142.251.161.128; 74.125.126.128; Google Server Hostnames: ; ib-in-f128.1e100.net; ic-in-f128.1e100.net; jo-in-f128.1e100.net; jp-in-f128.1e100.net; jq-in-f128.1e100.net; jr-in-f128.1e100.net; jt-in-f128.1e100.net; jv-in-f128.1e100.net; jw-in-f128.1e100.net; jx-in-f128.1e100.net; jy-in-f128.1e100.net; jz-in-f128.1e100.net; ie-in-f128.1e100.net; if-in-f128.1e100.net; ig-in-f128.1e100.net; ik-in-f128.1e100.net; Google DNS thinks your IP is: ; ; CPU Count: ; 16; CPU Load Average: ; [32.39, 33.2, 19.0]; Total Memory: ; 57.5 GiB; Free Memory: ; 38.41 GiB; TCP segment counts not available because ""netstat"" was not found during test runs; Disk Counter Deltas:; disk reads writes rbytes wbytes rtime wtime ; loop0 0 0 0 0 0 0 ; loop1 0 0 0 0 0 0 ; loop3 0 0 0 0 0 0 ; loop4 0 0 0 0 0 0 ; loop5 0 0 0 0 0 0 ; nvme0n1 4385 4694 581857280 1743810560 6453 527129 ; sda1 0 544 0 3731456 0 429 ; sda14 0 0 0 0 0 0 ; sda15 0 0 0 0 0 0 ; TCP /proc values:; tcp_timestamps = 1; tcp_sack = 1; tcp_window_scaling = 1; Boto HTTPS Enabled: ; True; Requests routed through proxy: ; False; Latency of the DNS lookup for Google Storage server (ms): ; 1.5; Latencies connecting to Google Storage server IPs (ms):; 74.125.126.128 = 1.1. ------------------------------------------------------------------------------; In-Process HTTP Statistics ; ------------------------------------------------------------------------------; Total HTTP requests made: 149; HTTP 5xx errors: 0; HTTP connections broken: 0; Availability: 100%. Output file written to '/tmp/output.json'.; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:335,Integrability,depend,dependent,335,I used the gsutil storage bandwidth tool and confirmed we get 1.2 Gibit / second upload and download speeds from within a 1 core job and 10 Gi storage. Adding more cores didn't change anything. I ran a test job with the copy tool on a 10 Gi random file and matched 1.2 Gibit / second. I'm wondering if the problem is actually workload-dependent and is based on the number of jobs / number of files. The GCS best practices states the initial capacity is 5000 read requests / second per bucket including list operations until the bucket has time to scale up its capacity. https://cloud.google.com/storage/docs/request-rate#best-practices. ```. ==============================================================================; DIAGNOSTIC RESULTS ; ==============================================================================. ------------------------------------------------------------------------------; Latency ; ------------------------------------------------------------------------------; Operation Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write thr,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:4153,Integrability,rout,routed,4153,": ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Addresses: ; 142.250.128.128; 142.251.6.128; 108.177.112.128; 74.125.124.128; 172.217.212.128; 172.217.214.128; 172.253.119.128; 108.177.111.128; 142.250.1.128; 108.177.121.128; 142.250.103.128; 108.177.120.128; 142.250.159.128; 142.251.120.128; 142.251.161.128; 74.125.126.128; Google Server Hostnames: ; ib-in-f128.1e100.net; ic-in-f128.1e100.net; jo-in-f128.1e100.net; jp-in-f128.1e100.net; jq-in-f128.1e100.net; jr-in-f128.1e100.net; jt-in-f128.1e100.net; jv-in-f128.1e100.net; jw-in-f128.1e100.net; jx-in-f128.1e100.net; jy-in-f128.1e100.net; jz-in-f128.1e100.net; ie-in-f128.1e100.net; if-in-f128.1e100.net; ig-in-f128.1e100.net; ik-in-f128.1e100.net; Google DNS thinks your IP is: ; ; CPU Count: ; 16; CPU Load Average: ; [32.39, 33.2, 19.0]; Total Memory: ; 57.5 GiB; Free Memory: ; 38.41 GiB; TCP segment counts not available because ""netstat"" was not found during test runs; Disk Counter Deltas:; disk reads writes rbytes wbytes rtime wtime ; loop0 0 0 0 0 0 0 ; loop1 0 0 0 0 0 0 ; loop3 0 0 0 0 0 0 ; loop4 0 0 0 0 0 0 ; loop5 0 0 0 0 0 0 ; nvme0n1 4385 4694 581857280 1743810560 6453 527129 ; sda1 0 544 0 3731456 0 429 ; sda14 0 0 0 0 0 0 ; sda15 0 0 0 0 0 0 ; TCP /proc values:; tcp_timestamps = 1; tcp_sack = 1; tcp_window_scaling = 1; Boto HTTPS Enabled: ; True; Requests routed through proxy: ; False; Latency of the DNS lookup for Google Storage server (ms): ; 1.5; Latencies connecting to Google Storage server IPs (ms):; 74.125.126.128 = 1.1. ------------------------------------------------------------------------------; In-Process HTTP Statistics ; ------------------------------------------------------------------------------; Total HTTP requests made: 149; HTTP 5xx errors: 0; HTTP connections broken: 0; Availability: 100%. Output file written to '/tmp/output.json'.; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:903,Performance,Latency,Latency,903,I used the gsutil storage bandwidth tool and confirmed we get 1.2 Gibit / second upload and download speeds from within a 1 core job and 10 Gi storage. Adding more cores didn't change anything. I ran a test job with the copy tool on a 10 Gi random file and matched 1.2 Gibit / second. I'm wondering if the problem is actually workload-dependent and is based on the number of jobs / number of files. The GCS best practices states the initial capacity is 5000 read requests / second per bucket including list operations until the bucket has time to scale up its capacity. https://cloud.google.com/storage/docs/request-rate#best-practices. ```. ==============================================================================; DIAGNOSTIC RESULTS ; ==============================================================================. ------------------------------------------------------------------------------; Latency ; ------------------------------------------------------------------------------; Operation Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write thr,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:1835,Performance,Throughput,Throughput,1835,-----------------------------------; Latency ; ------------------------------------------------------------------------------; Operation Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write throughput: 977.7 Mibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; Read Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Read throughput: 1.11 Gibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; System Information ; ------------------------------------------------------------------------------; IP Address: ; 172.21.46.11; Temporary Directory: ; /tmp; Bucket URI: ; gs://hail-jigold/; gsutil Version: ; 5.24; boto Version: ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Ad,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:1998,Performance,throughput,throughput,1998, Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write throughput: 977.7 Mibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; Read Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Read throughput: 1.11 Gibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; System Information ; ------------------------------------------------------------------------------; IP Address: ; 172.21.46.11; Temporary Directory: ; /tmp; Bucket URI: ; gs://hail-jigold/; gsutil Version: ; 5.24; boto Version: ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Addresses: ; 142.250.128.128; 142.251.6.128; 108.177.112.128; 74.125.124.128; 172.217.212.128; 172.217.214.128; 172.253.119.128; 108.177.1,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:2139,Performance,Throughput,Throughput,2139,; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write throughput: 977.7 Mibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; Read Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Read throughput: 1.11 Gibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; System Information ; ------------------------------------------------------------------------------; IP Address: ; 172.21.46.11; Temporary Directory: ; /tmp; Bucket URI: ; gs://hail-jigold/; gsutil Version: ; 5.24; boto Version: ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Addresses: ; 142.250.128.128; 142.251.6.128; 108.177.112.128; 74.125.124.128; 172.217.212.128; 172.217.214.128; 172.253.119.128; 108.177.111.128; 142.250.1.128; 108.177.121.128; 142.250.103.128; 108.177.120.128; 142.250.159.128; 142.251.120.128; 142.251.161.128; 74.125.126.128; Google Server Hostnames: ; i,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:2301,Performance,throughput,throughput,2301,7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write throughput: 977.7 Mibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; Read Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Read throughput: 1.11 Gibit/s.; Parallelism strategy: both. ------------------------------------------------------------------------------; System Information ; ------------------------------------------------------------------------------; IP Address: ; 172.21.46.11; Temporary Directory: ; /tmp; Bucket URI: ; gs://hail-jigold/; gsutil Version: ; 5.24; boto Version: ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Addresses: ; 142.250.128.128; 142.251.6.128; 108.177.112.128; 74.125.124.128; 172.217.212.128; 172.217.214.128; 172.253.119.128; 108.177.111.128; 142.250.1.128; 108.177.121.128; 142.250.103.128; 108.177.120.128; 142.250.159.128; 142.251.120.128; 142.251.161.128; 74.125.126.128; Google Server Hostnames: ; ib-in-f128.1e100.net; ic-in-f128.1e100.net; jo-in-f128.1e100.net; jp-in-f128.1e100.net; jq-in-f128.1e100.net; jr-in-f128.1e100.net; jt-,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:3577,Performance,Load,Load,3577,".46.11; Temporary Directory: ; /tmp; Bucket URI: ; gs://hail-jigold/; gsutil Version: ; 5.24; boto Version: ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Addresses: ; 142.250.128.128; 142.251.6.128; 108.177.112.128; 74.125.124.128; 172.217.212.128; 172.217.214.128; 172.253.119.128; 108.177.111.128; 142.250.1.128; 108.177.121.128; 142.250.103.128; 108.177.120.128; 142.250.159.128; 142.251.120.128; 142.251.161.128; 74.125.126.128; Google Server Hostnames: ; ib-in-f128.1e100.net; ic-in-f128.1e100.net; jo-in-f128.1e100.net; jp-in-f128.1e100.net; jq-in-f128.1e100.net; jr-in-f128.1e100.net; jt-in-f128.1e100.net; jv-in-f128.1e100.net; jw-in-f128.1e100.net; jx-in-f128.1e100.net; jy-in-f128.1e100.net; jz-in-f128.1e100.net; ie-in-f128.1e100.net; if-in-f128.1e100.net; ig-in-f128.1e100.net; ik-in-f128.1e100.net; Google DNS thinks your IP is: ; ; CPU Count: ; 16; CPU Load Average: ; [32.39, 33.2, 19.0]; Total Memory: ; 57.5 GiB; Free Memory: ; 38.41 GiB; TCP segment counts not available because ""netstat"" was not found during test runs; Disk Counter Deltas:; disk reads writes rbytes wbytes rtime wtime ; loop0 0 0 0 0 0 0 ; loop1 0 0 0 0 0 0 ; loop3 0 0 0 0 0 0 ; loop4 0 0 0 0 0 0 ; loop5 0 0 0 0 0 0 ; nvme0n1 4385 4694 581857280 1743810560 6453 527129 ; sda1 0 544 0 3731456 0 429 ; sda14 0 0 0 0 0 0 ; sda15 0 0 0 0 0 0 ; TCP /proc values:; tcp_timestamps = 1; tcp_sack = 1; tcp_window_scaling = 1; Boto HTTPS Enabled: ; True; Requests routed through proxy: ; False; Latency of the DNS lookup for Google Storage server (ms): ; 1.5; Latencies connecting to Google Storage server IPs (ms):; 74.125.126.128 = 1.1. ------------------------------------------------------------------------------; In-Process HTTP Statistics ; ------------------------------------------------------------------------------; Total HTTP requests made: 149; HTTP 5xx ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:4184,Performance,Latency,Latency,4184,": ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Addresses: ; 142.250.128.128; 142.251.6.128; 108.177.112.128; 74.125.124.128; 172.217.212.128; 172.217.214.128; 172.253.119.128; 108.177.111.128; 142.250.1.128; 108.177.121.128; 142.250.103.128; 108.177.120.128; 142.250.159.128; 142.251.120.128; 142.251.161.128; 74.125.126.128; Google Server Hostnames: ; ib-in-f128.1e100.net; ic-in-f128.1e100.net; jo-in-f128.1e100.net; jp-in-f128.1e100.net; jq-in-f128.1e100.net; jr-in-f128.1e100.net; jt-in-f128.1e100.net; jv-in-f128.1e100.net; jw-in-f128.1e100.net; jx-in-f128.1e100.net; jy-in-f128.1e100.net; jz-in-f128.1e100.net; ie-in-f128.1e100.net; if-in-f128.1e100.net; ig-in-f128.1e100.net; ik-in-f128.1e100.net; Google DNS thinks your IP is: ; ; CPU Count: ; 16; CPU Load Average: ; [32.39, 33.2, 19.0]; Total Memory: ; 57.5 GiB; Free Memory: ; 38.41 GiB; TCP segment counts not available because ""netstat"" was not found during test runs; Disk Counter Deltas:; disk reads writes rbytes wbytes rtime wtime ; loop0 0 0 0 0 0 0 ; loop1 0 0 0 0 0 0 ; loop3 0 0 0 0 0 0 ; loop4 0 0 0 0 0 0 ; loop5 0 0 0 0 0 0 ; nvme0n1 4385 4694 581857280 1743810560 6453 527129 ; sda1 0 544 0 3731456 0 429 ; sda14 0 0 0 0 0 0 ; sda15 0 0 0 0 0 0 ; TCP /proc values:; tcp_timestamps = 1; tcp_sack = 1; tcp_window_scaling = 1; Boto HTTPS Enabled: ; True; Requests routed through proxy: ; False; Latency of the DNS lookup for Google Storage server (ms): ; 1.5; Latencies connecting to Google Storage server IPs (ms):; 74.125.126.128 = 1.1. ------------------------------------------------------------------------------; In-Process HTTP Statistics ; ------------------------------------------------------------------------------; Total HTTP requests made: 149; HTTP 5xx errors: 0; HTTP connections broken: 0; Availability: 100%. Output file written to '/tmp/output.json'.; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:202,Testability,test,test,202,I used the gsutil storage bandwidth tool and confirmed we get 1.2 Gibit / second upload and download speeds from within a 1 core job and 10 Gi storage. Adding more cores didn't change anything. I ran a test job with the copy tool on a 10 Gi random file and matched 1.2 Gibit / second. I'm wondering if the problem is actually workload-dependent and is based on the number of jobs / number of files. The GCS best practices states the initial capacity is 5000 read requests / second per bucket including list operations until the bucket has time to scale up its capacity. https://cloud.google.com/storage/docs/request-rate#best-practices. ```. ==============================================================================; DIAGNOSTIC RESULTS ; ==============================================================================. ------------------------------------------------------------------------------; Latency ; ------------------------------------------------------------------------------; Operation Size Trials Mean (ms) Std Dev (ms) Median (ms) 90th % (ms); ========= ========= ====== ========= ============ =========== ===========; Delete 0 B 5 43.1 6.4 40.9 50.9 ; Delete 1 KiB 5 44.2 12.7 42.5 58.1 ; Delete 100 KiB 5 44.7 10.4 42.8 56.3 ; Delete 1 MiB 5 41.5 3.7 40.2 45.7 ; Download 0 B 5 74.6 7.9 73.2 84.0 ; Download 1 KiB 5 84.3 15.9 80.6 103.4 ; Download 100 KiB 5 81.9 16.0 82.7 99.6 ; Download 1 MiB 5 90.6 6.5 94.5 96.8 ; Metadata 0 B 5 23.6 2.7 23.6 26.3 ; Metadata 1 KiB 5 25.5 2.1 26.9 27.4 ; Metadata 100 KiB 5 26.2 3.6 27.3 29.9 ; Metadata 1 MiB 5 24.0 3.7 23.3 28.4 ; Upload 0 B 5 98.1 16.6 95.5 117.9 ; Upload 1 KiB 5 116.7 21.8 115.5 142.1 ; Upload 100 KiB 5 116.5 17.8 115.1 135.1 ; Upload 1 MiB 5 168.2 18.5 179.6 185.6 . ------------------------------------------------------------------------------; Write Throughput ; ------------------------------------------------------------------------------; Copied 5 512 MiB file(s) for a total transfer size of 2.5 GiB.; Write thr,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597:3738,Testability,test,test,3738,": ; 2.49.0; Measurement time: ; 2023-06-05 03:25:16 PM ; Running on GCE: ; True; GCE Instance:; 	; Bucket location: ; US-CENTRAL1; Bucket storage class: ; REGIONAL; Google Server: ; ; Google Server IP Addresses: ; 142.250.128.128; 142.251.6.128; 108.177.112.128; 74.125.124.128; 172.217.212.128; 172.217.214.128; 172.253.119.128; 108.177.111.128; 142.250.1.128; 108.177.121.128; 142.250.103.128; 108.177.120.128; 142.250.159.128; 142.251.120.128; 142.251.161.128; 74.125.126.128; Google Server Hostnames: ; ib-in-f128.1e100.net; ic-in-f128.1e100.net; jo-in-f128.1e100.net; jp-in-f128.1e100.net; jq-in-f128.1e100.net; jr-in-f128.1e100.net; jt-in-f128.1e100.net; jv-in-f128.1e100.net; jw-in-f128.1e100.net; jx-in-f128.1e100.net; jy-in-f128.1e100.net; jz-in-f128.1e100.net; ie-in-f128.1e100.net; if-in-f128.1e100.net; ig-in-f128.1e100.net; ik-in-f128.1e100.net; Google DNS thinks your IP is: ; ; CPU Count: ; 16; CPU Load Average: ; [32.39, 33.2, 19.0]; Total Memory: ; 57.5 GiB; Free Memory: ; 38.41 GiB; TCP segment counts not available because ""netstat"" was not found during test runs; Disk Counter Deltas:; disk reads writes rbytes wbytes rtime wtime ; loop0 0 0 0 0 0 0 ; loop1 0 0 0 0 0 0 ; loop3 0 0 0 0 0 0 ; loop4 0 0 0 0 0 0 ; loop5 0 0 0 0 0 0 ; nvme0n1 4385 4694 581857280 1743810560 6453 527129 ; sda1 0 544 0 3731456 0 429 ; sda14 0 0 0 0 0 0 ; sda15 0 0 0 0 0 0 ; TCP /proc values:; tcp_timestamps = 1; tcp_sack = 1; tcp_window_scaling = 1; Boto HTTPS Enabled: ; True; Requests routed through proxy: ; False; Latency of the DNS lookup for Google Storage server (ms): ; 1.5; Latencies connecting to Google Storage server IPs (ms):; 74.125.126.128 = 1.1. ------------------------------------------------------------------------------; In-Process HTTP Statistics ; ------------------------------------------------------------------------------; Total HTTP requests made: 149; HTTP 5xx errors: 0; HTTP connections broken: 0; Availability: 100%. Output file written to '/tmp/output.json'.; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1577071597
https://github.com/hail-is/hail/issues/12923#issuecomment-1599420578:310,Modifiability,config,configure,310,"@jigold. > I ran a test job with the copy tool on a 10 Gi random file and matched 1.2 Gibit / second. Does this mean something like:; ```; j = b.new_job(); j.image('hailgenetics/hail:0.2.118'); j.command('python3 -m hailtop.copy ...'); ```; Or did you use a `read_input`? I'm curious if something about how we configure the input container could affect this. I doubt it, but wanted to confirm.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1599420578
https://github.com/hail-is/hail/issues/12923#issuecomment-1599420578:19,Testability,test,test,19,"@jigold. > I ran a test job with the copy tool on a 10 Gi random file and matched 1.2 Gibit / second. Does this mean something like:; ```; j = b.new_job(); j.image('hailgenetics/hail:0.2.118'); j.command('python3 -m hailtop.copy ...'); ```; Or did you use a `read_input`? I'm curious if something about how we configure the input container could affect this. I doubt it, but wanted to confirm.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12923#issuecomment-1599420578
https://github.com/hail-is/hail/issues/12925#issuecomment-1775387640:142,Testability,log,log,142,"This was almost certainly caused by https://github.com/hail-is/hail/pull/13634 . Job is https://batch.hail.is/batches/7304823/jobs/104 . Last log line is the ""reading results"" line. Unfortunately, resource recording results were broken during this time, so we cannot confirm memory use exploded.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12925#issuecomment-1775387640
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826560:30,Integrability,depend,dependency,30,We'll pick this up from other dependency changes I'm making,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826560
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12928#issuecomment-1520826635
https://github.com/hail-is/hail/issues/12932#issuecomment-1703524347:254,Deployability,release,release,254,"We switched to Python-based FSes which work fine (see below). The issue in Scala will be fixed by https://github.com/hail-is/hail/pull/13434. ---. Here's a folder with 10k files:; ```; (base) dking@wm28c-761 hail % gsutil ls gs://gcp-public-data--gnomad/release/2.1.1/ht/genomes/gnomad.genomes.r2.1.1.sites.ht/rows/parts/ | wc -l; 10000; ```. And here's Hail working correctly as of 0.2.120.; ```; (base) dking@wm28c-761 hail % HAIL_QUERY_BACKEND=batch ipython; Python 3.10.9 (main, Jan 11 2023, 09:18:18) [Clang 14.0.6 ]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.12.2 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail as hl; ...: print(hl.version()); ...: x = hl.utils.hadoop_ls('gs://gcp-public-data--gnomad/release/2.1.1/ht/genomes/gnomad.genomes.r2.1.1.sites.ht/rows/parts/'); ...: len(x); 0.2.120-f00f916faf78. Out[1]: 10000; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12932#issuecomment-1703524347
https://github.com/hail-is/hail/issues/12932#issuecomment-1703524347:766,Deployability,release,release,766,"We switched to Python-based FSes which work fine (see below). The issue in Scala will be fixed by https://github.com/hail-is/hail/pull/13434. ---. Here's a folder with 10k files:; ```; (base) dking@wm28c-761 hail % gsutil ls gs://gcp-public-data--gnomad/release/2.1.1/ht/genomes/gnomad.genomes.r2.1.1.sites.ht/rows/parts/ | wc -l; 10000; ```. And here's Hail working correctly as of 0.2.120.; ```; (base) dking@wm28c-761 hail % HAIL_QUERY_BACKEND=batch ipython; Python 3.10.9 (main, Jan 11 2023, 09:18:18) [Clang 14.0.6 ]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.12.2 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail as hl; ...: print(hl.version()); ...: x = hl.utils.hadoop_ls('gs://gcp-public-data--gnomad/release/2.1.1/ht/genomes/gnomad.genomes.r2.1.1.sites.ht/rows/parts/'); ...: len(x); 0.2.120-f00f916faf78. Out[1]: 10000; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12932#issuecomment-1703524347
https://github.com/hail-is/hail/issues/12932#issuecomment-1703524347:607,Modifiability,enhance,enhanced,607,"We switched to Python-based FSes which work fine (see below). The issue in Scala will be fixed by https://github.com/hail-is/hail/pull/13434. ---. Here's a folder with 10k files:; ```; (base) dking@wm28c-761 hail % gsutil ls gs://gcp-public-data--gnomad/release/2.1.1/ht/genomes/gnomad.genomes.r2.1.1.sites.ht/rows/parts/ | wc -l; 10000; ```. And here's Hail working correctly as of 0.2.120.; ```; (base) dking@wm28c-761 hail % HAIL_QUERY_BACKEND=batch ipython; Python 3.10.9 (main, Jan 11 2023, 09:18:18) [Clang 14.0.6 ]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.12.2 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail as hl; ...: print(hl.version()); ...: x = hl.utils.hadoop_ls('gs://gcp-public-data--gnomad/release/2.1.1/ht/genomes/gnomad.genomes.r2.1.1.sites.ht/rows/parts/'); ...: len(x); 0.2.120-f00f916faf78. Out[1]: 10000; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12932#issuecomment-1703524347
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534298:45,Deployability,update,update,45,Parsy is transitive from curlylint. We can't update until they do.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534298
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:93,Availability,avail,available,93,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:40,Deployability,release,release,40,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:129,Deployability,update,updates,129,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:327,Deployability,patch,patch,327,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:333,Deployability,release,releases,333,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:456,Deployability,configurat,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:204,Integrability,depend,dependabot,204,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:247,Integrability,depend,dependabot,247,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:348,Integrability,depend,dependency,348,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:482,Integrability,depend,dependency-updates,482,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:456,Modifiability,config,configuration-options-for-dependency-updates,456,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:549,Modifiability,config,config,549,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:425,Security,secur,security,425,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395:447,Security,secur,security,447,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12934#issuecomment-1708534395
https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412:194,Deployability,install,install,194,I ran into this today...spent a bit of time debugging and was able to ssh to one of the workers and poke around the `docker` logs. The issue appears to be some kind of race between the `docker` install that the `VEP` initialization script does and the limited number of retries by `systemd` to get the `docker` daemon up and running. . Adding `sudo service docker restart` at the end of the the `VEP` initialization bash script worked as a short term fix.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412
https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412:125,Testability,log,logs,125,I ran into this today...spent a bit of time debugging and was able to ssh to one of the workers and poke around the `docker` logs. The issue appears to be some kind of race between the `docker` install that the `VEP` initialization script does and the limited number of retries by `systemd` to get the `docker` daemon up and running. . Adding `sudo service docker restart` at the end of the the `VEP` initialization bash script worked as a short term fix.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:290,Availability,avail,available,290,"There is a [known issue](https://github.com/moby/moby/issues/41792) with the official Docker deb. If you uninstall docker and re-install it later, it might fail to start. The root cause is the `docker.socket` `systemd` unit failing to start because there are ""insufficient file descriptors available"". I think this is confusing verbiage. The socket's name must be `/var/run/docker.sock`. Clearly, if that filename is already in use, we cannot create a new socket at that filename. One of Google's [""Dataproc components""](https://cloud.google.com/dataproc/docs/concepts/components/overview) is Docker. I believe Google installed and then uninstalled docker in this image, thus leaving it in the broken state. For evidence of that:. <details>; <summary> find docker on a worker node of a *non-Hail* Dataproc cluster</summary>. ```; sudo find / -iname '*docker*'; ```. ```; /opt/conda/miniconda3/pkgs/dbus-1.13.6-h5008d03_3/info/recipe/patches/0004-disable-fd-limit-tests-not-supported-in-docker.patch; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/docker",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:12973,Availability,down,download,12973,"t/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13049,Availability,down,download,13049,"onents/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has hap",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13347,Availability,failure,failure,13347,"l/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13711,Availability,down,download,13711,"ataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also added a sleep in hopes that gives various things a chance to die off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13820,Availability,down,download,13820,"ataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also added a sleep in hopes that gives various things a chance to die off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13989,Availability,error,error,13989,"ataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also added a sleep in hopes that gives various things a chance to die off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:129,Deployability,install,install,129,"There is a [known issue](https://github.com/moby/moby/issues/41792) with the official Docker deb. If you uninstall docker and re-install it later, it might fail to start. The root cause is the `docker.socket` `systemd` unit failing to start because there are ""insufficient file descriptors available"". I think this is confusing verbiage. The socket's name must be `/var/run/docker.sock`. Clearly, if that filename is already in use, we cannot create a new socket at that filename. One of Google's [""Dataproc components""](https://cloud.google.com/dataproc/docs/concepts/components/overview) is Docker. I believe Google installed and then uninstalled docker in this image, thus leaving it in the broken state. For evidence of that:. <details>; <summary> find docker on a worker node of a *non-Hail* Dataproc cluster</summary>. ```; sudo find / -iname '*docker*'; ```. ```; /opt/conda/miniconda3/pkgs/dbus-1.13.6-h5008d03_3/info/recipe/patches/0004-disable-fd-limit-tests-not-supported-in-docker.patch; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/docker",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:618,Deployability,install,installed,618,"There is a [known issue](https://github.com/moby/moby/issues/41792) with the official Docker deb. If you uninstall docker and re-install it later, it might fail to start. The root cause is the `docker.socket` `systemd` unit failing to start because there are ""insufficient file descriptors available"". I think this is confusing verbiage. The socket's name must be `/var/run/docker.sock`. Clearly, if that filename is already in use, we cannot create a new socket at that filename. One of Google's [""Dataproc components""](https://cloud.google.com/dataproc/docs/concepts/components/overview) is Docker. I believe Google installed and then uninstalled docker in this image, thus leaving it in the broken state. For evidence of that:. <details>; <summary> find docker on a worker node of a *non-Hail* Dataproc cluster</summary>. ```; sudo find / -iname '*docker*'; ```. ```; /opt/conda/miniconda3/pkgs/dbus-1.13.6-h5008d03_3/info/recipe/patches/0004-disable-fd-limit-tests-not-supported-in-docker.patch; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/docker",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:933,Deployability,patch,patches,933,"There is a [known issue](https://github.com/moby/moby/issues/41792) with the official Docker deb. If you uninstall docker and re-install it later, it might fail to start. The root cause is the `docker.socket` `systemd` unit failing to start because there are ""insufficient file descriptors available"". I think this is confusing verbiage. The socket's name must be `/var/run/docker.sock`. Clearly, if that filename is already in use, we cannot create a new socket at that filename. One of Google's [""Dataproc components""](https://cloud.google.com/dataproc/docs/concepts/components/overview) is Docker. I believe Google installed and then uninstalled docker in this image, thus leaving it in the broken state. For evidence of that:. <details>; <summary> find docker on a worker node of a *non-Hail* Dataproc cluster</summary>. ```; sudo find / -iname '*docker*'; ```. ```; /opt/conda/miniconda3/pkgs/dbus-1.13.6-h5008d03_3/info/recipe/patches/0004-disable-fd-limit-tests-not-supported-in-docker.patch; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/docker",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:993,Deployability,patch,patch,993,"n issue](https://github.com/moby/moby/issues/41792) with the official Docker deb. If you uninstall docker and re-install it later, it might fail to start. The root cause is the `docker.socket` `systemd` unit failing to start because there are ""insufficient file descriptors available"". I think this is confusing verbiage. The socket's name must be `/var/run/docker.sock`. Clearly, if that filename is already in use, we cannot create a new socket at that filename. One of Google's [""Dataproc components""](https://cloud.google.com/dataproc/docs/concepts/components/overview) is Docker. I believe Google installed and then uninstalled docker in this image, thus leaving it in the broken state. For evidence of that:. <details>; <summary> find docker on a worker node of a *non-Hail* Dataproc cluster</summary>. ```; sudo find / -iname '*docker*'; ```. ```; /opt/conda/miniconda3/pkgs/dbus-1.13.6-h5008d03_3/info/recipe/patches/0004-disable-fd-limit-tests-not-supported-in-docker.patch; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/g",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:12106,Deployability,install,install,12106,ocker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:12259,Deployability,install,install,12259,"nerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13223,Deployability,install,install,13223,"install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-15",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13565,Deployability,update,update,13565,"ataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also added a sleep in hopes that gives various things a chance to die off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13584,Deployability,install,install,13584,"ataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also added a sleep in hopes that gives various things a chance to die off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13889,Deployability,update,update,13889,"ataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also added a sleep in hopes that gives various things a chance to die off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13905,Deployability,install,install,13905,"ataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also added a sleep in hopes that gives various things a chance to die off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:14389,Deployability,install,installation,14389,"ataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also added a sleep in hopes that gives various things a chance to die off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:11657,Energy Efficiency,monitor,monitor-counter,11657,ry/client/v1/__pycache__/docker_image_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/v1/__pycache__/docker_http_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_creds_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_name_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/compon,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:11730,Energy Efficiency,monitor,monitor,11730,le-cloud-sdk/lib/third_party/containerregistry/client/v1/__pycache__/docker_http_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_creds_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_name_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:11867,Energy Efficiency,monitor,monitor-filelog,11867,ontainerregistry/client/__pycache__/docker_creds_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_name_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/pre,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:2071,Modifiability,plugin,plugin-,2071,atic/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_dotted_labels.yml; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_annotations.yml; /usr/share/man/man1/gcloud_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_list-vulnerabilities.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_describe.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_alpha_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_list.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:2233,Modifiability,plugin,plugin-,2233,erfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_dotted_labels.yml; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_annotations.yml; /usr/share/man/man1/gcloud_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_list-vulnerabilities.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_describe.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_alpha_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_list.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_tags_list.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_tags_list.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker.1.gz; /usr/sh,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:11643,Modifiability,config,config,11643,ry/client/v1/__pycache__/docker_image_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/v1/__pycache__/docker_http_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_creds_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_name_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/compon,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:11716,Modifiability,config,config,11716,le-cloud-sdk/lib/third_party/containerregistry/client/v1/__pycache__/docker_http_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_creds_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_name_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:11781,Modifiability,config,config,11781,docker_http_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_creds_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_name_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.run,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:11853,Modifiability,config,config,11853,ontainerregistry/client/__pycache__/docker_creds_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/client/__pycache__/docker_name_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/pre,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:11955,Modifiability,plugin,plugin,11955,stry/client/__pycache__/docker_name_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13621,Security,certificate,certificates,13621,"ataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also added a sleep in hopes that gives various things a chance to die off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:963,Testability,test,tests-not-supported-in-docker,963,"There is a [known issue](https://github.com/moby/moby/issues/41792) with the official Docker deb. If you uninstall docker and re-install it later, it might fail to start. The root cause is the `docker.socket` `systemd` unit failing to start because there are ""insufficient file descriptors available"". I think this is confusing verbiage. The socket's name must be `/var/run/docker.sock`. Clearly, if that filename is already in use, we cannot create a new socket at that filename. One of Google's [""Dataproc components""](https://cloud.google.com/dataproc/docs/concepts/components/overview) is Docker. I believe Google installed and then uninstalled docker in this image, thus leaving it in the broken state. For evidence of that:. <details>; <summary> find docker on a worker node of a *non-Hail* Dataproc cluster</summary>. ```; sudo find / -iname '*docker*'; ```. ```; /opt/conda/miniconda3/pkgs/dbus-1.13.6-h5008d03_3/info/recipe/patches/0004-disable-fd-limit-tests-not-supported-in-docker.patch; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/docker",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:2111,Testability,test,test,2111,iniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_dotted_labels.yml; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_annotations.yml; /usr/share/man/man1/gcloud_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_list-vulnerabilities.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_describe.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_alpha_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_list.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_tags_list.1.gz; /usr/share/man/man1/gc,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:2273,Testability,test,test,2273,ok-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_dotted_labels.yml; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_annotations.yml; /usr/share/man/man1/gcloud_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_list-vulnerabilities.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_describe.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_alpha_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_list.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_tags_list.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_tags_list.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker_images_list.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:11962,Testability,test,test,11962,stry/client/__pycache__/docker_name_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13506,Testability,test,test,13506,"l/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also add",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13541,Testability,test,test,13541,"ataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also added a sleep in hopes that gives various things a chance to die off.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:388,Usability,Clear,Clearly,388,"There is a [known issue](https://github.com/moby/moby/issues/41792) with the official Docker deb. If you uninstall docker and re-install it later, it might fail to start. The root cause is the `docker.socket` `systemd` unit failing to start because there are ""insufficient file descriptors available"". I think this is confusing verbiage. The socket's name must be `/var/run/docker.sock`. Clearly, if that filename is already in use, we cannot create a new socket at that filename. One of Google's [""Dataproc components""](https://cloud.google.com/dataproc/docs/concepts/components/overview) is Docker. I believe Google installed and then uninstalled docker in this image, thus leaving it in the broken state. For evidence of that:. <details>; <summary> find docker on a worker node of a *non-Hail* Dataproc cluster</summary>. ```; sudo find / -iname '*docker*'; ```. ```; /opt/conda/miniconda3/pkgs/dbus-1.13.6-h5008d03_3/info/recipe/patches/0004-disable-fd-limit-tests-not-supported-in-docker.patch; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/docker",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751
https://github.com/hail-is/hail/pull/12940#issuecomment-1524116301:19,Testability,test,testing,19,I verified this by testing directly in my namespace,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12940#issuecomment-1524116301
https://github.com/hail-is/hail/pull/12941#issuecomment-1524328047:33,Deployability,configurat,configuration,33,Citation for log4j1 programmatic configuration breaking log4j2: https://logging.apache.org/log4j/2.x/manual/migration.html#limitations-of-the-log4j-1-x-bridge,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1524328047
https://github.com/hail-is/hail/pull/12941#issuecomment-1524328047:152,Integrability,bridg,bridge,152,Citation for log4j1 programmatic configuration breaking log4j2: https://logging.apache.org/log4j/2.x/manual/migration.html#limitations-of-the-log4j-1-x-bridge,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1524328047
https://github.com/hail-is/hail/pull/12941#issuecomment-1524328047:33,Modifiability,config,configuration,33,Citation for log4j1 programmatic configuration breaking log4j2: https://logging.apache.org/log4j/2.x/manual/migration.html#limitations-of-the-log4j-1-x-bridge,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1524328047
https://github.com/hail-is/hail/pull/12941#issuecomment-1524328047:72,Testability,log,logging,72,Citation for log4j1 programmatic configuration breaking log4j2: https://logging.apache.org/log4j/2.x/manual/migration.html#limitations-of-the-log4j-1-x-bridge,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1524328047
https://github.com/hail-is/hail/pull/12941#issuecomment-1527963692:436,Availability,toler,tolerate,436,"> If we ever ban old versions of Hail from the cluster, then we can also eliminate the log4j2 reconfiguration. New versions of Hail work fine without any runtime log configuration (thanks to QoBAppender). We might want to do this if we get rid of GSA keys. We can't have any more jars that presume the existence of some key file. It would also be a good time to fully delete the `memory` service, even though old jars should be able to tolerate that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1527963692
https://github.com/hail-is/hail/pull/12941#issuecomment-1527963692:166,Deployability,configurat,configuration,166,"> If we ever ban old versions of Hail from the cluster, then we can also eliminate the log4j2 reconfiguration. New versions of Hail work fine without any runtime log configuration (thanks to QoBAppender). We might want to do this if we get rid of GSA keys. We can't have any more jars that presume the existence of some key file. It would also be a good time to fully delete the `memory` service, even though old jars should be able to tolerate that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1527963692
https://github.com/hail-is/hail/pull/12941#issuecomment-1527963692:166,Modifiability,config,configuration,166,"> If we ever ban old versions of Hail from the cluster, then we can also eliminate the log4j2 reconfiguration. New versions of Hail work fine without any runtime log configuration (thanks to QoBAppender). We might want to do this if we get rid of GSA keys. We can't have any more jars that presume the existence of some key file. It would also be a good time to fully delete the `memory` service, even though old jars should be able to tolerate that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1527963692
https://github.com/hail-is/hail/pull/12941#issuecomment-1527963692:162,Testability,log,log,162,"> If we ever ban old versions of Hail from the cluster, then we can also eliminate the log4j2 reconfiguration. New versions of Hail work fine without any runtime log configuration (thanks to QoBAppender). We might want to do this if we get rid of GSA keys. We can't have any more jars that presume the existence of some key file. It would also be a good time to fully delete the `memory` service, even though old jars should be able to tolerate that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1527963692
https://github.com/hail-is/hail/pull/12941#issuecomment-1527997196:105,Deployability,update,update,105,"I'm personally OK not supporting a long lineage of Hail versions on QoB. If we don't have to make people update for a few versions, great, but we should be OK making people run a pip upgrade.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1527997196
https://github.com/hail-is/hail/pull/12941#issuecomment-1527997196:183,Deployability,upgrade,upgrade,183,"I'm personally OK not supporting a long lineage of Hail versions on QoB. If we don't have to make people update for a few versions, great, but we should be OK making people run a pip upgrade.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1527997196
https://github.com/hail-is/hail/pull/12941#issuecomment-1528389159:145,Usability,simpl,simple,145,"Banning versions completely is a little tricky because the user can specify a JAR url directly instead of a version. JARs don't currently have a simple way to report pip version to the worker, though we could cook something up. We could also just delete the old JARs.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1528389159
https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664:457,Availability,error,error,457,"> Banning versions completely is a little tricky because the user can specify a JAR url directly instead of a version. JARs don't currently have a simple way to report pip version to the worker, though we could cook something up. We could also just delete the old JARs. I feel like we should make a (cached) request to ensure that the JAR exists in the front-end upon job submission and return a 400 if it doesn't exist instead of waiting for the worker to error. It would:. - Allow us to remove support by deleting old jars; - Fail fast (I know I have accidentally messed up deploying a dev jar and had to wait until a worker came online to find out); - Avoid alerts from workers that can't find dev jars due to mistakes like I mention above",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664
https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664:576,Deployability,deploy,deploying,576,"> Banning versions completely is a little tricky because the user can specify a JAR url directly instead of a version. JARs don't currently have a simple way to report pip version to the worker, though we could cook something up. We could also just delete the old JARs. I feel like we should make a (cached) request to ensure that the JAR exists in the front-end upon job submission and return a 400 if it doesn't exist instead of waiting for the worker to error. It would:. - Allow us to remove support by deleting old jars; - Fail fast (I know I have accidentally messed up deploying a dev jar and had to wait until a worker came online to find out); - Avoid alerts from workers that can't find dev jars due to mistakes like I mention above",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664
https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664:300,Performance,cache,cached,300,"> Banning versions completely is a little tricky because the user can specify a JAR url directly instead of a version. JARs don't currently have a simple way to report pip version to the worker, though we could cook something up. We could also just delete the old JARs. I feel like we should make a (cached) request to ensure that the JAR exists in the front-end upon job submission and return a 400 if it doesn't exist instead of waiting for the worker to error. It would:. - Allow us to remove support by deleting old jars; - Fail fast (I know I have accidentally messed up deploying a dev jar and had to wait until a worker came online to find out); - Avoid alerts from workers that can't find dev jars due to mistakes like I mention above",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664
https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664:655,Safety,Avoid,Avoid,655,"> Banning versions completely is a little tricky because the user can specify a JAR url directly instead of a version. JARs don't currently have a simple way to report pip version to the worker, though we could cook something up. We could also just delete the old JARs. I feel like we should make a (cached) request to ensure that the JAR exists in the front-end upon job submission and return a 400 if it doesn't exist instead of waiting for the worker to error. It would:. - Allow us to remove support by deleting old jars; - Fail fast (I know I have accidentally messed up deploying a dev jar and had to wait until a worker came online to find out); - Avoid alerts from workers that can't find dev jars due to mistakes like I mention above",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664
https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664:147,Usability,simpl,simple,147,"> Banning versions completely is a little tricky because the user can specify a JAR url directly instead of a version. JARs don't currently have a simple way to report pip version to the worker, though we could cook something up. We could also just delete the old JARs. I feel like we should make a (cached) request to ensure that the JAR exists in the front-end upon job submission and return a 400 if it doesn't exist instead of waiting for the worker to error. It would:. - Allow us to remove support by deleting old jars; - Fail fast (I know I have accidentally messed up deploying a dev jar and had to wait until a worker came online to find out); - Avoid alerts from workers that can't find dev jars due to mistakes like I mention above",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664
https://github.com/hail-is/hail/pull/12941#issuecomment-1529980071:86,Testability,log,logs,86,"I endorse such a feature! In the meantime, I think we now have a PR that restores job logs for new versions of Hail. Let's get it out to the users post-haste!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1529980071
https://github.com/hail-is/hail/pull/12942#issuecomment-1525704055:35,Deployability,UPDATE,UPDATE,35,We should probably have SELECT FOR UPDATE on these queries as well.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/pull/12942#issuecomment-1525704055
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:267,Availability,ERROR,ERRORS,267,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:234,Deployability,install,installed,234,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:323,Deployability,install,install,323,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:414,Deployability,install,installation,414,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:461,Deployability,install,installdeps,461,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:477,Deployability,install,install,477,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:577,Deployability,Install,Installing,577,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:696,Deployability,install,install,696,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:1015,Deployability,Install,Installing,1015,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:1090,Deployability,install,installed,1090,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:1127,Deployability,install,installed,1127,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:1177,Deployability,install,installed,1177,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:1216,Deployability,install,installation,1216,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:930,Integrability,depend,dependencies,930,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:1030,Integrability,depend,dependencies,1030,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:872,Modifiability,Config,Configuring,872,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:30,Testability,log,log,30,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:542,Testability,test,testing,542,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230:651,Testability,log,log,651,"Note some highlights from the log:; ```; #12 42.27 ./Bio/tmp/Bio-DB-HTS-2.9 - moving files to ./biodbhts; #12 42.27 - making Bio::DB:HTS; #12 42.40 Checking prerequisites...; #12 42.40 requires:; #12 42.40 ! Bio::Root::Version is not installed; #12 42.40 ; #12 42.40 ERRORS/WARNINGS FOUND IN PREREQUISITES. You may wish to install the versions; #12 42.40 of the modules indicated above before proceeding with this installation; #12 42.40 ; #12 42.40 Run 'Build installdeps' to install missing prerequisites.; ```; ```; #13 138.3 Building and testing Test2-Suite-0.000152 ... ! Installing Test2::V0 failed. See /root/.cpanm/work/1682614674.13506/build.log for details. Retry with --force to force install it.; #13 150.9 FAIL; #13 150.9 --> Working on FFI::CheckLib; #13 150.9 Fetching http://www.cpan.org/authors/id/P/PL/PLICEASE/FFI-CheckLib-0.31.tar.gz ... OK; #13 150.9 Configuring FFI-CheckLib-0.31 ... OK; #13 151.1 ==> Found dependencies: Test2::V0, Test2::Require::EnvVar, Test2::Require::Module; #13 151.1 ! Installing the dependencies failed: Module 'Test2::Require::EnvVar' is not installed, Module 'Test2::V0' is not installed, Module 'Test2::Require::Module' is not installed; #13 151.1 ! Bailing out the installation for FFI-CheckLib-0.31. ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1526412230
https://github.com/hail-is/hail/issues/12946#issuecomment-1542982780:244,Modifiability,plugin,plugin,244,"I'm not sure if this is the right place to drop this, but is there a reason for building the new functionality on a pretty old VEP build? 95 dates from January 2019... It may not be related, but I had to do a chunk of overwriting of the LOFTEE plugin, because the default bundled with VEP was/is broken for GRCh38 on 105 - https://github.com/populationgenomics/images/pull/46. . The VEP 109 Docker image claims to 'include all VEP plugins', so I'm not sure if that variability would interfere with parsing VEP data into Hail data structures.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1542982780
https://github.com/hail-is/hail/issues/12946#issuecomment-1542982780:431,Modifiability,plugin,plugins,431,"I'm not sure if this is the right place to drop this, but is there a reason for building the new functionality on a pretty old VEP build? 95 dates from January 2019... It may not be related, but I had to do a chunk of overwriting of the LOFTEE plugin, because the default bundled with VEP was/is broken for GRCh38 on 105 - https://github.com/populationgenomics/images/pull/46. . The VEP 109 Docker image claims to 'include all VEP plugins', so I'm not sure if that variability would interfere with parsing VEP data into Hail data structures.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1542982780
https://github.com/hail-is/hail/issues/12946#issuecomment-1542982780:465,Modifiability,variab,variability,465,"I'm not sure if this is the right place to drop this, but is there a reason for building the new functionality on a pretty old VEP build? 95 dates from January 2019... It may not be related, but I had to do a chunk of overwriting of the LOFTEE plugin, because the default bundled with VEP was/is broken for GRCh38 on 105 - https://github.com/populationgenomics/images/pull/46. . The VEP 109 Docker image claims to 'include all VEP plugins', so I'm not sure if that variability would interfere with parsing VEP data into Hail data structures.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1542982780
https://github.com/hail-is/hail/issues/12946#issuecomment-1543045199:70,Deployability,install,installing,70,We are likewise unhappy with the age of the image. The alternative is installing/building enough Perl modules to make VEP work which has also proved challenging. Most recently some LibXML library was failing its own tests inside our relatively recent Ubuntu-based image. We're still evaluating various options. We would like to continue to support 95. We will probably also add 105 at some point. Unclear how long we should support 95.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1543045199
https://github.com/hail-is/hail/issues/12946#issuecomment-1543045199:216,Testability,test,tests,216,We are likewise unhappy with the age of the image. The alternative is installing/building enough Perl modules to make VEP work which has also proved challenging. Most recently some LibXML library was failing its own tests inside our relatively recent Ubuntu-based image. We're still evaluating various options. We would like to continue to support 95. We will probably also add 105 at some point. Unclear how long we should support 95.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1543045199
https://github.com/hail-is/hail/issues/12946#issuecomment-1738209895:144,Integrability,depend,dependency,144,"This resolved itself. https://batch.hail.is/batches/8049645/jobs/26. I don't entirely understand the perl build process, but it seems that some dependency somehow broke itself. Matt's comment about updating to a later version stands. We'll track the need for a newer version of VEP at https://github.com/hail-is/hail/issues/13167",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12946#issuecomment-1738209895
https://github.com/hail-is/hail/issues/12950#issuecomment-1530268410:4,Availability,error,error,4,"The error message suggests that multiple clients are writing to:; ```; gs://rwalters-hail-tmp/merged_round2_sumstats.fix_lowconf.mt/entries/rows/parts/part-15801-2fde3786-67cb-42ed-8aac-f900cfcc4c00; ```; Which is a Hail Query partition file within a matrix table. This is happening in a flush of GoogleStorageFS after we've filled up the local byte buffer. I don't think this is 0.2.114 because the line numbers don't line up. This appears to be before our recent changes to handle requester pays. A couple thoughts:; 1. We retryTransientErrors on the entire partition. What happens if a partition fails and we automatically retry it? Does the generated code clean up all the output streams when an exception occurs? If not, it's possible that there's still an open connection to GCS when we re-run the partition's generated code gain.; 2. Hail Batch guarantees at least once execution of a job. It's possible that two distinct workers are executing the partition's generated code. Does the Hail Query generated code create a distinct file name for each execution? (I think the answer is yes.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1530268410
https://github.com/hail-is/hail/issues/12950#issuecomment-1530268410:10,Integrability,message,message,10,"The error message suggests that multiple clients are writing to:; ```; gs://rwalters-hail-tmp/merged_round2_sumstats.fix_lowconf.mt/entries/rows/parts/part-15801-2fde3786-67cb-42ed-8aac-f900cfcc4c00; ```; Which is a Hail Query partition file within a matrix table. This is happening in a flush of GoogleStorageFS after we've filled up the local byte buffer. I don't think this is 0.2.114 because the line numbers don't line up. This appears to be before our recent changes to handle requester pays. A couple thoughts:; 1. We retryTransientErrors on the entire partition. What happens if a partition fails and we automatically retry it? Does the generated code clean up all the output streams when an exception occurs? If not, it's possible that there's still an open connection to GCS when we re-run the partition's generated code gain.; 2. Hail Batch guarantees at least once execution of a job. It's possible that two distinct workers are executing the partition's generated code. Does the Hail Query generated code create a distinct file name for each execution? (I think the answer is yes.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1530268410
https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331:475,Availability,error,errors,475,"Yeah, I think I agree that we have a unique UUID. What I'm more skeptical of is: what if we throw an exception in a `write`? Do we clean up all the open resources? If not, that could totally leave a writer open that will conflict when we retry (even if we retried on a different VM!). ---. `retryTransientErrors` expects partition code to be safe to execute twice, but otherwise it's quite simple:. ```scala; def retryTransientErrors[T](f: => T): T = {; var delay = 0.1; var errors = 0; while (true) {; try {; return f; } catch {; case e: Exception =>; errors += 1; if (errors == 1 && isRetryOnceError(e)); return f; if (!isTransientError(e)); throw e; if (errors % 10 == 0); log.warn(s""encountered $errors transient errors, most recent one was $e""); }; delay = sleepAndBackoff(delay); }. throw new AssertionError(""unreachable""); }; ```; and this is the call site:; ```scala; val htc = new ServiceTaskContext(i); var result: Array[Byte] = null; var userError: HailException = null; try {; retryTransientErrors {; result = f(context, htc, theHailClassLoader, fs); }; } catch {; case err: HailException => userError = err; }; htc.close(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331
https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331:553,Availability,error,errors,553,"Yeah, I think I agree that we have a unique UUID. What I'm more skeptical of is: what if we throw an exception in a `write`? Do we clean up all the open resources? If not, that could totally leave a writer open that will conflict when we retry (even if we retried on a different VM!). ---. `retryTransientErrors` expects partition code to be safe to execute twice, but otherwise it's quite simple:. ```scala; def retryTransientErrors[T](f: => T): T = {; var delay = 0.1; var errors = 0; while (true) {; try {; return f; } catch {; case e: Exception =>; errors += 1; if (errors == 1 && isRetryOnceError(e)); return f; if (!isTransientError(e)); throw e; if (errors % 10 == 0); log.warn(s""encountered $errors transient errors, most recent one was $e""); }; delay = sleepAndBackoff(delay); }. throw new AssertionError(""unreachable""); }; ```; and this is the call site:; ```scala; val htc = new ServiceTaskContext(i); var result: Array[Byte] = null; var userError: HailException = null; try {; retryTransientErrors {; result = f(context, htc, theHailClassLoader, fs); }; } catch {; case err: HailException => userError = err; }; htc.close(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331
https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331:570,Availability,error,errors,570,"Yeah, I think I agree that we have a unique UUID. What I'm more skeptical of is: what if we throw an exception in a `write`? Do we clean up all the open resources? If not, that could totally leave a writer open that will conflict when we retry (even if we retried on a different VM!). ---. `retryTransientErrors` expects partition code to be safe to execute twice, but otherwise it's quite simple:. ```scala; def retryTransientErrors[T](f: => T): T = {; var delay = 0.1; var errors = 0; while (true) {; try {; return f; } catch {; case e: Exception =>; errors += 1; if (errors == 1 && isRetryOnceError(e)); return f; if (!isTransientError(e)); throw e; if (errors % 10 == 0); log.warn(s""encountered $errors transient errors, most recent one was $e""); }; delay = sleepAndBackoff(delay); }. throw new AssertionError(""unreachable""); }; ```; and this is the call site:; ```scala; val htc = new ServiceTaskContext(i); var result: Array[Byte] = null; var userError: HailException = null; try {; retryTransientErrors {; result = f(context, htc, theHailClassLoader, fs); }; } catch {; case err: HailException => userError = err; }; htc.close(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331
https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331:657,Availability,error,errors,657,"Yeah, I think I agree that we have a unique UUID. What I'm more skeptical of is: what if we throw an exception in a `write`? Do we clean up all the open resources? If not, that could totally leave a writer open that will conflict when we retry (even if we retried on a different VM!). ---. `retryTransientErrors` expects partition code to be safe to execute twice, but otherwise it's quite simple:. ```scala; def retryTransientErrors[T](f: => T): T = {; var delay = 0.1; var errors = 0; while (true) {; try {; return f; } catch {; case e: Exception =>; errors += 1; if (errors == 1 && isRetryOnceError(e)); return f; if (!isTransientError(e)); throw e; if (errors % 10 == 0); log.warn(s""encountered $errors transient errors, most recent one was $e""); }; delay = sleepAndBackoff(delay); }. throw new AssertionError(""unreachable""); }; ```; and this is the call site:; ```scala; val htc = new ServiceTaskContext(i); var result: Array[Byte] = null; var userError: HailException = null; try {; retryTransientErrors {; result = f(context, htc, theHailClassLoader, fs); }; } catch {; case err: HailException => userError = err; }; htc.close(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331
https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331:700,Availability,error,errors,700,"Yeah, I think I agree that we have a unique UUID. What I'm more skeptical of is: what if we throw an exception in a `write`? Do we clean up all the open resources? If not, that could totally leave a writer open that will conflict when we retry (even if we retried on a different VM!). ---. `retryTransientErrors` expects partition code to be safe to execute twice, but otherwise it's quite simple:. ```scala; def retryTransientErrors[T](f: => T): T = {; var delay = 0.1; var errors = 0; while (true) {; try {; return f; } catch {; case e: Exception =>; errors += 1; if (errors == 1 && isRetryOnceError(e)); return f; if (!isTransientError(e)); throw e; if (errors % 10 == 0); log.warn(s""encountered $errors transient errors, most recent one was $e""); }; delay = sleepAndBackoff(delay); }. throw new AssertionError(""unreachable""); }; ```; and this is the call site:; ```scala; val htc = new ServiceTaskContext(i); var result: Array[Byte] = null; var userError: HailException = null; try {; retryTransientErrors {; result = f(context, htc, theHailClassLoader, fs); }; } catch {; case err: HailException => userError = err; }; htc.close(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331
https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331:717,Availability,error,errors,717,"Yeah, I think I agree that we have a unique UUID. What I'm more skeptical of is: what if we throw an exception in a `write`? Do we clean up all the open resources? If not, that could totally leave a writer open that will conflict when we retry (even if we retried on a different VM!). ---. `retryTransientErrors` expects partition code to be safe to execute twice, but otherwise it's quite simple:. ```scala; def retryTransientErrors[T](f: => T): T = {; var delay = 0.1; var errors = 0; while (true) {; try {; return f; } catch {; case e: Exception =>; errors += 1; if (errors == 1 && isRetryOnceError(e)); return f; if (!isTransientError(e)); throw e; if (errors % 10 == 0); log.warn(s""encountered $errors transient errors, most recent one was $e""); }; delay = sleepAndBackoff(delay); }. throw new AssertionError(""unreachable""); }; ```; and this is the call site:; ```scala; val htc = new ServiceTaskContext(i); var result: Array[Byte] = null; var userError: HailException = null; try {; retryTransientErrors {; result = f(context, htc, theHailClassLoader, fs); }; } catch {; case err: HailException => userError = err; }; htc.close(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331
https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331:342,Safety,safe,safe,342,"Yeah, I think I agree that we have a unique UUID. What I'm more skeptical of is: what if we throw an exception in a `write`? Do we clean up all the open resources? If not, that could totally leave a writer open that will conflict when we retry (even if we retried on a different VM!). ---. `retryTransientErrors` expects partition code to be safe to execute twice, but otherwise it's quite simple:. ```scala; def retryTransientErrors[T](f: => T): T = {; var delay = 0.1; var errors = 0; while (true) {; try {; return f; } catch {; case e: Exception =>; errors += 1; if (errors == 1 && isRetryOnceError(e)); return f; if (!isTransientError(e)); throw e; if (errors % 10 == 0); log.warn(s""encountered $errors transient errors, most recent one was $e""); }; delay = sleepAndBackoff(delay); }. throw new AssertionError(""unreachable""); }; ```; and this is the call site:; ```scala; val htc = new ServiceTaskContext(i); var result: Array[Byte] = null; var userError: HailException = null; try {; retryTransientErrors {; result = f(context, htc, theHailClassLoader, fs); }; } catch {; case err: HailException => userError = err; }; htc.close(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331
https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331:676,Testability,log,log,676,"Yeah, I think I agree that we have a unique UUID. What I'm more skeptical of is: what if we throw an exception in a `write`? Do we clean up all the open resources? If not, that could totally leave a writer open that will conflict when we retry (even if we retried on a different VM!). ---. `retryTransientErrors` expects partition code to be safe to execute twice, but otherwise it's quite simple:. ```scala; def retryTransientErrors[T](f: => T): T = {; var delay = 0.1; var errors = 0; while (true) {; try {; return f; } catch {; case e: Exception =>; errors += 1; if (errors == 1 && isRetryOnceError(e)); return f; if (!isTransientError(e)); throw e; if (errors % 10 == 0); log.warn(s""encountered $errors transient errors, most recent one was $e""); }; delay = sleepAndBackoff(delay); }. throw new AssertionError(""unreachable""); }; ```; and this is the call site:; ```scala; val htc = new ServiceTaskContext(i); var result: Array[Byte] = null; var userError: HailException = null; try {; retryTransientErrors {; result = f(context, htc, theHailClassLoader, fs); }; } catch {; case err: HailException => userError = err; }; htc.close(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331
https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331:799,Testability,Assert,AssertionError,799,"Yeah, I think I agree that we have a unique UUID. What I'm more skeptical of is: what if we throw an exception in a `write`? Do we clean up all the open resources? If not, that could totally leave a writer open that will conflict when we retry (even if we retried on a different VM!). ---. `retryTransientErrors` expects partition code to be safe to execute twice, but otherwise it's quite simple:. ```scala; def retryTransientErrors[T](f: => T): T = {; var delay = 0.1; var errors = 0; while (true) {; try {; return f; } catch {; case e: Exception =>; errors += 1; if (errors == 1 && isRetryOnceError(e)); return f; if (!isTransientError(e)); throw e; if (errors % 10 == 0); log.warn(s""encountered $errors transient errors, most recent one was $e""); }; delay = sleepAndBackoff(delay); }. throw new AssertionError(""unreachable""); }; ```; and this is the call site:; ```scala; val htc = new ServiceTaskContext(i); var result: Array[Byte] = null; var userError: HailException = null; try {; retryTransientErrors {; result = f(context, htc, theHailClassLoader, fs); }; } catch {; case err: HailException => userError = err; }; htc.close(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331
https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331:390,Usability,simpl,simple,390,"Yeah, I think I agree that we have a unique UUID. What I'm more skeptical of is: what if we throw an exception in a `write`? Do we clean up all the open resources? If not, that could totally leave a writer open that will conflict when we retry (even if we retried on a different VM!). ---. `retryTransientErrors` expects partition code to be safe to execute twice, but otherwise it's quite simple:. ```scala; def retryTransientErrors[T](f: => T): T = {; var delay = 0.1; var errors = 0; while (true) {; try {; return f; } catch {; case e: Exception =>; errors += 1; if (errors == 1 && isRetryOnceError(e)); return f; if (!isTransientError(e)); throw e; if (errors % 10 == 0); log.warn(s""encountered $errors transient errors, most recent one was $e""); }; delay = sleepAndBackoff(delay); }. throw new AssertionError(""unreachable""); }; ```; and this is the call site:; ```scala; val htc = new ServiceTaskContext(i); var result: Array[Byte] = null; var userError: HailException = null; try {; retryTransientErrors {; result = f(context, htc, theHailClassLoader, fs); }; } catch {; case err: HailException => userError = err; }; htc.close(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531592331
https://github.com/hail-is/hail/issues/12950#issuecomment-1531672420:326,Availability,failure,failure,326,"> Do we insert finally blocks and clean up our open streams when an exception bubbles through generated code?. Nope. We can add this pretty easily now, I added infrastructure to HailTaskContexts for task-owned resources. Maybe I misunderstand Google write channels -- how would a stale writer to a different object cause this failure? I'm interpreting ""session"" here as a specific object destination, is that wrong?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1531672420
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:125,Availability,error,error,125,"I saw this again today in a fairly simple and isolated test. I'm beginning to wonder if this is just a new form of transient error. We pick 22 random characters from a 62 character alphabet. Odds of collision are minuscule:; ```; In [2]: (1/62)**22; Out[2]: 3.693029961058969e-40; ```; I verified `SecureRandom` with no constructor uses a randomly chosen seed. There's three exceptions there (all the same one). The deepest one came during a write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:1116,Availability,recover,recover,1116," of transient error. We pick 22 random characters from a 62 character alphabet. Odds of collision are minuscule:; ```; In [2]: (1/62)**22; Out[2]: 3.693029961058969e-40; ```; I verified `SecureRandom` with no constructor uses a randomly chosen seed. There's three exceptions there (all the same one). The deepest one came during a write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4901,Availability,recover,recover,4901,ava:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:6953,Availability,recover,recover,6953,cutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.close(GoogleStorageFS.scala:306); 		at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 		... 27 more; 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 0; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:9019,Energy Efficiency,adapt,adapted,9019,upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 0; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 		at is.hail.io.fs.FSPositionedOutputStream.write(FS.scala:219); 		at java.io.DataOutputStream.write(DataOutputStream.java:107); 		at is.hail.fs.FSSuite.$anonfun$testSeekMoreThanMaxInt$1(FSSuite.scala:329); 		at is.hail.fs.FSSuite.$anonfun$testSeekMoreThanMaxInt$1$adapted(FSSuite.scala:323); 		at is.hail.utils.package$.using(package.scala:635); 		... 26 more; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:9019,Modifiability,adapt,adapted,9019,upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 0; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 		at is.hail.io.fs.FSPositionedOutputStream.write(FS.scala:219); 		at java.io.DataOutputStream.write(DataOutputStream.java:107); 		at is.hail.fs.FSSuite.$anonfun$testSeekMoreThanMaxInt$1(FSSuite.scala:329); 		at is.hail.fs.FSSuite.$anonfun$testSeekMoreThanMaxInt$1$adapted(FSSuite.scala:323); 		at is.hail.utils.package$.using(package.scala:635); 		... 26 more; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:2044,Performance,concurren,concurrent,2044,ail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 	at java.io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:5835,Performance,concurren,concurrent,5835,located.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.close(GoogleStorageFS.scala:306); 		at java.io.FilterOutputStream.close(FilterOutputStrea,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:7880,Performance,concurren,concurrent,7880,hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 0; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 		at is.hail.io.fs.FSPositionedOutputStream.write(FS.scala:219); 		at java.io.DataOutputStream.write(DataOutputStream.java:107); 		a,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:1116,Safety,recover,recover,1116," of transient error. We pick 22 random characters from a 62 character alphabet. Odds of collision are minuscule:; ```; In [2]: (1/62)**22; Out[2]: 3.693029961058969e-40; ```; I verified `SecureRandom` with no constructor uses a randomly chosen seed. There's three exceptions there (all the same one). The deepest one came during a write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4901,Safety,recover,recover,4901,ava:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:6953,Safety,recover,recover,6953,cutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.close(GoogleStorageFS.scala:306); 		at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 		... 27 more; 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 0; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:298,Security,Secur,SecureRandom,298,"I saw this again today in a fairly simple and isolated test. I'm beginning to wonder if this is just a new form of transient error. We pick 22 random characters from a 62 character alphabet. Odds of collision are minuscule:; ```; In [2]: (1/62)**22; Out[2]: 3.693029961058969e-40; ```; I verified `SecureRandom` with no constructor uses a randomly chosen seed. There's three exceptions there (all the same one). The deepest one came during a write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:1893,Security,access,access,1893,https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297);,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:5682,Security,access,access,5682,un(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:7727,Security,access,access,7727,FS$$anon$2.close(GoogleStorageFS.scala:306); 		at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 		... 27 more; 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 0; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:55,Testability,test,test,55,"I saw this again today in a fairly simple and isolated test. I'm beginning to wonder if this is just a new form of transient error. We pick 22 random characters from a 62 character alphabet. Odds of collision are minuscule:; ```; In [2]: (1/62)**22; Out[2]: 3.693029961058969e-40; ```; I verified `SecureRandom` with no constructor uses a randomly chosen seed. There's three exceptions there (all the same one). The deepest one came during a write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:781,Testability,test,test,781,"I saw this again today in a fairly simple and isolated test. I'm beginning to wonder if this is just a new form of transient error. We pick 22 random characters from a 62 character alphabet. Odds of collision are minuscule:; ```; In [2]: (1/62)**22; Out[2]: 3.693029961058969e-40; ```; I verified `SecureRandom` with no constructor uses a randomly chosen seed. There's three exceptions there (all the same one). The deepest one came during a write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:966,Testability,test,test,966,"I saw this again today in a fairly simple and isolated test. I'm beginning to wonder if this is just a new form of transient error. We pick 22 random characters from a 62 character alphabet. Odds of collision are minuscule:; ```; In [2]: (1/62)**22; Out[2]: 3.693029961058969e-40; ```; I verified `SecureRandom` with no constructor uses a randomly chosen seed. There's three exceptions there (all the same one). The deepest one came during a write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:1006,Testability,test,testSeekMoreThanMaxInt,1006,"today in a fairly simple and isolated test. I'm beginning to wonder if this is just a new form of transient error. We pick 22 random characters from a 62 character alphabet. Odds of collision are minuscule:; ```; In [2]: (1/62)**22; Out[2]: 3.693029961058969e-40; ```; I verified `SecureRandom` with no constructor uses a randomly chosen seed. There's three exceptions there (all the same one). The deepest one came during a write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:1307,Testability,test,test-ezlis,1307,"write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3115,Testability,test,testSeekMoreThanMaxInt,3115,retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 	at java.io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at o,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3181,Testability,test,testSeekMoreThanMaxInt,3181,103); 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 	at java.io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.Suit,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3264,Testability,test,testSeekMoreThanMaxInt,3264,.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 	at java.io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRu,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3620,Testability,test,testng,3620,(BaseWriteChannel.java:139); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 	at java.io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3713,Testability,test,testng,3713,eStorageFS.scala:297); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 	at java.io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057);,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3777,Testability,test,testng,3777,.doHandlingRequesterPays(GoogleStorageFS.scala:279); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 	at java.io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3845,Testability,test,testng,3845,fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 	at java.io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.c,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3915,Testability,test,testng,3915,io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3931,Testability,Test,TestMethodWorker,3931,lush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a sympt,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3966,Testability,Test,TestMethodWorker,3966,:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients upl,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4002,Testability,test,testng,4002,ose(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For d,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4018,Testability,Test,TestMethodWorker,4018,m.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; u,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4039,Testability,Test,TestMethodWorker,4039,.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://st,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4075,Testability,test,testng,4075,e.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/stora,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4082,Testability,Test,TestRunner,4082,40); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/h,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4104,Testability,Test,TestRunner,4104,fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4134,Testability,test,testng,4134,(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4141,Testability,Test,TestRunner,4141,scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&u,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4156,Testability,Test,TestRunner,4156,at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=res,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4186,Testability,test,testng,4186,MoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jt,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4244,Testability,test,testng,4244,leStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlps,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4310,Testability,test,testng,4310,:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength:,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4371,Testability,test,testng,4371, Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280;,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4425,Testability,test,testng,4425,oke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.c,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4495,Testability,test,testng,4495,dAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4560,Testability,test,testng,4560,ava.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteC,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4567,Testability,Test,TestNG,4567,g.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4596,Testability,Test,TestNG,4596,nvoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4623,Testability,test,testng,4623,.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.ha,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4630,Testability,Test,TestNG,4630,al.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relo,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4654,Testability,Test,TestNG,4654,ionHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.googl,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4681,Testability,test,testng,4681,tionHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.acc,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4688,Testability,Test,TestNG,4688,per.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$100,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4699,Testability,Test,TestNG,4699,85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWri,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4726,Testability,test,testng,4726,Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.h,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4733,Testability,Test,TestNG,4733,.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.rel,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4752,Testability,Test,TestNG,4752,(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.go,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4779,Testability,test,testng,4779,g.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChann,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4786,Testability,Test,TestNG,4786,nal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.ru,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4798,Testability,Test,TestNG,4798,r.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWri,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:5092,Testability,test,test-ezlis,5092,a:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.f,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:7144,Testability,test,test-ezlis,7144,ail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.close(GoogleStorageFS.scala:306); 		at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 		... 27 more; 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 0; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flush,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:8916,Testability,test,testSeekMoreThanMaxInt,8916,upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 0; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 		at is.hail.io.fs.FSPositionedOutputStream.write(FS.scala:219); 		at java.io.DataOutputStream.write(DataOutputStream.java:107); 		at is.hail.fs.FSSuite.$anonfun$testSeekMoreThanMaxInt$1(FSSuite.scala:329); 		at is.hail.fs.FSSuite.$anonfun$testSeekMoreThanMaxInt$1$adapted(FSSuite.scala:323); 		at is.hail.utils.package$.using(package.scala:635); 		... 26 more; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:8994,Testability,test,testSeekMoreThanMaxInt,8994,upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 0; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 		at is.hail.io.fs.FSPositionedOutputStream.write(FS.scala:219); 		at java.io.DataOutputStream.write(DataOutputStream.java:107); 		at is.hail.fs.FSSuite.$anonfun$testSeekMoreThanMaxInt$1(FSSuite.scala:329); 		at is.hail.fs.FSSuite.$anonfun$testSeekMoreThanMaxInt$1$adapted(FSSuite.scala:323); 		at is.hail.utils.package$.using(package.scala:635); 		... 26 more; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:35,Usability,simpl,simple,35,"I saw this again today in a fairly simple and isolated test. I'm beginning to wonder if this is just a new form of transient error. We pick 22 random characters from a 62 character alphabet. Odds of collision are minuscule:; ```; In [2]: (1/62)**22; Out[2]: 3.693029961058969e-40; ```; I verified `SecureRandom` with no constructor uses a randomly chosen seed. There's three exceptions there (all the same one). The deepest one came during a write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756
https://github.com/hail-is/hail/issues/12950#issuecomment-1564745979:1030,Safety,safe,safe,1030,"I did some digging into their client library. This exception (from the example where last_chunk=False) is thrown in the following cases:. ```; // Case 4: localNextByteOffset < remoteNextByteOffset; // && driftOffset > chunkSize:; // Throw exception as remoteNextByteOffset has drifted beyond the retriable; // chunk maintained in memory. This is not possible unless there's multiple; // clients uploading to the same resumable upload session. // Case 8: remoteNextByteOffset==-1 && last == false && checkingForLastChunk; // Not last chunk and checkingForLastChunk means this is the second time we; // hit this case, meaning the upload was completed by a different client. // Case 9: Only possible if the client local offset continues beyond the remote; // offset which is not possible.; ```. I'm having a hard time following their code trying to trace how the `uploadId` is generated. Is it possible the issue is somehow the same `uploadId` is being used for multiple blob uploads because we're doing something that is not thread-safe??? One last thing I was trying to figure out but had a hard time following -- is it possible the requester pays additions changed the code path for how the `uploadId` is set if the problem has been more frequent after those changes?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1564745979
https://github.com/hail-is/hail/issues/12950#issuecomment-1564748285:79,Testability,log,logs,79,"If my hypothesis is true, then there should be evidence of API requests in the logs for different files having the same uploadId. I'll try and take a look at what the logs show for the failing file uploads.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1564748285
https://github.com/hail-is/hail/issues/12950#issuecomment-1564748285:167,Testability,log,logs,167,"If my hypothesis is true, then there should be evidence of API requests in the logs for different files having the same uploadId. I'll try and take a look at what the logs show for the failing file uploads.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1564748285
https://github.com/hail-is/hail/issues/12950#issuecomment-1564781182:19,Testability,log,logs,19,"Unfortunately, the logs aren't helpful as they only show completed requests.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1564781182
https://github.com/hail-is/hail/issues/12950#issuecomment-1564809125:191,Modifiability,extend,extends,191,"Last thing before I give up for now. There's this comment in the BlobWriterRetry code:. ```; /** Write channel implementation to upload Google Cloud Storage blobs. */; class BlobWriteChannel extends BaseWriteChannel<StorageOptions, BlobInfo> {. private final ResultRetryAlgorithm<?> algorithmForWrite;; // Detect if flushBuffer() is being retried or not.; // TODO: I don't think this is thread safe, and there's probably a better way to detect a retry; // occuring.; private boolean retrying = false;; private boolean checkingForLastChunk = false;; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1564809125
https://github.com/hail-is/hail/issues/12950#issuecomment-1564809125:306,Safety,Detect,Detect,306,"Last thing before I give up for now. There's this comment in the BlobWriterRetry code:. ```; /** Write channel implementation to upload Google Cloud Storage blobs. */; class BlobWriteChannel extends BaseWriteChannel<StorageOptions, BlobInfo> {. private final ResultRetryAlgorithm<?> algorithmForWrite;; // Detect if flushBuffer() is being retried or not.; // TODO: I don't think this is thread safe, and there's probably a better way to detect a retry; // occuring.; private boolean retrying = false;; private boolean checkingForLastChunk = false;; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1564809125
https://github.com/hail-is/hail/issues/12950#issuecomment-1564809125:394,Safety,safe,safe,394,"Last thing before I give up for now. There's this comment in the BlobWriterRetry code:. ```; /** Write channel implementation to upload Google Cloud Storage blobs. */; class BlobWriteChannel extends BaseWriteChannel<StorageOptions, BlobInfo> {. private final ResultRetryAlgorithm<?> algorithmForWrite;; // Detect if flushBuffer() is being retried or not.; // TODO: I don't think this is thread safe, and there's probably a better way to detect a retry; // occuring.; private boolean retrying = false;; private boolean checkingForLastChunk = false;; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1564809125
https://github.com/hail-is/hail/issues/12950#issuecomment-1564809125:437,Safety,detect,detect,437,"Last thing before I give up for now. There's this comment in the BlobWriterRetry code:. ```; /** Write channel implementation to upload Google Cloud Storage blobs. */; class BlobWriteChannel extends BaseWriteChannel<StorageOptions, BlobInfo> {. private final ResultRetryAlgorithm<?> algorithmForWrite;; // Detect if flushBuffer() is being retried or not.; // TODO: I don't think this is thread safe, and there's probably a better way to detect a retry; // occuring.; private boolean retrying = false;; private boolean checkingForLastChunk = false;; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1564809125
https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:1311,Availability,recover,recover,1311, 3 * 10^16. ~~I can't find the referenced case analysis in Google's latest code. [It is present in this fork](https://github.com/leogamas/java-storage/blob/2af8dfd95cdebc9e4d8252b0bbe3f092844d9f2c/google-cloud-storage/src/main/java/com/google/cloud/storage/BlobWriteChannel.java#L68-L198) from a few years ago.~~. Here's the [referenced case analysis in 2.17.1](https://github.com/googleapis/java-storage/blame/v2.17.1/google-cloud-storage/src/main/java/com/google/cloud/storage/BlobWriteChannel.java). There seems to have been a rewrite [two months ago](https://github.com/googleapis/java-storage/blame/main/google-cloud-storage/src/main/java/com/google/cloud/storage/BlobWriteChannel.java) (here's [the main commit](https://github.com/googleapis/java-storage/commit/1b52a1053130620011515060787bada10c324c0b)). That landed in [2.25.0](https://github.com/googleapis/java-storage/releases/tag/v2.25.0) which was released in July. ```; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at co,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911
https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:5094,Availability,recover,recover,5094,ava:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911
https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:7144,Availability,recover,recover,7144,cutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:317); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:299); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:317); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.close(GoogleStorageFS.scala:326); 		at java.io.FilterOutputStream.close(FilterOutputStream.java:159); 		... 27 more; 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 0; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at co,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911
