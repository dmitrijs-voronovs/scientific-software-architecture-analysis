id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/openbabel/openbabel/issues/2377#issuecomment-871298303:219,Deployability,UPDATE,UPDATE,219,"UPDATE: I decided to change the docker image from Debian Buster to Ubuntu Focal and tried to compile a static build once more. The same issue with trying to create a static link to libboost_iostreams.so happened again. UPDATE 2: Instead of compiling both static and shared boost libraries, I just compiled the static libraries. Instead of trying to link to libboost_iostreams.so, it ended up giving ""lz not found"". So it is still not picking up on using the static library that was compiled. . Next, tried using the following command line. cmake -DCMAKE_PREFIX_PATH=$BOOST_PATH \; 		-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 		-DZLIB_ROOT=$ZLIB_PATH \; 		-DBUILD_SHARED=OFF \; 		-DCMAKE_FIND_LIBRARY_SUFFIXES="".a"" \; 		-DCMAKE_EXE_LINKER_FLAGS=""-static"" \. Still getting usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'. I don't know where to go from here. FINAL UPDATE: I found the problem, it wasn't finding the Boost libraries I had compiled previously. I solved it by replacing ```-DCMAKE_PREFIX_PATH=$BOOST_PATH ``` with ```-DBOOST_LIBRARYDIR=$SBOOST_PATH/gcc```, gcc being the directory I put my stage binaries from compiling Boost. It compiled just fine afterwards.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377#issuecomment-871298303
https://github.com/openbabel/openbabel/issues/2377#issuecomment-871298303:922,Deployability,UPDATE,UPDATE,922,"UPDATE: I decided to change the docker image from Debian Buster to Ubuntu Focal and tried to compile a static build once more. The same issue with trying to create a static link to libboost_iostreams.so happened again. UPDATE 2: Instead of compiling both static and shared boost libraries, I just compiled the static libraries. Instead of trying to link to libboost_iostreams.so, it ended up giving ""lz not found"". So it is still not picking up on using the static library that was compiled. . Next, tried using the following command line. cmake -DCMAKE_PREFIX_PATH=$BOOST_PATH \; 		-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 		-DZLIB_ROOT=$ZLIB_PATH \; 		-DBUILD_SHARED=OFF \; 		-DCMAKE_FIND_LIBRARY_SUFFIXES="".a"" \; 		-DCMAKE_EXE_LINKER_FLAGS=""-static"" \. Still getting usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'. I don't know where to go from here. FINAL UPDATE: I found the problem, it wasn't finding the Boost libraries I had compiled previously. I solved it by replacing ```-DCMAKE_PREFIX_PATH=$BOOST_PATH ``` with ```-DBOOST_LIBRARYDIR=$SBOOST_PATH/gcc```, gcc being the directory I put my stage binaries from compiling Boost. It compiled just fine afterwards.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377#issuecomment-871298303
https://github.com/openbabel/openbabel/issues/2377#issuecomment-1559714748:107,Availability,down,download,107,"I did a static build in debian buster by executing the commands in the order below. ```shell; wget https://download.gnome.org/sources/libxml2/2.9/libxml2-2.9.14.tar.xz; tar -xvf libxml2-2.9.14.tar.xz; cmake -S libxml2-2.9.14 -B libxml2 \; -DBUILD_SHARED_LIBS=OFF \; -DCMAKE_BUILD_TYPE=Release \; -DLIBXML2_WITH_ICONV=OFF \; -DLIBXML2_WITH_LZMA=OFF \; -DLIBXML2_WITH_PYTHON=OFF \; -DLIBXML2_WITH_ZLIB=OFF; cmake --build libxml2 -j$(expr $(expr $(nproc) \* 6) \/ 5); ```. ```shell; wget https://gitlab.com/libeigen/eigen/-/archive/3.3.9/eigen-3.3.9.tar.gz; tar -xvf eigen-3.3.9.tar.gz; ```. ```shell; wget https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.tar.gz; tar -xvf openbabel-3-1-1.tar.gz; cmake -S openbabel-openbabel-3-1-1 -B openbabel-3.1.1 \; -DBUILD_SHARED=OFF \; -DCMAKE_FIND_LIBRARY_SUFFIXES="".a"" \; -DEIGEN3_INCLUDE_DIR=$PWD/eigen-3.3.9 \; -DBUILD_MIXED=ON \; -DWITH_STATIC_LIBXML=ON \; -DLIBXML2_LIBRARY=$PWD/libxml2/libxml2.a \; -DLIBXML2_INCLUDE_DIR=$PWD/libxml2/libxml; cmake --build openbabel-3.1.1 -j$(expr $(expr $(nproc) \* 6) \/ 5); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377#issuecomment-1559714748
https://github.com/openbabel/openbabel/issues/2377#issuecomment-1559714748:285,Deployability,Release,Release,285,"I did a static build in debian buster by executing the commands in the order below. ```shell; wget https://download.gnome.org/sources/libxml2/2.9/libxml2-2.9.14.tar.xz; tar -xvf libxml2-2.9.14.tar.xz; cmake -S libxml2-2.9.14 -B libxml2 \; -DBUILD_SHARED_LIBS=OFF \; -DCMAKE_BUILD_TYPE=Release \; -DLIBXML2_WITH_ICONV=OFF \; -DLIBXML2_WITH_LZMA=OFF \; -DLIBXML2_WITH_PYTHON=OFF \; -DLIBXML2_WITH_ZLIB=OFF; cmake --build libxml2 -j$(expr $(expr $(nproc) \* 6) \/ 5); ```. ```shell; wget https://gitlab.com/libeigen/eigen/-/archive/3.3.9/eigen-3.3.9.tar.gz; tar -xvf eigen-3.3.9.tar.gz; ```. ```shell; wget https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.tar.gz; tar -xvf openbabel-3-1-1.tar.gz; cmake -S openbabel-openbabel-3-1-1 -B openbabel-3.1.1 \; -DBUILD_SHARED=OFF \; -DCMAKE_FIND_LIBRARY_SUFFIXES="".a"" \; -DEIGEN3_INCLUDE_DIR=$PWD/eigen-3.3.9 \; -DBUILD_MIXED=ON \; -DWITH_STATIC_LIBXML=ON \; -DLIBXML2_LIBRARY=$PWD/libxml2/libxml2.a \; -DLIBXML2_INCLUDE_DIR=$PWD/libxml2/libxml; cmake --build openbabel-3.1.1 -j$(expr $(expr $(nproc) \* 6) \/ 5); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377#issuecomment-1559714748
https://github.com/openbabel/openbabel/issues/2381#issuecomment-857361001:1,Testability,test,test,1,[test.zip](https://github.com/openbabel/openbabel/files/6621072/test.zip),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381#issuecomment-857361001
https://github.com/openbabel/openbabel/issues/2381#issuecomment-857361001:64,Testability,test,test,64,[test.zip](https://github.com/openbabel/openbabel/files/6621072/test.zip),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381#issuecomment-857361001
https://github.com/openbabel/openbabel/issues/2382#issuecomment-857879032:274,Availability,fault,fault,274,"```gdb; (gdb) run zs2378IIsup6.cml -osmi; Starting program: /usr/local/bin/obabel zs2378IIsup6.cml -osmi; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"". Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff3fcb062 in OpenBabel::CMLFormat::DoMolWideData() () from /usr/local/lib/openbabel/3.1.1/cmlformat.so; (gdb) bt; #0 0x00007ffff3fcb062 in OpenBabel::CMLFormat::DoMolWideData() () from /usr/local/lib/openbabel/3.1.1/cmlformat.so; #1 0x00007ffff3fce248 in OpenBabel::CMLFormat::EndElement(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/local/lib/openbabel/3.1.1/cmlformat.so; #2 0x00007ffff42d943d in OpenBabel::XMLConversion::ReadXML(OpenBabel::XMLBaseFormat*, OpenBabel::OBBase*) (); from /usr/local/lib/openbabel/3.1.1/cmlreactformat.so; #3 0x00007ffff7c4777f in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (); from /usr/local/lib/libopenbabel.so.7; #4 0x00007ffff7be6ae5 in OpenBabel::OBConversion::Convert() () from /usr/local/lib/libopenbabel.so.7; #5 0x00007ffff7bec65f in OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (); from /usr/local/lib/libopenbabel.so.7; #6 0x00007ffff7bedd9c in OpenBabel::OBConversion::FullConvert(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (); from /usr/local/lib/libopenbabel.so.7; #7 0x0000555555556746 in main (); ```. Open Babel works fine if the `bondStereo` elements are removed. BTW they are I believe unnecessary as the",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2382#issuecomment-857879032
https://github.com/openbabel/openbabel/issues/2382#issuecomment-858307211:361,Availability,fault,faults,361,"> Shouldn’t `bondStrereo` have `atomRefs4` attribute?. I admit I know CML too little to answer that. Nonetheless, the provided CML file validates against CML XML schemas, both v2.3 and v3 (to check that, schema information has to be added to the input file manually, see #2326 for instructions). The bug is that the CML reader should not encounter segmentation faults on any input.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2382#issuecomment-858307211
https://github.com/openbabel/openbabel/issues/2382#issuecomment-858307211:136,Security,validat,validates,136,"> Shouldn’t `bondStrereo` have `atomRefs4` attribute?. I admit I know CML too little to answer that. Nonetheless, the provided CML file validates against CML XML schemas, both v2.3 and v3 (to check that, schema information has to be added to the input file manually, see #2326 for instructions). The bug is that the CML reader should not encounter segmentation faults on any input.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2382#issuecomment-858307211
https://github.com/openbabel/openbabel/issues/2382#issuecomment-859196160:169,Availability,fault,faults,169,It seems that `atomRefs4` is unnecessary.; http://www.xml-cml.org/examples/schema24/bondStereo1.html. > The bug is that the CML reader should not encounter segmentation faults on any input. Agreed.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2382#issuecomment-859196160
https://github.com/openbabel/openbabel/pull/2383#issuecomment-858504943:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2383#issuecomment-858504943
https://github.com/openbabel/openbabel/pull/2385#issuecomment-859507642:66,Energy Efficiency,charge,charges,66,Testing this PR will fail until the OB code is fixed to deal with charges during bond order assignment.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-859507642
https://github.com/openbabel/openbabel/pull/2385#issuecomment-859507642:0,Testability,Test,Testing,0,Testing this PR will fail until the OB code is fixed to deal with charges during bond order assignment.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-859507642
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860931988:684,Energy Efficiency,charge,charge,684,"If you make the sulfur trioxide bond pattern a bit more specific (specifying hybridization) that fixes the issue:; ```; --- a/data/bondtyp.txt; +++ b/data/bondtyp.txt; @@ -47,7 +47,7 @@; # Sulfite; [#16D3]([#8D1])([#8D1-])([#8D1-]) 0 1 2 0 2 1 0 3 1; # Sulfur trioxide; -[#16D3]([#8D1])([#8D1])([#8D1]) 0 1 2 0 2 2 0 3 2; +[#16D3^2]([#8D1])([#8D1])([#8D1]) 0 1 2 0 2 2 0 3 2; # Sulfites; [#16D3]([#8D1])([#8])([#8]) 0 1 2 0 2 1 0 3 1; # Disulfur monoxide; ```. I would also change `import openbabel as ob` to `from openbabel import openbabel as ob` in `testgauss.py` and would consider adding AssignTotalChargeToAtoms to the Gaussian reader (it seems reasonable for the atomic formal charge to add up to the molecular):; ```; --- a/src/formats/gaussformat.cpp; +++ b/src/formats/gaussformat.cpp; @@ -1391,6 +1391,7 @@ namespace OpenBabel; dp->SetOrigin(fileformatInput);; mol.SetData(dp);; }; + mol.AssignTotalChargeToAtoms(total_charge);; mol.SetTotalCharge(total_charge);; mol.SetTotalSpinMultiplicity(spin_multiplicity);; ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860931988
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860931988:553,Testability,test,testgauss,553,"If you make the sulfur trioxide bond pattern a bit more specific (specifying hybridization) that fixes the issue:; ```; --- a/data/bondtyp.txt; +++ b/data/bondtyp.txt; @@ -47,7 +47,7 @@; # Sulfite; [#16D3]([#8D1])([#8D1-])([#8D1-]) 0 1 2 0 2 1 0 3 1; # Sulfur trioxide; -[#16D3]([#8D1])([#8D1])([#8D1]) 0 1 2 0 2 2 0 3 2; +[#16D3^2]([#8D1])([#8D1])([#8D1]) 0 1 2 0 2 2 0 3 2; # Sulfites; [#16D3]([#8D1])([#8])([#8]) 0 1 2 0 2 1 0 3 1; # Disulfur monoxide; ```. I would also change `import openbabel as ob` to `from openbabel import openbabel as ob` in `testgauss.py` and would consider adding AssignTotalChargeToAtoms to the Gaussian reader (it seems reasonable for the atomic formal charge to add up to the molecular):; ```; --- a/src/formats/gaussformat.cpp; +++ b/src/formats/gaussformat.cpp; @@ -1391,6 +1391,7 @@ namespace OpenBabel; dp->SetOrigin(fileformatInput);; mol.SetData(dp);; }; + mol.AssignTotalChargeToAtoms(total_charge);; mol.SetTotalCharge(total_charge);; mol.SetTotalSpinMultiplicity(spin_multiplicity);; ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860931988
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860967153:104,Availability,redundant,redundant,104,That's concerning since that is the correct way to import openbabel in openbabel3 (even though it seems redundant). I would be worried you might have multiple versions of openbabel in your path and aren't importing the right one.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860967153
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860967153:104,Safety,redund,redundant,104,That's concerning since that is the correct way to import openbabel in openbabel3 (even though it seems redundant). I would be worried you might have multiple versions of openbabel in your path and aren't importing the right one.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860967153
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:176,Availability,echo,echo,176,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:45,Deployability,install,installation,45,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:303,Deployability,install,install,303,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:403,Deployability,install,install,403,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:77,Testability,test,test,77,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:107,Testability,test,test,107,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:112,Testability,test,testgauss,112,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:156,Testability,test,test,156,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:169,Testability,test,test,169,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372
https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:356,Testability,test,test,356,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372
https://github.com/openbabel/openbabel/pull/2385#issuecomment-1151691738:47,Testability,test,test,47,"I'm going to squash, merge, and fix the Python test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-1151691738
https://github.com/openbabel/openbabel/issues/2386#issuecomment-863078154:85,Testability,test,test,85,"There are at least two solutions to resolve the issue reported. Either. - with file `test.smi` you present, provide the instruction in a *different sequence*, i.e. `obabel -ismi test.smi -osmi --separate`. because `-ismi` instructs OpenBabel the (then in the *following* defined) input file consists of content of the .smi syntax. This instruction actually works regardless if the file in question actually possesses the file extension `.smi`, or not. .or. - if you like to stay on the command line and don't want to create a `.smi` file in advance, type. `obabel -:'[Na].[Cl]' -osmi --separate`. to provide the SMILES string directly. *Caveat:* The instruction will fail if there is a space between the colon and the leading quote sign. If you want, you may enclose the SMILES string with double quotes. `obabel -:""[Na].[Cl]"" -osmi --separate`. to generate the same output. And yes, `-osmi` and `-oSMI` seem to be functionally equivalent to each other, too. As checked (OpenBabel 3.1.1, provided by the repositories of Linux Debian 11 / bullseye, branch testing), both approaches yield the result you anticipate:; ```; [Na]	#1; [Cl]	#2; 2 molecules converted ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863078154
https://github.com/openbabel/openbabel/issues/2386#issuecomment-863078154:178,Testability,test,test,178,"There are at least two solutions to resolve the issue reported. Either. - with file `test.smi` you present, provide the instruction in a *different sequence*, i.e. `obabel -ismi test.smi -osmi --separate`. because `-ismi` instructs OpenBabel the (then in the *following* defined) input file consists of content of the .smi syntax. This instruction actually works regardless if the file in question actually possesses the file extension `.smi`, or not. .or. - if you like to stay on the command line and don't want to create a `.smi` file in advance, type. `obabel -:'[Na].[Cl]' -osmi --separate`. to provide the SMILES string directly. *Caveat:* The instruction will fail if there is a space between the colon and the leading quote sign. If you want, you may enclose the SMILES string with double quotes. `obabel -:""[Na].[Cl]"" -osmi --separate`. to generate the same output. And yes, `-osmi` and `-oSMI` seem to be functionally equivalent to each other, too. As checked (OpenBabel 3.1.1, provided by the repositories of Linux Debian 11 / bullseye, branch testing), both approaches yield the result you anticipate:; ```; [Na]	#1; [Cl]	#2; 2 molecules converted ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863078154
https://github.com/openbabel/openbabel/issues/2386#issuecomment-863078154:1055,Testability,test,testing,1055,"There are at least two solutions to resolve the issue reported. Either. - with file `test.smi` you present, provide the instruction in a *different sequence*, i.e. `obabel -ismi test.smi -osmi --separate`. because `-ismi` instructs OpenBabel the (then in the *following* defined) input file consists of content of the .smi syntax. This instruction actually works regardless if the file in question actually possesses the file extension `.smi`, or not. .or. - if you like to stay on the command line and don't want to create a `.smi` file in advance, type. `obabel -:'[Na].[Cl]' -osmi --separate`. to provide the SMILES string directly. *Caveat:* The instruction will fail if there is a space between the colon and the leading quote sign. If you want, you may enclose the SMILES string with double quotes. `obabel -:""[Na].[Cl]"" -osmi --separate`. to generate the same output. And yes, `-osmi` and `-oSMI` seem to be functionally equivalent to each other, too. As checked (OpenBabel 3.1.1, provided by the repositories of Linux Debian 11 / bullseye, branch testing), both approaches yield the result you anticipate:; ```; [Na]	#1; [Cl]	#2; 2 molecules converted ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863078154
https://github.com/openbabel/openbabel/issues/2386#issuecomment-863087679:163,Integrability,message,messages,163,"Thank you for providing a potential work-around. However, my intention was to draw attention to this strange behaviour as it is quite unexpected (i.e. no warnings messages or change in exit status). The first provided solution seems to be almost identical to the proper processing example I have provided in my initial issue. It indeed works as expected. What different sequence of instructions did you have in mind?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863087679
https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505:42,Availability,down,down,42,"@vaitkus True, the first suggestion boils down to not use `cat` and `|`. When I moderate OpenBabel with Python's `subprocess` module, using `Popen` to work with input data which are syntactically wrong, I may fetch `stderr` (see example `check.py` in the example archive attached below). The translation of this approach to cover your instruction does not yield an observable error message (see `observation_vaitkus.py`). I don't know if an other language (of your choice) is going to be more verbose / more suitable here. The suggest ""different sequence"" referred to replace the approach with cat (get the content of the file, pipe this into subsequently started OpenBabel) by starting OpenBabel in first place (and let OpenBabel fetch the content of `test.smi`). This is the only change in the sequence of events I put on the table. [convert_io.zip](https://github.com/openbabel/openbabel/files/6669604/convert_io.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505
https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505:376,Availability,error,error,376,"@vaitkus True, the first suggestion boils down to not use `cat` and `|`. When I moderate OpenBabel with Python's `subprocess` module, using `Popen` to work with input data which are syntactically wrong, I may fetch `stderr` (see example `check.py` in the example archive attached below). The translation of this approach to cover your instruction does not yield an observable error message (see `observation_vaitkus.py`). I don't know if an other language (of your choice) is going to be more verbose / more suitable here. The suggest ""different sequence"" referred to replace the approach with cat (get the content of the file, pipe this into subsequently started OpenBabel) by starting OpenBabel in first place (and let OpenBabel fetch the content of `test.smi`). This is the only change in the sequence of events I put on the table. [convert_io.zip](https://github.com/openbabel/openbabel/files/6669604/convert_io.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505
https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505:382,Integrability,message,message,382,"@vaitkus True, the first suggestion boils down to not use `cat` and `|`. When I moderate OpenBabel with Python's `subprocess` module, using `Popen` to work with input data which are syntactically wrong, I may fetch `stderr` (see example `check.py` in the example archive attached below). The translation of this approach to cover your instruction does not yield an observable error message (see `observation_vaitkus.py`). I don't know if an other language (of your choice) is going to be more verbose / more suitable here. The suggest ""different sequence"" referred to replace the approach with cat (get the content of the file, pipe this into subsequently started OpenBabel) by starting OpenBabel in first place (and let OpenBabel fetch the content of `test.smi`). This is the only change in the sequence of events I put on the table. [convert_io.zip](https://github.com/openbabel/openbabel/files/6669604/convert_io.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505
https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505:753,Testability,test,test,753,"@vaitkus True, the first suggestion boils down to not use `cat` and `|`. When I moderate OpenBabel with Python's `subprocess` module, using `Popen` to work with input data which are syntactically wrong, I may fetch `stderr` (see example `check.py` in the example archive attached below). The translation of this approach to cover your instruction does not yield an observable error message (see `observation_vaitkus.py`). I don't know if an other language (of your choice) is going to be more verbose / more suitable here. The suggest ""different sequence"" referred to replace the approach with cat (get the content of the file, pipe this into subsequently started OpenBabel) by starting OpenBabel in first place (and let OpenBabel fetch the content of `test.smi`). This is the only change in the sequence of events I put on the table. [convert_io.zip](https://github.com/openbabel/openbabel/files/6669604/convert_io.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505
https://github.com/openbabel/openbabel/issues/2386#issuecomment-918536522:267,Availability,echo,echo,267,"The same behavior can be confirmed for any popular molecular format. Just do something like this; `diff -y <(obabel -:""[Na].[Cl]"" -omol2 --separate) <(obabel -:""[Na].[Cl]"" -omol2 | obabel -imol2 -omol2 --separate)`. or this. ```; for i in smi mol2 hin sdf pdb; do ; 	echo ""----------${i}---------""; ; 	obabel -:""[Na].[Cl]"" -O ""/tmp/mol.${i}""; ; 	obabel ""/tmp/mol.${i}"" -O ""/tmp/mol_sep.${i}"" --separate; ; 	cat ""/tmp/mol.${i}"" | obabel -i ${i} -o ${i} --separate | diff -y ""/tmp/mol_sep.${i}"" - ; ; 	echo; echo; ; done 2>/dev/null; ```; and see the difference. I've checked this for `Open Babel 2.3.2 -- Jul 26 2017 -- 20:11:55` and `Open Babel 3.1.1 -- Jun 10 2021 -- 04:27:50` and both act the same.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-918536522
https://github.com/openbabel/openbabel/issues/2386#issuecomment-918536522:500,Availability,echo,echo,500,"The same behavior can be confirmed for any popular molecular format. Just do something like this; `diff -y <(obabel -:""[Na].[Cl]"" -omol2 --separate) <(obabel -:""[Na].[Cl]"" -omol2 | obabel -imol2 -omol2 --separate)`. or this. ```; for i in smi mol2 hin sdf pdb; do ; 	echo ""----------${i}---------""; ; 	obabel -:""[Na].[Cl]"" -O ""/tmp/mol.${i}""; ; 	obabel ""/tmp/mol.${i}"" -O ""/tmp/mol_sep.${i}"" --separate; ; 	cat ""/tmp/mol.${i}"" | obabel -i ${i} -o ${i} --separate | diff -y ""/tmp/mol_sep.${i}"" - ; ; 	echo; echo; ; done 2>/dev/null; ```; and see the difference. I've checked this for `Open Babel 2.3.2 -- Jul 26 2017 -- 20:11:55` and `Open Babel 3.1.1 -- Jun 10 2021 -- 04:27:50` and both act the same.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-918536522
https://github.com/openbabel/openbabel/issues/2386#issuecomment-918536522:506,Availability,echo,echo,506,"The same behavior can be confirmed for any popular molecular format. Just do something like this; `diff -y <(obabel -:""[Na].[Cl]"" -omol2 --separate) <(obabel -:""[Na].[Cl]"" -omol2 | obabel -imol2 -omol2 --separate)`. or this. ```; for i in smi mol2 hin sdf pdb; do ; 	echo ""----------${i}---------""; ; 	obabel -:""[Na].[Cl]"" -O ""/tmp/mol.${i}""; ; 	obabel ""/tmp/mol.${i}"" -O ""/tmp/mol_sep.${i}"" --separate; ; 	cat ""/tmp/mol.${i}"" | obabel -i ${i} -o ${i} --separate | diff -y ""/tmp/mol_sep.${i}"" - ; ; 	echo; echo; ; done 2>/dev/null; ```; and see the difference. I've checked this for `Open Babel 2.3.2 -- Jul 26 2017 -- 20:11:55` and `Open Babel 3.1.1 -- Jun 10 2021 -- 04:27:50` and both act the same.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-918536522
https://github.com/openbabel/openbabel/issues/2390#issuecomment-878317510:264,Testability,log,log,264,"Ok, I have managed to find the `AddOption` method, where I can set extra options. My example python code looks as follows:. ```python; obConversion = openbabel.OBConversion() ; obConversion.SetInAndOutFormats('xyz', 'inchi'); # extra -xa flag to produce the inchi log; obConversion.AddOption('a', obConversion.OUTOPTIONS); mol = openbabel.OBMol(); obConversion.ReadString(mol, 'xyz coords....'); xyz = obConversion.WriteString(mol).rstrip(""\n""); ```; The code above works, where the inchi aux info is also returned thanks to passing the `-xa` flag. However, the code below, where I requested a 3D coordinates generation via `gen3D` option does not work. ```python; obConversion = openbabel.OBConversion() ; obConversion.SetInAndOutFormats('inchi', 'xyz'); obConversion.AddOption('gen3D', obConversion.GENOPTIONS); mol = openbabel.OBMol(); obConversion.ReadString(mol, 'InChI=1S/C2H6O/c1-2-3/h3H,2H2,1H3'); xyz = obConversion.WriteString(mol).rstrip(""\n""); ```. I would be grateful for any help.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2390#issuecomment-878317510
https://github.com/openbabel/openbabel/issues/2391#issuecomment-871115239:146,Deployability,update,updated,146,"Thank you @fredrikw, @nbehrnd for the suggestions. Performing an energy minimization on the generated 3d coordinates solved the issue by creating updated coordinates.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2391#issuecomment-871115239
https://github.com/openbabel/openbabel/issues/2391#issuecomment-871115239:65,Energy Efficiency,energy,energy,65,"Thank you @fredrikw, @nbehrnd for the suggestions. Performing an energy minimization on the generated 3d coordinates solved the issue by creating updated coordinates.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2391#issuecomment-871115239
https://github.com/openbabel/openbabel/issues/2391#issuecomment-871115239:51,Performance,Perform,Performing,51,"Thank you @fredrikw, @nbehrnd for the suggestions. Performing an energy minimization on the generated 3d coordinates solved the issue by creating updated coordinates.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2391#issuecomment-871115239
https://github.com/openbabel/openbabel/issues/2393#issuecomment-871408334:255,Integrability,protocol,protocol,255,"Hi,. A short question/remark. The round-tripped SMILES is missing stereochemistry on the nitrogens as you noted. It seems that Jan put some efforts into having the stereo on the nitrogens so it might be advisable to keep that if you are trying to use his protocol? Otherwise, you could loop through the atoms and remove stereo from any nitrogens in your python code. I also think the warning says that the generation falls back on distance geometry, not that the 3D-generation fails...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393#issuecomment-871408334
https://github.com/openbabel/openbabel/issues/2393#issuecomment-875751408:345,Deployability,configurat,configuration,345,"This issue will be closed, but not for failing to create a 3D structure *at all*. I retract the issue because I don't possess enough insight how OpenBabel and RDKit's guess the spatial arrangement of the atoms if a SMILES string is the sole input at hand. If the structures are read by Jmol, and if the later is requested to assign the absolute configuration (apparently, taking into account for the non-bonded electron pair on nitrogen then assigned priority `0`) then the two programs offer an output Jmol eventually assigns as either (*R*), or (*S*) about N. ![ezgif com-gif-maker](https://user-images.githubusercontent.com/19709084/124796016-35e47e00-df40-11eb-9b66-3ccc1aab40dc.gif). For the interested, the archive below documents the steps and files leading to the animation shown. [close_wegdes.zip](https://github.com/openbabel/openbabel/files/6778775/close_wegdes.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393#issuecomment-875751408
https://github.com/openbabel/openbabel/issues/2393#issuecomment-875751408:345,Modifiability,config,configuration,345,"This issue will be closed, but not for failing to create a 3D structure *at all*. I retract the issue because I don't possess enough insight how OpenBabel and RDKit's guess the spatial arrangement of the atoms if a SMILES string is the sole input at hand. If the structures are read by Jmol, and if the later is requested to assign the absolute configuration (apparently, taking into account for the non-bonded electron pair on nitrogen then assigned priority `0`) then the two programs offer an output Jmol eventually assigns as either (*R*), or (*S*) about N. ![ezgif com-gif-maker](https://user-images.githubusercontent.com/19709084/124796016-35e47e00-df40-11eb-9b66-3ccc1aab40dc.gif). For the interested, the archive below documents the steps and files leading to the animation shown. [close_wegdes.zip](https://github.com/openbabel/openbabel/files/6778775/close_wegdes.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393#issuecomment-875751408
https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038:132,Availability,avail,available,132,"Figuratively speaking, `--gen3d` attempts an energy optimization while varying the geometry described. Out of the [multiple methods available](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) (the default `--gen3d` *alone* is a place holder for the more verbose instruction `--gen3d med`), it is possible that the method selected identifies *one local*, but not necessarily *the global* optimum. In the example presented, either one of the two following two instructions; ```; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d best -O out_best.sdf; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d dg -O out_dg.sdf; ```; yields a conformer more reasonable, i.e. with the proton in question oriented out to the periphery of the quinazolin-4(3*H*)-one if spending a little extra of computation. ![peripheral_hydrogen](https://user-images.githubusercontent.com/19709084/126817356-57c5865f-49a0-4cef-b24e-ddd25a28216a.png). An open access publication (https://doi.org/10.1186/s13321-019-0372-5) illustrates the trade-offs for OpenBabel in further detail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038
https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038:45,Energy Efficiency,energy,energy,45,"Figuratively speaking, `--gen3d` attempts an energy optimization while varying the geometry described. Out of the [multiple methods available](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) (the default `--gen3d` *alone* is a place holder for the more verbose instruction `--gen3d med`), it is possible that the method selected identifies *one local*, but not necessarily *the global* optimum. In the example presented, either one of the two following two instructions; ```; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d best -O out_best.sdf; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d dg -O out_dg.sdf; ```; yields a conformer more reasonable, i.e. with the proton in question oriented out to the periphery of the quinazolin-4(3*H*)-one if spending a little extra of computation. ![peripheral_hydrogen](https://user-images.githubusercontent.com/19709084/126817356-57c5865f-49a0-4cef-b24e-ddd25a28216a.png). An open access publication (https://doi.org/10.1186/s13321-019-0372-5) illustrates the trade-offs for OpenBabel in further detail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038
https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038:52,Performance,optimiz,optimization,52,"Figuratively speaking, `--gen3d` attempts an energy optimization while varying the geometry described. Out of the [multiple methods available](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) (the default `--gen3d` *alone* is a place holder for the more verbose instruction `--gen3d med`), it is possible that the method selected identifies *one local*, but not necessarily *the global* optimum. In the example presented, either one of the two following two instructions; ```; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d best -O out_best.sdf; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d dg -O out_dg.sdf; ```; yields a conformer more reasonable, i.e. with the proton in question oriented out to the periphery of the quinazolin-4(3*H*)-one if spending a little extra of computation. ![peripheral_hydrogen](https://user-images.githubusercontent.com/19709084/126817356-57c5865f-49a0-4cef-b24e-ddd25a28216a.png). An open access publication (https://doi.org/10.1186/s13321-019-0372-5) illustrates the trade-offs for OpenBabel in further detail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038
https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038:1013,Security,access,access,1013,"Figuratively speaking, `--gen3d` attempts an energy optimization while varying the geometry described. Out of the [multiple methods available](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) (the default `--gen3d` *alone* is a place holder for the more verbose instruction `--gen3d med`), it is possible that the method selected identifies *one local*, but not necessarily *the global* optimum. In the example presented, either one of the two following two instructions; ```; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d best -O out_best.sdf; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d dg -O out_dg.sdf; ```; yields a conformer more reasonable, i.e. with the proton in question oriented out to the periphery of the quinazolin-4(3*H*)-one if spending a little extra of computation. ![peripheral_hydrogen](https://user-images.githubusercontent.com/19709084/126817356-57c5865f-49a0-4cef-b24e-ddd25a28216a.png). An open access publication (https://doi.org/10.1186/s13321-019-0372-5) illustrates the trade-offs for OpenBabel in further detail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038
https://github.com/openbabel/openbabel/issues/2398#issuecomment-885836602:274,Performance,optimiz,optimization,274,"As mentioned by @nbehrnd we use a set of ring fragments first. I'd guess that `c1cc2c(=O)[nH]cnc2cc1F` isn't in the list, so it uses some heuristics. Not quite sure on why it generates that particular geometry, but as a workaround, the ""best"" option gives a bit more MMFF94 optimization. The `dg` option is something of an implementation of RDKit's distance geometry methods.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885836602
https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725:482,Availability,down,download,482,"Hi Elmar, and thanks. Could you take a look at the patches people have done; to the previous version and incorporate them if necessary? They are fairly; small. https://github.com/openbabel/openbabel/commits/master/src/formats/yasaraformat.cpp. On Wed, 21 Jul 2021 at 13:28, elmar-k ***@***.***> wrote:. > Dear OpenBabel team,; >; > there is a new version of the YASARA YOb-format, to support it, the file; > src/formats/yasaraformat.cpp; > must be replaced with this one:; > http://download.yasara.org/service/yasaraformat.cpp; >; > I keep fingers crossed that it compiles also on the more exotic; > architectures supported by OpenBabel, otherwise just send the error; > messages to elmar (at) yasara.org, and I'll tune it.; >; > Best regards,; > Elmar; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2399>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGMIE2E3HEBN7ESKDILTY24OHANCNFSM5AX3N6PQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725
https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725:662,Availability,error,error,662,"Hi Elmar, and thanks. Could you take a look at the patches people have done; to the previous version and incorporate them if necessary? They are fairly; small. https://github.com/openbabel/openbabel/commits/master/src/formats/yasaraformat.cpp. On Wed, 21 Jul 2021 at 13:28, elmar-k ***@***.***> wrote:. > Dear OpenBabel team,; >; > there is a new version of the YASARA YOb-format, to support it, the file; > src/formats/yasaraformat.cpp; > must be replaced with this one:; > http://download.yasara.org/service/yasaraformat.cpp; >; > I keep fingers crossed that it compiles also on the more exotic; > architectures supported by OpenBabel, otherwise just send the error; > messages to elmar (at) yasara.org, and I'll tune it.; >; > Best regards,; > Elmar; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2399>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGMIE2E3HEBN7ESKDILTY24OHANCNFSM5AX3N6PQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725
https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725:51,Deployability,patch,patches,51,"Hi Elmar, and thanks. Could you take a look at the patches people have done; to the previous version and incorporate them if necessary? They are fairly; small. https://github.com/openbabel/openbabel/commits/master/src/formats/yasaraformat.cpp. On Wed, 21 Jul 2021 at 13:28, elmar-k ***@***.***> wrote:. > Dear OpenBabel team,; >; > there is a new version of the YASARA YOb-format, to support it, the file; > src/formats/yasaraformat.cpp; > must be replaced with this one:; > http://download.yasara.org/service/yasaraformat.cpp; >; > I keep fingers crossed that it compiles also on the more exotic; > architectures supported by OpenBabel, otherwise just send the error; > messages to elmar (at) yasara.org, and I'll tune it.; >; > Best regards,; > Elmar; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2399>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGMIE2E3HEBN7ESKDILTY24OHANCNFSM5AX3N6PQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725
https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725:671,Integrability,message,messages,671,"Hi Elmar, and thanks. Could you take a look at the patches people have done; to the previous version and incorporate them if necessary? They are fairly; small. https://github.com/openbabel/openbabel/commits/master/src/formats/yasaraformat.cpp. On Wed, 21 Jul 2021 at 13:28, elmar-k ***@***.***> wrote:. > Dear OpenBabel team,; >; > there is a new version of the YASARA YOb-format, to support it, the file; > src/formats/yasaraformat.cpp; > must be replaced with this one:; > http://download.yasara.org/service/yasaraformat.cpp; >; > I keep fingers crossed that it compiles also on the more exotic; > architectures supported by OpenBabel, otherwise just send the error; > messages to elmar (at) yasara.org, and I'll tune it.; >; > Best regards,; > Elmar; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2399>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGMIE2E3HEBN7ESKDILTY24OHANCNFSM5AX3N6PQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725
https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725:715,Performance,tune,tune,715,"Hi Elmar, and thanks. Could you take a look at the patches people have done; to the previous version and incorporate them if necessary? They are fairly; small. https://github.com/openbabel/openbabel/commits/master/src/formats/yasaraformat.cpp. On Wed, 21 Jul 2021 at 13:28, elmar-k ***@***.***> wrote:. > Dear OpenBabel team,; >; > there is a new version of the YASARA YOb-format, to support it, the file; > src/formats/yasaraformat.cpp; > must be replaced with this one:; > http://download.yasara.org/service/yasaraformat.cpp; >; > I keep fingers crossed that it compiles also on the more exotic; > architectures supported by OpenBabel, otherwise just send the error; > messages to elmar (at) yasara.org, and I'll tune it.; >; > Best regards,; > Elmar; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2399>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGMIE2E3HEBN7ESKDILTY24OHANCNFSM5AX3N6PQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725
https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970:130,Availability,down,download,130,"Hi Noel!. Thanks for the hint, I went through the changes and applied what was still needed. The file has been updated at; http://download.yasara.org/service/yasaraformat.cpp. I should note that there was one patch that changed variables from 'int' to 'unsigned int':; https://github.com/openbabel/openbabel/commit/eb39d20558390cfb5f8597a57455e776b8780b96#diff-234aec539418d8c1bf366d8e0d0aa26e09284ebc8cf3f0a271164baa2466cee6. I don't know which exotic compiler triggered this patch, but I can safely say that efficient&productive C/C++ development becomes impossible if you cannot implicitly cast 'int' to 'unsigned int' and similar cases. I experimented a bit with the GCC options ""-Wconversion"" and ""-Wsigned-conversion"", but would have had to clutter the code with explicit type casts to compile without warning. Best regards,; Elmar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970
https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970:111,Deployability,update,updated,111,"Hi Noel!. Thanks for the hint, I went through the changes and applied what was still needed. The file has been updated at; http://download.yasara.org/service/yasaraformat.cpp. I should note that there was one patch that changed variables from 'int' to 'unsigned int':; https://github.com/openbabel/openbabel/commit/eb39d20558390cfb5f8597a57455e776b8780b96#diff-234aec539418d8c1bf366d8e0d0aa26e09284ebc8cf3f0a271164baa2466cee6. I don't know which exotic compiler triggered this patch, but I can safely say that efficient&productive C/C++ development becomes impossible if you cannot implicitly cast 'int' to 'unsigned int' and similar cases. I experimented a bit with the GCC options ""-Wconversion"" and ""-Wsigned-conversion"", but would have had to clutter the code with explicit type casts to compile without warning. Best regards,; Elmar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970
https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970:209,Deployability,patch,patch,209,"Hi Noel!. Thanks for the hint, I went through the changes and applied what was still needed. The file has been updated at; http://download.yasara.org/service/yasaraformat.cpp. I should note that there was one patch that changed variables from 'int' to 'unsigned int':; https://github.com/openbabel/openbabel/commit/eb39d20558390cfb5f8597a57455e776b8780b96#diff-234aec539418d8c1bf366d8e0d0aa26e09284ebc8cf3f0a271164baa2466cee6. I don't know which exotic compiler triggered this patch, but I can safely say that efficient&productive C/C++ development becomes impossible if you cannot implicitly cast 'int' to 'unsigned int' and similar cases. I experimented a bit with the GCC options ""-Wconversion"" and ""-Wsigned-conversion"", but would have had to clutter the code with explicit type casts to compile without warning. Best regards,; Elmar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970
https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970:477,Deployability,patch,patch,477,"Hi Noel!. Thanks for the hint, I went through the changes and applied what was still needed. The file has been updated at; http://download.yasara.org/service/yasaraformat.cpp. I should note that there was one patch that changed variables from 'int' to 'unsigned int':; https://github.com/openbabel/openbabel/commit/eb39d20558390cfb5f8597a57455e776b8780b96#diff-234aec539418d8c1bf366d8e0d0aa26e09284ebc8cf3f0a271164baa2466cee6. I don't know which exotic compiler triggered this patch, but I can safely say that efficient&productive C/C++ development becomes impossible if you cannot implicitly cast 'int' to 'unsigned int' and similar cases. I experimented a bit with the GCC options ""-Wconversion"" and ""-Wsigned-conversion"", but would have had to clutter the code with explicit type casts to compile without warning. Best regards,; Elmar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970
https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970:510,Energy Efficiency,efficient,efficient,510,"Hi Noel!. Thanks for the hint, I went through the changes and applied what was still needed. The file has been updated at; http://download.yasara.org/service/yasaraformat.cpp. I should note that there was one patch that changed variables from 'int' to 'unsigned int':; https://github.com/openbabel/openbabel/commit/eb39d20558390cfb5f8597a57455e776b8780b96#diff-234aec539418d8c1bf366d8e0d0aa26e09284ebc8cf3f0a271164baa2466cee6. I don't know which exotic compiler triggered this patch, but I can safely say that efficient&productive C/C++ development becomes impossible if you cannot implicitly cast 'int' to 'unsigned int' and similar cases. I experimented a bit with the GCC options ""-Wconversion"" and ""-Wsigned-conversion"", but would have had to clutter the code with explicit type casts to compile without warning. Best regards,; Elmar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970
https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970:228,Modifiability,variab,variables,228,"Hi Noel!. Thanks for the hint, I went through the changes and applied what was still needed. The file has been updated at; http://download.yasara.org/service/yasaraformat.cpp. I should note that there was one patch that changed variables from 'int' to 'unsigned int':; https://github.com/openbabel/openbabel/commit/eb39d20558390cfb5f8597a57455e776b8780b96#diff-234aec539418d8c1bf366d8e0d0aa26e09284ebc8cf3f0a271164baa2466cee6. I don't know which exotic compiler triggered this patch, but I can safely say that efficient&productive C/C++ development becomes impossible if you cannot implicitly cast 'int' to 'unsigned int' and similar cases. I experimented a bit with the GCC options ""-Wconversion"" and ""-Wsigned-conversion"", but would have had to clutter the code with explicit type casts to compile without warning. Best regards,; Elmar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970
https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970:494,Safety,safe,safely,494,"Hi Noel!. Thanks for the hint, I went through the changes and applied what was still needed. The file has been updated at; http://download.yasara.org/service/yasaraformat.cpp. I should note that there was one patch that changed variables from 'int' to 'unsigned int':; https://github.com/openbabel/openbabel/commit/eb39d20558390cfb5f8597a57455e776b8780b96#diff-234aec539418d8c1bf366d8e0d0aa26e09284ebc8cf3f0a271164baa2466cee6. I don't know which exotic compiler triggered this patch, but I can safely say that efficient&productive C/C++ development becomes impossible if you cannot implicitly cast 'int' to 'unsigned int' and similar cases. I experimented a bit with the GCC options ""-Wconversion"" and ""-Wsigned-conversion"", but would have had to clutter the code with explicit type casts to compile without warning. Best regards,; Elmar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970
https://github.com/openbabel/openbabel/pull/2400#issuecomment-886211723:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2400#issuecomment-886211723
https://github.com/openbabel/openbabel/issues/2402#issuecomment-892096376:24,Availability,error,error,24,"I am receiving the same error, though I dont thing the error is affecting the module to run properly. Does this error limit you in anyway or does it seem like the error is raise for no reason?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-892096376
https://github.com/openbabel/openbabel/issues/2402#issuecomment-892096376:55,Availability,error,error,55,"I am receiving the same error, though I dont thing the error is affecting the module to run properly. Does this error limit you in anyway or does it seem like the error is raise for no reason?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-892096376
https://github.com/openbabel/openbabel/issues/2402#issuecomment-892096376:112,Availability,error,error,112,"I am receiving the same error, though I dont thing the error is affecting the module to run properly. Does this error limit you in anyway or does it seem like the error is raise for no reason?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-892096376
https://github.com/openbabel/openbabel/issues/2402#issuecomment-892096376:163,Availability,error,error,163,"I am receiving the same error, though I dont thing the error is affecting the module to run properly. Does this error limit you in anyway or does it seem like the error is raise for no reason?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-892096376
https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385:125,Deployability,install,install,125,"These kind of problems are almost always due to a problem with the BABEL_DATADIR environment variable. Are you using a Conda install of OpenBabel? In that case, you could look at the following comment to find out how to set the variable. https://github.com/openbabel/openbabel/issues/2372#issuecomment-850439612; There is also work being done on improving the Conda install to eliminate these problems (https://github.com/conda-forge/openbabel-feedstock/pull/22#issue-992108462)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385
https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385:366,Deployability,install,install,366,"These kind of problems are almost always due to a problem with the BABEL_DATADIR environment variable. Are you using a Conda install of OpenBabel? In that case, you could look at the following comment to find out how to set the variable. https://github.com/openbabel/openbabel/issues/2372#issuecomment-850439612; There is also work being done on improving the Conda install to eliminate these problems (https://github.com/conda-forge/openbabel-feedstock/pull/22#issue-992108462)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385
https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385:93,Modifiability,variab,variable,93,"These kind of problems are almost always due to a problem with the BABEL_DATADIR environment variable. Are you using a Conda install of OpenBabel? In that case, you could look at the following comment to find out how to set the variable. https://github.com/openbabel/openbabel/issues/2372#issuecomment-850439612; There is also work being done on improving the Conda install to eliminate these problems (https://github.com/conda-forge/openbabel-feedstock/pull/22#issue-992108462)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385
https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385:228,Modifiability,variab,variable,228,"These kind of problems are almost always due to a problem with the BABEL_DATADIR environment variable. Are you using a Conda install of OpenBabel? In that case, you could look at the following comment to find out how to set the variable. https://github.com/openbabel/openbabel/issues/2372#issuecomment-850439612; There is also work being done on improving the Conda install to eliminate these problems (https://github.com/conda-forge/openbabel-feedstock/pull/22#issue-992108462)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385
https://github.com/openbabel/openbabel/issues/2402#issuecomment-920725567:147,Deployability,update,update,147,Just a follow-up to my message above. That issue is taken care of by https://github.com/conda-forge/openbabel-feedstock/pull/22. If you run `conda update -c conda-forge openbabel` and make sure you get a version of `3.1.1-py39hfc62d72_2` or later the BABEL_DATADIR is set automatically on activation of the conda environment.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-920725567
https://github.com/openbabel/openbabel/issues/2402#issuecomment-920725567:23,Integrability,message,message,23,Just a follow-up to my message above. That issue is taken care of by https://github.com/conda-forge/openbabel-feedstock/pull/22. If you run `conda update -c conda-forge openbabel` and make sure you get a version of `3.1.1-py39hfc62d72_2` or later the BABEL_DATADIR is set automatically on activation of the conda environment.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-920725567
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:141,Availability,echo,echo,141,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:575,Availability,error,error,575,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:635,Availability,Error,Error,635,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:766,Availability,Error,Error,766,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:1317,Deployability,install,install,1317,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:1251,Modifiability,variab,variables,1251,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:666,Performance,Load,LoadFragments,666,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:95,Deployability,install,installation,95,"I assume your note. > Well I can import babel in python now. relates to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the pa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:131,Deployability,install,install,131,"I assume your note. > Well I can import babel in python now. relates to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the pa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:212,Deployability,install,install,212,"I assume your note. > Well I can import babel in python now. relates to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the pa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:385,Deployability,install,install,385,"I assume your note. > Well I can import babel in python now. relates to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the pa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:651,Deployability,install,installation,651,"I assume your note. > Well I can import babel in python now. relates to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the pa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:914,Deployability,install,install,914,"I assume your note. > Well I can import babel in python now. relates to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the pa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:927,Deployability,install,install,927,"I assume your note. > Well I can import babel in python now. relates to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the pa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1191,Deployability,install,installation,1191,"ip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` typically is necessary only if the computer used equally (still / intentionally) includes an instance of Python2. This however is more and more ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1314,Deployability,install,installed,1314,"nbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` typically is necessary only if the computer used equally (still / intentionally) includes an instance of Python2. This however is more and more an exception.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1788,Deployability,install,install,1788,"nbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` typically is necessary only if the computer used equally (still / intentionally) includes an instance of Python2. This however is more and more an exception.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1987,Deployability,install,install,1987,"nbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` typically is necessary only if the computer used equally (still / intentionally) includes an instance of Python2. This however is more and more an exception.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1832,Integrability,depend,dependencies,1832,"nbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` typically is necessary only if the computer used equally (still / intentionally) includes an instance of Python2. This however is more and more an exception.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:963,Testability,test,test,963,"I assume your note. > Well I can import babel in python now. relates to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the pa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1346,Testability,log,log,1346,"nbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` typically is necessary only if the computer used equally (still / intentionally) includes an instance of Python2. This however is more and more an exception.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1078,Usability,simpl,simply,1078,"s to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` t",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795029522:126,Deployability,install,install,126,"A virtual environment is supposed to act as a way to start from scratch again, right?. Could I not just nuke my entire python install, deinstall everything babel related, remove the path variables and then install python + my libs (i have a batch file for that) and *then* openbabel-wheel? If I use openbabel-wheel, I no longer need the GUI app right?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795029522
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795029522:206,Deployability,install,install,206,"A virtual environment is supposed to act as a way to start from scratch again, right?. Could I not just nuke my entire python install, deinstall everything babel related, remove the path variables and then install python + my libs (i have a batch file for that) and *then* openbabel-wheel? If I use openbabel-wheel, I no longer need the GUI app right?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795029522
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795029522:187,Modifiability,variab,variables,187,"A virtual environment is supposed to act as a way to start from scratch again, right?. Could I not just nuke my entire python install, deinstall everything babel related, remove the path variables and then install python + my libs (i have a batch file for that) and *then* openbabel-wheel? If I use openbabel-wheel, I no longer need the GUI app right?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795029522
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:131,Availability,avail,available,131,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1336,Availability,error,error,1336,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:206,Deployability,install,installed,206,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:255,Deployability,install,installer,255,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1531,Deployability,install,installation,1531,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1583,Deployability,install,installation,1583,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1197,Security,access,access,1197,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1060,Testability,log,logical,1060,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1834,Testability,log,log,1834,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1897,Testability,log,log,1897,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:556,Usability,simpl,simply,556,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432
https://github.com/openbabel/openbabel/issues/2403#issuecomment-1339651045:13,Deployability,update,update,13,Is there any update on the pip wheel for openbabel ? I think there is now a `pip install rdkit` .,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2403#issuecomment-1339651045
https://github.com/openbabel/openbabel/issues/2403#issuecomment-1339651045:81,Deployability,install,install,81,Is there any update on the pip wheel for openbabel ? I think there is now a `pip install rdkit` .,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2403#issuecomment-1339651045
https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:282,Availability,down,downloads,282,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181
https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:463,Deployability,upgrade,upgrade,463,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181
https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:484,Deployability,update,update,484,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181
https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:572,Deployability,install,installation,572,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181
https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:1448,Performance,optimiz,optimization,1448,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181
https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:1557,Performance,optimiz,optimization,1557,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181
https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:868,Testability,test,test,868,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181
https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:882,Testability,test,test,882,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181
https://github.com/openbabel/openbabel/issues/2404#issuecomment-914236173:1665,Availability,Down,Downloads,1665,"Hi @nbehrnd and Openbabel team,; I got the 3.1.1 version, I will try to install it and get back here in case there are issues. Regarding docking pose:; In the absence of interactions seen in the active site (after docking), I thought the isolated structure might end up being a saddle point. Thus, such a geometry may give wrong charges. Thus I used --gen3D with the hope that it will bring it to nearest ground state. Please let me know if this thinking is correct. Looking forward to your valuable suggestions and comments.; Thank you and best regards. - snappy -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - sqlalchemy -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - sqlite -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - statsmodels -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - swig -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tbb -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tk -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tornado -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - unixodbc -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - wrapt -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - xz -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - yaml -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zeromq -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zlib -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zstd -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']. Your installed version is: 2.17. (base) [exx@c107739 Downloads]$ babel --version; No output file or format spec!; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30; Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>; Try -H option for more information.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-914236173
https://github.com/openbabel/openbabel/issues/2404#issuecomment-914236173:72,Deployability,install,install,72,"Hi @nbehrnd and Openbabel team,; I got the 3.1.1 version, I will try to install it and get back here in case there are issues. Regarding docking pose:; In the absence of interactions seen in the active site (after docking), I thought the isolated structure might end up being a saddle point. Thus, such a geometry may give wrong charges. Thus I used --gen3D with the hope that it will bring it to nearest ground state. Please let me know if this thinking is correct. Looking forward to your valuable suggestions and comments.; Thank you and best regards. - snappy -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - sqlalchemy -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - sqlite -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - statsmodels -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - swig -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tbb -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tk -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tornado -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - unixodbc -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - wrapt -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - xz -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - yaml -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zeromq -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zlib -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zstd -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']. Your installed version is: 2.17. (base) [exx@c107739 Downloads]$ babel --version; No output file or format spec!; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30; Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>; Try -H option for more information.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-914236173
https://github.com/openbabel/openbabel/issues/2404#issuecomment-914236173:1617,Deployability,install,installed,1617,"Hi @nbehrnd and Openbabel team,; I got the 3.1.1 version, I will try to install it and get back here in case there are issues. Regarding docking pose:; In the absence of interactions seen in the active site (after docking), I thought the isolated structure might end up being a saddle point. Thus, such a geometry may give wrong charges. Thus I used --gen3D with the hope that it will bring it to nearest ground state. Please let me know if this thinking is correct. Looking forward to your valuable suggestions and comments.; Thank you and best regards. - snappy -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - sqlalchemy -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - sqlite -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - statsmodels -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - swig -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tbb -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tk -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tornado -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - unixodbc -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - wrapt -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - xz -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - yaml -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zeromq -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zlib -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zstd -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']. Your installed version is: 2.17. (base) [exx@c107739 Downloads]$ babel --version; No output file or format spec!; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30; Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>; Try -H option for more information.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-914236173
https://github.com/openbabel/openbabel/issues/2404#issuecomment-914236173:329,Energy Efficiency,charge,charges,329,"Hi @nbehrnd and Openbabel team,; I got the 3.1.1 version, I will try to install it and get back here in case there are issues. Regarding docking pose:; In the absence of interactions seen in the active site (after docking), I thought the isolated structure might end up being a saddle point. Thus, such a geometry may give wrong charges. Thus I used --gen3D with the hope that it will bring it to nearest ground state. Please let me know if this thinking is correct. Looking forward to your valuable suggestions and comments.; Thank you and best regards. - snappy -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - sqlalchemy -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - sqlite -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - statsmodels -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - swig -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tbb -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tk -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tornado -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - unixodbc -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - wrapt -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - xz -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - yaml -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zeromq -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zlib -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zstd -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']. Your installed version is: 2.17. (base) [exx@c107739 Downloads]$ babel --version; No output file or format spec!; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30; Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>; Try -H option for more information.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-914236173
https://github.com/openbabel/openbabel/issues/2404#issuecomment-914236173:1199,Integrability,wrap,wrapt,1199,"Hi @nbehrnd and Openbabel team,; I got the 3.1.1 version, I will try to install it and get back here in case there are issues. Regarding docking pose:; In the absence of interactions seen in the active site (after docking), I thought the isolated structure might end up being a saddle point. Thus, such a geometry may give wrong charges. Thus I used --gen3D with the hope that it will bring it to nearest ground state. Please let me know if this thinking is correct. Looking forward to your valuable suggestions and comments.; Thank you and best regards. - snappy -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - sqlalchemy -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - sqlite -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - statsmodels -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - swig -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tbb -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tk -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - tornado -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - unixodbc -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - wrapt -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - xz -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - yaml -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zeromq -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zlib -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']; - zstd -> libgcc-ng[version='>=7.3.0'] -> __glibc[version='>=2.17']. Your installed version is: 2.17. (base) [exx@c107739 Downloads]$ babel --version; No output file or format spec!; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30; Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>; Try -H option for more information.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-914236173
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919:565,Energy Efficiency,energy,energy,565,"Just about `--gen3d`: this is a handy abbreviation to perform *an* optimization as if there were nothing (no solvent, no bulk, no ligand; but uniform vacuum) around the molecule of interest. But it is one of five options to guess an energetic optimum. See [this page](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) and check the author's open access [publication](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-019-0372-5) about possible applications and limitations. Complementary to this, a systematic search for low energy conformers is described [here](https://open-babel.readthedocs.io/en/latest/3DStructureGen/multipleconformers.html).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919:54,Performance,perform,perform,54,"Just about `--gen3d`: this is a handy abbreviation to perform *an* optimization as if there were nothing (no solvent, no bulk, no ligand; but uniform vacuum) around the molecule of interest. But it is one of five options to guess an energetic optimum. See [this page](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) and check the author's open access [publication](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-019-0372-5) about possible applications and limitations. Complementary to this, a systematic search for low energy conformers is described [here](https://open-babel.readthedocs.io/en/latest/3DStructureGen/multipleconformers.html).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919:67,Performance,optimiz,optimization,67,"Just about `--gen3d`: this is a handy abbreviation to perform *an* optimization as if there were nothing (no solvent, no bulk, no ligand; but uniform vacuum) around the molecule of interest. But it is one of five options to guess an energetic optimum. See [this page](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) and check the author's open access [publication](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-019-0372-5) about possible applications and limitations. Complementary to this, a systematic search for low energy conformers is described [here](https://open-babel.readthedocs.io/en/latest/3DStructureGen/multipleconformers.html).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919:377,Security,access,access,377,"Just about `--gen3d`: this is a handy abbreviation to perform *an* optimization as if there were nothing (no solvent, no bulk, no ligand; but uniform vacuum) around the molecule of interest. But it is one of five options to guess an energetic optimum. See [this page](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) and check the author's open access [publication](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-019-0372-5) about possible applications and limitations. Complementary to this, a systematic search for low energy conformers is described [here](https://open-babel.readthedocs.io/en/latest/3DStructureGen/multipleconformers.html).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615:280,Energy Efficiency,charge,charge,280,"There is a peculiar observation that I made which is the following.; For simple compounds like benzamidine, the older and newer versions give correct NetCharge, but for a slightly complex molecule like the one I attached in the first message in the thread, both methods give zero charge.; I'm planning to test a few cases like benzoate anion and other anions with 3-4 rings, heteroatoms i.e. drug-like molecules. Thanks for sharing the references and insightful comments. I will try to find time to read and get back here soon in case of questions.; Best regards.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615:234,Integrability,message,message,234,"There is a peculiar observation that I made which is the following.; For simple compounds like benzamidine, the older and newer versions give correct NetCharge, but for a slightly complex molecule like the one I attached in the first message in the thread, both methods give zero charge.; I'm planning to test a few cases like benzoate anion and other anions with 3-4 rings, heteroatoms i.e. drug-like molecules. Thanks for sharing the references and insightful comments. I will try to find time to read and get back here soon in case of questions.; Best regards.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615:305,Testability,test,test,305,"There is a peculiar observation that I made which is the following.; For simple compounds like benzamidine, the older and newer versions give correct NetCharge, but for a slightly complex molecule like the one I attached in the first message in the thread, both methods give zero charge.; I'm planning to test a few cases like benzoate anion and other anions with 3-4 rings, heteroatoms i.e. drug-like molecules. Thanks for sharing the references and insightful comments. I will try to find time to read and get back here soon in case of questions.; Best regards.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615:73,Usability,simpl,simple,73,"There is a peculiar observation that I made which is the following.; For simple compounds like benzamidine, the older and newer versions give correct NetCharge, but for a slightly complex molecule like the one I attached in the first message in the thread, both methods give zero charge.; I'm planning to test a few cases like benzoate anion and other anions with 3-4 rings, heteroatoms i.e. drug-like molecules. Thanks for sharing the references and insightful comments. I will try to find time to read and get back here soon in case of questions.; Best regards.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916676421:389,Energy Efficiency,energy,energy-and-minimization,389,"A short question/comment. Are you sure that gen3D will result in a minimization of a 3D structure? I think it will create a new one from scratch, without using the current 3D information. So you will probably not get the ""nearest ground state"" but A ground state. I think it is better to use --minimize (https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#forcefield-energy-and-minimization) if you really want to get the nearest minimum.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916676421
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916683210:660,Energy Efficiency,energy,energy-and-minimization,660,"Ok, now I realise the difference between the two options.; I will confirm by comparing coordinates generated by both methods.; Thanks for the clarification and useful comments.; Best regards. On Fri, Sep 10, 2021, 12:27 fredrikw ***@***.***> wrote:. > A short question/comment. Are you sure that gen3D will result in a; > minimization of a 3D structure? I think it will create a new one from; > scratch, without using the current 3D information. So you will probably not; > get the ""nearest ground state"" but A ground state.; >; > I think it is better to use --minimize (; > https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#forcefield-energy-and-minimization); > if you really want to get the nearest minimum.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2404#issuecomment-916676421>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJ6WMI7PNUVUXSUX3INBYTDUBGT5XANCNFSM5C66NURQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916683210
https://github.com/openbabel/openbabel/issues/2404#issuecomment-916696434:366,Testability,test,test,366,"> Ok, now I realise the difference between the two options.; > I will confirm by comparing coordinates generated by both methods. If the initial conformation as well as the modified one are exported; into the .xyz format, e.g. by. ```; obabel -isdf input_file.sdf -oxyz -O output_file.xyz; ```. a rapid quantifying comparison of the two may be achieved by a Kabsch; test. Jimmy Charnley initiated a lightweight implementation for; Python, which is shared on GitHub (https://github.com/charnley/rmsd); under the permissive BSD license.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916696434
https://github.com/openbabel/openbabel/pull/2405#issuecomment-907858557:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405#issuecomment-907858557
https://github.com/openbabel/openbabel/issues/2406#issuecomment-908728721:32,Availability,error,error,32,I have seen right now that this error is already fixed for Python3,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406#issuecomment-908728721
https://github.com/openbabel/openbabel/issues/2407#issuecomment-909404765:148,Availability,down,download,148,"That version of swig (from 2013), is a wee bit too old. It does not support the version of Python you are targeting. In general it's a good idea to download and build the latest swig. It's pretty straightforward to do.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407#issuecomment-909404765
https://github.com/openbabel/openbabel/issues/2408#issuecomment-913814845:36,Deployability,upgrade,upgrade,36,"Is the same problem observed if you upgrade your OS to a more recent version (e.g., substitute 16.04 by 20.04LTS, if not 21.04) and then resolve the dependencies from the repositories via `apt`? Compare with the listing [here](https://packages.ubuntu.com/search?keywords=openbabel).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-913814845
https://github.com/openbabel/openbabel/issues/2408#issuecomment-913814845:149,Integrability,depend,dependencies,149,"Is the same problem observed if you upgrade your OS to a more recent version (e.g., substitute 16.04 by 20.04LTS, if not 21.04) and then resolve the dependencies from the repositories via `apt`? Compare with the listing [here](https://packages.ubuntu.com/search?keywords=openbabel).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-913814845
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013889460:219,Deployability,install,installing,219,"@nbehrnd Yes, the issue also occurs under Ubuntu 20.04.3. issue: https://github.com/hackingmaterials/atomate/pull/734; [logs](https://github.com/hackingmaterials/atomate/runs/4808065787?check_suite_focus=true). I tried installing with `apt`, `snap` and `conda`. All have the same issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013889460
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013889460:120,Testability,log,logs,120,"@nbehrnd Yes, the issue also occurs under Ubuntu 20.04.3. issue: https://github.com/hackingmaterials/atomate/pull/734; [logs](https://github.com/hackingmaterials/atomate/runs/4808065787?check_suite_focus=true). I tried installing with `apt`, `snap` and `conda`. All have the same issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013889460
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746:28,Deployability,install,installing,28,"It has been some time I was installing OpenBabel in Xubuntu 18.04 LTS; but gradually transitioned to Debian 12/bookworm (branch testing) --; because of this, I'm not sure if the installation in contemporary; Ubuntu Fossa matches 1:1 Debian bookworm. Some weeks ago, I run into a related problem with pytest. According; to one of the maintainers, it is up to the distributions how the; packages are eventually are named in the package managers. Here:; in Debian 12 pytest for Python3 is called on the CLI by `pytest-3` vs.; pytest for legacy Python2 by `pytest`, all while pytest calls pytest; only `pytest` (e.g., in their documentation) because they moved to; Python3-only for quite some time (cf. https://github.com/pytest-dev/pytest/discussions/9481). My suggestion for the issue of OpenBabel (which needn't be one by; OpenBabel /per se/): try. ```bash; sudo apt-get install python3-openbabel; ```. to get it working. Good luck!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746:178,Deployability,install,installation,178,"It has been some time I was installing OpenBabel in Xubuntu 18.04 LTS; but gradually transitioned to Debian 12/bookworm (branch testing) --; because of this, I'm not sure if the installation in contemporary; Ubuntu Fossa matches 1:1 Debian bookworm. Some weeks ago, I run into a related problem with pytest. According; to one of the maintainers, it is up to the distributions how the; packages are eventually are named in the package managers. Here:; in Debian 12 pytest for Python3 is called on the CLI by `pytest-3` vs.; pytest for legacy Python2 by `pytest`, all while pytest calls pytest; only `pytest` (e.g., in their documentation) because they moved to; Python3-only for quite some time (cf. https://github.com/pytest-dev/pytest/discussions/9481). My suggestion for the issue of OpenBabel (which needn't be one by; OpenBabel /per se/): try. ```bash; sudo apt-get install python3-openbabel; ```. to get it working. Good luck!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746:870,Deployability,install,install,870,"It has been some time I was installing OpenBabel in Xubuntu 18.04 LTS; but gradually transitioned to Debian 12/bookworm (branch testing) --; because of this, I'm not sure if the installation in contemporary; Ubuntu Fossa matches 1:1 Debian bookworm. Some weeks ago, I run into a related problem with pytest. According; to one of the maintainers, it is up to the distributions how the; packages are eventually are named in the package managers. Here:; in Debian 12 pytest for Python3 is called on the CLI by `pytest-3` vs.; pytest for legacy Python2 by `pytest`, all while pytest calls pytest; only `pytest` (e.g., in their documentation) because they moved to; Python3-only for quite some time (cf. https://github.com/pytest-dev/pytest/discussions/9481). My suggestion for the issue of OpenBabel (which needn't be one by; OpenBabel /per se/): try. ```bash; sudo apt-get install python3-openbabel; ```. to get it working. Good luck!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746:128,Testability,test,testing,128,"It has been some time I was installing OpenBabel in Xubuntu 18.04 LTS; but gradually transitioned to Debian 12/bookworm (branch testing) --; because of this, I'm not sure if the installation in contemporary; Ubuntu Fossa matches 1:1 Debian bookworm. Some weeks ago, I run into a related problem with pytest. According; to one of the maintainers, it is up to the distributions how the; packages are eventually are named in the package managers. Here:; in Debian 12 pytest for Python3 is called on the CLI by `pytest-3` vs.; pytest for legacy Python2 by `pytest`, all while pytest calls pytest; only `pytest` (e.g., in their documentation) because they moved to; Python3-only for quite some time (cf. https://github.com/pytest-dev/pytest/discussions/9481). My suggestion for the issue of OpenBabel (which needn't be one by; OpenBabel /per se/): try. ```bash; sudo apt-get install python3-openbabel; ```. to get it working. Good luck!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013900477:159,Deployability,install,install,159,"@nbehrnd Thanks for the hint. [Same problem](https://github.com/hackingmaterials/atomate/runs/4832928625?check_suite_focus=true#step:6:294) with `sudo apt-get install python3-openbabel` though, I'm afraid.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013900477
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:318,Availability,avail,available,318,"With live USB session of Ubuntu 20.04.2 LTS Fossa, run as-such, I'm get OpenBabel to interact, from the CLI, as well as from Python. ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ date; Sun Jan 16 16:08:41 UTC 2022; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # get OpenBabel; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel; 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.; Need to get 3784 kB of archives.; After this operation, 17.9 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Fetched 3784 kB in 1s (3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:5231,Availability,Error,Error,5231,"r ""license"" for more information.; >>> import os; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'openbabel'; >>> import obabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'obabel'; >>> exit(); xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # perhaps with python3-openbabel?; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ sudo apt-get install python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following NEW packages will be installed:; python3-openbabel; 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.; Need to get 556 kB of archives.; After this operation, 3472 kB of additional disk space will be used.; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 556 kB in 0s (1436 kB/s) ; Selecting previously unselected package python3-openbabel.; (Reading database ... 160937 files and directories currently installed.); Preparing to unpack .../python3-openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for doc-base (0.10.9) ...; Processing 31 changed doc-base files, 2 added doc-base files...; Error while merging /usr/share/doc-base/python3-openbabel-openbabel with /usr/share/doc-base/python3-openbabel-pybel: format html already defined.; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check again in Python; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import os; >>> import openbabel; >>> help(openbabel). >>> # is working! ; >>> exit(); xubuntu@xubuntu:~/Desktop$ ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:387,Deployability,Release,Release,387,"With live USB session of Ubuntu 20.04.2 LTS Fossa, run as-such, I'm get OpenBabel to interact, from the CLI, as well as from Python. ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ date; Sun Jan 16 16:08:41 UTC 2022; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # get OpenBabel; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel; 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.; Need to get 3784 kB of archives.; After this operation, 17.9 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Fetched 3784 kB in 1s (3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:606,Deployability,install,install,606,"With live USB session of Ubuntu 20.04.2 LTS Fossa, run as-such, I'm get OpenBabel to interact, from the CLI, as well as from Python. ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ date; Sun Jan 16 16:08:41 UTC 2022; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # get OpenBabel; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel; 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.; Need to get 3784 kB of archives.; After this operation, 17.9 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Fetched 3784 kB in 1s (3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:760,Deployability,install,installed,760,"With live USB session of Ubuntu 20.04.2 LTS Fossa, run as-such, I'm get OpenBabel to interact, from the CLI, as well as from Python. ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ date; Sun Jan 16 16:08:41 UTC 2022; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # get OpenBabel; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel; 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.; Need to get 3784 kB of archives.; After this operation, 17.9 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Fetched 3784 kB in 1s (3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:849,Deployability,install,installed,849,"With live USB session of Ubuntu 20.04.2 LTS Fossa, run as-such, I'm get OpenBabel to interact, from the CLI, as well as from Python. ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ date; Sun Jan 16 16:08:41 UTC 2022; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # get OpenBabel; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel; 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.; Need to get 3784 kB of archives.; After this operation, 17.9 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Fetched 3784 kB in 1s (3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:915,Deployability,upgrade,upgraded,915,"With live USB session of Ubuntu 20.04.2 LTS Fossa, run as-such, I'm get OpenBabel to interact, from the CLI, as well as from Python. ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ date; Sun Jan 16 16:08:41 UTC 2022; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # get OpenBabel; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel; 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.; Need to get 3784 kB of archives.; After this operation, 17.9 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Fetched 3784 kB in 1s (3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:933,Deployability,install,installed,933,"With live USB session of Ubuntu 20.04.2 LTS Fossa, run as-such, I'm get OpenBabel to interact, from the CLI, as well as from Python. ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ date; Sun Jan 16 16:08:41 UTC 2022; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # get OpenBabel; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel; 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.; Need to get 3784 kB of archives.; After this operation, 17.9 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Fetched 3784 kB in 1s (3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:966,Deployability,upgrade,upgraded,966,"With live USB session of Ubuntu 20.04.2 LTS Fossa, run as-such, I'm get OpenBabel to interact, from the CLI, as well as from Python. ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ date; Sun Jan 16 16:08:41 UTC 2022; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # get OpenBabel; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel; 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.; Need to get 3784 kB of archives.; After this operation, 17.9 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Fetched 3784 kB in 1s (3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:1622,Deployability,install,installed,1622,"nstall openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel; 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.; Need to get 3784 kB of archives.; After this operation, 17.9 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Fetched 3784 kB in 1s (3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Setting up libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Setting up openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for libc-bin (2.31-0ubuntu9.2) ...; Processing triggers for man-db (2.9.1-1) ...; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # test OpenBabel ; xubuntu@xubuntu:~$ cd Desktop/; xubuntu@xubuntu:~/Desktop$ obabel -:""c1ccncc1"" -h --gen3d -O pyridine.sdf; 1 molecule converted; xubuntu@xubuntu:~/Desktop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:4295,Deployability,install,install,4295,".0134 0.0001 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.1726 -2.1023 0.0114 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.3254 -2.1063 0.0027 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 6 2 0 0 0 0; 1 7 1 0 0 0 0; 2 3 2 0 0 0 0; 2 8 1 0 0 0 0; 3 4 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 5 10 1 0 0 0 0; 6 11 1 0 0 0 0; M END; $$$$; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check openbabel in Python; xubuntu@xubuntu:~/Desktop$ python. Command 'python' not found, did you mean:. command 'python3' from deb python3; command 'python' from deb python-is-python3. xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import os; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'openbabel'; >>> import obabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'obabel'; >>> exit(); xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # perhaps with python3-openbabel?; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ sudo apt-get install python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following NEW packages will be installed:; python3-openbabel; 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.; Need to get 556 kB of archives.; After this operation, 3472 kB of additional disk space will be used.; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 556 kB in 0s (1436 kB/s) ; Selecting previously unselected package python3-openbabel.; (Reading database ... 160937 files and directories currently installed.); Preparing to unpack .../python3-openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up python3-o",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:4450,Deployability,install,installed,4450," in Python; xubuntu@xubuntu:~/Desktop$ python. Command 'python' not found, did you mean:. command 'python3' from deb python3; command 'python' from deb python-is-python3. xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import os; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'openbabel'; >>> import obabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'obabel'; >>> exit(); xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # perhaps with python3-openbabel?; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ sudo apt-get install python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following NEW packages will be installed:; python3-openbabel; 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.; Need to get 556 kB of archives.; After this operation, 3472 kB of additional disk space will be used.; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 556 kB in 0s (1436 kB/s) ; Selecting previously unselected package python3-openbabel.; (Reading database ... 160937 files and directories currently installed.); Preparing to unpack .../python3-openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for doc-base (0.10.9) ...; Processing 31 changed doc-base files, 2 added doc-base files...; Error while merging /usr/share/doc-base/python3-openbabel-openbabel with /usr/share/doc-base/python3-openbabel-pybel: format html already defined.; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check again in Python; xubuntu@xubuntu:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:4483,Deployability,upgrade,upgraded,4483," in Python; xubuntu@xubuntu:~/Desktop$ python. Command 'python' not found, did you mean:. command 'python3' from deb python3; command 'python' from deb python-is-python3. xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import os; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'openbabel'; >>> import obabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'obabel'; >>> exit(); xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # perhaps with python3-openbabel?; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ sudo apt-get install python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following NEW packages will be installed:; python3-openbabel; 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.; Need to get 556 kB of archives.; After this operation, 3472 kB of additional disk space will be used.; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 556 kB in 0s (1436 kB/s) ; Selecting previously unselected package python3-openbabel.; (Reading database ... 160937 files and directories currently installed.); Preparing to unpack .../python3-openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for doc-base (0.10.9) ...; Processing 31 changed doc-base files, 2 added doc-base files...; Error while merging /usr/share/doc-base/python3-openbabel-openbabel with /usr/share/doc-base/python3-openbabel-pybel: format html already defined.; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check again in Python; xubuntu@xubuntu:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:4501,Deployability,install,installed,4501," in Python; xubuntu@xubuntu:~/Desktop$ python. Command 'python' not found, did you mean:. command 'python3' from deb python3; command 'python' from deb python-is-python3. xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import os; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'openbabel'; >>> import obabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'obabel'; >>> exit(); xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # perhaps with python3-openbabel?; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ sudo apt-get install python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following NEW packages will be installed:; python3-openbabel; 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.; Need to get 556 kB of archives.; After this operation, 3472 kB of additional disk space will be used.; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 556 kB in 0s (1436 kB/s) ; Selecting previously unselected package python3-openbabel.; (Reading database ... 160937 files and directories currently installed.); Preparing to unpack .../python3-openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for doc-base (0.10.9) ...; Processing 31 changed doc-base files, 2 added doc-base files...; Error while merging /usr/share/doc-base/python3-openbabel-openbabel with /usr/share/doc-base/python3-openbabel-pybel: format html already defined.; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check again in Python; xubuntu@xubuntu:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:4534,Deployability,upgrade,upgraded,4534," in Python; xubuntu@xubuntu:~/Desktop$ python. Command 'python' not found, did you mean:. command 'python3' from deb python3; command 'python' from deb python-is-python3. xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import os; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'openbabel'; >>> import obabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'obabel'; >>> exit(); xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # perhaps with python3-openbabel?; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ sudo apt-get install python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following NEW packages will be installed:; python3-openbabel; 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.; Need to get 556 kB of archives.; After this operation, 3472 kB of additional disk space will be used.; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 556 kB in 0s (1436 kB/s) ; Selecting previously unselected package python3-openbabel.; (Reading database ... 160937 files and directories currently installed.); Preparing to unpack .../python3-openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for doc-base (0.10.9) ...; Processing 31 changed doc-base files, 2 added doc-base files...; Error while merging /usr/share/doc-base/python3-openbabel-openbabel with /usr/share/doc-base/python3-openbabel-pybel: format html already defined.; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check again in Python; xubuntu@xubuntu:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:4918,Deployability,install,installed,4918,"r ""license"" for more information.; >>> import os; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'openbabel'; >>> import obabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'obabel'; >>> exit(); xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # perhaps with python3-openbabel?; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ sudo apt-get install python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following NEW packages will be installed:; python3-openbabel; 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.; Need to get 556 kB of archives.; After this operation, 3472 kB of additional disk space will be used.; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 556 kB in 0s (1436 kB/s) ; Selecting previously unselected package python3-openbabel.; (Reading database ... 160937 files and directories currently installed.); Preparing to unpack .../python3-openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for doc-base (0.10.9) ...; Processing 31 changed doc-base files, 2 added doc-base files...; Error while merging /usr/share/doc-base/python3-openbabel-openbabel with /usr/share/doc-base/python3-openbabel-pybel: format html already defined.; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check again in Python; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import os; >>> import openbabel; >>> help(openbabel). >>> # is working! ; >>> exit(); xubuntu@xubuntu:~/Desktop$ ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:665,Integrability,depend,dependency,665,"With live USB session of Ubuntu 20.04.2 LTS Fossa, run as-such, I'm get OpenBabel to interact, from the CLI, as well as from Python. ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ date; Sun Jan 16 16:08:41 UTC 2022; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # get OpenBabel; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel; 0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.; Need to get 3784 kB of archives.; After this operation, 17.9 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Fetched 3784 kB in 1s (3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:4362,Integrability,depend,dependency,4362,"1 1 0 0 0 0; M END; $$$$; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check openbabel in Python; xubuntu@xubuntu:~/Desktop$ python. Command 'python' not found, did you mean:. command 'python3' from deb python3; command 'python' from deb python-is-python3. xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import os; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'openbabel'; >>> import obabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'obabel'; >>> exit(); xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # perhaps with python3-openbabel?; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ sudo apt-get install python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following NEW packages will be installed:; python3-openbabel; 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.; Need to get 556 kB of archives.; After this operation, 3472 kB of additional disk space will be used.; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 556 kB in 0s (1436 kB/s) ; Selecting previously unselected package python3-openbabel.; (Reading database ... 160937 files and directories currently installed.); Preparing to unpack .../python3-openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for doc-base (0.10.9) ...; Processing 31 changed doc-base files, 2 added doc-base files...; Error while merging /usr/share/doc-base/python3-openbabel-openbabel with /usr/share/doc-base/python3-openbabel-pybel: format html already defined",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:2436,Testability,test,test,2436,"3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Setting up libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Setting up openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for libc-bin (2.31-0ubuntu9.2) ...; Processing triggers for man-db (2.9.1-1) ...; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # test OpenBabel ; xubuntu@xubuntu:~$ cd Desktop/; xubuntu@xubuntu:~/Desktop$ obabel -:""c1ccncc1"" -h --gen3d -O pyridine.sdf; 1 molecule converted; xubuntu@xubuntu:~/Desktop$ cat pyridine.sdf . OpenBabel01162216093D. 11 11 0 0 0 0 0 0 0 0999 V2000; 1.4330 0.0516 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.6880 1.2260 0.0015 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.6942 1.1256 0.0022 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.3624 -0.0485 0.0055 N 0 0 0 0 0 0 0 0 0 0 0 0; -0.6120 -1.1719 0.0069 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.7738 -1.1733 0.0033 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.5185 0.0904 -0.0011 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.1715 2.1963 0.0013 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.3198 2.0134 0.0001 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.1726 -2.1023 0.0114 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.3254 -2.1063 0.0027 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 6 2 0 0 0 0; 1 7 1 0 0 0 0; 2 3 2 0 0 0 0; 2 8 1 0 0 0 0; 3 4 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 5 10 1 0 0 0 0; 6 11 1 0 0 0 0; M END; $$$$; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check openbabe",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013908785:43,Availability,error,error,43,So you're not getting that invalid version error by installing version `3.0.0+dfsg-3ubuntu3` of `openbabel`?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013908785
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013908785:52,Deployability,install,installing,52,So you're not getting that invalid version error by installing version `3.0.0+dfsg-3ubuntu3` of `openbabel`?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013908785
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:319,Availability,avail,available,319,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:7175,Availability,Error,Error,7175,"d1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking openbabel (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package python3-openbabel.; Preparing to unpack .../python3-openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Setting up libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Setting up openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for man-db (2.9.1-1) ...; Processing triggers for doc-base (0.10.9) ...; Processing 31 changed doc-base files, 2 added doc-base files...; Error while merging /usr/share/doc-base/python3-openbabel-openbabel with /usr/share/doc-base/python3-openbabel-pybel: format html already defined.; Processing triggers for libc-bin (2.31-0ubuntu9.2) ...; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ cd Desktop/; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # obabel on the cli; xubuntu@xubuntu:~/Desktop$ obabel -:""CCO"" -h --gen3d -O ethanol.sdf; 1 molecule converted; xubuntu@xubuntu:~/Desktop$ cat ethanol.sdf . OpenBabel01162216463D. 9 8 0 0 0 0 0 0 0 0999 V2000; 1.0292 -0.0965 0.0224 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.5435 -0.1000 0.0160 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.0252 0.0084 -1.3153 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.6444 -0.1693 1.0434 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6372 -0.9351 -0.5625 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6437 0.8199 -0.4366 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.9349 -1.0216 0.4574 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.9305 0.7480 0.5885 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.6856 -0.7547 -1.8132 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 4 1 0 0 0 0; 1 5 1 0 0 0 0; 1 6 1 0 0 0 0; 2 3 1 0 0 0 0; 2 7 1 0 0 0 0; 2 8 1 0 0 0 0; 3 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9420,Availability,avail,available,9420,"9:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> print(openbabel.__version__); 3.0.0; >>> ; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""CO""); >>> mol.make3D(); >>> print(mol.write(""sdf""); ... ). OpenBabel01162216503D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0544 0.0300 -0.0867 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.4700 0.0351 -0.0732 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 -0.9889 -0.2489 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 0.6863 -0.8828 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6886 0.3944 0.8761 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.7654 -0.2927 -0.9396 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9778,Availability,avail,available,9778,"6 5 0 0 0 0 0 0 0 0999 V2000; 1.0544 0.0300 -0.0867 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.4700 0.0351 -0.0732 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 -0.9889 -0.2489 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 0.6863 -0.8828 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6886 0.3944 0.8761 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.7654 -0.2927 -0.9396 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgrade",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:87,Deployability,install,installs,87,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:388,Deployability,Release,Release,388,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:463,Deployability,install,installation,463,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:536,Deployability,update,update,536,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:596,Deployability,Release,Release,596,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:692,Deployability,Release,Release,692,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:725,Deployability,Release,Release,725,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:835,Deployability,update,updates,835,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:985,Deployability,update,updates,985,"the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1155,Deployability,update,updates,1155," as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1239,Deployability,update,updates,1239, xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Meta,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1330,Deployability,update,updates,1330,tor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1419,Deployability,update,updates,1419,@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/ma,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1508,Deployability,update,updates,1508,u:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1599,Deployability,update,updates,1599,focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1689,Deployability,update,updates,1689, amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1780,Deployability,update,updates,1780,ive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1875,Deployability,update,updates,1875,buntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Tr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1963,Deployability,update,updates,1963,pdates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restrict,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2051,Deployability,update,updates,2051,/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/uni,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2692,Deployability,update,updates,2692,on-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-update,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2784,Deployability,update,updates,2784, Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-upda,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3156,Deployability,update,updates,3156,tion-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3251,Deployability,update,updates,3251,etadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3432,Deployability,update,updates,3432, kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.co,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3522,Deployability,update,updates,3522, B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3618,Deployability,update,updates,3618,; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubun,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3712,Deployability,update,updates,3712,Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ub,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3806,Deployability,update,updates,3806,:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4931,Deployability,install,install,4931,"11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:5103,Deployability,install,installed,5103,"ty/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 4340 kB in 1s (3148 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:5192,Deployability,install,installed,5192,"ty/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 4340 kB in 1s (3148 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:5276,Deployability,upgrade,upgraded,5276,"ty/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 4340 kB in 1s (3148 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:5294,Deployability,install,installed,5294,"ty/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 4340 kB in 1s (3148 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:5329,Deployability,upgrade,upgraded,5329,"ty/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 4340 kB in 1s (3148 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:6099,Deployability,install,installed,6099,"l packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 4340 kB in 1s (3148 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking openbabel (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package python3-openbabel.; Preparing to unpack .../python3-openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Setting up libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Setting up openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up python3-openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for man-db (2.9.1-1) ...; Processing triggers f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9563,Deployability,install,install,9563,"ormation.; >>> import openbabel; >>> print(openbabel.__version__); 3.0.0; >>> ; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""CO""); >>> mol.make3D(); >>> print(mol.write(""sdf""); ... ). OpenBabel01162216503D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0544 0.0300 -0.0867 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.4700 0.0351 -0.0732 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 -0.9889 -0.2489 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 0.6863 -0.8828 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6886 0.3944 0.8761 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.7654 -0.2927 -0.9396 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state informati",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9667,Deployability,install,installed,9667,"ing(""smi"", ""CO""); >>> mol.make3D(); >>> print(mol.write(""sdf""); ... ). OpenBabel01162216503D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0544 0.0300 -0.0867 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.4700 0.0351 -0.0732 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 -0.9889 -0.2489 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 0.6863 -0.8828 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6886 0.3944 0.8761 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.7654 -0.2927 -0.9396 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenba",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9858,Deployability,Release,Release,9858," 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:10368,Deployability,install,install,10368," 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:10577,Deployability,install,installed,10577,"l from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3.1.1+dfsg-6) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking openbabel (3.1.1+dfsg-6) ...; Selecting previously unselected package python3-openbabel.; Preparing to unpack .../python3-openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking python3-openbabel (3.1.1+dfsg-6) ...; Setting up libopenbabel7 (3.1.1+dfsg-6) ...; Setting up python3-openbabel (3.1.1+dfsg-6) ...; Setting up openbabel (3.1.1+dfsg-6) ...; Processing triggers for libc-bin (",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:10639,Deployability,install,installed,10639,"l from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3.1.1+dfsg-6) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking openbabel (3.1.1+dfsg-6) ...; Selecting previously unselected package python3-openbabel.; Preparing to unpack .../python3-openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking python3-openbabel (3.1.1+dfsg-6) ...; Setting up libopenbabel7 (3.1.1+dfsg-6) ...; Setting up python3-openbabel (3.1.1+dfsg-6) ...; Setting up openbabel (3.1.1+dfsg-6) ...; Processing triggers for libc-bin (",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:10696,Deployability,upgrade,upgraded,10696,"l from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3.1.1+dfsg-6) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking openbabel (3.1.1+dfsg-6) ...; Selecting previously unselected package python3-openbabel.; Preparing to unpack .../python3-openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking python3-openbabel (3.1.1+dfsg-6) ...; Setting up libopenbabel7 (3.1.1+dfsg-6) ...; Setting up python3-openbabel (3.1.1+dfsg-6) ...; Setting up openbabel (3.1.1+dfsg-6) ...; Processing triggers for libc-bin (",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:10714,Deployability,install,installed,10714,"l from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3.1.1+dfsg-6) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking openbabel (3.1.1+dfsg-6) ...; Selecting previously unselected package python3-openbabel.; Preparing to unpack .../python3-openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking python3-openbabel (3.1.1+dfsg-6) ...; Setting up libopenbabel7 (3.1.1+dfsg-6) ...; Setting up python3-openbabel (3.1.1+dfsg-6) ...; Setting up openbabel (3.1.1+dfsg-6) ...; Processing triggers for libc-bin (",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:10747,Deployability,upgrade,upgraded,10747,"l from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3.1.1+dfsg-6) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking openbabel (3.1.1+dfsg-6) ...; Selecting previously unselected package python3-openbabel.; Preparing to unpack .../python3-openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking python3-openbabel (3.1.1+dfsg-6) ...; Setting up libopenbabel7 (3.1.1+dfsg-6) ...; Setting up python3-openbabel (3.1.1+dfsg-6) ...; Setting up openbabel (3.1.1+dfsg-6) ...; Processing triggers for libc-bin (",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:11018,Deployability,install,installed,11018,"d@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3.1.1+dfsg-6) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking openbabel (3.1.1+dfsg-6) ...; Selecting previously unselected package python3-openbabel.; Preparing to unpack .../python3-openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking python3-openbabel (3.1.1+dfsg-6) ...; Setting up libopenbabel7 (3.1.1+dfsg-6) ...; Setting up python3-openbabel (3.1.1+dfsg-6) ...; Setting up openbabel (3.1.1+dfsg-6) ...; Processing triggers for libc-bin (2.33-2) ...; Processing triggers for man-db (2.9.4-4) ...; norwid@carnot2:~$ ; norwid@carnot2:~$ # check openbabel on the CLI (Debian); norwid@carnot2:~/Desktop$ obabel -version; No input file or format spec or possibly a misplaced option.; Most options must come after the input files. (-i -o -O -m can be anywhwere.). Open Babel 3.1.1 -- Jun 10 2021 -- 04:27:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:5008,Integrability,depend,dependency,5008,"11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127 kB]; Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-openbabel amd64 3.0.0+dfsg-3ubuntu3 [556 kB]; Fetched 4340 kB in 1s (3148 kB/s) ; Selecting previously unselected package libschroedinger-mae",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:10475,Integrability,depend,dependency,10475,"es related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3.1.1+dfsg-6) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking openbabel (3.1.1+dfsg-6) ...; Selecting previously unselected package python3-openbabel.; Preparing to unpack .../python3-openbabel_3.1.1+dfsg-6_amd64.deb ...; Unpacking python3-openbabel (3.1.1+dfsg-6) ...; Se",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:877,Security,secur,security,877,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:910,Security,secur,security,910,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1037,Security,secur,security,1037,"the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1070,Security,secur,security,1070,"lls as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2114,Security,secur,security,2114,/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/uni,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2147,Security,secur,security,2147,ranslation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/univer,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2200,Security,secur,security,2200,ranslation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/univer,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2233,Security,secur,security,2233,es/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2294,Security,secur,security,2294,11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2327,Security,secur,security,2327,/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2385,Security,secur,security,2385, http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [11,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2418,Security,secur,security,2418,ain DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu fo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2476,Security,secur,security,2476,ttp://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [692,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2509,Security,secur,security,2509,etadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2568,Security,secur,security,2568,etadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2601,Security,secur,security,2601,ckages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2844,Security,secur,security,2844, Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-upda,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2877,Security,secur,security,2877,rse amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2937,Security,secur,security,2937,archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-1,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2970,Security,secur,security,2970,6 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu foca,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3034,Security,secur,security,3034,6 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu foca,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3067,Security,secur,security,3067,363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu fo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3310,Security,secur,security,3310,buntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiver,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3343,Security,secur,security,3343,B]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3869,Security,secur,security,3869,:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3902,Security,secur,security,3902,.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3967,Security,secur,security,3967,tu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-open,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4000,Security,secur,security,4000,536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building depe,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4062,Security,secur,security,4062,untu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... D,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4095,Security,secur,security,4095,]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be inst,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4157,Security,secur,security,4157,ocal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maepar,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4190,Security,secur,security,4190,; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4254,Security,secur,security,4254,al-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 ope,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4287,Security,secur,security,4287,"t:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly inst",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4347,Security,secur,security,4347,"l-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; N",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4380,Security,secur,security,4380,"ve.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4439,Security,secur,security,4439,"ve.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4472,Security,secur,security,4472,"ntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ub",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4538,Security,secur,security,4538,"ntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ub",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4571,Security,secur,security,4571,"ntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4632,Security,secur,security,4632,"ntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4665,Security,secur,security,4665,"tu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubunt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4728,Security,secur,security,4728,"tu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubunt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4761,Security,secur,security,4761,"updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:10412,Security,password,password,10412," 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9204,Testability,test,testing,9204," 0 0; 3 9 1 0 0 0 0; M END; $$$$; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check obabel for Python; xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> print(openbabel.__version__); 3.0.0; >>> ; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""CO""); >>> mol.make3D(); >>> print(mol.write(""sdf""); ... ). OpenBabel01162216503D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0544 0.0300 -0.0867 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.4700 0.0351 -0.0732 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 -0.9889 -0.2489 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 0.6863 -0.8828 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6886 0.3944 0.8761 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.7654 -0.2927 -0.9396 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No su",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9867,Testability,test,testing,9867," 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013916611:217,Availability,error,error,217,Maybe the difference arises from you installing into system python and me using GH action where it installs into a virtual environment or some such? But that wouldn't explain why only I am getting the invalid version error.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013916611
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013916611:37,Deployability,install,installing,37,Maybe the difference arises from you installing into system python and me using GH action where it installs into a virtual environment or some such? But that wouldn't explain why only I am getting the invalid version error.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013916611
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013916611:99,Deployability,install,installs,99,Maybe the difference arises from you installing into system python and me using GH action where it installs into a virtual environment or some such? But that wouldn't explain why only I am getting the invalid version error.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013916611
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:604,Availability,error,error,604,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:623,Availability,error,error,623,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:135,Deployability,install,installing,135,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:211,Deployability,install,installed,211,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:337,Deployability,install,install,337,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:710,Deployability,install,installs,710,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:751,Deployability,install,install,751,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:880,Deployability,install,install,880,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:1082,Deployability,install,install,1082,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:1135,Deployability,install,installs,1135,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:1295,Deployability,install,installs,1295,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:29,Testability,log,logs,29,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014246425:445,Deployability,install,installing,445,"@fredrikw Thanks for the advice! Tried `libopenbabel-dev` instead of `python3-openbabel` [but same problem](https://github.com/hackingmaterials/atomate/runs/4837827425). [I also looked at `/usr/local/include/openbabel3`](https://github.com/hackingmaterials/atomate/runs/4837795072?check_suite_focus=true#step:4:71) but it doesn't exist. [As mentioned](https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013889460), I tried earlier installing with `apt`, `snap` and `conda`. I was especially hopeful that `conda` might do a better job of linking the header files. Sadly, all have the same issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014246425
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014254758:86,Deployability,install,install,86,[This issue](https://github.com/openbabel/openbabel/issues/1905) also recommends `apt install libopenbabel-dev` and there apparently it worked. Though with v2 instead of v3. 😞,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014254758
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959:182,Deployability,update,updated,182,"@janosh I assume (contrasting to https://github.com/openbabel/openbabel/issues/1905), the computer accessible to you knows only Python3. Is this true (some computers in academia are updated slowly...)?. Because the thread mentions `pip3`, which is/was in Xubuntu 18.04LTS the pip for Python3 vs `pip` for Python2. A fresh/bare metal installation of Ubuntu 20.04 Fossa (and later releases ) leads to a clean transition, a mere upgrade of the distribution leaves traces of legacy Python2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959:333,Deployability,install,installation,333,"@janosh I assume (contrasting to https://github.com/openbabel/openbabel/issues/1905), the computer accessible to you knows only Python3. Is this true (some computers in academia are updated slowly...)?. Because the thread mentions `pip3`, which is/was in Xubuntu 18.04LTS the pip for Python3 vs `pip` for Python2. A fresh/bare metal installation of Ubuntu 20.04 Fossa (and later releases ) leads to a clean transition, a mere upgrade of the distribution leaves traces of legacy Python2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959:379,Deployability,release,releases,379,"@janosh I assume (contrasting to https://github.com/openbabel/openbabel/issues/1905), the computer accessible to you knows only Python3. Is this true (some computers in academia are updated slowly...)?. Because the thread mentions `pip3`, which is/was in Xubuntu 18.04LTS the pip for Python3 vs `pip` for Python2. A fresh/bare metal installation of Ubuntu 20.04 Fossa (and later releases ) leads to a clean transition, a mere upgrade of the distribution leaves traces of legacy Python2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959:426,Deployability,upgrade,upgrade,426,"@janosh I assume (contrasting to https://github.com/openbabel/openbabel/issues/1905), the computer accessible to you knows only Python3. Is this true (some computers in academia are updated slowly...)?. Because the thread mentions `pip3`, which is/was in Xubuntu 18.04LTS the pip for Python3 vs `pip` for Python2. A fresh/bare metal installation of Ubuntu 20.04 Fossa (and later releases ) leads to a clean transition, a mere upgrade of the distribution leaves traces of legacy Python2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959:99,Security,access,accessible,99,"@janosh I assume (contrasting to https://github.com/openbabel/openbabel/issues/1905), the computer accessible to you knows only Python3. Is this true (some computers in academia are updated slowly...)?. Because the thread mentions `pip3`, which is/was in Xubuntu 18.04LTS the pip for Python3 vs `pip` for Python2. A fresh/bare metal installation of Ubuntu 20.04 Fossa (and later releases ) leads to a clean transition, a mere upgrade of the distribution leaves traces of legacy Python2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014290138:69,Deployability,install,installs,69,@nbehrnd Not sure I understand. The GH action container this runs on installs Python 3.7 if that's what you're asking.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014290138
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014379694:241,Deployability,install,installed,241,"You could try to pin the version of openbabel to 3.1.1 by adding it to the `requirements-ci.txt` and see if the py37-version is able to find it properly without the ""invalid version"". Alternatively, try to locate where the include files are installed by apt-get and try to make sure that pip uses that include directory when installing openbabel. I suppose that means that you need to run a separate pip install of openbabel, adding -L path/to/openbabel/includes somewhere. @baoilleach and @ghutchis , do you remember why we have a version 3.1.1.1 on PyPI?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014379694
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014379694:325,Deployability,install,installing,325,"You could try to pin the version of openbabel to 3.1.1 by adding it to the `requirements-ci.txt` and see if the py37-version is able to find it properly without the ""invalid version"". Alternatively, try to locate where the include files are installed by apt-get and try to make sure that pip uses that include directory when installing openbabel. I suppose that means that you need to run a separate pip install of openbabel, adding -L path/to/openbabel/includes somewhere. @baoilleach and @ghutchis , do you remember why we have a version 3.1.1.1 on PyPI?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014379694
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014379694:404,Deployability,install,install,404,"You could try to pin the version of openbabel to 3.1.1 by adding it to the `requirements-ci.txt` and see if the py37-version is able to find it properly without the ""invalid version"". Alternatively, try to locate where the include files are installed by apt-get and try to make sure that pip uses that include directory when installing openbabel. I suppose that means that you need to run a separate pip install of openbabel, adding -L path/to/openbabel/includes somewhere. @baoilleach and @ghutchis , do you remember why we have a version 3.1.1.1 on PyPI?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014379694
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014387465:151,Availability,ERROR,ERROR,151,"@fredrikw [Looks like](https://github.com/hackingmaterials/atomate/runs/4839616648?check_suite_focus=true#step:6:144) there is no version 3.1.1:. ```; ERROR: Could not find a version that satisfies the requirement openbabel==3.1.1 (from atomate[complete]) (from versions: 1.8, 1.8.1, 1.8.2, 1.8.4, 2.4.0, 2.4.1, 3.1.1.1); ```. It's either 3.1.1.1 or dropping a major release to 2.4.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014387465
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014387465:367,Deployability,release,release,367,"@fredrikw [Looks like](https://github.com/hackingmaterials/atomate/runs/4839616648?check_suite_focus=true#step:6:144) there is no version 3.1.1:. ```; ERROR: Could not find a version that satisfies the requirement openbabel==3.1.1 (from atomate[complete]) (from versions: 1.8, 1.8.1, 1.8.2, 1.8.4, 2.4.0, 2.4.1, 3.1.1.1); ```. It's either 3.1.1.1 or dropping a major release to 2.4.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014387465
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014466193:300,Availability,ping,pinging,300,It looks like the ubuntu package installs the include files to /usr/include/openbabel3 so maybe you could try to link /usr/local/include/openbabel3 there? (~ `ln -s /usr/include/openbabel3 /usr/local/include/openbabel3`) (Warning: I have resolved to guessing now...) (We cross posted here @janosh so pinging you here in case you didn'r see it),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014466193
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014466193:33,Deployability,install,installs,33,It looks like the ubuntu package installs the include files to /usr/include/openbabel3 so maybe you could try to link /usr/local/include/openbabel3 there? (~ `ln -s /usr/include/openbabel3 /usr/local/include/openbabel3`) (Warning: I have resolved to guessing now...) (We cross posted here @janosh so pinging you here in case you didn'r see it),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014466193
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014477717:302,Availability,ping,pinging,302,> It looks like the ubuntu package installs the include files to /usr/include/openbabel3 so maybe you could try to link /usr/local/include/openbabel3 there? (~ `ln -s /usr/include/openbabel3 /usr/local/include/openbabel3`) (Warning: I have resolved to guessing now...) (We cross posted here @janosh so pinging you here in case you didn'r see it). Cool! `sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3` [did the trick](https://github.com/hackingmaterials/atomate/runs/4840788858?check_suite_focus=true#step:6:292).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014477717
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014477717:35,Deployability,install,installs,35,> It looks like the ubuntu package installs the include files to /usr/include/openbabel3 so maybe you could try to link /usr/local/include/openbabel3 there? (~ `ln -s /usr/include/openbabel3 /usr/local/include/openbabel3`) (Warning: I have resolved to guessing now...) (We cross posted here @janosh so pinging you here in case you didn'r see it). Cool! `sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3` [did the trick](https://github.com/hackingmaterials/atomate/runs/4840788858?check_suite_focus=true#step:6:292).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014477717
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014478717:60,Deployability,install,install,60,Perhaps that linking step could be added to the `openbabel` install process? Or should those files be moved from `/usr/include/openbabel3` to `/usr/local/include/openbabel3` in the first place?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014478717
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014567728:148,Deployability,install,installations,148,It is the maintainers of the package in Debian that have opted for `/usr/include/openbabel3`. That is one of the reasons why it is difficult to mix installations from different providers. The setup.py from openbabel has `/usr/local/include/openbabel3` as fallback since that is the default installation path on linux.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014567728
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014567728:290,Deployability,install,installation,290,It is the maintainers of the package in Debian that have opted for `/usr/include/openbabel3`. That is one of the reasons why it is difficult to mix installations from different providers. The setup.py from openbabel has `/usr/local/include/openbabel3` as fallback since that is the default installation path on linux.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014567728
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014582279:565,Deployability,release,release,565,"Continuing the investigation, I would say that we have a real bug underneath this. In `setup.py` we are calling StrictVersion for version parsing (https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/scripts/python/setup.py#L46) which bails on the actual version string in the current PyPI package (StrictVersion only allows X.Y.Z versions, nothing else) so the package finding will never work. It might be wise to switch to another way of checking versions, maybe using `pkg_resources.parse_version()`? Or alternatively, make a new release on PyPI, but without changing the StrictVersion requirement it will be difficult to set a version that will work without bumping to 3.1.2 which IMO should trigger a new release of OB as well...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014582279
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014582279:742,Deployability,release,release,742,"Continuing the investigation, I would say that we have a real bug underneath this. In `setup.py` we are calling StrictVersion for version parsing (https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/scripts/python/setup.py#L46) which bails on the actual version string in the current PyPI package (StrictVersion only allows X.Y.Z versions, nothing else) so the package finding will never work. It might be wise to switch to another way of checking versions, maybe using `pkg_resources.parse_version()`? Or alternatively, make a new release on PyPI, but without changing the StrictVersion requirement it will be difficult to set a version that will work without bumping to 3.1.2 which IMO should trigger a new release of OB as well...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014582279
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1057404650:34,Deployability,install,install,34,I just wanted to report that `pip install openbabel` still fails for Ubuntu 20.04.1 and Darwin 18.7.0.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1057404650
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1148891139:75,Availability,error,error,75,"Just to say, I'd been digging around, trying to find an answer to the same error. I knew the error was being printed by setup.py, but it was not passing on the actual error from swig, when I finally realized... there was no swig. I installed swig in my conda environment, and presto, it started compiling...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1148891139
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1148891139:93,Availability,error,error,93,"Just to say, I'd been digging around, trying to find an answer to the same error. I knew the error was being printed by setup.py, but it was not passing on the actual error from swig, when I finally realized... there was no swig. I installed swig in my conda environment, and presto, it started compiling...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1148891139
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1148891139:167,Availability,error,error,167,"Just to say, I'd been digging around, trying to find an answer to the same error. I knew the error was being printed by setup.py, but it was not passing on the actual error from swig, when I finally realized... there was no swig. I installed swig in my conda environment, and presto, it started compiling...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1148891139
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1148891139:232,Deployability,install,installed,232,"Just to say, I'd been digging around, trying to find an answer to the same error. I knew the error was being printed by setup.py, but it was not passing on the actual error from swig, when I finally realized... there was no swig. I installed swig in my conda environment, and presto, it started compiling...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1148891139
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675:57,Deployability,install,install,57,"@samseaver If you have a conda environment, using `conda install -c conda-forge openbabel` is a safer/simpler bet... That shouldn't need compiling.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675:96,Safety,safe,safer,96,"@samseaver If you have a conda environment, using `conda install -c conda-forge openbabel` is a safer/simpler bet... That shouldn't need compiling.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675:102,Usability,simpl,simpler,102,"@samseaver If you have a conda environment, using `conda install -c conda-forge openbabel` is a safer/simpler bet... That shouldn't need compiling.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1158981736:20,Deployability,install,install,20,@fredrikw ``` conda install -c conda-forge openbabel``` solved the problem. Thanks!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1158981736
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461:304,Availability,ping,pinging,304,"> > It looks like the ubuntu package installs the include files to /usr/include/openbabel3 so maybe you could try to link /usr/local/include/openbabel3 there? (~ `ln -s /usr/include/openbabel3 /usr/local/include/openbabel3`) (Warning: I have resolved to guessing now...) (We cross posted here @janosh so pinging you here in case you didn'r see it); > ; > Cool! `sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3` [did the trick](https://github.com/hackingmaterials/atomate/runs/4840788858?check_suite_focus=true#step:6:292). Hi Janosh, I am working on Linux and am still facing this issue. I have tried your line but to no avail. I am still a novice at python so I can't grasp the error here. The 'include' and 'directory' libraries aren't in the right place? How do i locate them? I have looked through the setup.py files which produce the error message 'SWIG failed....' and can't get my head around it?. Can you explain what your sudo line has fixed and therefore i may be able to do the same to mine. Thanks in advance!. >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461:638,Availability,avail,avail,638,"> > It looks like the ubuntu package installs the include files to /usr/include/openbabel3 so maybe you could try to link /usr/local/include/openbabel3 there? (~ `ln -s /usr/include/openbabel3 /usr/local/include/openbabel3`) (Warning: I have resolved to guessing now...) (We cross posted here @janosh so pinging you here in case you didn'r see it); > ; > Cool! `sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3` [did the trick](https://github.com/hackingmaterials/atomate/runs/4840788858?check_suite_focus=true#step:6:292). Hi Janosh, I am working on Linux and am still facing this issue. I have tried your line but to no avail. I am still a novice at python so I can't grasp the error here. The 'include' and 'directory' libraries aren't in the right place? How do i locate them? I have looked through the setup.py files which produce the error message 'SWIG failed....' and can't get my head around it?. Can you explain what your sudo line has fixed and therefore i may be able to do the same to mine. Thanks in advance!. >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461:696,Availability,error,error,696,"> > It looks like the ubuntu package installs the include files to /usr/include/openbabel3 so maybe you could try to link /usr/local/include/openbabel3 there? (~ `ln -s /usr/include/openbabel3 /usr/local/include/openbabel3`) (Warning: I have resolved to guessing now...) (We cross posted here @janosh so pinging you here in case you didn'r see it); > ; > Cool! `sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3` [did the trick](https://github.com/hackingmaterials/atomate/runs/4840788858?check_suite_focus=true#step:6:292). Hi Janosh, I am working on Linux and am still facing this issue. I have tried your line but to no avail. I am still a novice at python so I can't grasp the error here. The 'include' and 'directory' libraries aren't in the right place? How do i locate them? I have looked through the setup.py files which produce the error message 'SWIG failed....' and can't get my head around it?. Can you explain what your sudo line has fixed and therefore i may be able to do the same to mine. Thanks in advance!. >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461:856,Availability,error,error,856,"> > It looks like the ubuntu package installs the include files to /usr/include/openbabel3 so maybe you could try to link /usr/local/include/openbabel3 there? (~ `ln -s /usr/include/openbabel3 /usr/local/include/openbabel3`) (Warning: I have resolved to guessing now...) (We cross posted here @janosh so pinging you here in case you didn'r see it); > ; > Cool! `sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3` [did the trick](https://github.com/hackingmaterials/atomate/runs/4840788858?check_suite_focus=true#step:6:292). Hi Janosh, I am working on Linux and am still facing this issue. I have tried your line but to no avail. I am still a novice at python so I can't grasp the error here. The 'include' and 'directory' libraries aren't in the right place? How do i locate them? I have looked through the setup.py files which produce the error message 'SWIG failed....' and can't get my head around it?. Can you explain what your sudo line has fixed and therefore i may be able to do the same to mine. Thanks in advance!. >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461:37,Deployability,install,installs,37,"> > It looks like the ubuntu package installs the include files to /usr/include/openbabel3 so maybe you could try to link /usr/local/include/openbabel3 there? (~ `ln -s /usr/include/openbabel3 /usr/local/include/openbabel3`) (Warning: I have resolved to guessing now...) (We cross posted here @janosh so pinging you here in case you didn'r see it); > ; > Cool! `sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3` [did the trick](https://github.com/hackingmaterials/atomate/runs/4840788858?check_suite_focus=true#step:6:292). Hi Janosh, I am working on Linux and am still facing this issue. I have tried your line but to no avail. I am still a novice at python so I can't grasp the error here. The 'include' and 'directory' libraries aren't in the right place? How do i locate them? I have looked through the setup.py files which produce the error message 'SWIG failed....' and can't get my head around it?. Can you explain what your sudo line has fixed and therefore i may be able to do the same to mine. Thanks in advance!. >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461:862,Integrability,message,message,862,"> > It looks like the ubuntu package installs the include files to /usr/include/openbabel3 so maybe you could try to link /usr/local/include/openbabel3 there? (~ `ln -s /usr/include/openbabel3 /usr/local/include/openbabel3`) (Warning: I have resolved to guessing now...) (We cross posted here @janosh so pinging you here in case you didn'r see it); > ; > Cool! `sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3` [did the trick](https://github.com/hackingmaterials/atomate/runs/4840788858?check_suite_focus=true#step:6:292). Hi Janosh, I am working on Linux and am still facing this issue. I have tried your line but to no avail. I am still a novice at python so I can't grasp the error here. The 'include' and 'directory' libraries aren't in the right place? How do i locate them? I have looked through the setup.py files which produce the error message 'SWIG failed....' and can't get my head around it?. Can you explain what your sudo line has fixed and therefore i may be able to do the same to mine. Thanks in advance!. >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189168461
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189193922:221,Deployability,install,installed,221,"@WPAYNEE Sorry to say I'm far from an expert here. But essentially, what. ```sh; sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3; ```. does is add a symbolic link from where `openbabel` include files are installed to by default to where `openbabel` (the Python package) is looking for them. If that doesn't help in your case, maintainers might be able to advise if you give more information about your setup. Which install commands are you running in what environment?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189193922
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189193922:432,Deployability,install,install,432,"@WPAYNEE Sorry to say I'm far from an expert here. But essentially, what. ```sh; sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3; ```. does is add a symbolic link from where `openbabel` include files are installed to by default to where `openbabel` (the Python package) is looking for them. If that doesn't help in your case, maintainers might be able to advise if you give more information about your setup. Which install commands are you running in what environment?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1189193922
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1224219209:164,Deployability,install,install,164,I am in Ubuntu 18.04. when I run your line of code i get:. `ln: failed to create symbolic link '/usr/local/include/openbabel3': File exists`. This is when i try to install openbabel 3.1.1.1 as that is the newest version on Ubuntu. Unfortuantely I cannot use conda (I know it works on conda...) so I have to install it via pip or source filebut both give me this #2408 still....,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1224219209
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1224219209:307,Deployability,install,install,307,I am in Ubuntu 18.04. when I run your line of code i get:. `ln: failed to create symbolic link '/usr/local/include/openbabel3': File exists`. This is when i try to install openbabel 3.1.1.1 as that is the newest version on Ubuntu. Unfortuantely I cannot use conda (I know it works on conda...) so I have to install it via pip or source filebut both give me this #2408 still....,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1224219209
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1225293324:129,Availability,error,error,129,"@WPAYNEE If you already had a folder in `/usr/local/include/openbabel3` I would say that your problem is different. What is your error and in what step?; If you look in the folder ( `ls /usr/local/include/openbabel3`), what is in there? Could you also do `ls -l /usr/local/include/` and check the line for openbabel3?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1225293324
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:173,Deployability,install,install,173,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:211,Deployability,upgrade,upgrade,211,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:238,Deployability,install,install,238,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:587,Deployability,install,install,587,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:725,Deployability,install,install-option,725,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:1330,Deployability,Install,Installing,1330,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:1404,Deployability,install,installed,1404,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:1441,Deployability,install,install,1441,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:123,Integrability,depend,dependency,123,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:758,Modifiability,config,config-settings,758,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:858,Performance,cache,cache,858,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:944,Performance,cache,cache,944,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:1038,Performance,cache,cache-dir,1038,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:1114,Performance,cache,cache,1114,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:1249,Performance,cache,cached,1249,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:1123,Testability,test,test,1123,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286156772:136,Deployability,install,installing,136,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). @hmcezar Since pypi.org and difficulties installing openbabel 3.1.1.1 (entry on; pypi mentions release by [2022-05-23 Mon]) were once reported and as a; bystander, do they still occur when using the package the unofficial; openbabel-wheel (3.1.1.15) project provides? It was released today,; [2022-10-20 Thu]. The index equally mentions Noel O'Boyle distributing; csm-openbabel 3.1 (released by [2022-07-21 Thu] via pypi), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286156772
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286156772:190,Deployability,release,release,190,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). @hmcezar Since pypi.org and difficulties installing openbabel 3.1.1.1 (entry on; pypi mentions release by [2022-05-23 Mon]) were once reported and as a; bystander, do they still occur when using the package the unofficial; openbabel-wheel (3.1.1.15) project provides? It was released today,; [2022-10-20 Thu]. The index equally mentions Noel O'Boyle distributing; csm-openbabel 3.1 (released by [2022-07-21 Thu] via pypi), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286156772
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286156772:370,Deployability,release,released,370,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). @hmcezar Since pypi.org and difficulties installing openbabel 3.1.1.1 (entry on; pypi mentions release by [2022-05-23 Mon]) were once reported and as a; bystander, do they still occur when using the package the unofficial; openbabel-wheel (3.1.1.15) project provides? It was released today,; [2022-10-20 Thu]. The index equally mentions Noel O'Boyle distributing; csm-openbabel 3.1 (released by [2022-07-21 Thu] via pypi), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286156772
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286156772:478,Deployability,release,released,478,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). @hmcezar Since pypi.org and difficulties installing openbabel 3.1.1.1 (entry on; pypi mentions release by [2022-05-23 Mon]) were once reported and as a; bystander, do they still occur when using the package the unofficial; openbabel-wheel (3.1.1.15) project provides? It was released today,; [2022-10-20 Thu]. The index equally mentions Noel O'Boyle distributing; csm-openbabel 3.1 (released by [2022-07-21 Thu] via pypi), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286156772
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286659637:14,Deployability,install,install,14,"@nbehrnd If I install `openbabel-wheel` then indeed I don't need to use `--global-option` to specify the paths with `-L` and `-I` and I can import and use `openbabel` without a problem.; It would be nice if you could move this distribution of wheels to be the default, so people that want to use `openbabel` as a dependency can use it instead of `openbabel-wheel`.; Another thing is that `openbabel-wheel` does not provide `obabel`, I don't know if that's intended.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286659637
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286659637:313,Integrability,depend,dependency,313,"@nbehrnd If I install `openbabel-wheel` then indeed I don't need to use `--global-option` to specify the paths with `-L` and `-I` and I can import and use `openbabel` without a problem.; It would be nice if you could move this distribution of wheels to be the default, so people that want to use `openbabel` as a dependency can use it instead of `openbabel-wheel`.; Another thing is that `openbabel-wheel` does not provide `obabel`, I don't know if that's intended.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286659637
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288155056:128,Integrability,depend,dependency,128,"> It would be nice if you could move this distribution of wheels to be the default, so people that want to use `openbabel` as a dependency can use it instead of `openbabel-wheel`. I spotted alternative openbabel packages on pypi because I already was on my; way for an other application (`filetags`). However (so far) I never built a; Python wheel about an application this complex as openbabel -- though it; needn't be complicated, openbabel's dependencies on C/C++ one would need to; account for are beyond of my present comprehension.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288155056
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288155056:445,Integrability,depend,dependencies,445,"> It would be nice if you could move this distribution of wheels to be the default, so people that want to use `openbabel` as a dependency can use it instead of `openbabel-wheel`. I spotted alternative openbabel packages on pypi because I already was on my; way for an other application (`filetags`). However (so far) I never built a; Python wheel about an application this complex as openbabel -- though it; needn't be complicated, openbabel's dependencies on C/C++ one would need to; account for are beyond of my present comprehension.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288155056
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3773,Availability,Down,Downloaded,3773,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3803,Availability,echo,echo,3803,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:1131,Deployability,install,installed,1131,"/kuelumbus/rdkit-pypi) project, I've successfully used `cibuildwheel` to build wheels for `manylinux_x86_64`, `macosx_x86_64`, and `macosx_arm64`. Here I'd like to share my experience:. 1. The official [manylinux](https://github.com/pypa/manylinux) image does not provide `libpython*.so`, per https://github.com/pypa/manylinux/issues/255#issuecomment-450761634. However, openbabel tries to find and link `libpython*.so`. https://github.com/openbabel/openbabel/blob/530dbfa333189f4f429bd01a411b866ff5e2efe9/scripts/CMakeLists.txt#L54-L62; https://github.com/openbabel/openbabel/blob/530dbfa333189f4f429bd01a411b866ff5e2efe9/scripts/CMakeLists.txt#L97-L102. I removed these, and removed `-Wl,--no-undefined`, and it works fine on Linux and macosx, but I need some help on Windows. (maybe link with `libpython*.a` instead). 2. I use [cmake-build-extension](https://github.com/diegoferigo/cmake-build-extension) to build the cmake project through `pip`. It works fine. Here openbabel library is installed into the Python directory `python3.x/site-packages/openbabel/lib/openbabel/3.1.1/`.; ```py; from cmake_build_extension import BuildExtension, CMakeExtension; setup(; ext_modules=[; CMakeExtension(name=""OpenBabel"",; install_prefix=""openbabel"",; source_dir=str(Path(__file__).parent.absolute() / ""source""),; cmake_configure_options=[; ""-DPYTHON_EXECUTABLE="" + sys.executable,; ""-DCMAKE_BUILD_TYPE=Release"",; ""-DWITH_INCHI=ON"",; ""-DPYTHON_BINDINGS=ON"",; ""-DRUN_SWIG=ON"",; ""-DPYTHON_INCLUDE_PATH=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DPYTHON_INCLUDE_DIR=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DBUILD_BY_PIP=ON"",; *cmake_options,; ]),; ],; cmdclass=dict(build_ext=BuildExtension),; ); ```. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension""",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:1536,Deployability,Release,Release,1536,"b.com/openbabel/openbabel/blob/530dbfa333189f4f429bd01a411b866ff5e2efe9/scripts/CMakeLists.txt#L54-L62; https://github.com/openbabel/openbabel/blob/530dbfa333189f4f429bd01a411b866ff5e2efe9/scripts/CMakeLists.txt#L97-L102. I removed these, and removed `-Wl,--no-undefined`, and it works fine on Linux and macosx, but I need some help on Windows. (maybe link with `libpython*.a` instead). 2. I use [cmake-build-extension](https://github.com/diegoferigo/cmake-build-extension) to build the cmake project through `pip`. It works fine. Here openbabel library is installed into the Python directory `python3.x/site-packages/openbabel/lib/openbabel/3.1.1/`.; ```py; from cmake_build_extension import BuildExtension, CMakeExtension; setup(; ext_modules=[; CMakeExtension(name=""OpenBabel"",; install_prefix=""openbabel"",; source_dir=str(Path(__file__).parent.absolute() / ""source""),; cmake_configure_options=[; ""-DPYTHON_EXECUTABLE="" + sys.executable,; ""-DCMAKE_BUILD_TYPE=Release"",; ""-DWITH_INCHI=ON"",; ""-DPYTHON_BINDINGS=ON"",; ""-DRUN_SWIG=ON"",; ""-DPYTHON_INCLUDE_PATH=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DPYTHON_INCLUDE_DIR=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DBUILD_BY_PIP=ON"",; *cmake_options,; ]),; ],; cmdclass=dict(build_ext=BuildExtension),; ); ```. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:1852,Deployability,install,install,1852,", but I need some help on Windows. (maybe link with `libpython*.a` instead). 2. I use [cmake-build-extension](https://github.com/diegoferigo/cmake-build-extension) to build the cmake project through `pip`. It works fine. Here openbabel library is installed into the Python directory `python3.x/site-packages/openbabel/lib/openbabel/3.1.1/`.; ```py; from cmake_build_extension import BuildExtension, CMakeExtension; setup(; ext_modules=[; CMakeExtension(name=""OpenBabel"",; install_prefix=""openbabel"",; source_dir=str(Path(__file__).parent.absolute() / ""source""),; cmake_configure_options=[; ""-DPYTHON_EXECUTABLE="" + sys.executable,; ""-DCMAKE_BUILD_TYPE=Release"",; ""-DWITH_INCHI=ON"",; ""-DPYTHON_BINDINGS=ON"",; ""-DRUN_SWIG=ON"",; ""-DPYTHON_INCLUDE_PATH=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DPYTHON_INCLUDE_DIR=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DBUILD_BY_PIP=ON"",; *cmake_options,; ]),; ],; cmdclass=dict(build_ext=BuildExtension),; ); ```. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:1913,Deployability,install,install,1913,", but I need some help on Windows. (maybe link with `libpython*.a` instead). 2. I use [cmake-build-extension](https://github.com/diegoferigo/cmake-build-extension) to build the cmake project through `pip`. It works fine. Here openbabel library is installed into the Python directory `python3.x/site-packages/openbabel/lib/openbabel/3.1.1/`.; ```py; from cmake_build_extension import BuildExtension, CMakeExtension; setup(; ext_modules=[; CMakeExtension(name=""OpenBabel"",; install_prefix=""openbabel"",; source_dir=str(Path(__file__).parent.absolute() / ""source""),; cmake_configure_options=[; ""-DPYTHON_EXECUTABLE="" + sys.executable,; ""-DCMAKE_BUILD_TYPE=Release"",; ""-DWITH_INCHI=ON"",; ""-DPYTHON_BINDINGS=ON"",; ""-DRUN_SWIG=ON"",; ""-DPYTHON_INCLUDE_PATH=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DPYTHON_INCLUDE_DIR=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DBUILD_BY_PIP=ON"",; *cmake_options,; ]),; ],; cmdclass=dict(build_ext=BuildExtension),; ); ```. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:2694,Deployability,install,install,2694,"('INCLUDEPY'),; ""-DPYTHON_INCLUDE_DIR=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DBUILD_BY_PIP=ON"",; *cmake_options,; ]),; ],; cmdclass=dict(build_ext=BuildExtension),; ); ```. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3008,Deployability,install,install,3008,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3024,Deployability,release,release,3024,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3040,Deployability,install,install,3040,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3367,Deployability,install,install,3367,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3891,Deployability,install,install,3891,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3915,Deployability,install,install,3915,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:1971,Integrability,depend,dependency,1971,"tension](https://github.com/diegoferigo/cmake-build-extension) to build the cmake project through `pip`. It works fine. Here openbabel library is installed into the Python directory `python3.x/site-packages/openbabel/lib/openbabel/3.1.1/`.; ```py; from cmake_build_extension import BuildExtension, CMakeExtension; setup(; ext_modules=[; CMakeExtension(name=""OpenBabel"",; install_prefix=""openbabel"",; source_dir=str(Path(__file__).parent.absolute() / ""source""),; cmake_configure_options=[; ""-DPYTHON_EXECUTABLE="" + sys.executable,; ""-DCMAKE_BUILD_TYPE=Release"",; ""-DWITH_INCHI=ON"",; ""-DPYTHON_BINDINGS=ON"",; ""-DRUN_SWIG=ON"",; ""-DPYTHON_INCLUDE_PATH=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DPYTHON_INCLUDE_DIR=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DBUILD_BY_PIP=ON"",; *cmake_options,; ]),; ],; cmdclass=dict(build_ext=BuildExtension),; ); ```. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:2707,Integrability,depend,dependencies,2707,"('INCLUDEPY'),; ""-DPYTHON_INCLUDE_DIR=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DBUILD_BY_PIP=ON"",; *cmake_options,; ]),; ],; cmdclass=dict(build_ext=BuildExtension),; ); ```. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:2621,Modifiability,config,configs,2621,"('INCLUDEPY'),; ""-DPYTHON_INCLUDE_DIR=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DBUILD_BY_PIP=ON"",; *cmake_options,; ]),; ],; cmdclass=dict(build_ext=BuildExtension),; ); ```. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:2667,Modifiability,config,configs,2667,"('INCLUDEPY'),; ""-DPYTHON_INCLUDE_DIR=""+sysconfig.get_config_var('INCLUDEPY'),; ""-DBUILD_BY_PIP=ON"",; *cmake_options,; ]),; ],; cmdclass=dict(build_ext=BuildExtension),; ); ```. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3333,Modifiability,config,configure,3333,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3280,Security,certificate,certificate,3280,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:2752,Testability,test,test-command,2752,"`. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | t",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:174,Deployability,install,install,174,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:212,Deployability,upgrade,upgrade,212,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:239,Deployability,install,install,239,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:594,Deployability,install,install,594,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:741,Deployability,install,install-option,741,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1356,Deployability,Install,Installing,1356,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1432,Deployability,install,installed,1432,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1469,Deployability,install,install,1469,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1903,Deployability,install,installing,1903,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1958,Deployability,install,install,1958,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1996,Deployability,install,installed,1996,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:2107,Deployability,install,install,2107,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:124,Integrability,depend,dependency,124,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1871,Integrability,depend,dependency,1871,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1918,Integrability,depend,dependencies,1918,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:774,Modifiability,config,config-settings,774,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:876,Performance,cache,cache,876,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:962,Performance,cache,cache,962,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1056,Performance,cache,cache-dir,1056,"other problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy re",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1132,Performance,cache,cache,1132," a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1271,Performance,cache,cached,1271,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1141,Testability,test,test,1141," a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1857192425:65,Deployability,install,install,65,In my case I needed to use the `ln` command and I also needed to install swig3.0. (Leaving this here for anyone else who stumbles upon this issue):; ```; apt-get install openbabel libopenbabel-dev # Make sure to also install libopenbabel-dev; apt-get remove swig; apt-get install swig3.0; ln -s /usr/bin/swig3.0 /usr/bin/swig; ln -s /usr/include/openbabel3 /usr/local/include/openbabel3; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1857192425
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1857192425:162,Deployability,install,install,162,In my case I needed to use the `ln` command and I also needed to install swig3.0. (Leaving this here for anyone else who stumbles upon this issue):; ```; apt-get install openbabel libopenbabel-dev # Make sure to also install libopenbabel-dev; apt-get remove swig; apt-get install swig3.0; ln -s /usr/bin/swig3.0 /usr/bin/swig; ln -s /usr/include/openbabel3 /usr/local/include/openbabel3; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1857192425
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1857192425:217,Deployability,install,install,217,In my case I needed to use the `ln` command and I also needed to install swig3.0. (Leaving this here for anyone else who stumbles upon this issue):; ```; apt-get install openbabel libopenbabel-dev # Make sure to also install libopenbabel-dev; apt-get remove swig; apt-get install swig3.0; ln -s /usr/bin/swig3.0 /usr/bin/swig; ln -s /usr/include/openbabel3 /usr/local/include/openbabel3; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1857192425
https://github.com/openbabel/openbabel/issues/2408#issuecomment-1857192425:272,Deployability,install,install,272,In my case I needed to use the `ln` command and I also needed to install swig3.0. (Leaving this here for anyone else who stumbles upon this issue):; ```; apt-get install openbabel libopenbabel-dev # Make sure to also install libopenbabel-dev; apt-get remove swig; apt-get install swig3.0; ln -s /usr/bin/swig3.0 /usr/bin/swig; ln -s /usr/include/openbabel3 /usr/local/include/openbabel3; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1857192425
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243:881,Deployability,install,installed,881,"FWIW:. This bugs stems from the unfortunate choice to give the Python extension the version 3.1.1.1, which seems to cause `StrictVersion(find_version())` to fail with `invalid version number '3.1.1.1'`, which is then printed as a warning. For my own purpose, I managed to work around this by ""tweaking"" the version number in the version check to `3.1.1`, so that pkgconfig finds the libs and can compile the extension against them (and the `setup.py` does not need to revert back to looking in `/usr/local`). ```diff; diff -u -r openbabel-3.1.1.1.orig/setup.py openbabel-3.1.1.1/setup.py; --- openbabel-3.1.1.1.orig/setup.py	2020-05-23 06:54:26.000000000 -0230; +++ openbabel-3.1.1.1/setup.py	2024-04-01 12:34:04.590770399 -0230; @@ -43,7 +43,10 @@; """"""Try use pkgconfig to locate Open Babel, otherwise guess default location.""""""; try:; # Warn if the (major, minor) version of the installed OB doesn't match these python bindings; - py_ver = StrictVersion(find_version()); + py_ver = find_version(); + if py_ver == '3.1.1.1':; + py_ver = '3.1.1'; + py_ver = StrictVersion(py_ver); py_major_ver, py_minor_ver = py_ver.version[:2]; pcfile = 'openbabel-{}'.format(py_major_ver); ob_ver = StrictVersion(pkgconfig(pcfile, '--modversion')); ```. For this to work `PKG_CONFIG_PATH` needs to contain `/path/to/openbabel/lib/pkgconfig` (assuming it's not in any standard location). Next time around it's needed to push an additional release, it would be safer to simply release the Python bindings by increasing the versions final digit instead of appending a new one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243:1424,Deployability,release,release,1424,"FWIW:. This bugs stems from the unfortunate choice to give the Python extension the version 3.1.1.1, which seems to cause `StrictVersion(find_version())` to fail with `invalid version number '3.1.1.1'`, which is then printed as a warning. For my own purpose, I managed to work around this by ""tweaking"" the version number in the version check to `3.1.1`, so that pkgconfig finds the libs and can compile the extension against them (and the `setup.py` does not need to revert back to looking in `/usr/local`). ```diff; diff -u -r openbabel-3.1.1.1.orig/setup.py openbabel-3.1.1.1/setup.py; --- openbabel-3.1.1.1.orig/setup.py	2020-05-23 06:54:26.000000000 -0230; +++ openbabel-3.1.1.1/setup.py	2024-04-01 12:34:04.590770399 -0230; @@ -43,7 +43,10 @@; """"""Try use pkgconfig to locate Open Babel, otherwise guess default location.""""""; try:; # Warn if the (major, minor) version of the installed OB doesn't match these python bindings; - py_ver = StrictVersion(find_version()); + py_ver = find_version(); + if py_ver == '3.1.1.1':; + py_ver = '3.1.1'; + py_ver = StrictVersion(py_ver); py_major_ver, py_minor_ver = py_ver.version[:2]; pcfile = 'openbabel-{}'.format(py_major_ver); ob_ver = StrictVersion(pkgconfig(pcfile, '--modversion')); ```. For this to work `PKG_CONFIG_PATH` needs to contain `/path/to/openbabel/lib/pkgconfig` (assuming it's not in any standard location). Next time around it's needed to push an additional release, it would be safer to simply release the Python bindings by increasing the versions final digit instead of appending a new one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243:1461,Deployability,release,release,1461,"FWIW:. This bugs stems from the unfortunate choice to give the Python extension the version 3.1.1.1, which seems to cause `StrictVersion(find_version())` to fail with `invalid version number '3.1.1.1'`, which is then printed as a warning. For my own purpose, I managed to work around this by ""tweaking"" the version number in the version check to `3.1.1`, so that pkgconfig finds the libs and can compile the extension against them (and the `setup.py` does not need to revert back to looking in `/usr/local`). ```diff; diff -u -r openbabel-3.1.1.1.orig/setup.py openbabel-3.1.1.1/setup.py; --- openbabel-3.1.1.1.orig/setup.py	2020-05-23 06:54:26.000000000 -0230; +++ openbabel-3.1.1.1/setup.py	2024-04-01 12:34:04.590770399 -0230; @@ -43,7 +43,10 @@; """"""Try use pkgconfig to locate Open Babel, otherwise guess default location.""""""; try:; # Warn if the (major, minor) version of the installed OB doesn't match these python bindings; - py_ver = StrictVersion(find_version()); + py_ver = find_version(); + if py_ver == '3.1.1.1':; + py_ver = '3.1.1'; + py_ver = StrictVersion(py_ver); py_major_ver, py_minor_ver = py_ver.version[:2]; pcfile = 'openbabel-{}'.format(py_major_ver); ob_ver = StrictVersion(pkgconfig(pcfile, '--modversion')); ```. For this to work `PKG_CONFIG_PATH` needs to contain `/path/to/openbabel/lib/pkgconfig` (assuming it's not in any standard location). Next time around it's needed to push an additional release, it would be safer to simply release the Python bindings by increasing the versions final digit instead of appending a new one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243:1445,Safety,safe,safer,1445,"FWIW:. This bugs stems from the unfortunate choice to give the Python extension the version 3.1.1.1, which seems to cause `StrictVersion(find_version())` to fail with `invalid version number '3.1.1.1'`, which is then printed as a warning. For my own purpose, I managed to work around this by ""tweaking"" the version number in the version check to `3.1.1`, so that pkgconfig finds the libs and can compile the extension against them (and the `setup.py` does not need to revert back to looking in `/usr/local`). ```diff; diff -u -r openbabel-3.1.1.1.orig/setup.py openbabel-3.1.1.1/setup.py; --- openbabel-3.1.1.1.orig/setup.py	2020-05-23 06:54:26.000000000 -0230; +++ openbabel-3.1.1.1/setup.py	2024-04-01 12:34:04.590770399 -0230; @@ -43,7 +43,10 @@; """"""Try use pkgconfig to locate Open Babel, otherwise guess default location.""""""; try:; # Warn if the (major, minor) version of the installed OB doesn't match these python bindings; - py_ver = StrictVersion(find_version()); + py_ver = find_version(); + if py_ver == '3.1.1.1':; + py_ver = '3.1.1'; + py_ver = StrictVersion(py_ver); py_major_ver, py_minor_ver = py_ver.version[:2]; pcfile = 'openbabel-{}'.format(py_major_ver); ob_ver = StrictVersion(pkgconfig(pcfile, '--modversion')); ```. For this to work `PKG_CONFIG_PATH` needs to contain `/path/to/openbabel/lib/pkgconfig` (assuming it's not in any standard location). Next time around it's needed to push an additional release, it would be safer to simply release the Python bindings by increasing the versions final digit instead of appending a new one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243:1454,Usability,simpl,simply,1454,"FWIW:. This bugs stems from the unfortunate choice to give the Python extension the version 3.1.1.1, which seems to cause `StrictVersion(find_version())` to fail with `invalid version number '3.1.1.1'`, which is then printed as a warning. For my own purpose, I managed to work around this by ""tweaking"" the version number in the version check to `3.1.1`, so that pkgconfig finds the libs and can compile the extension against them (and the `setup.py` does not need to revert back to looking in `/usr/local`). ```diff; diff -u -r openbabel-3.1.1.1.orig/setup.py openbabel-3.1.1.1/setup.py; --- openbabel-3.1.1.1.orig/setup.py	2020-05-23 06:54:26.000000000 -0230; +++ openbabel-3.1.1.1/setup.py	2024-04-01 12:34:04.590770399 -0230; @@ -43,7 +43,10 @@; """"""Try use pkgconfig to locate Open Babel, otherwise guess default location.""""""; try:; # Warn if the (major, minor) version of the installed OB doesn't match these python bindings; - py_ver = StrictVersion(find_version()); + py_ver = find_version(); + if py_ver == '3.1.1.1':; + py_ver = '3.1.1'; + py_ver = StrictVersion(py_ver); py_major_ver, py_minor_ver = py_ver.version[:2]; pcfile = 'openbabel-{}'.format(py_major_ver); ob_ver = StrictVersion(pkgconfig(pcfile, '--modversion')); ```. For this to work `PKG_CONFIG_PATH` needs to contain `/path/to/openbabel/lib/pkgconfig` (assuming it's not in any standard location). Next time around it's needed to push an additional release, it would be safer to simply release the Python bindings by increasing the versions final digit instead of appending a new one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886:42,Availability,avail,available,42,"@ostueker There are at least two bypasses available, if the installation of `python3-openbabel` provided by your OS fails. - in clean a virtual environment, use [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) instead of openbabel. It works well for instance in Linux Debian 13/trixie, and Windows. Prior to the installation of this package, assert the absence of openbabel's Python bindings, i.e. either start all over, or run `pip uninstall openbabel`. The sole adjustment to your project then is to edit `requirements.txt`. This approach does not interfere with the obabel executable installed to the CLI with `openbabel` and `libopenbabel7` e.g., as provided by the repositories of Debian 13/trixie (at present 3.1.1+dfsg-9+b).; - for work with/around openbabel and Python, use the interpreter and the packaged version by [anaconda](https://anaconda.org/conda-forge/openbabel)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886:60,Deployability,install,installation,60,"@ostueker There are at least two bypasses available, if the installation of `python3-openbabel` provided by your OS fails. - in clean a virtual environment, use [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) instead of openbabel. It works well for instance in Linux Debian 13/trixie, and Windows. Prior to the installation of this package, assert the absence of openbabel's Python bindings, i.e. either start all over, or run `pip uninstall openbabel`. The sole adjustment to your project then is to edit `requirements.txt`. This approach does not interfere with the obabel executable installed to the CLI with `openbabel` and `libopenbabel7` e.g., as provided by the repositories of Debian 13/trixie (at present 3.1.1+dfsg-9+b).; - for work with/around openbabel and Python, use the interpreter and the packaged version by [anaconda](https://anaconda.org/conda-forge/openbabel)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886:324,Deployability,install,installation,324,"@ostueker There are at least two bypasses available, if the installation of `python3-openbabel` provided by your OS fails. - in clean a virtual environment, use [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) instead of openbabel. It works well for instance in Linux Debian 13/trixie, and Windows. Prior to the installation of this package, assert the absence of openbabel's Python bindings, i.e. either start all over, or run `pip uninstall openbabel`. The sole adjustment to your project then is to edit `requirements.txt`. This approach does not interfere with the obabel executable installed to the CLI with `openbabel` and `libopenbabel7` e.g., as provided by the repositories of Debian 13/trixie (at present 3.1.1+dfsg-9+b).; - for work with/around openbabel and Python, use the interpreter and the packaged version by [anaconda](https://anaconda.org/conda-forge/openbabel)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886:599,Deployability,install,installed,599,"@ostueker There are at least two bypasses available, if the installation of `python3-openbabel` provided by your OS fails. - in clean a virtual environment, use [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) instead of openbabel. It works well for instance in Linux Debian 13/trixie, and Windows. Prior to the installation of this package, assert the absence of openbabel's Python bindings, i.e. either start all over, or run `pip uninstall openbabel`. The sole adjustment to your project then is to edit `requirements.txt`. This approach does not interfere with the obabel executable installed to the CLI with `openbabel` and `libopenbabel7` e.g., as provided by the repositories of Debian 13/trixie (at present 3.1.1+dfsg-9+b).; - for work with/around openbabel and Python, use the interpreter and the packaged version by [anaconda](https://anaconda.org/conda-forge/openbabel)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886:354,Testability,assert,assert,354,"@ostueker There are at least two bypasses available, if the installation of `python3-openbabel` provided by your OS fails. - in clean a virtual environment, use [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) instead of openbabel. It works well for instance in Linux Debian 13/trixie, and Windows. Prior to the installation of this package, assert the absence of openbabel's Python bindings, i.e. either start all over, or run `pip uninstall openbabel`. The sole adjustment to your project then is to edit `requirements.txt`. This approach does not interfere with the obabel executable installed to the CLI with `openbabel` and `libopenbabel7` e.g., as provided by the repositories of Debian 13/trixie (at present 3.1.1+dfsg-9+b).; - for work with/around openbabel and Python, use the interpreter and the packaged version by [anaconda](https://anaconda.org/conda-forge/openbabel)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778:65,Deployability,patch,patch,65,"Thanks @nbehrnd, I was able to fix my own issues by applying the patch that I included. I was (re-)installing OpenBabel into an environment module for the Canadian High Performance Computing infrastructure (Digital Research Alliance of Canada, formerly Compute Canada). Anaconda doesn't play well with our system and while our users often use virtual environments to install Python wheels that we provide, for simple Python-bindings to C/C++ libraries, we like to install them into environment module with the library/application itself. I just wanted to point out that distutils' `StrictVersion()` function expects a version-string; [that matches a specific pattern](https://epydoc.sourceforge.net/stdlib/distutils.version.StrictVersion-class.html), which '3.1.1.1' doesn't. ; Also the use of [distutils has been deprecated](https://peps.python.org/pep-0632/) for a while now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778:99,Deployability,install,installing,99,"Thanks @nbehrnd, I was able to fix my own issues by applying the patch that I included. I was (re-)installing OpenBabel into an environment module for the Canadian High Performance Computing infrastructure (Digital Research Alliance of Canada, formerly Compute Canada). Anaconda doesn't play well with our system and while our users often use virtual environments to install Python wheels that we provide, for simple Python-bindings to C/C++ libraries, we like to install them into environment module with the library/application itself. I just wanted to point out that distutils' `StrictVersion()` function expects a version-string; [that matches a specific pattern](https://epydoc.sourceforge.net/stdlib/distutils.version.StrictVersion-class.html), which '3.1.1.1' doesn't. ; Also the use of [distutils has been deprecated](https://peps.python.org/pep-0632/) for a while now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778:367,Deployability,install,install,367,"Thanks @nbehrnd, I was able to fix my own issues by applying the patch that I included. I was (re-)installing OpenBabel into an environment module for the Canadian High Performance Computing infrastructure (Digital Research Alliance of Canada, formerly Compute Canada). Anaconda doesn't play well with our system and while our users often use virtual environments to install Python wheels that we provide, for simple Python-bindings to C/C++ libraries, we like to install them into environment module with the library/application itself. I just wanted to point out that distutils' `StrictVersion()` function expects a version-string; [that matches a specific pattern](https://epydoc.sourceforge.net/stdlib/distutils.version.StrictVersion-class.html), which '3.1.1.1' doesn't. ; Also the use of [distutils has been deprecated](https://peps.python.org/pep-0632/) for a while now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778:464,Deployability,install,install,464,"Thanks @nbehrnd, I was able to fix my own issues by applying the patch that I included. I was (re-)installing OpenBabel into an environment module for the Canadian High Performance Computing infrastructure (Digital Research Alliance of Canada, formerly Compute Canada). Anaconda doesn't play well with our system and while our users often use virtual environments to install Python wheels that we provide, for simple Python-bindings to C/C++ libraries, we like to install them into environment module with the library/application itself. I just wanted to point out that distutils' `StrictVersion()` function expects a version-string; [that matches a specific pattern](https://epydoc.sourceforge.net/stdlib/distutils.version.StrictVersion-class.html), which '3.1.1.1' doesn't. ; Also the use of [distutils has been deprecated](https://peps.python.org/pep-0632/) for a while now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778:169,Performance,Perform,Performance,169,"Thanks @nbehrnd, I was able to fix my own issues by applying the patch that I included. I was (re-)installing OpenBabel into an environment module for the Canadian High Performance Computing infrastructure (Digital Research Alliance of Canada, formerly Compute Canada). Anaconda doesn't play well with our system and while our users often use virtual environments to install Python wheels that we provide, for simple Python-bindings to C/C++ libraries, we like to install them into environment module with the library/application itself. I just wanted to point out that distutils' `StrictVersion()` function expects a version-string; [that matches a specific pattern](https://epydoc.sourceforge.net/stdlib/distutils.version.StrictVersion-class.html), which '3.1.1.1' doesn't. ; Also the use of [distutils has been deprecated](https://peps.python.org/pep-0632/) for a while now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778:410,Usability,simpl,simple,410,"Thanks @nbehrnd, I was able to fix my own issues by applying the patch that I included. I was (re-)installing OpenBabel into an environment module for the Canadian High Performance Computing infrastructure (Digital Research Alliance of Canada, formerly Compute Canada). Anaconda doesn't play well with our system and while our users often use virtual environments to install Python wheels that we provide, for simple Python-bindings to C/C++ libraries, we like to install them into environment module with the library/application itself. I just wanted to point out that distutils' `StrictVersion()` function expects a version-string; [that matches a specific pattern](https://epydoc.sourceforge.net/stdlib/distutils.version.StrictVersion-class.html), which '3.1.1.1' doesn't. ; Also the use of [distutils has been deprecated](https://peps.python.org/pep-0632/) for a while now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743:48,Availability,error,error,48,In my case it is just `swig` not installed. The error log is good at misleading the user to find out the root cause. It would be better to print the original error to the console instead of `Error: SWIG failed. Is Open Babel installed?`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743:158,Availability,error,error,158,In my case it is just `swig` not installed. The error log is good at misleading the user to find out the root cause. It would be better to print the original error to the console instead of `Error: SWIG failed. Is Open Babel installed?`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743:191,Availability,Error,Error,191,In my case it is just `swig` not installed. The error log is good at misleading the user to find out the root cause. It would be better to print the original error to the console instead of `Error: SWIG failed. Is Open Babel installed?`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743:33,Deployability,install,installed,33,In my case it is just `swig` not installed. The error log is good at misleading the user to find out the root cause. It would be better to print the original error to the console instead of `Error: SWIG failed. Is Open Babel installed?`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743:225,Deployability,install,installed,225,In my case it is just `swig` not installed. The error log is good at misleading the user to find out the root cause. It would be better to print the original error to the console instead of `Error: SWIG failed. Is Open Babel installed?`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743
https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743:54,Testability,log,log,54,In my case it is just `swig` not installed. The error log is good at misleading the user to find out the root cause. It would be better to print the original error to the console instead of `Error: SWIG failed. Is Open Babel installed?`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743
https://github.com/openbabel/openbabel/issues/2409#issuecomment-915940142:364,Modifiability,variab,variable,364,"Hello,. When you run the code on windows you get warnings that you cannot open the file space-groups.txt; This is due to conda openbabel not being able to find the datafile folder properly on Windows. The easiest workaround is to set it manually via set BABEL_DATADIR=\path\to\condaenv\share\openbabel before running the code, or set the corresponding environment variable in another way. But it should be fixed in the conda-package in the end...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2409#issuecomment-915940142
https://github.com/openbabel/openbabel/issues/2409#issuecomment-920725963:127,Deployability,update,update,127,Just a follow-up. This issue is taken care of by https://github.com/conda-forge/openbabel-feedstock/pull/22. If you run `conda update -c conda-forge openbabel` and make sure you get a version of `3.1.1-py39hfc62d72_2` or later the BABEL_DATADIR is set automatically on activation of the conda environment.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2409#issuecomment-920725963
https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796:550,Energy Efficiency,charge,charged,550,"> If I grab a PDB file from RCSB, there are no explicit hydrogens:. It depends how the structure was generated. If it was determined with crystallography, there won't be any hydrogens because they can't be resolved from the electron density. If it's an NMR structure, it probably will include hydrogens. > How about this heuristic.. if the PDB file already has hydrogens, the default should be to assume all hydrogens are explicit?. That seems reasonable. Adding hydrogens to proteins needs to be done very carefully though. A lot of side chains are charged, so you don't want to just automatically fill in a hydrogen everywhere one could possibly go. And of course it depends on pH. Even if you assume you're only interested in pH 7, there still can be ambiguity. HIS has two forms that are equally common at pH 7, with the hydrogen on either ND1 or NE2. If one of the two is able to form a hydrogen bond, that stabilizes it, so you want to look at potential bonding partners to select which is more likely. In the example above, the file already has a hydrogen on CE1, and it adds a second one. That doesn't match any common form at any pH. So I guess there are three parts to the solution. 1. Provide an option for whether to add hydrogens.; 2. The default value for that option should depend on whether the file already has any hydrogens.; 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796
https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796:71,Integrability,depend,depends,71,"> If I grab a PDB file from RCSB, there are no explicit hydrogens:. It depends how the structure was generated. If it was determined with crystallography, there won't be any hydrogens because they can't be resolved from the electron density. If it's an NMR structure, it probably will include hydrogens. > How about this heuristic.. if the PDB file already has hydrogens, the default should be to assume all hydrogens are explicit?. That seems reasonable. Adding hydrogens to proteins needs to be done very carefully though. A lot of side chains are charged, so you don't want to just automatically fill in a hydrogen everywhere one could possibly go. And of course it depends on pH. Even if you assume you're only interested in pH 7, there still can be ambiguity. HIS has two forms that are equally common at pH 7, with the hydrogen on either ND1 or NE2. If one of the two is able to form a hydrogen bond, that stabilizes it, so you want to look at potential bonding partners to select which is more likely. In the example above, the file already has a hydrogen on CE1, and it adds a second one. That doesn't match any common form at any pH. So I guess there are three parts to the solution. 1. Provide an option for whether to add hydrogens.; 2. The default value for that option should depend on whether the file already has any hydrogens.; 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796
https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796:669,Integrability,depend,depends,669,"> If I grab a PDB file from RCSB, there are no explicit hydrogens:. It depends how the structure was generated. If it was determined with crystallography, there won't be any hydrogens because they can't be resolved from the electron density. If it's an NMR structure, it probably will include hydrogens. > How about this heuristic.. if the PDB file already has hydrogens, the default should be to assume all hydrogens are explicit?. That seems reasonable. Adding hydrogens to proteins needs to be done very carefully though. A lot of side chains are charged, so you don't want to just automatically fill in a hydrogen everywhere one could possibly go. And of course it depends on pH. Even if you assume you're only interested in pH 7, there still can be ambiguity. HIS has two forms that are equally common at pH 7, with the hydrogen on either ND1 or NE2. If one of the two is able to form a hydrogen bond, that stabilizes it, so you want to look at potential bonding partners to select which is more likely. In the example above, the file already has a hydrogen on CE1, and it adds a second one. That doesn't match any common form at any pH. So I guess there are three parts to the solution. 1. Provide an option for whether to add hydrogens.; 2. The default value for that option should depend on whether the file already has any hydrogens.; 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796
https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796:1289,Integrability,depend,depend,1289,"> If I grab a PDB file from RCSB, there are no explicit hydrogens:. It depends how the structure was generated. If it was determined with crystallography, there won't be any hydrogens because they can't be resolved from the electron density. If it's an NMR structure, it probably will include hydrogens. > How about this heuristic.. if the PDB file already has hydrogens, the default should be to assume all hydrogens are explicit?. That seems reasonable. Adding hydrogens to proteins needs to be done very carefully though. A lot of side chains are charged, so you don't want to just automatically fill in a hydrogen everywhere one could possibly go. And of course it depends on pH. Even if you assume you're only interested in pH 7, there still can be ambiguity. HIS has two forms that are equally common at pH 7, with the hydrogen on either ND1 or NE2. If one of the two is able to form a hydrogen bond, that stabilizes it, so you want to look at potential bonding partners to select which is more likely. In the example above, the file already has a hydrogen on CE1, and it adds a second one. That doesn't match any common form at any pH. So I guess there are three parts to the solution. 1. Provide an option for whether to add hydrogens.; 2. The default value for that option should depend on whether the file already has any hydrogens.; 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796
https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796:1357,Testability,log,logic,1357,"> If I grab a PDB file from RCSB, there are no explicit hydrogens:. It depends how the structure was generated. If it was determined with crystallography, there won't be any hydrogens because they can't be resolved from the electron density. If it's an NMR structure, it probably will include hydrogens. > How about this heuristic.. if the PDB file already has hydrogens, the default should be to assume all hydrogens are explicit?. That seems reasonable. Adding hydrogens to proteins needs to be done very carefully though. A lot of side chains are charged, so you don't want to just automatically fill in a hydrogen everywhere one could possibly go. And of course it depends on pH. Even if you assume you're only interested in pH 7, there still can be ambiguity. HIS has two forms that are equally common at pH 7, with the hydrogen on either ND1 or NE2. If one of the two is able to form a hydrogen bond, that stabilizes it, so you want to look at potential bonding partners to select which is more likely. In the example above, the file already has a hydrogen on CE1, and it adds a second one. That doesn't match any common form at any pH. So I guess there are three parts to the solution. 1. Provide an option for whether to add hydrogens.; 2. The default value for that option should depend on whether the file already has any hydrogens.; 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796
https://github.com/openbabel/openbabel/issues/2411#issuecomment-922539310:356,Availability,down,downloads,356,"Okay, sounds like the heuristic will help here. > 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures. I'll certainly take a look - there's probably also:. 4. Check the residue => bond order templates, which are ancient. I coded up something for Avogadro that downloads the LigandExpo SD files. I noticed that the Open Babel [`resdata.txt`](https://github.com/openbabel/openbabel/blob/master/data/resdata.txt) has some non-standard residues (presumably from MD simulations):; - ARZ (not the ARZ in Ligand Expo); - ASH (ditto); - CYX (looks like a modified CYS); - GLZ; - HED (But the OB resdata has double bonds for some reason - LigandExpo gives OH groups) ; - HID (some form of HIS); - HIE (ditto); - HIP (ditto); - LYZ (but this isn't 5-hydroxylysine, since only one OH); - PSE (somehow an amino acid); - PSM (also); - PTM; - PTY (similar to PTM). So while I have you here... are any of these commonly used in modern MD programs? If so, can you point me to some PDB or SD files with the authoritative atom names and bond orders?. If a residue name matches the template (e.g., ALA or HIS), bond orders will be assigned from `resdata.txt` for example for HIS:; ```; BOND NE2 CE1 2; BOND CE1 ND1 1; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-922539310
https://github.com/openbabel/openbabel/issues/2411#issuecomment-922539310:63,Testability,log,logic,63,"Okay, sounds like the heuristic will help here. > 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures. I'll certainly take a look - there's probably also:. 4. Check the residue => bond order templates, which are ancient. I coded up something for Avogadro that downloads the LigandExpo SD files. I noticed that the Open Babel [`resdata.txt`](https://github.com/openbabel/openbabel/blob/master/data/resdata.txt) has some non-standard residues (presumably from MD simulations):; - ARZ (not the ARZ in Ligand Expo); - ASH (ditto); - CYX (looks like a modified CYS); - GLZ; - HED (But the OB resdata has double bonds for some reason - LigandExpo gives OH groups) ; - HID (some form of HIS); - HIE (ditto); - HIP (ditto); - LYZ (but this isn't 5-hydroxylysine, since only one OH); - PSE (somehow an amino acid); - PSM (also); - PTM; - PTY (similar to PTM). So while I have you here... are any of these commonly used in modern MD programs? If so, can you point me to some PDB or SD files with the authoritative atom names and bond orders?. If a residue name matches the template (e.g., ALA or HIS), bond orders will be assigned from `resdata.txt` for example for HIS:; ```; BOND NE2 CE1 2; BOND CE1 ND1 1; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-922539310
https://github.com/openbabel/openbabel/issues/2411#issuecomment-924406471:193,Availability,down,download,193,"Some of those names look like the ones used by Amber for protonation variants. For example, HID, HIE, and HIP are respectively the versions of HIS with a hydrogen on ND1, NE2, and both. If you download AmberTools and look in the file amino12.in, you'll find how it defines them. Unfortunately, it's an Amber-specific file format, not anything standard. (The documentation for it is at http://ambermd.org/doc/prep.html.) It's easy to extract the atom names, but I don't think it contains any information about bond order. Not all of those names are used by Amber though. I don't know where the others come from.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-924406471
https://github.com/openbabel/openbabel/issues/2412#issuecomment-946977857:57,Deployability,install,installation,57,"I'm not sure how you want us to handle different package installation tools. Not everyone uses Homebrew. Some use conda, miniconda, etc.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-946977857
https://github.com/openbabel/openbabel/issues/2412#issuecomment-974785380:23,Deployability,install,install,23,"The recommended way to install Open Babel and it's Python bindings is to use the same tool for both parts, whether conda, brew or compile/install yourself (what I do). If Brew or conda uses one version of g++, and poetry/pip uses another, then it's not going to work out.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-974785380
https://github.com/openbabel/openbabel/issues/2412#issuecomment-974785380:138,Deployability,install,install,138,"The recommended way to install Open Babel and it's Python bindings is to use the same tool for both parts, whether conda, brew or compile/install yourself (what I do). If Brew or conda uses one version of g++, and poetry/pip uses another, then it's not going to work out.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-974785380
https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:362,Availability,error,error,362,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572
https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:1081,Availability,Error,Error,1081,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572
https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:270,Deployability,update,update,270,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572
https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:286,Deployability,install,install,286,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572
https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:315,Deployability,install,install,315,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572
https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:1115,Deployability,install,installed,1115,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572
https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:1326,Deployability,install,install,1326,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572
https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:545,Performance,cache,cache,545,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572
https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:898,Performance,cache,cache,898,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572
https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:153,Usability,simpl,simple,153,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572
https://github.com/openbabel/openbabel/issues/2413#issuecomment-923155520:119,Performance,Cache,Caches,119,You're either not linking to the right `libopenbabel` from your compile. What does `otool -L /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so` report?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-923155520
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791:430,Availability,avail,available,430,"One solution is to add the global `site-packages` path to your `PYTHONPATH` before starting your `python` interpreter. E.g. `export PYTHONPATH=/usr/local/lib/python3.9/site-packages:$PYTHONPATH`. [See note here in official docs.](https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings). To my knowledge, there is no clean way to install openbabel to a virtual `env` with the current tools available (`brew` and `pip`). Any suggestions for how we could support this? It appears the package is meant to be installed globally, but not as a project dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791:274,Deployability,Install,Installation,274,"One solution is to add the global `site-packages` path to your `PYTHONPATH` before starting your `python` interpreter. E.g. `export PYTHONPATH=/usr/local/lib/python3.9/site-packages:$PYTHONPATH`. [See note here in official docs.](https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings). To my knowledge, there is no clean way to install openbabel to a virtual `env` with the current tools available (`brew` and `pip`). Any suggestions for how we could support this? It appears the package is meant to be installed globally, but not as a project dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791:287,Deployability,install,install,287,"One solution is to add the global `site-packages` path to your `PYTHONPATH` before starting your `python` interpreter. E.g. `export PYTHONPATH=/usr/local/lib/python3.9/site-packages:$PYTHONPATH`. [See note here in official docs.](https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings). To my knowledge, there is no clean way to install openbabel to a virtual `env` with the current tools available (`brew` and `pip`). Any suggestions for how we could support this? It appears the package is meant to be installed globally, but not as a project dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791:370,Deployability,install,install,370,"One solution is to add the global `site-packages` path to your `PYTHONPATH` before starting your `python` interpreter. E.g. `export PYTHONPATH=/usr/local/lib/python3.9/site-packages:$PYTHONPATH`. [See note here in official docs.](https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings). To my knowledge, there is no clean way to install openbabel to a virtual `env` with the current tools available (`brew` and `pip`). Any suggestions for how we could support this? It appears the package is meant to be installed globally, but not as a project dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791:545,Deployability,install,installed,545,"One solution is to add the global `site-packages` path to your `PYTHONPATH` before starting your `python` interpreter. E.g. `export PYTHONPATH=/usr/local/lib/python3.9/site-packages:$PYTHONPATH`. [See note here in official docs.](https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings). To my knowledge, there is no clean way to install openbabel to a virtual `env` with the current tools available (`brew` and `pip`). Any suggestions for how we could support this? It appears the package is meant to be installed globally, but not as a project dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791:586,Integrability,depend,dependency,586,"One solution is to add the global `site-packages` path to your `PYTHONPATH` before starting your `python` interpreter. E.g. `export PYTHONPATH=/usr/local/lib/python3.9/site-packages:$PYTHONPATH`. [See note here in official docs.](https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings). To my knowledge, there is no clean way to install openbabel to a virtual `env` with the current tools available (`brew` and `pip`). Any suggestions for how we could support this? It appears the package is meant to be installed globally, but not as a project dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1107972791
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1177155394:191,Deployability,install,installation,191,"I can confirm that @seanharr11's solution fixes the problem for me! :). Another way that seems to work is to use a symlink from the `site-packages` directory of your virtualenv to the global installation, i.e., something like this:; ```; ln -s /usr/local/lib/python3.9/site-packages/openbabel ~/.virtualenvs/<name>/lib/python3.9/site-packages/openbabel; ```; That way, I can't forget to add the package to the `PYTHONPATH`, and I don't need to add the `export` command to my `.zshrc`, where it would affect _all_ virtualenvs that I am working with (even the ones where I don't need openbabel).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1177155394
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:616,Availability,error,errors,616,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:1369,Availability,error,errors,1369,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:32,Deployability,install,installed,32,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:64,Deployability,install,install,64,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:106,Deployability,install,install,106,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:134,Deployability,install,install,134,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:182,Deployability,install,install,182,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:152,Integrability,depend,dependencies,152,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:1291,Usability,simpl,simply,1291,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1456025315:48,Deployability,install,install,48,"Hello,. It seems from your description that you install OpenBabel twice, in different ways. That will most likely lead to a bunch of problems. If you install openbabel via Conda you shouldn't need to install it again via pip. So remove your conda environment and retry without the pip step.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1456025315
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1456025315:150,Deployability,install,install,150,"Hello,. It seems from your description that you install OpenBabel twice, in different ways. That will most likely lead to a bunch of problems. If you install openbabel via Conda you shouldn't need to install it again via pip. So remove your conda environment and retry without the pip step.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1456025315
https://github.com/openbabel/openbabel/issues/2413#issuecomment-1456025315:200,Deployability,install,install,200,"Hello,. It seems from your description that you install OpenBabel twice, in different ways. That will most likely lead to a bunch of problems. If you install openbabel via Conda you shouldn't need to install it again via pip. So remove your conda environment and retry without the pip step.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1456025315
https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203:1356,Availability,mask,masks,1356,"OpenBabel possibly wonders why you submit a tetragonal unit cell (*a* .eq. *b* .ne. *c*, \alpha .eq. \beta .eq. \gamma .eq. 90 degrees) on one hand, and indicate the lowest of 230 space group symmetries possible, *P1* (monoclinic primitive, *a* .ne. *b* .ne. *c*, \alpha .ne. \beta .ne. \gamma .ne. 90 degrees). Experimental evidence (e.g., a Kurtz-Perry SHG test in contrast to a previously assigned space group symmetry) may justify to lower the space group symmetry. On occasion (conditions of crystal growth, experimental setup, etc.), deviations from high(er) symmetry do not express strongly enough to be recognized recording the diffraction data/refining crystallographic model *alone*, maybe especially in today's age of automated routine crystallography. Crystallographers however are grateful to know about the outcome of such experiments in advance, and to subsequently check multiple different crystallographic models accordingly (e.g., Hamilton *R*-factor ratio test). Obviously, it is not good to describe all structures in *P1*, either. You may find at least one *similar* model of tetragonal space group symmetry in the [COD](http://www.crystallography.net/cod/index.php) (e.g., entry [9000071](http://www.crystallography.net/cod/9000071.html)) without doubled *c* axis, too. Depending on the question addressed to the database, the search masks by [COD](http://www.crystallography.net/cod/search.html) and by Volodymyr Vreshch on [crystallography.io](https://crystallography.io/) partially overlap and complement each other. More similar to a plausible original .cif than entry COD 9000071:; https://www.crystallography.net/cod/1548819.html; https://www.crystallography.net/cod/4336391.html; https://www.crystallography.net/cod/1537412.html; https://www.crystallography.net/cod/1539951.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203
https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203:739,Integrability,rout,routine,739,"OpenBabel possibly wonders why you submit a tetragonal unit cell (*a* .eq. *b* .ne. *c*, \alpha .eq. \beta .eq. \gamma .eq. 90 degrees) on one hand, and indicate the lowest of 230 space group symmetries possible, *P1* (monoclinic primitive, *a* .ne. *b* .ne. *c*, \alpha .ne. \beta .ne. \gamma .ne. 90 degrees). Experimental evidence (e.g., a Kurtz-Perry SHG test in contrast to a previously assigned space group symmetry) may justify to lower the space group symmetry. On occasion (conditions of crystal growth, experimental setup, etc.), deviations from high(er) symmetry do not express strongly enough to be recognized recording the diffraction data/refining crystallographic model *alone*, maybe especially in today's age of automated routine crystallography. Crystallographers however are grateful to know about the outcome of such experiments in advance, and to subsequently check multiple different crystallographic models accordingly (e.g., Hamilton *R*-factor ratio test). Obviously, it is not good to describe all structures in *P1*, either. You may find at least one *similar* model of tetragonal space group symmetry in the [COD](http://www.crystallography.net/cod/index.php) (e.g., entry [9000071](http://www.crystallography.net/cod/9000071.html)) without doubled *c* axis, too. Depending on the question addressed to the database, the search masks by [COD](http://www.crystallography.net/cod/search.html) and by Volodymyr Vreshch on [crystallography.io](https://crystallography.io/) partially overlap and complement each other. More similar to a plausible original .cif than entry COD 9000071:; https://www.crystallography.net/cod/1548819.html; https://www.crystallography.net/cod/4336391.html; https://www.crystallography.net/cod/1537412.html; https://www.crystallography.net/cod/1539951.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203
https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203:1292,Integrability,Depend,Depending,1292,"OpenBabel possibly wonders why you submit a tetragonal unit cell (*a* .eq. *b* .ne. *c*, \alpha .eq. \beta .eq. \gamma .eq. 90 degrees) on one hand, and indicate the lowest of 230 space group symmetries possible, *P1* (monoclinic primitive, *a* .ne. *b* .ne. *c*, \alpha .ne. \beta .ne. \gamma .ne. 90 degrees). Experimental evidence (e.g., a Kurtz-Perry SHG test in contrast to a previously assigned space group symmetry) may justify to lower the space group symmetry. On occasion (conditions of crystal growth, experimental setup, etc.), deviations from high(er) symmetry do not express strongly enough to be recognized recording the diffraction data/refining crystallographic model *alone*, maybe especially in today's age of automated routine crystallography. Crystallographers however are grateful to know about the outcome of such experiments in advance, and to subsequently check multiple different crystallographic models accordingly (e.g., Hamilton *R*-factor ratio test). Obviously, it is not good to describe all structures in *P1*, either. You may find at least one *similar* model of tetragonal space group symmetry in the [COD](http://www.crystallography.net/cod/index.php) (e.g., entry [9000071](http://www.crystallography.net/cod/9000071.html)) without doubled *c* axis, too. Depending on the question addressed to the database, the search masks by [COD](http://www.crystallography.net/cod/search.html) and by Volodymyr Vreshch on [crystallography.io](https://crystallography.io/) partially overlap and complement each other. More similar to a plausible original .cif than entry COD 9000071:; https://www.crystallography.net/cod/1548819.html; https://www.crystallography.net/cod/4336391.html; https://www.crystallography.net/cod/1537412.html; https://www.crystallography.net/cod/1539951.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203
https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203:359,Testability,test,test,359,"OpenBabel possibly wonders why you submit a tetragonal unit cell (*a* .eq. *b* .ne. *c*, \alpha .eq. \beta .eq. \gamma .eq. 90 degrees) on one hand, and indicate the lowest of 230 space group symmetries possible, *P1* (monoclinic primitive, *a* .ne. *b* .ne. *c*, \alpha .ne. \beta .ne. \gamma .ne. 90 degrees). Experimental evidence (e.g., a Kurtz-Perry SHG test in contrast to a previously assigned space group symmetry) may justify to lower the space group symmetry. On occasion (conditions of crystal growth, experimental setup, etc.), deviations from high(er) symmetry do not express strongly enough to be recognized recording the diffraction data/refining crystallographic model *alone*, maybe especially in today's age of automated routine crystallography. Crystallographers however are grateful to know about the outcome of such experiments in advance, and to subsequently check multiple different crystallographic models accordingly (e.g., Hamilton *R*-factor ratio test). Obviously, it is not good to describe all structures in *P1*, either. You may find at least one *similar* model of tetragonal space group symmetry in the [COD](http://www.crystallography.net/cod/index.php) (e.g., entry [9000071](http://www.crystallography.net/cod/9000071.html)) without doubled *c* axis, too. Depending on the question addressed to the database, the search masks by [COD](http://www.crystallography.net/cod/search.html) and by Volodymyr Vreshch on [crystallography.io](https://crystallography.io/) partially overlap and complement each other. More similar to a plausible original .cif than entry COD 9000071:; https://www.crystallography.net/cod/1548819.html; https://www.crystallography.net/cod/4336391.html; https://www.crystallography.net/cod/1537412.html; https://www.crystallography.net/cod/1539951.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203
https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203:975,Testability,test,test,975,"OpenBabel possibly wonders why you submit a tetragonal unit cell (*a* .eq. *b* .ne. *c*, \alpha .eq. \beta .eq. \gamma .eq. 90 degrees) on one hand, and indicate the lowest of 230 space group symmetries possible, *P1* (monoclinic primitive, *a* .ne. *b* .ne. *c*, \alpha .ne. \beta .ne. \gamma .ne. 90 degrees). Experimental evidence (e.g., a Kurtz-Perry SHG test in contrast to a previously assigned space group symmetry) may justify to lower the space group symmetry. On occasion (conditions of crystal growth, experimental setup, etc.), deviations from high(er) symmetry do not express strongly enough to be recognized recording the diffraction data/refining crystallographic model *alone*, maybe especially in today's age of automated routine crystallography. Crystallographers however are grateful to know about the outcome of such experiments in advance, and to subsequently check multiple different crystallographic models accordingly (e.g., Hamilton *R*-factor ratio test). Obviously, it is not good to describe all structures in *P1*, either. You may find at least one *similar* model of tetragonal space group symmetry in the [COD](http://www.crystallography.net/cod/index.php) (e.g., entry [9000071](http://www.crystallography.net/cod/9000071.html)) without doubled *c* axis, too. Depending on the question addressed to the database, the search masks by [COD](http://www.crystallography.net/cod/search.html) and by Volodymyr Vreshch on [crystallography.io](https://crystallography.io/) partially overlap and complement each other. More similar to a plausible original .cif than entry COD 9000071:; https://www.crystallography.net/cod/1548819.html; https://www.crystallography.net/cod/4336391.html; https://www.crystallography.net/cod/1537412.html; https://www.crystallography.net/cod/1539951.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203
https://github.com/openbabel/openbabel/issues/2414#issuecomment-940777514:155,Security,access,access,155,"I'm not sure if I understood well enough your aim to double the cell and thus come back to you here. It seems possible your aim is 1) to use a the .cif to access the unit cell as such, subsequently 2) to replicate this parallelepiped by translation in one/in multiple directions, and 3) to use these additional atom coordinates of this slab/super cell built elsewhere. And that these manipulations should retain the information of the unit cell (the lattice vectors, etc.). In case this assumption is correct and indeed meets your needs, I would read the «good .cif file» in question e.g., with CCDC's Mercury, and use its option calculate -> packing slicing and use one of the four options to define the inclusion of the atoms, followed by either a) one of the presets (like a 2 x 2 x 2 supercell), or a manual dial along a, b, and c to increase the representation. Starting from yesterday's file 9000071.cif, and opting for an increase to a 2 x 2 x 2 super cell, the new set of data may be exported either as .cif (9000071_222.cif), or as .xyz (9000071_222.xyz). Processing *this* super cell .cif with OpenBabel by. ```bash; obabel -icif 9000071_222.cif -oxyz -O 9000071_222_xyz_by_obabel.xyz; ```; does not report problems back to the CLI. Other than a different formatting tables in the .xyz written and a different number of decimals past the full stop, this OpenBabel generated .xyz does not seem to differ from the one exported by Mercury. For documentation, I attach archive supercell.zip below. [supercell.zip](https://github.com/openbabel/openbabel/files/7328150/supercell.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-940777514
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:1195,Availability,error,error,1195,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:1532,Availability,down,download,1532,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:1770,Availability,robust,robust,1770,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:205,Modifiability,plugin,plugin,205,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:824,Modifiability,variab,variable,824,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:1650,Safety,avoid,avoid,1650,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:1633,Usability,simpl,simply,1633,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331:138,Availability,avail,available,138,"It is true, CCDC's Mercury is one of the corner stones of their CSD database product. However, there is a *community edition* of this GUI available (at least version 2020.3.0 I got in April 2021 for Linux). This lacks the database and many of the functions are disabled ([comparison](https://www.ccdc.cam.ac.uk/Community/blog/the-difference-between-free-Mercury-and-full-licence-Mercury/)), without no cost to you. The arrangement of 2 x 2 x 2 unit cells next to each other and their subsequent export this as .cif and .xyz was achieved with this free Mercury version, too. This kind of packing always was part of the freely available versions of Mercury so one of the [legacy versions](https://www.ccdc.cam.ac.uk/support-and-resources/downloads?Legacy=True) is good enough for this type of work if the legacy button was clicked:. ![community](https://user-images.githubusercontent.com/19709084/137188118-edf62abe-0b82-4297-8f31-93e2344d6ef2.png). The older the Mercury, the less of libraries are installed (regardless if eventually be useable by a license, or not) and less resource hungry because they started to pack it with PovRay for image rendering, a minimal Python + some larger Python libraries for visualization one would use when accessing the CSD database via the Python API. The registration into the CCDC site does not cost you money, only offers you some notifications about continuous update of the database and webinars you may join for free; all at a moderate to low frequency of e-mails (1-4 emails per month). But it could be worth to address the question about building these slabs programmatically, without Mercury, on [https://mattermodeling.stackexchange.com/](https://mattermodeling.stackexchange.com/), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331:625,Availability,avail,available,625,"It is true, CCDC's Mercury is one of the corner stones of their CSD database product. However, there is a *community edition* of this GUI available (at least version 2020.3.0 I got in April 2021 for Linux). This lacks the database and many of the functions are disabled ([comparison](https://www.ccdc.cam.ac.uk/Community/blog/the-difference-between-free-Mercury-and-full-licence-Mercury/)), without no cost to you. The arrangement of 2 x 2 x 2 unit cells next to each other and their subsequent export this as .cif and .xyz was achieved with this free Mercury version, too. This kind of packing always was part of the freely available versions of Mercury so one of the [legacy versions](https://www.ccdc.cam.ac.uk/support-and-resources/downloads?Legacy=True) is good enough for this type of work if the legacy button was clicked:. ![community](https://user-images.githubusercontent.com/19709084/137188118-edf62abe-0b82-4297-8f31-93e2344d6ef2.png). The older the Mercury, the less of libraries are installed (regardless if eventually be useable by a license, or not) and less resource hungry because they started to pack it with PovRay for image rendering, a minimal Python + some larger Python libraries for visualization one would use when accessing the CSD database via the Python API. The registration into the CCDC site does not cost you money, only offers you some notifications about continuous update of the database and webinars you may join for free; all at a moderate to low frequency of e-mails (1-4 emails per month). But it could be worth to address the question about building these slabs programmatically, without Mercury, on [https://mattermodeling.stackexchange.com/](https://mattermodeling.stackexchange.com/), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331:736,Availability,down,downloads,736,"It is true, CCDC's Mercury is one of the corner stones of their CSD database product. However, there is a *community edition* of this GUI available (at least version 2020.3.0 I got in April 2021 for Linux). This lacks the database and many of the functions are disabled ([comparison](https://www.ccdc.cam.ac.uk/Community/blog/the-difference-between-free-Mercury-and-full-licence-Mercury/)), without no cost to you. The arrangement of 2 x 2 x 2 unit cells next to each other and their subsequent export this as .cif and .xyz was achieved with this free Mercury version, too. This kind of packing always was part of the freely available versions of Mercury so one of the [legacy versions](https://www.ccdc.cam.ac.uk/support-and-resources/downloads?Legacy=True) is good enough for this type of work if the legacy button was clicked:. ![community](https://user-images.githubusercontent.com/19709084/137188118-edf62abe-0b82-4297-8f31-93e2344d6ef2.png). The older the Mercury, the less of libraries are installed (regardless if eventually be useable by a license, or not) and less resource hungry because they started to pack it with PovRay for image rendering, a minimal Python + some larger Python libraries for visualization one would use when accessing the CSD database via the Python API. The registration into the CCDC site does not cost you money, only offers you some notifications about continuous update of the database and webinars you may join for free; all at a moderate to low frequency of e-mails (1-4 emails per month). But it could be worth to address the question about building these slabs programmatically, without Mercury, on [https://mattermodeling.stackexchange.com/](https://mattermodeling.stackexchange.com/), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331:997,Deployability,install,installed,997,"It is true, CCDC's Mercury is one of the corner stones of their CSD database product. However, there is a *community edition* of this GUI available (at least version 2020.3.0 I got in April 2021 for Linux). This lacks the database and many of the functions are disabled ([comparison](https://www.ccdc.cam.ac.uk/Community/blog/the-difference-between-free-Mercury-and-full-licence-Mercury/)), without no cost to you. The arrangement of 2 x 2 x 2 unit cells next to each other and their subsequent export this as .cif and .xyz was achieved with this free Mercury version, too. This kind of packing always was part of the freely available versions of Mercury so one of the [legacy versions](https://www.ccdc.cam.ac.uk/support-and-resources/downloads?Legacy=True) is good enough for this type of work if the legacy button was clicked:. ![community](https://user-images.githubusercontent.com/19709084/137188118-edf62abe-0b82-4297-8f31-93e2344d6ef2.png). The older the Mercury, the less of libraries are installed (regardless if eventually be useable by a license, or not) and less resource hungry because they started to pack it with PovRay for image rendering, a minimal Python + some larger Python libraries for visualization one would use when accessing the CSD database via the Python API. The registration into the CCDC site does not cost you money, only offers you some notifications about continuous update of the database and webinars you may join for free; all at a moderate to low frequency of e-mails (1-4 emails per month). But it could be worth to address the question about building these slabs programmatically, without Mercury, on [https://mattermodeling.stackexchange.com/](https://mattermodeling.stackexchange.com/), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331:1390,Deployability,continuous,continuous,1390,"It is true, CCDC's Mercury is one of the corner stones of their CSD database product. However, there is a *community edition* of this GUI available (at least version 2020.3.0 I got in April 2021 for Linux). This lacks the database and many of the functions are disabled ([comparison](https://www.ccdc.cam.ac.uk/Community/blog/the-difference-between-free-Mercury-and-full-licence-Mercury/)), without no cost to you. The arrangement of 2 x 2 x 2 unit cells next to each other and their subsequent export this as .cif and .xyz was achieved with this free Mercury version, too. This kind of packing always was part of the freely available versions of Mercury so one of the [legacy versions](https://www.ccdc.cam.ac.uk/support-and-resources/downloads?Legacy=True) is good enough for this type of work if the legacy button was clicked:. ![community](https://user-images.githubusercontent.com/19709084/137188118-edf62abe-0b82-4297-8f31-93e2344d6ef2.png). The older the Mercury, the less of libraries are installed (regardless if eventually be useable by a license, or not) and less resource hungry because they started to pack it with PovRay for image rendering, a minimal Python + some larger Python libraries for visualization one would use when accessing the CSD database via the Python API. The registration into the CCDC site does not cost you money, only offers you some notifications about continuous update of the database and webinars you may join for free; all at a moderate to low frequency of e-mails (1-4 emails per month). But it could be worth to address the question about building these slabs programmatically, without Mercury, on [https://mattermodeling.stackexchange.com/](https://mattermodeling.stackexchange.com/), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331:1401,Deployability,update,update,1401,"It is true, CCDC's Mercury is one of the corner stones of their CSD database product. However, there is a *community edition* of this GUI available (at least version 2020.3.0 I got in April 2021 for Linux). This lacks the database and many of the functions are disabled ([comparison](https://www.ccdc.cam.ac.uk/Community/blog/the-difference-between-free-Mercury-and-full-licence-Mercury/)), without no cost to you. The arrangement of 2 x 2 x 2 unit cells next to each other and their subsequent export this as .cif and .xyz was achieved with this free Mercury version, too. This kind of packing always was part of the freely available versions of Mercury so one of the [legacy versions](https://www.ccdc.cam.ac.uk/support-and-resources/downloads?Legacy=True) is good enough for this type of work if the legacy button was clicked:. ![community](https://user-images.githubusercontent.com/19709084/137188118-edf62abe-0b82-4297-8f31-93e2344d6ef2.png). The older the Mercury, the less of libraries are installed (regardless if eventually be useable by a license, or not) and less resource hungry because they started to pack it with PovRay for image rendering, a minimal Python + some larger Python libraries for visualization one would use when accessing the CSD database via the Python API. The registration into the CCDC site does not cost you money, only offers you some notifications about continuous update of the database and webinars you may join for free; all at a moderate to low frequency of e-mails (1-4 emails per month). But it could be worth to address the question about building these slabs programmatically, without Mercury, on [https://mattermodeling.stackexchange.com/](https://mattermodeling.stackexchange.com/), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331
https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331:1241,Security,access,accessing,1241,"It is true, CCDC's Mercury is one of the corner stones of their CSD database product. However, there is a *community edition* of this GUI available (at least version 2020.3.0 I got in April 2021 for Linux). This lacks the database and many of the functions are disabled ([comparison](https://www.ccdc.cam.ac.uk/Community/blog/the-difference-between-free-Mercury-and-full-licence-Mercury/)), without no cost to you. The arrangement of 2 x 2 x 2 unit cells next to each other and their subsequent export this as .cif and .xyz was achieved with this free Mercury version, too. This kind of packing always was part of the freely available versions of Mercury so one of the [legacy versions](https://www.ccdc.cam.ac.uk/support-and-resources/downloads?Legacy=True) is good enough for this type of work if the legacy button was clicked:. ![community](https://user-images.githubusercontent.com/19709084/137188118-edf62abe-0b82-4297-8f31-93e2344d6ef2.png). The older the Mercury, the less of libraries are installed (regardless if eventually be useable by a license, or not) and less resource hungry because they started to pack it with PovRay for image rendering, a minimal Python + some larger Python libraries for visualization one would use when accessing the CSD database via the Python API. The registration into the CCDC site does not cost you money, only offers you some notifications about continuous update of the database and webinars you may join for free; all at a moderate to low frequency of e-mails (1-4 emails per month). But it could be worth to address the question about building these slabs programmatically, without Mercury, on [https://mattermodeling.stackexchange.com/](https://mattermodeling.stackexchange.com/), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331
https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422:542,Safety,safe,safe,542,"Besides this being clearly a bug in VESTA (at worst), I think I found a workaround. I discovered that if, after doubling the cell, I click in the menu VESTA -> Utilities -> Standardization of Crystal Data and I export the CIF file, then I don't find this problem.; VESTA seems to correctly remove the contradictory symmetry operations from the file. It is hard to understand what this action does but it seems to produce the correct structure and OpenBabel doesn't complain. ; The volume and cell seems to change a little bit but maybe it is safe.; http://jp-minerals.org/vesta/archives/VESTA_Manual.pdf#91. ![image](https://user-images.githubusercontent.com/3047763/138957727-d62c5162-9115-4dbb-a97a-79dafc5eed6a.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422
https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422:19,Usability,clear,clearly,19,"Besides this being clearly a bug in VESTA (at worst), I think I found a workaround. I discovered that if, after doubling the cell, I click in the menu VESTA -> Utilities -> Standardization of Crystal Data and I export the CIF file, then I don't find this problem.; VESTA seems to correctly remove the contradictory symmetry operations from the file. It is hard to understand what this action does but it seems to produce the correct structure and OpenBabel doesn't complain. ; The volume and cell seems to change a little bit but maybe it is safe.; http://jp-minerals.org/vesta/archives/VESTA_Manual.pdf#91. ![image](https://user-images.githubusercontent.com/3047763/138957727-d62c5162-9115-4dbb-a97a-79dafc5eed6a.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422
https://github.com/openbabel/openbabel/issues/2415#issuecomment-939526298:322,Testability,test,test,322,"It equally might be a question how bond order is (re)calculated and eventually visualized. From the colour scheme applied and the representation of single/double/aromatic bonds, it is possible you used a different molecule viewer than [Jmol](http://jmol.sourceforge.net/). Based on the reference file you mention, and the test conversion of the .sdf into a .mol2 (same instruction, OpenBabel 3.1.1 as provided by the repositories in Linux Debian 12/bookworm, branch testing), I submitted both files to . + the version provided via debichem/Debian's repository (a bit old, version 14.6.4 by 2016); + version 14.31.47 by June 2021, fetched from sourceforge. In both cases, the distinct representation of the keto-enol form shown in your representation of the .sdf is retained. ![comparison_new](https://user-images.githubusercontent.com/19709084/136707788-ff0ace1d-475b-4ac2-ae13-251085a08016.png). Reference data sets and the .png screen photos of the two tests are attached in the .zip below. [comparison.zip](https://github.com/openbabel/openbabel/files/7317947/comparison.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415#issuecomment-939526298
https://github.com/openbabel/openbabel/issues/2415#issuecomment-939526298:466,Testability,test,testing,466,"It equally might be a question how bond order is (re)calculated and eventually visualized. From the colour scheme applied and the representation of single/double/aromatic bonds, it is possible you used a different molecule viewer than [Jmol](http://jmol.sourceforge.net/). Based on the reference file you mention, and the test conversion of the .sdf into a .mol2 (same instruction, OpenBabel 3.1.1 as provided by the repositories in Linux Debian 12/bookworm, branch testing), I submitted both files to . + the version provided via debichem/Debian's repository (a bit old, version 14.6.4 by 2016); + version 14.31.47 by June 2021, fetched from sourceforge. In both cases, the distinct representation of the keto-enol form shown in your representation of the .sdf is retained. ![comparison_new](https://user-images.githubusercontent.com/19709084/136707788-ff0ace1d-475b-4ac2-ae13-251085a08016.png). Reference data sets and the .png screen photos of the two tests are attached in the .zip below. [comparison.zip](https://github.com/openbabel/openbabel/files/7317947/comparison.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415#issuecomment-939526298
https://github.com/openbabel/openbabel/issues/2415#issuecomment-939526298:955,Testability,test,tests,955,"It equally might be a question how bond order is (re)calculated and eventually visualized. From the colour scheme applied and the representation of single/double/aromatic bonds, it is possible you used a different molecule viewer than [Jmol](http://jmol.sourceforge.net/). Based on the reference file you mention, and the test conversion of the .sdf into a .mol2 (same instruction, OpenBabel 3.1.1 as provided by the repositories in Linux Debian 12/bookworm, branch testing), I submitted both files to . + the version provided via debichem/Debian's repository (a bit old, version 14.6.4 by 2016); + version 14.31.47 by June 2021, fetched from sourceforge. In both cases, the distinct representation of the keto-enol form shown in your representation of the .sdf is retained. ![comparison_new](https://user-images.githubusercontent.com/19709084/136707788-ff0ace1d-475b-4ac2-ae13-251085a08016.png). Reference data sets and the .png screen photos of the two tests are attached in the .zip below. [comparison.zip](https://github.com/openbabel/openbabel/files/7317947/comparison.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415#issuecomment-939526298
https://github.com/openbabel/openbabel/issues/2415#issuecomment-939540118:63,Availability,error,error,63,"As @nbehrnd has pointed out, I don't see this as an Open Babel error. The `mol2` format is supposed to indicate aromatic bonds. I haven't seen any formal definition of a `mol2 aromaticity model` but I'd certainly consider that an aromatic fragment. So then the question is how to depict the ring structure? Well, as @nbehrnd points out, it works fine in `jmol` and here's the depiction from Avogadro (which uses Open Babel under the hood). <img width=""502"" alt=""Screen Shot 2021-10-10 at 3 30 31 PM"" src=""https://user-images.githubusercontent.com/41128/136710545-93007ff6-618e-4a18-be22-6590e2eb3ef6.png"">. I'm closing this as ""not a bug"" in Open Babel.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415#issuecomment-939540118
https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699:27,Performance,tune,tune,27,"@RicardoMBorges In similar tune like @fredrikw , capitalization (or absence of such) may *implicitly* carry the number of of hydrogens present. E.g., `C1CCCCC1` to represent cyclohexane, `c1ccccc1` to represent benzene (lower case c, n, o, s represent aromatic systems). You may add the reasoning why you need explicit hydrogens in the SMILES string, or/and an example file where you think it would be useful. Because a benzene .cdxml generated from ChemDraw's [test page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) isn't necessarily rewritten by . ```bash; obabel -icdxml benzene.cdxml -osmi; ```; into `c1ccccc1` (example file attached in the .zip archive). [benzene.cdxml.zip](https://github.com/openbabel/openbabel/files/7328283/benzene.cdxml.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699
https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699:462,Testability,test,test,462,"@RicardoMBorges In similar tune like @fredrikw , capitalization (or absence of such) may *implicitly* carry the number of of hydrogens present. E.g., `C1CCCCC1` to represent cyclohexane, `c1ccccc1` to represent benzene (lower case c, n, o, s represent aromatic systems). You may add the reasoning why you need explicit hydrogens in the SMILES string, or/and an example file where you think it would be useful. Because a benzene .cdxml generated from ChemDraw's [test page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) isn't necessarily rewritten by . ```bash; obabel -icdxml benzene.cdxml -osmi; ```; into `c1ccccc1` (example file attached in the .zip archive). [benzene.cdxml.zip](https://github.com/openbabel/openbabel/files/7328283/benzene.cdxml.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699
https://github.com/openbabel/openbabel/issues/2416#issuecomment-940797557:246,Testability,test,testing,246,"@fredrikw Based on your comment, I run. ```bash; obabel -:'c1ccncc1' -osmi -h; obabel -:'c1ccncc1' -osmi -xh; obabel -:'c1ccncc1' -ocan -h; obabel -:'c1ccncc1' -ocan -xh; ```; with OpenBabel 3.1.1. as provided by Linux Debian 12/bookworm, branch testing. None of them added explicit hydrogens around the pyridine, nor a form like `C1=CN=CC=C1` e.g. said ChemDraw JS suggests as a plausible solution. Since ```obabel -:'c1ccncc1' -oxyz -h``` did add them (and ```obabel -:'c1ccncc1' -oxyz -xh``` did not), I probably misunderstand the manual (section 18.1.7). Or do I?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940797557
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394:344,Performance,Load,Load,344,"@RicardoMBorges Do you use ChemDraw to generate the initial `.cdxml`, .or. do you use an other program (e.g., Marvin, or JChem [for Excel]) to generate a `.cdxml` in first place? If so, which version?. If I copy-paste the .cdxml in ChemDraw's [JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) (*via* Structure -> Load CDXML), I obtain a drawing *which looks like* the structure was drawn & analyzed briefly. The JS page has no button to display the molcular sum formula, but the file obviously contains such:. ![CD_sample_page](https://user-images.githubusercontent.com/19709084/136968421-13609f9b-433f-4d2b-b9e3-97b27124cbd5.png). Subsequently, Stucture -> Get SMILES exports ```CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O```. which ; ```bash; obabel -:""CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O"" -ocan -h -xh; ```; replies with . ```bash; [H]C(=C(C(C(C(C1([H])OC(=O)C([H])([H])N([H])C(=O)C([H])(N([H])C(=O)C(OC(=O)C(N(C(=O)C1(C([H])([H])[H])C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])C(C(C([H])([H])[H])([H])[H])(C([H])([H])[H])[H])([H])[H])([H])[H])([H])[H])[H])[H]; ```. However, the conversion of your `.cdxml` into e.g., a `.png` by OpenBabel *suggests* that something at the level generating the former went wrong. The dots next to implicit carbon atoms normally are seen if the valences are not filled:. ![testat](https://user-images.githubusercontent.com/19709084/136969234-68c68243-8a3e-4b19-a85b-dbe4ce56549e.png). For me, a plausible reason why the (re)addition of hydrogens fails. PS: A convenient «trick» to exchange files like `.cdxml` in the issue report is to embed them into a `.zip` archive.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394:1461,Testability,test,testat,1461,"@RicardoMBorges Do you use ChemDraw to generate the initial `.cdxml`, .or. do you use an other program (e.g., Marvin, or JChem [for Excel]) to generate a `.cdxml` in first place? If so, which version?. If I copy-paste the .cdxml in ChemDraw's [JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) (*via* Structure -> Load CDXML), I obtain a drawing *which looks like* the structure was drawn & analyzed briefly. The JS page has no button to display the molcular sum formula, but the file obviously contains such:. ![CD_sample_page](https://user-images.githubusercontent.com/19709084/136968421-13609f9b-433f-4d2b-b9e3-97b27124cbd5.png). Subsequently, Stucture -> Get SMILES exports ```CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O```. which ; ```bash; obabel -:""CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O"" -ocan -h -xh; ```; replies with . ```bash; [H]C(=C(C(C(C(C1([H])OC(=O)C([H])([H])N([H])C(=O)C([H])(N([H])C(=O)C(OC(=O)C(N(C(=O)C1(C([H])([H])[H])C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])C(C(C([H])([H])[H])([H])[H])(C([H])([H])[H])[H])([H])[H])([H])[H])([H])[H])[H])[H]; ```. However, the conversion of your `.cdxml` into e.g., a `.png` by OpenBabel *suggests* that something at the level generating the former went wrong. The dots next to implicit carbon atoms normally are seen if the valences are not filled:. ![testat](https://user-images.githubusercontent.com/19709084/136969234-68c68243-8a3e-4b19-a85b-dbe4ce56549e.png). For me, a plausible reason why the (re)addition of hydrogens fails. PS: A convenient «trick» to exchange files like `.cdxml` in the issue report is to embed them into a `.zip` archive.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:1744,Availability,avail,available,1744,"recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel equally offers an interface to these two formats. https://www.inchi-trust.org/downloads/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:2077,Availability,down,downloads,2077,"recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel equally offers an interface to these two formats. https://www.inchi-trust.org/downloads/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:242,Deployability,toggle,toggles,242,"@Ricardo The problem with all the SMILES strings around is that you; have to go far to recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:476,Deployability,deploy,deployment,476,"@Ricardo The problem with all the SMILES strings around is that you; have to go far to recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:1479,Deployability,deploy,deploy,1479,"recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel equally offers an interface to these two formats. https://www.inchi-trust.org/downloads/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:417,Integrability,interface,interface,417,"@Ricardo The problem with all the SMILES strings around is that you; have to go far to recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:743,Integrability,interface,interface,743,"@Ricardo The problem with all the SMILES strings around is that you; have to go far to recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:2017,Integrability,interface,interface,2017,"recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel equally offers an interface to these two formats. https://www.inchi-trust.org/downloads/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:667,Performance,load,load,667,"@Ricardo The problem with all the SMILES strings around is that you; have to go far to recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:1936,Performance,perform,perform,1936,"recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel equally offers an interface to these two formats. https://www.inchi-trust.org/downloads/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:595,Safety,detect,detection,595,"@Ricardo The problem with all the SMILES strings around is that you; have to go far to recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:1576,Security,hash,hashes,1576,"recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel equally offers an interface to these two formats. https://www.inchi-trust.org/downloads/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358
https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:994,Deployability,toggle,toggle,994,"@fredrikw So far, I understood *standardization* as an advantage to offer both the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to dis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875
https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:1047,Deployability,toggle,toggle,1047," advantage to offer both the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to discuss this in a separate issue in further detail, I wo",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875
https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:676,Energy Efficiency,charge,charges,676,"@fredrikw So far, I understood *standardization* as an advantage to offer both the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to dis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875
https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:1528,Modifiability,extend,extend,1528,"th the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to discuss this in a separate issue in further detail, I would move this comment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875
https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:451,Testability,test,test,451,"@fredrikw So far, I understood *standardization* as an advantage to offer both the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to dis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875
https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:1598,Usability,guid,guide,1598,"th the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to discuss this in a separate issue in further detail, I would move this comment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875
https://github.com/openbabel/openbabel/issues/2416#issuecomment-954911042:137,Deployability,install,installation,137,"@RiradoMBorges On a side note, a one-by-one reading of your .cdxml and; assignment of a Daylight SMILES string was possible with an old; installation of ChemDoodle 8.1.0 in Windows, too. https://www.chemdoodle.com/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-954911042
https://github.com/openbabel/openbabel/issues/2417#issuecomment-941059434:33,Availability,error,error,33,Do every conversion end with the error or do you have an example of a successful SMILES to sdf conversion?; Does it work without the --gen2D option?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941059434
https://github.com/openbabel/openbabel/issues/2417#issuecomment-941062936:35,Availability,error,error,35,"> Do every conversion end with the error or do you have an example of a successful SMILES to sdf conversion?. No, the following succeeds:; ```bash; $ echo CC | obabel -i smi -o sdf --gen2D; ```; > Does it work without the --gen2D option?. Yes, it does. So it seems it is 2D structure that cannot be generated for `O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941062936
https://github.com/openbabel/openbabel/issues/2417#issuecomment-941062936:150,Availability,echo,echo,150,"> Do every conversion end with the error or do you have an example of a successful SMILES to sdf conversion?. No, the following succeeds:; ```bash; $ echo CC | obabel -i smi -o sdf --gen2D; ```; > Does it work without the --gen2D option?. Yes, it does. So it seems it is 2D structure that cannot be generated for `O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941062936
https://github.com/openbabel/openbabel/issues/2417#issuecomment-941068420:163,Availability,error,error,163,"If helpful (x86_64 as by `uname -m`) for Debian 12/bookworm (testing) with OpenBabel 3.1.1.+dfsg-6, the generation of the thiazole .sdf passes without complain or error. Despite the presence of the two bridged bicyclic structures, both for `--gen2d` and alternative `--gen3d`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941068420
https://github.com/openbabel/openbabel/issues/2417#issuecomment-941068420:202,Integrability,bridg,bridged,202,"If helpful (x86_64 as by `uname -m`) for Debian 12/bookworm (testing) with OpenBabel 3.1.1.+dfsg-6, the generation of the thiazole .sdf passes without complain or error. Despite the presence of the two bridged bicyclic structures, both for `--gen2d` and alternative `--gen3d`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941068420
https://github.com/openbabel/openbabel/issues/2417#issuecomment-941068420:61,Testability,test,testing,61,"If helpful (x86_64 as by `uname -m`) for Debian 12/bookworm (testing) with OpenBabel 3.1.1.+dfsg-6, the generation of the thiazole .sdf passes without complain or error. Despite the presence of the two bridged bicyclic structures, both for `--gen2d` and alternative `--gen3d`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941068420
https://github.com/openbabel/openbabel/issues/2417#issuecomment-941123034:165,Availability,error,error,165,"> If helpful (x86_64 as by `uname -m`) for Debian 12/bookworm (testing) with OpenBabel 3.1.1.+dfsg-6, the generation of the thiazole .sdf passes without complain or error. Despite the presence of the two bridged bicyclic structures, both for `--gen2d` and alternative `--gen3d`. I believe this issue is specific to arm64 architecture.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941123034
https://github.com/openbabel/openbabel/issues/2417#issuecomment-941123034:204,Integrability,bridg,bridged,204,"> If helpful (x86_64 as by `uname -m`) for Debian 12/bookworm (testing) with OpenBabel 3.1.1.+dfsg-6, the generation of the thiazole .sdf passes without complain or error. Despite the presence of the two bridged bicyclic structures, both for `--gen2d` and alternative `--gen3d`. I believe this issue is specific to arm64 architecture.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941123034
https://github.com/openbabel/openbabel/issues/2417#issuecomment-941123034:63,Testability,test,testing,63,"> If helpful (x86_64 as by `uname -m`) for Debian 12/bookworm (testing) with OpenBabel 3.1.1.+dfsg-6, the generation of the thiazole .sdf passes without complain or error. Despite the presence of the two bridged bicyclic structures, both for `--gen2d` and alternative `--gen3d`. I believe this issue is specific to arm64 architecture.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941123034
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942098541:37,Security,access,access,37,"Sorry for the spamming, I don't have access to an arm64 computer so I will ask you to do a couple of more things. Could you please check; `obabel -ismi -:""C1CCCCC1"" -osdf --gen2D` and `obabel -ismi -:""c1ccccc1"" -osdf --gen2D` and `obabel -ismi -:""c1ccncc1"" -osdf --gen2D`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942098541
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942101685:39,Security,access,access,39,"> Sorry for the spamming, I don't have access to an arm64 computer so I will ask you to do a couple of more things. Could you please check `obabel -ismi -:""C1CCCCC1"" -osdf --gen2D` and `obabel -ismi -:""c1ccccc1"" -osdf --gen2D` and `obabel -ismi -:""c1ccncc1"" -osdf --gen2D`. Just checked, all of these work, and produce meaningful looking SDF output. Let me know should you want me to check anything else on arm64.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942101685
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942111619:287,Availability,error,error,287,"Are you in a position to debug the build? In that case I would like to see what's happening around https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/mcdlutil.cpp#L2575; In particular, the content of dsATN and the values of nb and i when we get the error.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942111619
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942131332:23,Testability,log,logs,23,Debian provides [build logs for all architectures](https://buildd.debian.org/status/package.php?p=openbabel) if this is of any help in this case. To me the logs for arm64 do not seem to contain anything strange around `mcdlutil.cpp`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942131332
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942131332:156,Testability,log,logs,156,Debian provides [build logs for all architectures](https://buildd.debian.org/status/package.php?p=openbabel) if this is of any help in this case. To me the logs for arm64 do not seem to contain anything strange around `mcdlutil.cpp`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942131332
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:336,Safety,timeout,timeouts,336,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:405,Security,access,access,405,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:81,Testability,log,logs,81,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:269,Testability,test,testTemplates,269,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:290,Testability,test,test,290,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:435,Testability,test,test,435,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942265859:685,Availability,Error,Error,685,"Sadly, I have almost no experience with gdb. I tried the following, but it just says ""exited normally"":; ```gdb; $ gdb --args obabel -ismi -:""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2"" -osdf --gen2D ; GNU gdb (Debian 10.1-2) 10.1.90.20210103-git; # cutting the help text; Reading symbols from obabel...; Reading symbols from /usr/lib/debug/.build-id/bb/8ef213dee9e450d9fcdb58499feab90f5be3ec.debug...; (gdb) run; Starting program: /usr/bin/obabel -ismi -:O=C\(C1=CN=CS1\)N1C2CCC1CN\(CC1CC3CCC1O3\)C2 -osdf --gen2D; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/aarch64-linux-gnu/libthread_db.so.1"".; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; [Inferior 1 (process 32740) exited normally]; (gdb) quit. ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942265859
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942283686:189,Modifiability,variab,variables,189,"I'm no expert in gdb either, but you need to set a breakpoint on the relevant line before typing `run`. I think it's something like; `break mcdlutil.cpp:2575`; And then you can inspect the variables by doing things like `print i` and step through the program with `next`. `l` will show you the current source line to make sure you are where you think you are in the program.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942283686
https://github.com/openbabel/openbabel/issues/2417#issuecomment-942333698:186,Performance,load,load,186,"I tried both `break mcdlutil.cpp:2575` and `break src/mcdlutil.cpp:2575`, but every time I get; ```; No source file named mcdlutil.cpp.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (mcdlutil.cpp:2575) pending.; ```; And then doing `run` just proceeds until the end of the program, and I get the same output as without the breakpoint. I guess I will need to look through some tutorial on gdb usage.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942333698
https://github.com/openbabel/openbabel/issues/2420#issuecomment-948445998:601,Availability,error,error,601,"I'm not sure it is the same problem, because #1934 is to do with conformer generation - which uses random numbers. The conformation of a PDB structure is already determined, so the location of polar hydrogens should be deterministic. The x coordinate is consistent whereas y and z are not - it's unexpected behaviour that the different coordinates behave differently, _even if_ you accept randomness in hydrogen placement. I should also say that the difference in the y and z coordinates can be up to an Angstrom, so the norm can be up to ~1.4 A (that I have seen) which is definitely not a precision error.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-948445998
https://github.com/openbabel/openbabel/issues/2420#issuecomment-949804970:326,Testability,test,test,326,"From the perspective of small molecules:. Does `diff` reveal differences on these hydrogens only? Do the heavy atoms (CNOPS) move a little, too?. If these structures are not too big (criterion: counting the number of atoms), I suggest to export the newly generated `.pdb` for each run into an `.xyz` and then compare a Kabsch test. E.g., [Jimmy Charnley](https://github.com/charnley/rmsd) initiated a handy Python based implementation to superimpose two structures and to quantify the difference when aligning them as much as possible. Since the two forms you generate have the same number of atoms, and are more similar than just constitutional isomers, a check could possibly were quick. (You equally may put two `.pdb` files into a `.zip`, and attach this archive to document your observations in this thread, too.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-949804970
https://github.com/openbabel/openbabel/issues/2420#issuecomment-950258942:133,Usability,simpl,simplified,133,"I mean that at the moment users cannot control the seed of PRNG, which leads to irreproducible results. . ---. I believe this can be simplified into the following CML file:. ```xml; <?xml version=""1.0""?>; <cml xmlns=""http://www.xml-cml.org/schema"">; <name>ethylene</name>; <molecule>; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""2"" x3=""0.0"" y3=""0.0"" z3=""0.0""/>; <atom id=""a2"" elementType=""C"" hydrogenCount=""2"" x3=""0.0"" y3=""0.0"" z3=""1.3""/>; </atomArray>; <bondArray>; <bond id=""b1"" atomRefs2=""a1 a2"" order=""2""/>; </bondArray>; </molecule>; </cml>; ```. Here the carbon atoms are aligned on the *z*-axis.; The *z* coordinates of the added hydrogens (e.g., `obabel C2H4.cml -o xyz -h`) seem to be reproducible, but *x* and *y* are not. For acetylene, the coordinates of H are deterministic, independently of rotation.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950258942
https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890:962,Deployability,configurat,configuration,962,"For what applications are these numerical fluctuations of chemical; relevance for you?. Since I do not see OpenBabel as a replacement for a program dedicated; to computation as in quantum chemistry in scale like GAMESS, MOPAC,; etc. I'm fine with these variations. It is possible to request; geometries about e.g., pyridine. obabel -:""c1ccncc1"" -h --gen3d -oxyz. and if run multiple times, the absolute coordinates of hydrogens,; carbons and pyridine may vary as well. I know the --gen3d keyword is; a short hand form for five levels to offer a guess; it is possible to; venture out the energetic landscape by the systematic generation (and; storage of) conformers eventually exported either in OpenBabel (by a; different instruction) or/and one of the programs dedicated to this. For me, for the (re)generation of a structure from a string notation, ; or appending implicit hydrogens (SMILES, .cml), OpenBabel performs; the job good enough if. + it retains the configuration encoded earlier, i.e., does not; unexpectedly swap between (E) and (Z), or (R) and (S); + offers a chemically reasonable spatial arrangement of the atoms,; i.e., intramolecular distances, intramolecular angles are similar; to those experimentally determined and tabulated in references like; e.g., the IUCr's International Tables of Crystallography (Volume C,; chapter 9 about those typically seen for organic compounds). So far, earlier conversions of mine met these two conditions,; allowing to continue the work elsewhere. For reasons of symmetry (C infinity in Schoenflies notation), I think; the selection of acetylene is picks a very special situation. It is; sufficient to align the principal axis of the molecule with either x; .or. y .or. z axis of the underlying Cartesian coordinate system to; describe the molecule along this axis (in 1D) only.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890
https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890:962,Modifiability,config,configuration,962,"For what applications are these numerical fluctuations of chemical; relevance for you?. Since I do not see OpenBabel as a replacement for a program dedicated; to computation as in quantum chemistry in scale like GAMESS, MOPAC,; etc. I'm fine with these variations. It is possible to request; geometries about e.g., pyridine. obabel -:""c1ccncc1"" -h --gen3d -oxyz. and if run multiple times, the absolute coordinates of hydrogens,; carbons and pyridine may vary as well. I know the --gen3d keyword is; a short hand form for five levels to offer a guess; it is possible to; venture out the energetic landscape by the systematic generation (and; storage of) conformers eventually exported either in OpenBabel (by a; different instruction) or/and one of the programs dedicated to this. For me, for the (re)generation of a structure from a string notation, ; or appending implicit hydrogens (SMILES, .cml), OpenBabel performs; the job good enough if. + it retains the configuration encoded earlier, i.e., does not; unexpectedly swap between (E) and (Z), or (R) and (S); + offers a chemically reasonable spatial arrangement of the atoms,; i.e., intramolecular distances, intramolecular angles are similar; to those experimentally determined and tabulated in references like; e.g., the IUCr's International Tables of Crystallography (Volume C,; chapter 9 about those typically seen for organic compounds). So far, earlier conversions of mine met these two conditions,; allowing to continue the work elsewhere. For reasons of symmetry (C infinity in Schoenflies notation), I think; the selection of acetylene is picks a very special situation. It is; sufficient to align the principal axis of the molecule with either x; .or. y .or. z axis of the underlying Cartesian coordinate system to; describe the molecule along this axis (in 1D) only.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890
https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890:911,Performance,perform,performs,911,"For what applications are these numerical fluctuations of chemical; relevance for you?. Since I do not see OpenBabel as a replacement for a program dedicated; to computation as in quantum chemistry in scale like GAMESS, MOPAC,; etc. I'm fine with these variations. It is possible to request; geometries about e.g., pyridine. obabel -:""c1ccncc1"" -h --gen3d -oxyz. and if run multiple times, the absolute coordinates of hydrogens,; carbons and pyridine may vary as well. I know the --gen3d keyword is; a short hand form for five levels to offer a guess; it is possible to; venture out the energetic landscape by the systematic generation (and; storage of) conformers eventually exported either in OpenBabel (by a; different instruction) or/and one of the programs dedicated to this. For me, for the (re)generation of a structure from a string notation, ; or appending implicit hydrogens (SMILES, .cml), OpenBabel performs; the job good enough if. + it retains the configuration encoded earlier, i.e., does not; unexpectedly swap between (E) and (Z), or (R) and (S); + offers a chemically reasonable spatial arrangement of the atoms,; i.e., intramolecular distances, intramolecular angles are similar; to those experimentally determined and tabulated in references like; e.g., the IUCr's International Tables of Crystallography (Volume C,; chapter 9 about those typically seen for organic compounds). So far, earlier conversions of mine met these two conditions,; allowing to continue the work elsewhere. For reasons of symmetry (C infinity in Schoenflies notation), I think; the selection of acetylene is picks a very special situation. It is; sufficient to align the principal axis of the molecule with either x; .or. y .or. z axis of the underlying Cartesian coordinate system to; describe the molecule along this axis (in 1D) only.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890
https://github.com/openbabel/openbabel/issues/2423#issuecomment-962045049:16,Deployability,install,installing,16,"I would suggest installing Anaconda / miniconda, in which case `conda install openbabel` should do what you want.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2423#issuecomment-962045049
https://github.com/openbabel/openbabel/issues/2423#issuecomment-962045049:70,Deployability,install,install,70,"I would suggest installing Anaconda / miniconda, in which case `conda install openbabel` should do what you want.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2423#issuecomment-962045049
https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389:1644,Deployability,release,released,1644,"I wrote these files... and I *think* I was just trying to be consistent with the other CMake scripts. But looking at them now, they aren't very consistent anyway. Here are all the others:. 1. `FindInchi.cmake` added by @cryos (the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindInchi.cmake#L8-L10. 2. `FindCairo.cmake` added by @baoilleach https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindCairo.cmake#L9-L11. 3. `FindEigen2.cmake` added by @ghutchis; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen2.cmake#L13-L15. 4. `FindEigen3.cmake` added by @ghutchis (specifically says ""2-clause BSD license"") https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen3.cmake#L13-L16. 5. `UsePythonTest.cmake` added by @baoilleach (specifically says ""New BSD license"" i.e. 3-clause, and again the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/UsePythonTest.cmake#L15-L19. I'm not sure what the best way to clear up the confusion is - it would be good to have a consistent specific BSD license for all these files but it might be tricky to establish the intentions of all the copyright holders. . In the meantime, for the files that I am the copyright holder of (`OptimizeNative.cmake` and `FindRapidJSON.cmake`): By adding them to Open Babel, I consider them to be released under the GPLv2 that applies to the whole project, but I am also happy for them to be used/redistributed under the more permissive [3-Clause BSD License](https://opensource.org/licenses/BSD-3-Clause).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389
https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389:1542,Performance,Optimiz,OptimizeNative,1542,"I wrote these files... and I *think* I was just trying to be consistent with the other CMake scripts. But looking at them now, they aren't very consistent anyway. Here are all the others:. 1. `FindInchi.cmake` added by @cryos (the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindInchi.cmake#L8-L10. 2. `FindCairo.cmake` added by @baoilleach https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindCairo.cmake#L9-L11. 3. `FindEigen2.cmake` added by @ghutchis; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen2.cmake#L13-L15. 4. `FindEigen3.cmake` added by @ghutchis (specifically says ""2-clause BSD license"") https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen3.cmake#L13-L16. 5. `UsePythonTest.cmake` added by @baoilleach (specifically says ""New BSD license"" i.e. 3-clause, and again the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/UsePythonTest.cmake#L15-L19. I'm not sure what the best way to clear up the confusion is - it would be good to have a consistent specific BSD license for all these files but it might be tricky to establish the intentions of all the copyright holders. . In the meantime, for the files that I am the copyright holder of (`OptimizeNative.cmake` and `FindRapidJSON.cmake`): By adding them to Open Babel, I consider them to be released under the GPLv2 that applies to the whole project, but I am also happy for them to be used/redistributed under the more permissive [3-Clause BSD License](https://opensource.org/licenses/BSD-3-Clause).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389
https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389:1285,Usability,clear,clear,1285,"I wrote these files... and I *think* I was just trying to be consistent with the other CMake scripts. But looking at them now, they aren't very consistent anyway. Here are all the others:. 1. `FindInchi.cmake` added by @cryos (the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindInchi.cmake#L8-L10. 2. `FindCairo.cmake` added by @baoilleach https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindCairo.cmake#L9-L11. 3. `FindEigen2.cmake` added by @ghutchis; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen2.cmake#L13-L15. 4. `FindEigen3.cmake` added by @ghutchis (specifically says ""2-clause BSD license"") https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen3.cmake#L13-L16. 5. `UsePythonTest.cmake` added by @baoilleach (specifically says ""New BSD license"" i.e. 3-clause, and again the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/UsePythonTest.cmake#L15-L19. I'm not sure what the best way to clear up the confusion is - it would be good to have a consistent specific BSD license for all these files but it might be tricky to establish the intentions of all the copyright holders. . In the meantime, for the files that I am the copyright holder of (`OptimizeNative.cmake` and `FindRapidJSON.cmake`): By adding them to Open Babel, I consider them to be released under the GPLv2 that applies to the whole project, but I am also happy for them to be used/redistributed under the more permissive [3-Clause BSD License](https://opensource.org/licenses/BSD-3-Clause).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389
https://github.com/openbabel/openbabel/issues/2426#issuecomment-965030426:29,Testability,test,test,29,"E.g. `obabel -:""c1ccncn1"" -O test.png --append MW`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965030426
https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607:969,Availability,Error,Error,969,"@fredrikw Ah *this one*. In parlance of Jmol, it is a `.pngj` to retain the model and adjustments of visualization in one container which enables later interaction in Jmol, too (example attached). Briefly described as one of the formats written: http://wiki.jmol.org/index.php/File_formats/Export Possibly organized differently, OpenBabel does not successfully extract a `.sdf` from Jmol's `lutidine_model_pngj.png`. Inspired by your input, I tried to replicate your example for pyridine, saved as `c1ccncc1`in `pyridine.smi`. Then; ```bash; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.sdf # 1 molecule converted; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.png # 1 molecule converted; obabel pyridine.png pyridine.smi pyridine.sdf -O augmented.png -xO sdf; ```; because I thought the inclusion of the data as a `.mol` or a `.sdf` would not matter. The initial output to the CLI of the last command I got however was ; ```; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; Though the two images are written and the report by `file *.png` confirms their nature, `obabel augmented.png -O content.sdf` then yielded only an empty container. (If this matters, using OpenBabel 3.1.1 as packaged for Debian 12/bookworm [testing]). [lutidine_model_pngj.png.zip](https://github.com/openbabel/openbabel/files/7513270/lutidine_model_pngj.png.zip); [pyridine_test.zip](https://github.com/openbabel/openbabel/files/7513507/pyridine_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607
https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607:1053,Availability,Error,Error,1053,"@fredrikw Ah *this one*. In parlance of Jmol, it is a `.pngj` to retain the model and adjustments of visualization in one container which enables later interaction in Jmol, too (example attached). Briefly described as one of the formats written: http://wiki.jmol.org/index.php/File_formats/Export Possibly organized differently, OpenBabel does not successfully extract a `.sdf` from Jmol's `lutidine_model_pngj.png`. Inspired by your input, I tried to replicate your example for pyridine, saved as `c1ccncc1`in `pyridine.smi`. Then; ```bash; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.sdf # 1 molecule converted; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.png # 1 molecule converted; obabel pyridine.png pyridine.smi pyridine.sdf -O augmented.png -xO sdf; ```; because I thought the inclusion of the data as a `.mol` or a `.sdf` would not matter. The initial output to the CLI of the last command I got however was ; ```; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; Though the two images are written and the report by `file *.png` confirms their nature, `obabel augmented.png -O content.sdf` then yielded only an empty container. (If this matters, using OpenBabel 3.1.1 as packaged for Debian 12/bookworm [testing]). [lutidine_model_pngj.png.zip](https://github.com/openbabel/openbabel/files/7513270/lutidine_model_pngj.png.zip); [pyridine_test.zip](https://github.com/openbabel/openbabel/files/7513507/pyridine_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607
https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607:1137,Availability,Error,Error,1137,"@fredrikw Ah *this one*. In parlance of Jmol, it is a `.pngj` to retain the model and adjustments of visualization in one container which enables later interaction in Jmol, too (example attached). Briefly described as one of the formats written: http://wiki.jmol.org/index.php/File_formats/Export Possibly organized differently, OpenBabel does not successfully extract a `.sdf` from Jmol's `lutidine_model_pngj.png`. Inspired by your input, I tried to replicate your example for pyridine, saved as `c1ccncc1`in `pyridine.smi`. Then; ```bash; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.sdf # 1 molecule converted; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.png # 1 molecule converted; obabel pyridine.png pyridine.smi pyridine.sdf -O augmented.png -xO sdf; ```; because I thought the inclusion of the data as a `.mol` or a `.sdf` would not matter. The initial output to the CLI of the last command I got however was ; ```; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; Though the two images are written and the report by `file *.png` confirms their nature, `obabel augmented.png -O content.sdf` then yielded only an empty container. (If this matters, using OpenBabel 3.1.1 as packaged for Debian 12/bookworm [testing]). [lutidine_model_pngj.png.zip](https://github.com/openbabel/openbabel/files/7513270/lutidine_model_pngj.png.zip); [pyridine_test.zip](https://github.com/openbabel/openbabel/files/7513507/pyridine_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607
https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607:1234,Availability,Error,Error,1234,"@fredrikw Ah *this one*. In parlance of Jmol, it is a `.pngj` to retain the model and adjustments of visualization in one container which enables later interaction in Jmol, too (example attached). Briefly described as one of the formats written: http://wiki.jmol.org/index.php/File_formats/Export Possibly organized differently, OpenBabel does not successfully extract a `.sdf` from Jmol's `lutidine_model_pngj.png`. Inspired by your input, I tried to replicate your example for pyridine, saved as `c1ccncc1`in `pyridine.smi`. Then; ```bash; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.sdf # 1 molecule converted; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.png # 1 molecule converted; obabel pyridine.png pyridine.smi pyridine.sdf -O augmented.png -xO sdf; ```; because I thought the inclusion of the data as a `.mol` or a `.sdf` would not matter. The initial output to the CLI of the last command I got however was ; ```; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; Though the two images are written and the report by `file *.png` confirms their nature, `obabel augmented.png -O content.sdf` then yielded only an empty container. (If this matters, using OpenBabel 3.1.1 as packaged for Debian 12/bookworm [testing]). [lutidine_model_pngj.png.zip](https://github.com/openbabel/openbabel/files/7513270/lutidine_model_pngj.png.zip); [pyridine_test.zip](https://github.com/openbabel/openbabel/files/7513507/pyridine_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607
https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607:1318,Availability,Error,Error,1318,"@fredrikw Ah *this one*. In parlance of Jmol, it is a `.pngj` to retain the model and adjustments of visualization in one container which enables later interaction in Jmol, too (example attached). Briefly described as one of the formats written: http://wiki.jmol.org/index.php/File_formats/Export Possibly organized differently, OpenBabel does not successfully extract a `.sdf` from Jmol's `lutidine_model_pngj.png`. Inspired by your input, I tried to replicate your example for pyridine, saved as `c1ccncc1`in `pyridine.smi`. Then; ```bash; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.sdf # 1 molecule converted; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.png # 1 molecule converted; obabel pyridine.png pyridine.smi pyridine.sdf -O augmented.png -xO sdf; ```; because I thought the inclusion of the data as a `.mol` or a `.sdf` would not matter. The initial output to the CLI of the last command I got however was ; ```; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; Though the two images are written and the report by `file *.png` confirms their nature, `obabel augmented.png -O content.sdf` then yielded only an empty container. (If this matters, using OpenBabel 3.1.1 as packaged for Debian 12/bookworm [testing]). [lutidine_model_pngj.png.zip](https://github.com/openbabel/openbabel/files/7513270/lutidine_model_pngj.png.zip); [pyridine_test.zip](https://github.com/openbabel/openbabel/files/7513507/pyridine_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607
https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607:1635,Testability,test,testing,1635,"@fredrikw Ah *this one*. In parlance of Jmol, it is a `.pngj` to retain the model and adjustments of visualization in one container which enables later interaction in Jmol, too (example attached). Briefly described as one of the formats written: http://wiki.jmol.org/index.php/File_formats/Export Possibly organized differently, OpenBabel does not successfully extract a `.sdf` from Jmol's `lutidine_model_pngj.png`. Inspired by your input, I tried to replicate your example for pyridine, saved as `c1ccncc1`in `pyridine.smi`. Then; ```bash; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.sdf # 1 molecule converted; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.png # 1 molecule converted; obabel pyridine.png pyridine.smi pyridine.sdf -O augmented.png -xO sdf; ```; because I thought the inclusion of the data as a `.mol` or a `.sdf` would not matter. The initial output to the CLI of the last command I got however was ; ```; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; Though the two images are written and the report by `file *.png` confirms their nature, `obabel augmented.png -O content.sdf` then yielded only an empty container. (If this matters, using OpenBabel 3.1.1 as packaged for Debian 12/bookworm [testing]). [lutidine_model_pngj.png.zip](https://github.com/openbabel/openbabel/files/7513270/lutidine_model_pngj.png.zip); [pyridine_test.zip](https://github.com/openbabel/openbabel/files/7513507/pyridine_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607
https://github.com/openbabel/openbabel/issues/2426#issuecomment-965553745:670,Deployability,release,release,670,"> I cannot find it in the documentation right now, but due to the fact that `obabel -opng` commands can both add chemical data to an existing png file and create a png depiction of a molecule there are two ""png-formats"".; > ; > If you modify your code to use `obConversion.SetInAndOutFormats(""smi"", ""_png2"")` instead it should work. Yes, I confirm that using the _png2 file format works for both pybel and openbabel Python modules. It feels a bit hacky to use a ""behind the scenes"" format. The _png2 format is indeed not displayed in the latest documentation: https://open-babel.readthedocs.io/en/latest/FileFormats/Image_Formats.html But we can see it in this previous release: http://openbabel.org/docs/current/FileFormats/PNG2_format.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965553745
https://github.com/openbabel/openbabel/issues/2426#issuecomment-969031864:262,Deployability,release,release,262,"@kkempfer The inclusion of a Molfile into a `.png` is mentioned in section 18.8.2 / Image formats - png. On-line on readthedocs, it is [here](https://open-babel.readthedocs.io/en/latest/FileFormats/PNG_2D_depiction.html); in case you use the `.pdf` manual about release 3.0.1 (June 14, 2020), it is on page 192.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-969031864
https://github.com/openbabel/openbabel/issues/2427#issuecomment-966278541:216,Integrability,rout,routines,216,"The perception/assignment of bond orders for the xzy2mol conversion likely is based on geometry and distances (see, e.g. southern pyrrole in comparison with the three other ones in your illustration). Possibly other routines do so, too. The one e.g., by the Jensen group, [xyz2mol](https://github.com/jensengroup/xyz2mol), which by 2018 was written for «molecules containing the following elements: H, B, C-F, Si-Cl, Br, and I.» ([blog post](https://proteinsandwavefunctions.blogspot.com/2018/01/xyz2mol-converting-xyz-file-to-rdkit.html)). Jensen provided additional insight about its function in his talk at RDKit UGM 2020 (3:21 mm:ss onward, [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo)). You may edit the connection table in the .mol file manually (below the atomic coordinates); here, atoms are listed (integers by appearance in the model, count starts with 1) as well as the assigned bond order. For a molecule (still) this small, you may consider a visual edit, e.g., in [Jmol](http://jmol.sourceforge.net/)'s model kit as well, and save the newly written model in a separate file. See the animation below for how an edit may proceed:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/141300231-ab2b2f6a-151e-49f8-a154-eee25faaba61.gif). (By the way, hydrogen atoms are missing in the model.) . [data.zip](https://github.com/openbabel/openbabel/files/7520504/data.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2427#issuecomment-966278541
https://github.com/openbabel/openbabel/issues/2427#issuecomment-966278541:1173,Performance,optimiz,optimize,1173,"The perception/assignment of bond orders for the xzy2mol conversion likely is based on geometry and distances (see, e.g. southern pyrrole in comparison with the three other ones in your illustration). Possibly other routines do so, too. The one e.g., by the Jensen group, [xyz2mol](https://github.com/jensengroup/xyz2mol), which by 2018 was written for «molecules containing the following elements: H, B, C-F, Si-Cl, Br, and I.» ([blog post](https://proteinsandwavefunctions.blogspot.com/2018/01/xyz2mol-converting-xyz-file-to-rdkit.html)). Jensen provided additional insight about its function in his talk at RDKit UGM 2020 (3:21 mm:ss onward, [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo)). You may edit the connection table in the .mol file manually (below the atomic coordinates); here, atoms are listed (integers by appearance in the model, count starts with 1) as well as the assigned bond order. For a molecule (still) this small, you may consider a visual edit, e.g., in [Jmol](http://jmol.sourceforge.net/)'s model kit as well, and save the newly written model in a separate file. See the animation below for how an edit may proceed:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/141300231-ab2b2f6a-151e-49f8-a154-eee25faaba61.gif). (By the way, hydrogen atoms are missing in the model.) . [data.zip](https://github.com/openbabel/openbabel/files/7520504/data.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2427#issuecomment-966278541
https://github.com/openbabel/openbabel/issues/2428#issuecomment-969047434:191,Energy Efficiency,adapt,adapted,191,It's not apparent from the Jmol documentation how the pngj format is constructed. But looking at the supplied file suggests that it is too dissimilar to the OpenBabel png format to be easily adapted. Instead it should probably be a separate format and I do not know how big the overlap is.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-969047434
https://github.com/openbabel/openbabel/issues/2428#issuecomment-969047434:191,Modifiability,adapt,adapted,191,It's not apparent from the Jmol documentation how the pngj format is constructed. But looking at the supplied file suggests that it is too dissimilar to the OpenBabel png format to be easily adapted. Instead it should probably be a separate format and I do not know how big the overlap is.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-969047434
https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545819847:22,Availability,error,error,22,I'm still seeing this error (not a PNG file) even though I've downloaded the newest version of open babel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545819847
https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545819847:62,Availability,down,downloaded,62,I'm still seeing this error (not a PNG file) even though I've downloaded the newest version of open babel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545819847
https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545866704:11,Deployability,release,released,11,The newest released version or the dev master? I don't think there has been a release after this fix.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545866704
https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545866704:78,Deployability,release,release,78,The newest released version or the dev master? I don't think there has been a release after this fix.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545866704
https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545880757:40,Deployability,install,installed,40,i have the latest version (3.1.1.1) - I installed using brew... is there a different parameter i should use to install the dev master?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545880757
https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545880757:111,Deployability,install,install,111,i have the latest version (3.1.1.1) - I installed using brew... is there a different parameter i should use to install the dev master?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-1545880757
https://github.com/openbabel/openbabel/issues/2428#issuecomment-1547426721:78,Deployability,install,install,78,"It's been a long while since I used Homebrew, but I think you could use `brew install open-babel --HEAD` to get the current GitHub head.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-1547426721
https://github.com/openbabel/openbabel/issues/2429#issuecomment-968699660:265,Deployability,configurat,configuration,265,"If OpenBabel choses to adopt to support the `CFG=2` marker in `.mol` / `.sdf` files for alkenes, this equally would affect the assignment of SMILES. At present, a `.sdf` (v3000) file about (*Z*)-butene, (*E*)-butene, and but-2-ene without an explicit assignment of configuration (i.e., three entries) assigns as SMILES; ```; C/C=C/C; C/C=C\C; C/C=C/C; ```; where the last one is anticipated as `CC=CC`. Should InChI trust adopt a license compatible to OpenBabel, working with `CFG=2` would equally influence the assignment of InChI and InChIKey, too. [butene_conformer.zip](https://github.com/openbabel/openbabel/files/7537445/butene_conformer.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429#issuecomment-968699660
https://github.com/openbabel/openbabel/issues/2429#issuecomment-968699660:265,Modifiability,config,configuration,265,"If OpenBabel choses to adopt to support the `CFG=2` marker in `.mol` / `.sdf` files for alkenes, this equally would affect the assignment of SMILES. At present, a `.sdf` (v3000) file about (*Z*)-butene, (*E*)-butene, and but-2-ene without an explicit assignment of configuration (i.e., three entries) assigns as SMILES; ```; C/C=C/C; C/C=C\C; C/C=C/C; ```; where the last one is anticipated as `CC=CC`. Should InChI trust adopt a license compatible to OpenBabel, working with `CFG=2` would equally influence the assignment of InChI and InChIKey, too. [butene_conformer.zip](https://github.com/openbabel/openbabel/files/7537445/butene_conformer.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429#issuecomment-968699660
https://github.com/openbabel/openbabel/pull/2430#issuecomment-1151668051:31,Testability,test,tests,31,What changed so much with the `tests/CMakeLists.txt` file?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1151668051
https://github.com/openbabel/openbabel/pull/2430#issuecomment-1152100167:33,Testability,test,tests,33,> What changed so much with the `tests/CMakeLists.txt` file?. Line ending seems to be changed from LF to CRLF.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1152100167
https://github.com/openbabel/openbabel/pull/2430#issuecomment-1152450706:0,Availability,Failure,Failures,0,"Failures are unrelated - I'll merge this, thanks.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1152450706
https://github.com/openbabel/openbabel/issues/2431#issuecomment-973244286:71,Availability,error,error,71,"Hi @fredrikw, thank you for taking a look at this. I misattributed the error in my initial code, apologies for the incorrect code sample. `mol` has no residues until I write a "".pdb"". . ```python; from openbabel import pybel. mol = pybel.readstring(""smi"", ""O""); mol.addh(); mol.make3D(); mol.write(format=""pdb"", filename=""H2O"") # added this line. len(mol.atoms) == 3 # True; len(mol.residues) == 2 # True; ```. Oddly, if I write `mol` to other file formats, like ""mol"", `mol` only has a single residue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2431#issuecomment-973244286
https://github.com/openbabel/openbabel/issues/2431#issuecomment-973245784:29,Availability,error,error,29,"Yeah, I'm not sure where the error is, but the PDB file includes this:; ```; HETATM 1 O HOH 1 0.956 0.096 -0.020 1.00 0.00 O ; HETATM 2 H HOH 0 1.924 0.095 0.026 1.00 0.00 H ; HETATM 3 H HOH 0 0.677 0.091 0.908 1.00 0.00 H ; ```. I suspect the problem is in the chain perception.. which is about the worst code to debug.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2431#issuecomment-973245784
https://github.com/openbabel/openbabel/issues/2433#issuecomment-1111830066:18,Deployability,release,release,18,Is there a target release to fix this issue ? When will the fix be ready ? Thanks a lot,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2433#issuecomment-1111830066
https://github.com/openbabel/openbabel/issues/2434#issuecomment-976891713:339,Modifiability,flexible,flexible,339,"For a moment, I thought the reformulation. > Instead of an iteration on all single bonds (section [9.2](https://open-babel.readthedocs.io/en/latest/3DStructureGen/multipleconformers.html)) how to constrain `confab` to act on a specific bond?. might describe what you aim for. Within reason, the larger the protein and increasing number of flexible bonds, the more this approach could save computational work ahead. Does the reformulation match your intent? (Maybe suitable for a post on https://mattermodeling.stackexchange.com/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2434#issuecomment-976891713
https://github.com/openbabel/openbabel/issues/2434#issuecomment-977921185:261,Availability,fault,faulty,261,@nbehrnd thanks for your comment. I do not really get how confab is related to the problem here? . The SetTorsion function works in the vast majority of cases as intended and just rotates the specifc dihedral (here chi1). In maybe 2 of 100 cases I will produce faulty structures (with systems that only differ in the coordinates and residues/atoms being equal). I double checked that the atoms we are choosing are correct and I also reversed the order of atoms for SetTorsion but nothing gives me a satisfactory result. . I also tested this in openbabel 2.4.1 and the problem exists there too. . I am not an openbabel expert but upon reading [ObRotorList Documentation](https://openbabel.org/dev-api/classOpenBabel_1_1OBRotorList.shtml#aca77a345e848bcedd33f56b03844d014) there is an argument for fixed atoms but I am not sure how to use it. Any pointers on how to use this? Perhaps if the bb_nitrogen atom is fixed the rotation would work correctly by rotating the sidechain and not the backbone atoms.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2434#issuecomment-977921185
https://github.com/openbabel/openbabel/issues/2434#issuecomment-977921185:529,Testability,test,tested,529,@nbehrnd thanks for your comment. I do not really get how confab is related to the problem here? . The SetTorsion function works in the vast majority of cases as intended and just rotates the specifc dihedral (here chi1). In maybe 2 of 100 cases I will produce faulty structures (with systems that only differ in the coordinates and residues/atoms being equal). I double checked that the atoms we are choosing are correct and I also reversed the order of atoms for SetTorsion but nothing gives me a satisfactory result. . I also tested this in openbabel 2.4.1 and the problem exists there too. . I am not an openbabel expert but upon reading [ObRotorList Documentation](https://openbabel.org/dev-api/classOpenBabel_1_1OBRotorList.shtml#aca77a345e848bcedd33f56b03844d014) there is an argument for fixed atoms but I am not sure how to use it. Any pointers on how to use this? Perhaps if the bb_nitrogen atom is fixed the rotation would work correctly by rotating the sidechain and not the backbone atoms.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2434#issuecomment-977921185
https://github.com/openbabel/openbabel/issues/2435#issuecomment-985338113:20,Deployability,update,update,20,"Let me recommend to update to the newer version 3.1.1 Debian provides ([tracker](https://tracker.debian.org/pkg/openbabel)). Then, the azide both remains intact and attached to the molecule. If this approach works well enough for you, consider closing this issue. For future reference, presenting snippets of code on GitHub works quite similar to the pattern used on e.g., [matter.se](https://mattermodeling.stackexchange.com/), i.e. ; + for a snippet at maximum a single line, use the single grave sign prior and after the code, e.g., for `obabel --version`. There equally is a shortcut for this, `Ctrl + e`.; + for multiple lines, use three grave signs in the lines prior and after the block in question. You may assist syntax highlighting if the opening graves are followed directly (no space) with a keyword about the language in question (e.g., `python`, `fortran`, etc.). [answer.zip](https://github.com/openbabel/openbabel/files/7648054/answer.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2435#issuecomment-985338113
https://github.com/openbabel/openbabel/issues/2435#issuecomment-986191052:47,Deployability,install,installed,47,Thank you for reply. It work in openbabel3.1.1 installed by apt in debian. But the program combiled by openbabel-1.3.1-source.tar.bz2 still has this problem. And the version is 1.3.0 instead of 1.3.1,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2435#issuecomment-986191052
https://github.com/openbabel/openbabel/issues/2440#issuecomment-998610997:337,Availability,down,download,337,"Suggestion: To ease replication of your find edit your report. It would be easier if it were a continuous script ready to run (as usual, different sections inside may be annotated by a comment line) relying only on what Python's standard library and OpenBabel provides. Since the .pdb format is not supported in issue reports on GitHub, download the specific file in question, put this into a zip archive which then may be attached by drag & drop.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2440#issuecomment-998610997
https://github.com/openbabel/openbabel/issues/2440#issuecomment-998610997:95,Deployability,continuous,continuous,95,"Suggestion: To ease replication of your find edit your report. It would be easier if it were a continuous script ready to run (as usual, different sections inside may be annotated by a comment line) relying only on what Python's standard library and OpenBabel provides. Since the .pdb format is not supported in issue reports on GitHub, download the specific file in question, put this into a zip archive which then may be attached by drag & drop.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2440#issuecomment-998610997
https://github.com/openbabel/openbabel/issues/2444#issuecomment-1022381965:936,Availability,avail,available,936,"The provision of multiple SMILES including an optional title as in the example by the documentation indeed was new for me; I did not spot this when `openbabel` transitioned to `obabel` years ago. On discovery with your initial question, I noticed the criterion `'title=*C'` will yield .true. for any title if upper case `C` is the last character. On the other hand, the input with an additional `*` trailing `C`; ```bash; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C*'; ```; yields; ```; CC	CC; CC	4C; CC	CCC; 3 molecules converted; ```; By similar token,; ```bash; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh*""'; ```; processes all four entries,; ```; CO	oh; CO	aoh; CO	oaoh; CO	ohaoh; 4 molecules converted; ```; Inspired by this observation, I briefly thought about discerning the second entry, on one hand, and the third and fourth, on the other. At least with the installation available to me (version 3.1.1 as provided by Linux Debian 12/bookworm (branch testing)), a regex-based filter like either one of ; ```bash; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""^aoh""' # check a; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""^aoh*""' # check b; ```; was not successful. So far, I'm not sure about this, so my question to you: based on how *you* use OpenBabel, do you think a regex-based search in the titles would be a useful addition to OpenBabel?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2444#issuecomment-1022381965
https://github.com/openbabel/openbabel/issues/2444#issuecomment-1022381965:923,Deployability,install,installation,923,"The provision of multiple SMILES including an optional title as in the example by the documentation indeed was new for me; I did not spot this when `openbabel` transitioned to `obabel` years ago. On discovery with your initial question, I noticed the criterion `'title=*C'` will yield .true. for any title if upper case `C` is the last character. On the other hand, the input with an additional `*` trailing `C`; ```bash; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C*'; ```; yields; ```; CC	CC; CC	4C; CC	CCC; 3 molecules converted; ```; By similar token,; ```bash; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh*""'; ```; processes all four entries,; ```; CO	oh; CO	aoh; CO	oaoh; CO	ohaoh; 4 molecules converted; ```; Inspired by this observation, I briefly thought about discerning the second entry, on one hand, and the third and fourth, on the other. At least with the installation available to me (version 3.1.1 as provided by Linux Debian 12/bookworm (branch testing)), a regex-based filter like either one of ; ```bash; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""^aoh""' # check a; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""^aoh*""' # check b; ```; was not successful. So far, I'm not sure about this, so my question to you: based on how *you* use OpenBabel, do you think a regex-based search in the titles would be a useful addition to OpenBabel?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2444#issuecomment-1022381965
https://github.com/openbabel/openbabel/issues/2444#issuecomment-1022381965:1015,Testability,test,testing,1015,"The provision of multiple SMILES including an optional title as in the example by the documentation indeed was new for me; I did not spot this when `openbabel` transitioned to `obabel` years ago. On discovery with your initial question, I noticed the criterion `'title=*C'` will yield .true. for any title if upper case `C` is the last character. On the other hand, the input with an additional `*` trailing `C`; ```bash; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C*'; ```; yields; ```; CC	CC; CC	4C; CC	CCC; 3 molecules converted; ```; By similar token,; ```bash; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh*""'; ```; processes all four entries,; ```; CO	oh; CO	aoh; CO	oaoh; CO	ohaoh; 4 molecules converted; ```; Inspired by this observation, I briefly thought about discerning the second entry, on one hand, and the third and fourth, on the other. At least with the installation available to me (version 3.1.1 as provided by Linux Debian 12/bookworm (branch testing)), a regex-based filter like either one of ; ```bash; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""^aoh""' # check a; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""^aoh*""' # check b; ```; was not successful. So far, I'm not sure about this, so my question to you: based on how *you* use OpenBabel, do you think a regex-based search in the titles would be a useful addition to OpenBabel?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2444#issuecomment-1022381965
https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090:456,Availability,down,down,456,"Already an input like; ```bash; obabel -:""c1ccncc1"" -O py*.smi; ```; will not create `py*.smi`, but `py1.smi`. In other cases, the file names will require an escape to access them (e.g., `py?.smi` as `py\?.smi` for e.g., `obabel py\?.smi -O test.png`). You might be able to adjust the terminal emulator to do this for you *on the fly*, however chances are your colleagues' computers are not set up for this by default. However, this may become an obstacle down the road (e.g., retrieve by regexes). If you want to ease exchange, stick to to the 2x26 English characters of [a-zA-Z], decimals [0-9] plus dash, plus, and underscore.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090
https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090:168,Security,access,access,168,"Already an input like; ```bash; obabel -:""c1ccncc1"" -O py*.smi; ```; will not create `py*.smi`, but `py1.smi`. In other cases, the file names will require an escape to access them (e.g., `py?.smi` as `py\?.smi` for e.g., `obabel py\?.smi -O test.png`). You might be able to adjust the terminal emulator to do this for you *on the fly*, however chances are your colleagues' computers are not set up for this by default. However, this may become an obstacle down the road (e.g., retrieve by regexes). If you want to ease exchange, stick to to the 2x26 English characters of [a-zA-Z], decimals [0-9] plus dash, plus, and underscore.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090
https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090:241,Testability,test,test,241,"Already an input like; ```bash; obabel -:""c1ccncc1"" -O py*.smi; ```; will not create `py*.smi`, but `py1.smi`. In other cases, the file names will require an escape to access them (e.g., `py?.smi` as `py\?.smi` for e.g., `obabel py\?.smi -O test.png`). You might be able to adjust the terminal emulator to do this for you *on the fly*, however chances are your colleagues' computers are not set up for this by default. However, this may become an obstacle down the road (e.g., retrieve by regexes). If you want to ease exchange, stick to to the 2x26 English characters of [a-zA-Z], decimals [0-9] plus dash, plus, and underscore.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090
https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022170975:23,Deployability,install,installed,23,"Did you have openbabel installed on the system before installing the conda version? If you run `which obabel`, what will it give as result? It sounds like you have multiple versions of openbabel and that there is a mismatch between system version and conda version.; Will it make a change whether you deactivate the conda environment?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022170975
https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022170975:54,Deployability,install,installing,54,"Did you have openbabel installed on the system before installing the conda version? If you run `which obabel`, what will it give as result? It sounds like you have multiple versions of openbabel and that there is a mismatch between system version and conda version.; Will it make a change whether you deactivate the conda environment?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022170975
https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022180264:88,Deployability,install,installed,88,"It seems you are right, thank you, although the new version is the non-conda version. I installed MGLTools for doing some molecular docking work and that has the openbabel.so.5 in it.; It doesn't seem to make a difference in activating or deactivating the conda environment, although conda's OpenBabel 3.1.1 is installed in both base and my main virtual environment.; Is there any way of selecting which obabel files to use?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022180264
https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022180264:311,Deployability,install,installed,311,"It seems you are right, thank you, although the new version is the non-conda version. I installed MGLTools for doing some molecular docking work and that has the openbabel.so.5 in it.; It doesn't seem to make a difference in activating or deactivating the conda environment, although conda's OpenBabel 3.1.1 is installed in both base and my main virtual environment.; Is there any way of selecting which obabel files to use?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022180264
https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022186301:519,Deployability,install,install,519,"I don't really know about MGLTools so I don't know how they add openbabel (but it seems like it's an old version...). If `which obabel` points to the MGLTools version, you could try to use a command like `/home/{user}/miniconda3/bin/obabel` instead, that should force the use of the conda version from the main env or `/home/{user}/miniconda3/envs/{mainenv}/bin/obabel` to use the version in your main virtual environment.; Normally, the activation of the environment should handle this but I suspect that the MGLTools install is doing something to the path variables that makes this automatic path handling fail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022186301
https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022186301:558,Modifiability,variab,variables,558,"I don't really know about MGLTools so I don't know how they add openbabel (but it seems like it's an old version...). If `which obabel` points to the MGLTools version, you could try to use a command like `/home/{user}/miniconda3/bin/obabel` instead, that should force the use of the conda version from the main env or `/home/{user}/miniconda3/envs/{mainenv}/bin/obabel` to use the version in your main virtual environment.; Normally, the activation of the environment should handle this but I suspect that the MGLTools install is doing something to the path variables that makes this automatic path handling fail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022186301
https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022192444:217,Usability,simpl,simply,217,"That worked, thank you very much. I didn't realise I had so many OpenBabel versions running on this thing. I'm rather new to command line, so I'll suspect the 'which' command will be very helpful.; I've aliased it to simply 'openbabel' for now, but I'll try and tidy up my system in future and change the default to the OpenBabel version that I want.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022192444
https://github.com/openbabel/openbabel/issues/2448#issuecomment-1025219056:400,Availability,down,download,400,"Either not updated package or they didn't update it before uploading to conda:; ```; % grep __version__ ~/anaconda3/pkgs/openbabel-3.1.1-py38hc545d94_1/lib/python3.8/site-packages/openbabel/__init__.py; __version__ = ""3.1.0""; ```. The `openbabel-3.pc` pkgconfig file indicates still version 3.1.0 from [osx-64/openbabel-3.1.1-py310he467037_3.tar.bz2](https://anaconda.org/conda-forge/openbabel/3.1.1/download/osx-64/openbabel-3.1.1-py310he467037_3.tar.bz2) which is latest osx release on conda...; ```; Name: Open Babel library; Description: libopenbabel; Version: 3.1.0; Libs: -L${libdir} -lopenbabel; Cflags: -I${pkgincludedir}; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2448#issuecomment-1025219056
https://github.com/openbabel/openbabel/issues/2448#issuecomment-1025219056:11,Deployability,update,updated,11,"Either not updated package or they didn't update it before uploading to conda:; ```; % grep __version__ ~/anaconda3/pkgs/openbabel-3.1.1-py38hc545d94_1/lib/python3.8/site-packages/openbabel/__init__.py; __version__ = ""3.1.0""; ```. The `openbabel-3.pc` pkgconfig file indicates still version 3.1.0 from [osx-64/openbabel-3.1.1-py310he467037_3.tar.bz2](https://anaconda.org/conda-forge/openbabel/3.1.1/download/osx-64/openbabel-3.1.1-py310he467037_3.tar.bz2) which is latest osx release on conda...; ```; Name: Open Babel library; Description: libopenbabel; Version: 3.1.0; Libs: -L${libdir} -lopenbabel; Cflags: -I${pkgincludedir}; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2448#issuecomment-1025219056
https://github.com/openbabel/openbabel/issues/2448#issuecomment-1025219056:42,Deployability,update,update,42,"Either not updated package or they didn't update it before uploading to conda:; ```; % grep __version__ ~/anaconda3/pkgs/openbabel-3.1.1-py38hc545d94_1/lib/python3.8/site-packages/openbabel/__init__.py; __version__ = ""3.1.0""; ```. The `openbabel-3.pc` pkgconfig file indicates still version 3.1.0 from [osx-64/openbabel-3.1.1-py310he467037_3.tar.bz2](https://anaconda.org/conda-forge/openbabel/3.1.1/download/osx-64/openbabel-3.1.1-py310he467037_3.tar.bz2) which is latest osx release on conda...; ```; Name: Open Babel library; Description: libopenbabel; Version: 3.1.0; Libs: -L${libdir} -lopenbabel; Cflags: -I${pkgincludedir}; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2448#issuecomment-1025219056
https://github.com/openbabel/openbabel/issues/2448#issuecomment-1025219056:477,Deployability,release,release,477,"Either not updated package or they didn't update it before uploading to conda:; ```; % grep __version__ ~/anaconda3/pkgs/openbabel-3.1.1-py38hc545d94_1/lib/python3.8/site-packages/openbabel/__init__.py; __version__ = ""3.1.0""; ```. The `openbabel-3.pc` pkgconfig file indicates still version 3.1.0 from [osx-64/openbabel-3.1.1-py310he467037_3.tar.bz2](https://anaconda.org/conda-forge/openbabel/3.1.1/download/osx-64/openbabel-3.1.1-py310he467037_3.tar.bz2) which is latest osx release on conda...; ```; Name: Open Babel library; Description: libopenbabel; Version: 3.1.0; Libs: -L${libdir} -lopenbabel; Cflags: -I${pkgincludedir}; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2448#issuecomment-1025219056
https://github.com/openbabel/openbabel/issues/2448#issuecomment-1026595777:95,Deployability,update,updated,95,The problem is that the tag openbabel-3-1-1 is missing the commit where the version number was updated. Everything else is the same so it is effectively 3.1.1 but it reports 3.1.0.; I suppose the best thing would be to update the tag to point to 650b1f829ac47cc84877a330366ec9485da3ec99 instead of cbd4db43f8908b874864280fdc03bf92569eebc1 and then rebuild the conda packages.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2448#issuecomment-1026595777
https://github.com/openbabel/openbabel/issues/2448#issuecomment-1026595777:219,Deployability,update,update,219,The problem is that the tag openbabel-3-1-1 is missing the commit where the version number was updated. Everything else is the same so it is effectively 3.1.1 but it reports 3.1.0.; I suppose the best thing would be to update the tag to point to 650b1f829ac47cc84877a330366ec9485da3ec99 instead of cbd4db43f8908b874864280fdc03bf92569eebc1 and then rebuild the conda packages.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2448#issuecomment-1026595777
https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1496,Modifiability,extend,extend,1496,"e set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324l).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176
https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:965,Security,Validat,ValidationSuite,965,"*A single* lone pair is assigned the absolute lowest priority in the set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176
https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1031,Security,Validat,ValidationSuite,1031,"solute lowest priority in the set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176
https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1715,Security,access,access,1715,"e set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324l).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176
https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1909,Usability,Guid,Guide,1909,"e set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324l).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176
https://github.com/openbabel/openbabel/issues/2451#issuecomment-1042758276:320,Usability,simpl,simply,320,"@merkys; > Are you positive that Open Babel adheres to CIP rules in its SMILES output?. While I recall an instance where OpenBabel reported stereogenic; centres as such (possibly in the documentation) including a scrutiny; if substitutents' priorities around a centre ascend/descend by turn to; the left/to the right, I simply forgot if there is an optional flag; for the /visual export/ of the structure as a .svg (or .png) to add; both. + the label of the atom indices, .and.; + (E)/(Z), (R)/(S), (P)/(M) next to the atom/bond. in question which would facilitate such a cross-check. I however; associate these optional decorations with e.g., RDKit and CDKDepict. Because the quick `obabel -L svg` only depicts a selection of options; OpenBabel offers, I welcome your input here.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1042758276
https://github.com/openbabel/openbabel/issues/2453#issuecomment-1051107921:314,Testability,test,tests,314,"Rewording your post, you identified a detail *to improve* OpenBabel, didn't you?. Well in this case, I suggest to 1) check out a current snap shot of OpenBabel as a fork in your repositories, 2) enter the adjustments in question, and 3) file for a pull request. The third step triggers a large number of automatic tests to check the then (automatically) built executable if your changes accidentally broke some functionality, or not. It takes about 15--30 mn only to let these tests run in the background.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2453#issuecomment-1051107921
https://github.com/openbabel/openbabel/issues/2453#issuecomment-1051107921:477,Testability,test,tests,477,"Rewording your post, you identified a detail *to improve* OpenBabel, didn't you?. Well in this case, I suggest to 1) check out a current snap shot of OpenBabel as a fork in your repositories, 2) enter the adjustments in question, and 3) file for a pull request. The third step triggers a large number of automatic tests to check the then (automatically) built executable if your changes accidentally broke some functionality, or not. It takes about 15--30 mn only to let these tests run in the background.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2453#issuecomment-1051107921
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067882019:533,Availability,Error,Error,533,"I cannot reproduce openbabel 3.1.1+dfsg-6 (apt) on Debian bullseye:; ```shellsession; $ cat << EOF | obabel -ismi -ocan; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; EOF; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	; 4 molecules converted; ```. I didn't go into detail, but perhaps this is because `std::clog` is not flushed. https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/oberror.cpp#L146",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067882019
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907:388,Availability,Error,Error,388,"@e-kwsm On the installation accessible to me, I'm able to replicate the processing, which yields the same output as reported. Equally, the initially stated observations using only openbabel may be replicated. For one, to identify the line yielding the warning. ```bash; $ obabel -ismi check01.smi -ocan -f 4 -l 4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	; 1 molecule converted; ``` ; while the other combinations of first line/last line to pick an other single line from the raw .smi file read don't yield a warning:. ```bash; $ obabel -ismi check01.smi -ocan -f 1 -l 1; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 2 -l 2; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 3 -l 3; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; 1 molecule converted; ```. For the other, the report over all four entries processed in one batch, with the warning not next to the line it would belong to:. ```bash; $ obabel -ismi check01.smi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907:1419,Availability,Error,Error,1419,"@e-kwsm On the installation accessible to me, I'm able to replicate the processing, which yields the same output as reported. Equally, the initially stated observations using only openbabel may be replicated. For one, to identify the line yielding the warning. ```bash; $ obabel -ismi check01.smi -ocan -f 4 -l 4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	; 1 molecule converted; ``` ; while the other combinations of first line/last line to pick an other single line from the raw .smi file read don't yield a warning:. ```bash; $ obabel -ismi check01.smi -ocan -f 1 -l 1; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 2 -l 2; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 3 -l 3; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; 1 molecule converted; ```. For the other, the report over all four entries processed in one batch, with the warning not next to the line it would belong to:. ```bash; $ obabel -ismi check01.smi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907:15,Deployability,install,installation,15,"@e-kwsm On the installation accessible to me, I'm able to replicate the processing, which yields the same output as reported. Equally, the initially stated observations using only openbabel may be replicated. For one, to identify the line yielding the warning. ```bash; $ obabel -ismi check01.smi -ocan -f 4 -l 4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	; 1 molecule converted; ``` ; while the other combinations of first line/last line to pick an other single line from the raw .smi file read don't yield a warning:. ```bash; $ obabel -ismi check01.smi -ocan -f 1 -l 1; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 2 -l 2; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 3 -l 3; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; 1 molecule converted; ```. For the other, the report over all four entries processed in one batch, with the warning not next to the line it would belong to:. ```bash; $ obabel -ismi check01.smi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907:28,Security,access,accessible,28,"@e-kwsm On the installation accessible to me, I'm able to replicate the processing, which yields the same output as reported. Equally, the initially stated observations using only openbabel may be replicated. For one, to identify the line yielding the warning. ```bash; $ obabel -ismi check01.smi -ocan -f 4 -l 4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	; 1 molecule converted; ``` ; while the other combinations of first line/last line to pick an other single line from the raw .smi file read don't yield a warning:. ```bash; $ obabel -ismi check01.smi -ocan -f 1 -l 1; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 2 -l 2; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 3 -l 3; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; 1 molecule converted; ```. For the other, the report over all four entries processed in one batch, with the warning not next to the line it would belong to:. ```bash; $ obabel -ismi check01.smi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067991970:4,Availability,error,error,4,"The error/warning messages and the output is sent to different streams (STDERR and STDOUT respectively) to not pollute the output file with the warnings. So the difference in buffering between the streams is the reason why the messages are ""out of order"". You could try `stdbuf` or `unbuffer` (c.f. https://stackoverflow.com/questions/3465619/how-to-make-output-of-any-shell-command-unbuffered/25548995#25548995) but I haven't tried them myself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067991970
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067991970:18,Integrability,message,messages,18,"The error/warning messages and the output is sent to different streams (STDERR and STDOUT respectively) to not pollute the output file with the warnings. So the difference in buffering between the streams is the reason why the messages are ""out of order"". You could try `stdbuf` or `unbuffer` (c.f. https://stackoverflow.com/questions/3465619/how-to-make-output-of-any-shell-command-unbuffered/25548995#25548995) but I haven't tried them myself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067991970
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067991970:227,Integrability,message,messages,227,"The error/warning messages and the output is sent to different streams (STDERR and STDOUT respectively) to not pollute the output file with the warnings. So the difference in buffering between the streams is the reason why the messages are ""out of order"". You could try `stdbuf` or `unbuffer` (c.f. https://stackoverflow.com/questions/3465619/how-to-make-output-of-any-shell-command-unbuffered/25548995#25548995) but I haven't tried them myself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067991970
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:156,Availability,reliab,reliably,156,"@fredrikw For quite some time, I couldn't translate the conceptual hints and tips the links in the documents you refer to into filters/scripts to work with reliably. With better insight than I currently posses, I speculate there is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:969,Availability,error,error,969,"@fredrikw For quite some time, I couldn't translate the conceptual hints and tips the links in the documents you refer to into filters/scripts to work with reliably. With better insight than I currently posses, I speculate there is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1463,Availability,error,errorlevel,1463,"ILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output duri",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1906,Deployability,install,installation,1906,"cript below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output during the; # test conversion) are not reported back. {test_convert = ""obabel -:\"""" $1 ""\"" -ocan > shuttle.txt 2>&1"";; system(test_convert);. filter = ""awk 'END{if (NR==2) {print $0;}}' shuttle.txt""; system(filter);; }; ```; Test input data (`check01.smi`):; ```; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:2126,Deployability,deploy,deploy,2126,"g is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output during the; # test conversion) are not reported back. {test_convert = ""obabel -:\"""" $1 ""\"" -ocan > shuttle.txt 2>&1"";; system(test_convert);. filter = ""awk 'END{if (NR==2) {print $0;}}' shuttle.txt""; system(filter);; }; ```; Test input data (`check01.smi`):; ```; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; c1ccncc1; C1CCCC5; CC; CCC; ```; Reported SMILES passing the filter successfully:. ```bash; $ awk -f filter.awk check01.smi ; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; O=C(OC(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1882,Integrability,depend,depends,1882,"cript below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output during the; # test conversion) are not reported back. {test_convert = ""obabel -:\"""" $1 ""\"" -ocan > shuttle.txt 2>&1"";; system(test_convert);. filter = ""awk 'END{if (NR==2) {print $0;}}' shuttle.txt""; system(filter);; }; ```; Test input data (`check01.smi`):; ```; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:631,Modifiability,extend,extends,631,"@fredrikw For quite some time, I couldn't translate the conceptual hints and tips the links in the documents you refer to into filters/scripts to work with reliably. With better insight than I currently posses, I speculate there is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1250,Modifiability,portab,portable,1250,"is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:889,Performance,perform,performs,889,"@fredrikw For quite some time, I couldn't translate the conceptual hints and tips the links in the documents you refer to into filters/scripts to work with reliably. With better insight than I currently posses, I speculate there is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1200,Testability,test,testing,1200,"is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1942,Testability,Test,Tests,1942,"eam. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output during the; # test conversion) are not reported back. {test_convert = ""obabel -:\"""" $1 ""\"" -ocan > shuttle.txt 2>&1"";; system(test_convert);. filter = ""awk 'END{if (NR==2) {print $0;}}' shuttle.txt""; system(filter);; }; ```; Test input data (`check01.smi`):; ```; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; c1ccncc1; C1CCCC5; CC; CCC; ```; Reported SMILES passing the filter successfu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:2418,Testability,test,test,2418,", this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output during the; # test conversion) are not reported back. {test_convert = ""obabel -:\"""" $1 ""\"" -ocan > shuttle.txt 2>&1"";; system(test_convert);. filter = ""awk 'END{if (NR==2) {print $0;}}' shuttle.txt""; system(filter);; }; ```; Test input data (`check01.smi`):; ```; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; c1ccncc1; C1CCCC5; CC; CCC; ```; Reported SMILES passing the filter successfully:. ```bash; $ awk -f filter.awk check01.smi ; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; c1cccnc1	; CC	; CCC	; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:2629,Testability,Test,Test,2629,", this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output during the; # test conversion) are not reported back. {test_convert = ""obabel -:\"""" $1 ""\"" -ocan > shuttle.txt 2>&1"";; system(test_convert);. filter = ""awk 'END{if (NR==2) {print $0;}}' shuttle.txt""; system(filter);; }; ```; Test input data (`check01.smi`):; ```; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; c1ccncc1; C1CCCC5; CC; CCC; ```; Reported SMILES passing the filter successfully:. ```bash; $ awk -f filter.awk check01.smi ; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; c1cccnc1	; CC	; CCC	; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081651812:45,Availability,error,error,45,"Was all that you wanted to do filter out the error messages? In that case, a simple `obabel check01.smi -ocan -e 2>/dev/null` would do. Or `obabel check01.smi -O result01.can -e` to get the output in a file. I thought you needed to know which input SMILESs that didn't convert properly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081651812
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081651812:51,Integrability,message,messages,51,"Was all that you wanted to do filter out the error messages? In that case, a simple `obabel check01.smi -ocan -e 2>/dev/null` would do. Or `obabel check01.smi -O result01.can -e` to get the output in a file. I thought you needed to know which input SMILESs that didn't convert properly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081651812
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081651812:77,Usability,simpl,simple,77,"Was all that you wanted to do filter out the error messages? In that case, a simple `obabel check01.smi -ocan -e 2>/dev/null` would do. Or `obabel check01.smi -O result01.can -e` to get the output in a file. I thought you needed to know which input SMILESs that didn't convert properly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081651812
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:765,Availability,error,error,765,"@fredrikw ; Your approach by `obabel check01.smi -O result01.can -e` is more compact, easier to memorize and returns unproblematic SMILES strings at a faster rate. However, I notice it returns seven out of eight entries of `check01.smi` -- including the fourth one my approach did not let pass. Do you think OpenBabel's report about this entry qualifies to skip the entry altogether?. For checks with partialsmiles'[1] `validate.py`, the entry passes well:. ```bash; $ python3 validate.py ""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O""; Input: CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O. 1. Parse as full SMILES:. OK. 2. Parse as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partial",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:997,Availability,Error,Error,997,"@fredrikw ; Your approach by `obabel check01.smi -O result01.can -e` is more compact, easier to memorize and returns unproblematic SMILES strings at a faster rate. However, I notice it returns seven out of eight entries of `check01.smi` -- including the fourth one my approach did not let pass. Do you think OpenBabel's report about this entry qualifies to skip the entry altogether?. For checks with partialsmiles'[1] `validate.py`, the entry passes well:. ```bash; $ python3 validate.py ""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O""; Input: CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O. 1. Parse as full SMILES:. OK. 2. Parse as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partial",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:1238,Deployability,configurat,configuration,1238,". Do you think OpenBabel's report about this entry qualifies to skip the entry altogether?. For checks with partialsmiles'[1] `validate.py`, the entry passes well:. ```bash; $ python3 validate.py ""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O""; Input: CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O. 1. Parse as full SMILES:. OK. 2. Parse as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the paramet",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:1787,Deployability,configurat,configurations,1787,"se as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the parameters how the molecules are generated (outside OpenBabel) to use only SMILES with unambiguous stereochemistry. ---. *) On a tangent, this reminds me a bit to the extended stereochemistry options in .sdf (v3000 format) with logical .and. and .or. as seen e.g., in a presentation[3] by Andrey Yerin's about how to possibly improve InChI:. ![2022-03-30_Yerin_InChI]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:2953,Deployability,update,update,2953," Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the parameters how the molecules are generated (outside OpenBabel) to use only SMILES with unambiguous stereochemistry. ---. *) On a tangent, this reminds me a bit to the extended stereochemistry options in .sdf (v3000 format) with logical .and. and .or. as seen e.g., in a presentation[3] by Andrey Yerin's about how to possibly improve InChI:. ![2022-03-30_Yerin_InChI](https://user-images.githubusercontent.com/19709084/160856761-5908e26c-1f6d-4657-b6cb-0d55acbd2c53.png). [1] https://github.com/baoilleach/partialsmiles; [2] https://github.com/cdk/depict; [3] slide 8 of the .pdf https://www.inchi-trust.org/wp/wp-content/uploads/2019/12/19.-InChI-Stereo-Yerin-2019-update.pdf",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:1238,Modifiability,config,configuration,1238,". Do you think OpenBabel's report about this entry qualifies to skip the entry altogether?. For checks with partialsmiles'[1] `validate.py`, the entry passes well:. ```bash; $ python3 validate.py ""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O""; Input: CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O. 1. Parse as full SMILES:. OK. 2. Parse as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the paramet",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:1787,Modifiability,config,configurations,1787,"se as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the parameters how the molecules are generated (outside OpenBabel) to use only SMILES with unambiguous stereochemistry. ---. *) On a tangent, this reminds me a bit to the extended stereochemistry options in .sdf (v3000 format) with logical .and. and .or. as seen e.g., in a presentation[3] by Andrey Yerin's about how to possibly improve InChI:. ![2022-03-30_Yerin_InChI]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:2194,Modifiability,extend,extended,2194," Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the parameters how the molecules are generated (outside OpenBabel) to use only SMILES with unambiguous stereochemistry. ---. *) On a tangent, this reminds me a bit to the extended stereochemistry options in .sdf (v3000 format) with logical .and. and .or. as seen e.g., in a presentation[3] by Andrey Yerin's about how to possibly improve InChI:. ![2022-03-30_Yerin_InChI](https://user-images.githubusercontent.com/19709084/160856761-5908e26c-1f6d-4657-b6cb-0d55acbd2c53.png). [1] https://github.com/baoilleach/partialsmiles; [2] https://github.com/cdk/depict; [3] slide 8 of the .pdf https://www.inchi-trust.org/wp/wp-content/uploads/2019/12/19.-InChI-Stereo-Yerin-2019-update.pdf",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:2454,Modifiability,extend,extended,2454," Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the parameters how the molecules are generated (outside OpenBabel) to use only SMILES with unambiguous stereochemistry. ---. *) On a tangent, this reminds me a bit to the extended stereochemistry options in .sdf (v3000 format) with logical .and. and .or. as seen e.g., in a presentation[3] by Andrey Yerin's about how to possibly improve InChI:. ![2022-03-30_Yerin_InChI](https://user-images.githubusercontent.com/19709084/160856761-5908e26c-1f6d-4657-b6cb-0d55acbd2c53.png). [1] https://github.com/baoilleach/partialsmiles; [2] https://github.com/cdk/depict; [3] slide 8 of the .pdf https://www.inchi-trust.org/wp/wp-content/uploads/2019/12/19.-InChI-Stereo-Yerin-2019-update.pdf",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:420,Security,validat,validate,420,"@fredrikw ; Your approach by `obabel check01.smi -O result01.can -e` is more compact, easier to memorize and returns unproblematic SMILES strings at a faster rate. However, I notice it returns seven out of eight entries of `check01.smi` -- including the fourth one my approach did not let pass. Do you think OpenBabel's report about this entry qualifies to skip the entry altogether?. For checks with partialsmiles'[1] `validate.py`, the entry passes well:. ```bash; $ python3 validate.py ""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O""; Input: CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O. 1. Parse as full SMILES:. OK. 2. Parse as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partial",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:477,Security,validat,validate,477,"@fredrikw ; Your approach by `obabel check01.smi -O result01.can -e` is more compact, easier to memorize and returns unproblematic SMILES strings at a faster rate. However, I notice it returns seven out of eight entries of `check01.smi` -- including the fourth one my approach did not let pass. Do you think OpenBabel's report about this entry qualifies to skip the entry altogether?. For checks with partialsmiles'[1] `validate.py`, the entry passes well:. ```bash; $ python3 validate.py ""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O""; Input: CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O. 1. Parse as full SMILES:. OK. 2. Parse as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partial",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:2515,Testability,log,logical,2515," Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the parameters how the molecules are generated (outside OpenBabel) to use only SMILES with unambiguous stereochemistry. ---. *) On a tangent, this reminds me a bit to the extended stereochemistry options in .sdf (v3000 format) with logical .and. and .or. as seen e.g., in a presentation[3] by Andrey Yerin's about how to possibly improve InChI:. ![2022-03-30_Yerin_InChI](https://user-images.githubusercontent.com/19709084/160856761-5908e26c-1f6d-4657-b6cb-0d55acbd2c53.png). [1] https://github.com/baoilleach/partialsmiles; [2] https://github.com/cdk/depict; [3] slide 8 of the .pdf https://www.inchi-trust.org/wp/wp-content/uploads/2019/12/19.-InChI-Stereo-Yerin-2019-update.pdf",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083248494:982,Integrability,interface,interface,982,"If it is serious enough for your application, you need to be the judge of that. But there is a problem in how the Cis/Trans is specified on the double bond. If you look at the depictions from CDK you will see that it is marked as unspecified both in `#1` and `#2`.; In your SMILES `CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O`, you specify that for the third C in the string, both substituents should be on the same side of the double bond which is not possible.; If you need the stereo on the double bond, the correct ones are:; `""CC(O/C(/CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" (#3)` and `""CC(O\C(\CCC[C@H]([C@H]; (C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" (#4)`; ![image](https://user-images.githubusercontent.com/86855/160865007-706a7774-093d-4cf6-9e91-0e2213e72648.png). So you need to think through what you are trying to do and then act accordingly. If you do indeed want to skip molecules with warnings, I don't think it is possible through the obabel interface.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083248494
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380:167,Availability,down,down,167,"I knew `#1` and `#2` to be unspecific about the double bond both because of the wiggle bonds CDKDepict uses .and. because using the optional CIP labeling (second pull-down menu, last entry) thankfully assigns both (R)/(S) and (E)/(Z) if applicable. What I still lack with SMILES is e.g., to recognize manually well enough if the substitutents around a double bond are in cis, or trans relationship. As with but-2-ene, the four permutations are simpler to recognize (either `//`, or `\\` point to the same direction for the cis; and either opposing `/\`, or `\/` for the trans relationship):. ![2022-03-30_cdkdepict_CIP](https://user-images.githubusercontent.com/19709084/160873791-cd5ca720-9dbf-4a4c-96b1-e504890a1204.png). That's when tested programs may help. Ok. Thank you; case closed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380:736,Testability,test,tested,736,"I knew `#1` and `#2` to be unspecific about the double bond both because of the wiggle bonds CDKDepict uses .and. because using the optional CIP labeling (second pull-down menu, last entry) thankfully assigns both (R)/(S) and (E)/(Z) if applicable. What I still lack with SMILES is e.g., to recognize manually well enough if the substitutents around a double bond are in cis, or trans relationship. As with but-2-ene, the four permutations are simpler to recognize (either `//`, or `\\` point to the same direction for the cis; and either opposing `/\`, or `\/` for the trans relationship):. ![2022-03-30_cdkdepict_CIP](https://user-images.githubusercontent.com/19709084/160873791-cd5ca720-9dbf-4a4c-96b1-e504890a1204.png). That's when tested programs may help. Ok. Thank you; case closed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380
https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380:444,Usability,simpl,simpler,444,"I knew `#1` and `#2` to be unspecific about the double bond both because of the wiggle bonds CDKDepict uses .and. because using the optional CIP labeling (second pull-down menu, last entry) thankfully assigns both (R)/(S) and (E)/(Z) if applicable. What I still lack with SMILES is e.g., to recognize manually well enough if the substitutents around a double bond are in cis, or trans relationship. As with but-2-ene, the four permutations are simpler to recognize (either `//`, or `\\` point to the same direction for the cis; and either opposing `/\`, or `\/` for the trans relationship):. ![2022-03-30_cdkdepict_CIP](https://user-images.githubusercontent.com/19709084/160873791-cd5ca720-9dbf-4a4c-96b1-e504890a1204.png). That's when tested programs may help. Ok. Thank you; case closed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380
https://github.com/openbabel/openbabel/pull/2456#issuecomment-1072793023:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2456#issuecomment-1072793023
https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:124,Availability,recover,recover,124,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976
https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:316,Performance,load,load,316,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976
https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:392,Performance,Load,Load,392,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976
https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:486,Performance,load,loadmodels,486,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976
https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:612,Performance,optimiz,optimize,612,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976
https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:124,Safety,recover,recover,124,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976
https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:111,Testability,test,testing,111,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976
https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:338,Testability,log,log,338,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976
https://github.com/openbabel/openbabel/issues/2458#issuecomment-1087275736:691,Availability,avail,available,691,"To qualify as a `.cif` (smaller molecules) or a `.mmcif` file (for larger protein/DNA/RNA models), the file should equally contain information about the symmetries present in the unit cell, as well as about the three vectors defining the parallelepiped (i.e., cell lengths a, b, c and the enclosed angles \alpha, \beta, \gamma). Depending on the symmetry met, some of these values may be equal (e.g., cubic Bravais class). Your file seems to miss them. Because the data set seems to be the result of a simulation, do you have the option for an output in a different file format? Given the chemistry (size of the model .and. that there are so many amino acids around), `.pdb` likely would be available, too. Speaking of small molecule data (e.g., `.cif` from the COD like [this one](http://www.crystallography.net/cod/2005645.html)), the archive attached below provides an example converting a single entry. There, once a `.sdf` is in hand (with all molecules _in one model_) the `--separate` flag converts them into _multiple models_ one `.sdf` container. Later, these are split into individual `.sdf` files with `-m`:. ```bash; obabel transformation.sdf -O separate_models.sdf --separate --unique; obabel separate_models.sdf -O single.sdf -m; ```; (Note: use `--unique` with what you intend in subsequent processing in mind.). Lacking some crucial information, the same approach were not reasonable for `P04406.mmcif`. [example_cod.zip](https://github.com/openbabel/openbabel/files/8408123/example_cod.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458#issuecomment-1087275736
https://github.com/openbabel/openbabel/issues/2458#issuecomment-1087275736:329,Integrability,Depend,Depending,329,"To qualify as a `.cif` (smaller molecules) or a `.mmcif` file (for larger protein/DNA/RNA models), the file should equally contain information about the symmetries present in the unit cell, as well as about the three vectors defining the parallelepiped (i.e., cell lengths a, b, c and the enclosed angles \alpha, \beta, \gamma). Depending on the symmetry met, some of these values may be equal (e.g., cubic Bravais class). Your file seems to miss them. Because the data set seems to be the result of a simulation, do you have the option for an output in a different file format? Given the chemistry (size of the model .and. that there are so many amino acids around), `.pdb` likely would be available, too. Speaking of small molecule data (e.g., `.cif` from the COD like [this one](http://www.crystallography.net/cod/2005645.html)), the archive attached below provides an example converting a single entry. There, once a `.sdf` is in hand (with all molecules _in one model_) the `--separate` flag converts them into _multiple models_ one `.sdf` container. Later, these are split into individual `.sdf` files with `-m`:. ```bash; obabel transformation.sdf -O separate_models.sdf --separate --unique; obabel separate_models.sdf -O single.sdf -m; ```; (Note: use `--unique` with what you intend in subsequent processing in mind.). Lacking some crucial information, the same approach were not reasonable for `P04406.mmcif`. [example_cod.zip](https://github.com/openbabel/openbabel/files/8408123/example_cod.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458#issuecomment-1087275736
https://github.com/openbabel/openbabel/issues/2458#issuecomment-1087280708:238,Availability,avail,available,238,"> Because the data set seems to be the result of a simulation, do you have the option for an output in a different file format? Given the chemistry (size of the model .and. that there are so many amino acids around), .pdb likely would be available, too. No, this research output was only provided in the mmcif format. My understanding was that all `.pdb` file data was being migrated to mmcif due to its advantages. It seems you have some concerns about the suitability of the `.mmcif` format for this use case, but it is absolutely already in use, and further the molecule identity can easily be obtained from the `asym_id`. I don't see any issue here asides from the missing feature for openbabel to parse this correctly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458#issuecomment-1087280708
https://github.com/openbabel/openbabel/issues/2458#issuecomment-1088274839:1192,Integrability,message,message,1192,"I read your lines in the tune of «nice that Jmol is able to; contribute to a solution, but it does so only via a GUI». If this interpretation were correct, my reply to this is /no/. With; e.g, flags `-ions`, especially the GUI-less JmolData.jar (equally; distributed in the Jmol archive) may run from the CLI in large; batches from the CLI. All you need is to identify the commands necessary and write a script; .spt (there is an interactive Jmol script documentation; here, you; only need to gravitate around the keywords `load` for file input and; `write` for the subsequent export. The script editor [Jmol.jar GUI,; File -> Script Editor] eases to compose them and probe their action,; too.). Later use the script from the CLI in the pattern of . java -jar Jmol.jar -ions water_script.spt. where `water_script.spt` may contain for-loops, if-clauses, arrays,; etc. Just look for e.g., «JmolData.jar apparently doesn't report; InChI back to CLI» in the Jmol user list archive back in February; 2022 when I faced an automation problem Robert Hanson knew how to; address the Jmol way. This command may be called from bash, Python,; AWK, etc. Root entry: https://sourceforge.net/p/jmol/mailman/message/37610564/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458#issuecomment-1088274839
https://github.com/openbabel/openbabel/issues/2458#issuecomment-1088274839:25,Performance,tune,tune,25,"I read your lines in the tune of «nice that Jmol is able to; contribute to a solution, but it does so only via a GUI». If this interpretation were correct, my reply to this is /no/. With; e.g, flags `-ions`, especially the GUI-less JmolData.jar (equally; distributed in the Jmol archive) may run from the CLI in large; batches from the CLI. All you need is to identify the commands necessary and write a script; .spt (there is an interactive Jmol script documentation; here, you; only need to gravitate around the keywords `load` for file input and; `write` for the subsequent export. The script editor [Jmol.jar GUI,; File -> Script Editor] eases to compose them and probe their action,; too.). Later use the script from the CLI in the pattern of . java -jar Jmol.jar -ions water_script.spt. where `water_script.spt` may contain for-loops, if-clauses, arrays,; etc. Just look for e.g., «JmolData.jar apparently doesn't report; InChI back to CLI» in the Jmol user list archive back in February; 2022 when I faced an automation problem Robert Hanson knew how to; address the Jmol way. This command may be called from bash, Python,; AWK, etc. Root entry: https://sourceforge.net/p/jmol/mailman/message/37610564/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458#issuecomment-1088274839
https://github.com/openbabel/openbabel/issues/2458#issuecomment-1088274839:524,Performance,load,load,524,"I read your lines in the tune of «nice that Jmol is able to; contribute to a solution, but it does so only via a GUI». If this interpretation were correct, my reply to this is /no/. With; e.g, flags `-ions`, especially the GUI-less JmolData.jar (equally; distributed in the Jmol archive) may run from the CLI in large; batches from the CLI. All you need is to identify the commands necessary and write a script; .spt (there is an interactive Jmol script documentation; here, you; only need to gravitate around the keywords `load` for file input and; `write` for the subsequent export. The script editor [Jmol.jar GUI,; File -> Script Editor] eases to compose them and probe their action,; too.). Later use the script from the CLI in the pattern of . java -jar Jmol.jar -ions water_script.spt. where `water_script.spt` may contain for-loops, if-clauses, arrays,; etc. Just look for e.g., «JmolData.jar apparently doesn't report; InChI back to CLI» in the Jmol user list archive back in February; 2022 when I faced an automation problem Robert Hanson knew how to; address the Jmol way. This command may be called from bash, Python,; AWK, etc. Root entry: https://sourceforge.net/p/jmol/mailman/message/37610564/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458#issuecomment-1088274839
https://github.com/openbabel/openbabel/pull/2460#issuecomment-1102058179:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2460#issuecomment-1102058179
https://github.com/openbabel/openbabel/pull/2463#issuecomment-1107896382:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2463#issuecomment-1107896382
https://github.com/openbabel/openbabel/pull/2463#issuecomment-1151667182:26,Availability,failure,failures,26,Thanks - LGTM - the build failures are unrelated.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2463#issuecomment-1151667182
https://github.com/openbabel/openbabel/pull/2464#issuecomment-1108031805:173,Deployability,update,updated,173,"Since [scripts/R/examples/openbabelR/src/openbabel-R.cpp](https://github.com/openbabel/openbabel/blob/master/scripts/R/examples/openbabelR/src/openbabel-R.cpp) had not been updated for a long time and was generated by SWIG 2, the diff contains a bunch of parts irrelevant to this PR. (#2499)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2464#issuecomment-1108031805
https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893:153,Integrability,wrap,wrappers,153,"The response from the SWIG community is. > [PHP] #1982 #1457 https://sourceforge.net/p/swig/bugs/1339/; > SWIG now only use PHP's C API to implement its wrappers, and no; > longer generates PHP code to define classes. The wrappers should; > be almost entirely compatible with those generated before, but; > faster and without some previously hard-to-fix bugs.; > ; > The main notable difference is SWIG no longer generates a .php; > wrapper at all by default (only if %pragma(php) code=... or; > %pragma(php) include=... are specified in the interface file).; > This also means you need to load the module via extension=...; > in php.ini, rather than letting the dl() in the generated; > .php wrapper load it (but dl() has only worked for command-line; > PHP for some years now). @mwojcikowski Any thoughts on how we generate a .php wrapper now in PHP 8.x",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893
https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893:222,Integrability,wrap,wrappers,222,"The response from the SWIG community is. > [PHP] #1982 #1457 https://sourceforge.net/p/swig/bugs/1339/; > SWIG now only use PHP's C API to implement its wrappers, and no; > longer generates PHP code to define classes. The wrappers should; > be almost entirely compatible with those generated before, but; > faster and without some previously hard-to-fix bugs.; > ; > The main notable difference is SWIG no longer generates a .php; > wrapper at all by default (only if %pragma(php) code=... or; > %pragma(php) include=... are specified in the interface file).; > This also means you need to load the module via extension=...; > in php.ini, rather than letting the dl() in the generated; > .php wrapper load it (but dl() has only worked for command-line; > PHP for some years now). @mwojcikowski Any thoughts on how we generate a .php wrapper now in PHP 8.x",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893
https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893:433,Integrability,wrap,wrapper,433,"The response from the SWIG community is. > [PHP] #1982 #1457 https://sourceforge.net/p/swig/bugs/1339/; > SWIG now only use PHP's C API to implement its wrappers, and no; > longer generates PHP code to define classes. The wrappers should; > be almost entirely compatible with those generated before, but; > faster and without some previously hard-to-fix bugs.; > ; > The main notable difference is SWIG no longer generates a .php; > wrapper at all by default (only if %pragma(php) code=... or; > %pragma(php) include=... are specified in the interface file).; > This also means you need to load the module via extension=...; > in php.ini, rather than letting the dl() in the generated; > .php wrapper load it (but dl() has only worked for command-line; > PHP for some years now). @mwojcikowski Any thoughts on how we generate a .php wrapper now in PHP 8.x",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893
https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893:542,Integrability,interface,interface,542,"The response from the SWIG community is. > [PHP] #1982 #1457 https://sourceforge.net/p/swig/bugs/1339/; > SWIG now only use PHP's C API to implement its wrappers, and no; > longer generates PHP code to define classes. The wrappers should; > be almost entirely compatible with those generated before, but; > faster and without some previously hard-to-fix bugs.; > ; > The main notable difference is SWIG no longer generates a .php; > wrapper at all by default (only if %pragma(php) code=... or; > %pragma(php) include=... are specified in the interface file).; > This also means you need to load the module via extension=...; > in php.ini, rather than letting the dl() in the generated; > .php wrapper load it (but dl() has only worked for command-line; > PHP for some years now). @mwojcikowski Any thoughts on how we generate a .php wrapper now in PHP 8.x",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893
https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893:693,Integrability,wrap,wrapper,693,"The response from the SWIG community is. > [PHP] #1982 #1457 https://sourceforge.net/p/swig/bugs/1339/; > SWIG now only use PHP's C API to implement its wrappers, and no; > longer generates PHP code to define classes. The wrappers should; > be almost entirely compatible with those generated before, but; > faster and without some previously hard-to-fix bugs.; > ; > The main notable difference is SWIG no longer generates a .php; > wrapper at all by default (only if %pragma(php) code=... or; > %pragma(php) include=... are specified in the interface file).; > This also means you need to load the module via extension=...; > in php.ini, rather than letting the dl() in the generated; > .php wrapper load it (but dl() has only worked for command-line; > PHP for some years now). @mwojcikowski Any thoughts on how we generate a .php wrapper now in PHP 8.x",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893
https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893:833,Integrability,wrap,wrapper,833,"The response from the SWIG community is. > [PHP] #1982 #1457 https://sourceforge.net/p/swig/bugs/1339/; > SWIG now only use PHP's C API to implement its wrappers, and no; > longer generates PHP code to define classes. The wrappers should; > be almost entirely compatible with those generated before, but; > faster and without some previously hard-to-fix bugs.; > ; > The main notable difference is SWIG no longer generates a .php; > wrapper at all by default (only if %pragma(php) code=... or; > %pragma(php) include=... are specified in the interface file).; > This also means you need to load the module via extension=...; > in php.ini, rather than letting the dl() in the generated; > .php wrapper load it (but dl() has only worked for command-line; > PHP for some years now). @mwojcikowski Any thoughts on how we generate a .php wrapper now in PHP 8.x",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893
https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893:590,Performance,load,load,590,"The response from the SWIG community is. > [PHP] #1982 #1457 https://sourceforge.net/p/swig/bugs/1339/; > SWIG now only use PHP's C API to implement its wrappers, and no; > longer generates PHP code to define classes. The wrappers should; > be almost entirely compatible with those generated before, but; > faster and without some previously hard-to-fix bugs.; > ; > The main notable difference is SWIG no longer generates a .php; > wrapper at all by default (only if %pragma(php) code=... or; > %pragma(php) include=... are specified in the interface file).; > This also means you need to load the module via extension=...; > in php.ini, rather than letting the dl() in the generated; > .php wrapper load it (but dl() has only worked for command-line; > PHP for some years now). @mwojcikowski Any thoughts on how we generate a .php wrapper now in PHP 8.x",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893
https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893:701,Performance,load,load,701,"The response from the SWIG community is. > [PHP] #1982 #1457 https://sourceforge.net/p/swig/bugs/1339/; > SWIG now only use PHP's C API to implement its wrappers, and no; > longer generates PHP code to define classes. The wrappers should; > be almost entirely compatible with those generated before, but; > faster and without some previously hard-to-fix bugs.; > ; > The main notable difference is SWIG no longer generates a .php; > wrapper at all by default (only if %pragma(php) code=... or; > %pragma(php) include=... are specified in the interface file).; > This also means you need to load the module via extension=...; > in php.ini, rather than letting the dl() in the generated; > .php wrapper load it (but dl() has only worked for command-line; > PHP for some years now). @mwojcikowski Any thoughts on how we generate a .php wrapper now in PHP 8.x",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893
https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828:1310,Modifiability,extend,extended,1310,"Do not call `-n`, but `-xn` (mnemonics _use_ or _execute_ a format specific option which `-n` is). As an illustration (obabel 3.1.1 as provided in Linux Debian 12/bookworm (branch testing):. ```bash; $ obabel -:""C"" --title ""methane (Angstroms, default)"" -h --gen3d -o gr96; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (Angstroms, default); END; POSITION; 1 UNL C 1 0.95144 0.06266 -0.06096; 1 UNL H 2 2.04364 0.06266 -0.06096; 1 UNL H 3 0.58738 0.24046 -1.07523; 1 UNL H 4 0.58737 0.85214 0.60016; 1 UNL H 5 0.58737 -0.90463 0.29219; END; 1 molecule converted; ```; but; ```bash ; $ obabel -:""C"" --title ""methane (nanometers)"" -h --gen3d -o gr96 -xn; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (nanometers); END; POSITION; 1 UNL C 1 0.10736 -0.00092 0.00671; 1 UNL H 2 0.21658 -0.00092 0.00671; 1 UNL H 3 0.07095 0.07563 -0.06216; 1 UNL H 4 0.07095 0.02045 0.10744; 1 UNL H 5 0.07095 -0.09884 -0.02515; END; 1 molecule converted; ```; ---. Given the simplicity of methane, GROMOS possibly is just fine with default `--gen3d` as starting geometry OpenBabel provides here. It often is the sweet spot of computational cost among the five levels of 3D coordinate generation offered. (The manual points to a dedicated publication to balance pros and cons.) For methane in particular, there is no need for an extended permutation of rotor search `--gen3d best` (or `--gen3d slowest`) offer, either. . Because you mention GROMOS, _I speculate_ you aim to provide multiple _conformers_ of one (more complex) molecule for GROMOS to start with. OpenBabel can provide you these geometries as individual, separate models, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828
https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828:180,Testability,test,testing,180,"Do not call `-n`, but `-xn` (mnemonics _use_ or _execute_ a format specific option which `-n` is). As an illustration (obabel 3.1.1 as provided in Linux Debian 12/bookworm (branch testing):. ```bash; $ obabel -:""C"" --title ""methane (Angstroms, default)"" -h --gen3d -o gr96; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (Angstroms, default); END; POSITION; 1 UNL C 1 0.95144 0.06266 -0.06096; 1 UNL H 2 2.04364 0.06266 -0.06096; 1 UNL H 3 0.58738 0.24046 -1.07523; 1 UNL H 4 0.58737 0.85214 0.60016; 1 UNL H 5 0.58737 -0.90463 0.29219; END; 1 molecule converted; ```; but; ```bash ; $ obabel -:""C"" --title ""methane (nanometers)"" -h --gen3d -o gr96 -xn; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (nanometers); END; POSITION; 1 UNL C 1 0.10736 -0.00092 0.00671; 1 UNL H 2 0.21658 -0.00092 0.00671; 1 UNL H 3 0.07095 0.07563 -0.06216; 1 UNL H 4 0.07095 0.02045 0.10744; 1 UNL H 5 0.07095 -0.09884 -0.02515; END; 1 molecule converted; ```; ---. Given the simplicity of methane, GROMOS possibly is just fine with default `--gen3d` as starting geometry OpenBabel provides here. It often is the sweet spot of computational cost among the five levels of 3D coordinate generation offered. (The manual points to a dedicated publication to balance pros and cons.) For methane in particular, there is no need for an extended permutation of rotor search `--gen3d best` (or `--gen3d slowest`) offer, either. . Because you mention GROMOS, _I speculate_ you aim to provide multiple _conformers_ of one (more complex) molecule for GROMOS to start with. OpenBabel can provide you these geometries as individual, separate models, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828
https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828:957,Usability,simpl,simplicity,957,"Do not call `-n`, but `-xn` (mnemonics _use_ or _execute_ a format specific option which `-n` is). As an illustration (obabel 3.1.1 as provided in Linux Debian 12/bookworm (branch testing):. ```bash; $ obabel -:""C"" --title ""methane (Angstroms, default)"" -h --gen3d -o gr96; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (Angstroms, default); END; POSITION; 1 UNL C 1 0.95144 0.06266 -0.06096; 1 UNL H 2 2.04364 0.06266 -0.06096; 1 UNL H 3 0.58738 0.24046 -1.07523; 1 UNL H 4 0.58737 0.85214 0.60016; 1 UNL H 5 0.58737 -0.90463 0.29219; END; 1 molecule converted; ```; but; ```bash ; $ obabel -:""C"" --title ""methane (nanometers)"" -h --gen3d -o gr96 -xn; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (nanometers); END; POSITION; 1 UNL C 1 0.10736 -0.00092 0.00671; 1 UNL H 2 0.21658 -0.00092 0.00671; 1 UNL H 3 0.07095 0.07563 -0.06216; 1 UNL H 4 0.07095 0.02045 0.10744; 1 UNL H 5 0.07095 -0.09884 -0.02515; END; 1 molecule converted; ```; ---. Given the simplicity of methane, GROMOS possibly is just fine with default `--gen3d` as starting geometry OpenBabel provides here. It often is the sweet spot of computational cost among the five levels of 3D coordinate generation offered. (The manual points to a dedicated publication to balance pros and cons.) For methane in particular, there is no need for an extended permutation of rotor search `--gen3d best` (or `--gen3d slowest`) offer, either. . Because you mention GROMOS, _I speculate_ you aim to provide multiple _conformers_ of one (more complex) molecule for GROMOS to start with. OpenBabel can provide you these geometries as individual, separate models, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828
https://github.com/openbabel/openbabel/issues/2472#issuecomment-1120945509:241,Security,access,accessing,241,"Based on the «steps to reproduce» shared by you, it seems plausible you missed an explicit space between `-O` (uppercase o) and the file to store the result as permanent record. I.e., try `obabel -icif 1ner.cif -opdb -O 1ner.pdb`. But then (accessing the .cif with vim), there are approx. 35.6 k atoms described, perhaps a bit much for obabel to digest quickly. Is there a particular reason why using the .pdb ready-to-go offered by the database is not an option for you?. ![atRCSBPDB](https://user-images.githubusercontent.com/19709084/167395183-44667694-3438-452b-9219-d2cb27be7df9.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1120945509
https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:2354,Integrability,message,message,2354,"om) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/jmol/mailman/message/37610840/)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418
https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1338,Performance,load,load,1338,"with vectors a = b = c = 1 (Angstrom) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418
https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1550,Performance,load,load,1550,"om) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/jmol/mailman/message/37610840/)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418
https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:957,Security,access,accessible,957,"The structure record is about a sample in solution characterized by solution NMR. Thus, though there is the provision of a .cif by the database, it isn't a .cif like from CCDC's CSD file, because there are only _place holders_ about the unit cell parameters. Instead of a typical unit cell, the parallelepiped is described in `1ner.cif` is with vectors a = b = c = 1 (Angstrom) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.ed",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418
https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1302,Security,access,access,1302,"llelepiped is described in `1ner.cif` is with vectors a = b = c = 1 (Angstrom) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418
https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1430,Security,access,access,1430,"om) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/jmol/mailman/message/37610840/)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418
https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1590,Security,access,access,1590,"om) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/jmol/mailman/message/37610840/)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418
https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1806,Security,access,access,1806,"om) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/jmol/mailman/message/37610840/)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418
https://github.com/openbabel/openbabel/pull/2473#issuecomment-1122737643:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2473#issuecomment-1122737643
https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850:274,Security,captcha,captcha,274,"This wouldn't be (so much) a problem _if_ one could create a user account on openbabel.org. Perhaps by intent, perhaps by accident, this is not possible (anymore?). Speaking for Firefox as provided by Linux Debian 12/bookworm (branch testing), i.e. 91.10.0esr (64-bit), the captcha function is not accepted/dysfunctional (note, the pad lock equally is crossed):. ![no_admission](https://user-images.githubusercontent.com/19709084/172888477-03db8b1c-860b-4f40-96fb-aa64bb27dbf8.png). Visiting the main page's [revision history](http://openbabel.org/w/index.php?title=Main_Page&action=history) suggests only the project's elders (like @ghutchis) might still possess the necessary credentials to improve the situation e.g., to enable the addition of new accounts, or hint if the web site's content may be transferred into a repository on GitHub. (Apparently, the content of openbabel.org [the web site] _is not_ within the current 0.3 GB repository of openbabel [the program].) In case the later were true, the backlog you mention possibly could be resolved:. ![main_history](https://user-images.githubusercontent.com/19709084/172887880-fad0d372-fd10-4197-8e6c-a07ff586cc74.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850
https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850:234,Testability,test,testing,234,"This wouldn't be (so much) a problem _if_ one could create a user account on openbabel.org. Perhaps by intent, perhaps by accident, this is not possible (anymore?). Speaking for Firefox as provided by Linux Debian 12/bookworm (branch testing), i.e. 91.10.0esr (64-bit), the captcha function is not accepted/dysfunctional (note, the pad lock equally is crossed):. ![no_admission](https://user-images.githubusercontent.com/19709084/172888477-03db8b1c-860b-4f40-96fb-aa64bb27dbf8.png). Visiting the main page's [revision history](http://openbabel.org/w/index.php?title=Main_Page&action=history) suggests only the project's elders (like @ghutchis) might still possess the necessary credentials to improve the situation e.g., to enable the addition of new accounts, or hint if the web site's content may be transferred into a repository on GitHub. (Apparently, the content of openbabel.org [the web site] _is not_ within the current 0.3 GB repository of openbabel [the program].) In case the later were true, the backlog you mention possibly could be resolved:. ![main_history](https://user-images.githubusercontent.com/19709084/172887880-fad0d372-fd10-4197-8e6c-a07ff586cc74.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850
https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151355495:6,Usability,simpl,simply,6,"No, I simply need to find the time to clean up the draft at https://openbabel.github.io/ and replace the wiki.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151355495
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043:372,Usability,simpl,simply,372,"OK I made the fix to the double bond on the carbonyl and now when I read in the pdb file and write straight to pdb or just plain obabel pdb2pdb it makes a connection between atom 1374 CZ of ARG87 and atoms 682, 683, 684, & 681 of ARG44 which are atom types NH1, HH11, HH12, & CZ respectively. I have attached input PDB file and command line below. My question is now very simply: why do any sidechain atoms of any residues other than cysteines get a connection made to another residue's side chain atoms (suicide inhibition really). This is clearly a mistake and is turning a simple ""connections in sidechain of residues"" problem into a trying to learn to make connections problem which is making a problem out of nothing really. This hasn't changed in 50 years so I am really confused. ; https://drive.google.com/file/d/1U7_TEXpFldyS0AJbAR9jpKgYXS2fNTSx/view?usp=sharing; ```; obabel -ipdb -opdb Q00534_fill.BL00010001_ligand_conect.fixed.pdb -O obabel.out.pdb; ```. see this line below is clearly wrong in obabel.out.pdb. Can you point me to the C++ code for assigning sidechain connections when reading in of a pdb molecule so I can debug it? This is saying CZ of ARG44 is make a ""dicarbon"" (disulfide pun intended 😄) bond with CZ of ARG87.; ```; CONECT 682 683 684 681 1374 ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043:541,Usability,clear,clearly,541,"OK I made the fix to the double bond on the carbonyl and now when I read in the pdb file and write straight to pdb or just plain obabel pdb2pdb it makes a connection between atom 1374 CZ of ARG87 and atoms 682, 683, 684, & 681 of ARG44 which are atom types NH1, HH11, HH12, & CZ respectively. I have attached input PDB file and command line below. My question is now very simply: why do any sidechain atoms of any residues other than cysteines get a connection made to another residue's side chain atoms (suicide inhibition really). This is clearly a mistake and is turning a simple ""connections in sidechain of residues"" problem into a trying to learn to make connections problem which is making a problem out of nothing really. This hasn't changed in 50 years so I am really confused. ; https://drive.google.com/file/d/1U7_TEXpFldyS0AJbAR9jpKgYXS2fNTSx/view?usp=sharing; ```; obabel -ipdb -opdb Q00534_fill.BL00010001_ligand_conect.fixed.pdb -O obabel.out.pdb; ```. see this line below is clearly wrong in obabel.out.pdb. Can you point me to the C++ code for assigning sidechain connections when reading in of a pdb molecule so I can debug it? This is saying CZ of ARG44 is make a ""dicarbon"" (disulfide pun intended 😄) bond with CZ of ARG87.; ```; CONECT 682 683 684 681 1374 ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043:576,Usability,simpl,simple,576,"OK I made the fix to the double bond on the carbonyl and now when I read in the pdb file and write straight to pdb or just plain obabel pdb2pdb it makes a connection between atom 1374 CZ of ARG87 and atoms 682, 683, 684, & 681 of ARG44 which are atom types NH1, HH11, HH12, & CZ respectively. I have attached input PDB file and command line below. My question is now very simply: why do any sidechain atoms of any residues other than cysteines get a connection made to another residue's side chain atoms (suicide inhibition really). This is clearly a mistake and is turning a simple ""connections in sidechain of residues"" problem into a trying to learn to make connections problem which is making a problem out of nothing really. This hasn't changed in 50 years so I am really confused. ; https://drive.google.com/file/d/1U7_TEXpFldyS0AJbAR9jpKgYXS2fNTSx/view?usp=sharing; ```; obabel -ipdb -opdb Q00534_fill.BL00010001_ligand_conect.fixed.pdb -O obabel.out.pdb; ```. see this line below is clearly wrong in obabel.out.pdb. Can you point me to the C++ code for assigning sidechain connections when reading in of a pdb molecule so I can debug it? This is saying CZ of ARG44 is make a ""dicarbon"" (disulfide pun intended 😄) bond with CZ of ARG87.; ```; CONECT 682 683 684 681 1374 ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043:647,Usability,learn,learn,647,"OK I made the fix to the double bond on the carbonyl and now when I read in the pdb file and write straight to pdb or just plain obabel pdb2pdb it makes a connection between atom 1374 CZ of ARG87 and atoms 682, 683, 684, & 681 of ARG44 which are atom types NH1, HH11, HH12, & CZ respectively. I have attached input PDB file and command line below. My question is now very simply: why do any sidechain atoms of any residues other than cysteines get a connection made to another residue's side chain atoms (suicide inhibition really). This is clearly a mistake and is turning a simple ""connections in sidechain of residues"" problem into a trying to learn to make connections problem which is making a problem out of nothing really. This hasn't changed in 50 years so I am really confused. ; https://drive.google.com/file/d/1U7_TEXpFldyS0AJbAR9jpKgYXS2fNTSx/view?usp=sharing; ```; obabel -ipdb -opdb Q00534_fill.BL00010001_ligand_conect.fixed.pdb -O obabel.out.pdb; ```. see this line below is clearly wrong in obabel.out.pdb. Can you point me to the C++ code for assigning sidechain connections when reading in of a pdb molecule so I can debug it? This is saying CZ of ARG44 is make a ""dicarbon"" (disulfide pun intended 😄) bond with CZ of ARG87.; ```; CONECT 682 683 684 681 1374 ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043:991,Usability,clear,clearly,991,"OK I made the fix to the double bond on the carbonyl and now when I read in the pdb file and write straight to pdb or just plain obabel pdb2pdb it makes a connection between atom 1374 CZ of ARG87 and atoms 682, 683, 684, & 681 of ARG44 which are atom types NH1, HH11, HH12, & CZ respectively. I have attached input PDB file and command line below. My question is now very simply: why do any sidechain atoms of any residues other than cysteines get a connection made to another residue's side chain atoms (suicide inhibition really). This is clearly a mistake and is turning a simple ""connections in sidechain of residues"" problem into a trying to learn to make connections problem which is making a problem out of nothing really. This hasn't changed in 50 years so I am really confused. ; https://drive.google.com/file/d/1U7_TEXpFldyS0AJbAR9jpKgYXS2fNTSx/view?usp=sharing; ```; obabel -ipdb -opdb Q00534_fill.BL00010001_ligand_conect.fixed.pdb -O obabel.out.pdb; ```. see this line below is clearly wrong in obabel.out.pdb. Can you point me to the C++ code for assigning sidechain connections when reading in of a pdb molecule so I can debug it? This is saying CZ of ARG44 is make a ""dicarbon"" (disulfide pun intended 😄) bond with CZ of ARG87.; ```; CONECT 682 683 684 681 1374 ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140182602:79,Deployability,update,updated,79,Sorry this is version 3.1.1. The binary version and obabel.__version__ are not updated from conda-forge package.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140182602
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101:612,Availability,down,download,612,"The change I referred to was in the columns after the label about arginine/alanine and prior to the atom's coordinates:. ![change](https://user-images.githubusercontent.com/19709084/170869519-af9e2f37-1db0-42e4-a23c-05579a25f1b9.png). Re the `.pdb` file, the most relevant entry to your story I was able to identify dates back 2013 when (apparently) the PDB equally provided access to (maybe a subset of) the data as `.sdf` (which do contain bond order). To quote the [post](https://www.mail-archive.com/openbabel-discuss@lists.sourceforge.net/msg02983.html):. > If your ligand really came from the PDB, you can download the ligand; in SD format. (Just scroll down to ""Ligand"" and click the download; link.) SD files will have the bonding info and should solve your; problem. _Perhaps_ the edit you intend to perform works better out in [RDKit](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=pdb#d-functionality-in-the-rdkit). With a throw-away script like. ```python; #!/bin/usr/env python3. import os. import rdkit; from rdkit import Chem. mol1 = Chem.MolFromPDBFile(""4gq6.pdb""); sdf_content = str(Chem.MolToMolBlock(mol1)). try:; with open(""report.sdf"", mode=""w"",encoding=""utf-8"") as newfile:; newfile.write(sdf_content); except OSError:; print(""Error to deposit the permanent record.""); ```; this warning is not reported, _possibly_ RDKit uses a different approach on [kekulization](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=kekulization#using-a-different-aromaticity-model).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101:660,Availability,down,down,660,"The change I referred to was in the columns after the label about arginine/alanine and prior to the atom's coordinates:. ![change](https://user-images.githubusercontent.com/19709084/170869519-af9e2f37-1db0-42e4-a23c-05579a25f1b9.png). Re the `.pdb` file, the most relevant entry to your story I was able to identify dates back 2013 when (apparently) the PDB equally provided access to (maybe a subset of) the data as `.sdf` (which do contain bond order). To quote the [post](https://www.mail-archive.com/openbabel-discuss@lists.sourceforge.net/msg02983.html):. > If your ligand really came from the PDB, you can download the ligand; in SD format. (Just scroll down to ""Ligand"" and click the download; link.) SD files will have the bonding info and should solve your; problem. _Perhaps_ the edit you intend to perform works better out in [RDKit](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=pdb#d-functionality-in-the-rdkit). With a throw-away script like. ```python; #!/bin/usr/env python3. import os. import rdkit; from rdkit import Chem. mol1 = Chem.MolFromPDBFile(""4gq6.pdb""); sdf_content = str(Chem.MolToMolBlock(mol1)). try:; with open(""report.sdf"", mode=""w"",encoding=""utf-8"") as newfile:; newfile.write(sdf_content); except OSError:; print(""Error to deposit the permanent record.""); ```; this warning is not reported, _possibly_ RDKit uses a different approach on [kekulization](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=kekulization#using-a-different-aromaticity-model).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101:691,Availability,down,download,691,"The change I referred to was in the columns after the label about arginine/alanine and prior to the atom's coordinates:. ![change](https://user-images.githubusercontent.com/19709084/170869519-af9e2f37-1db0-42e4-a23c-05579a25f1b9.png). Re the `.pdb` file, the most relevant entry to your story I was able to identify dates back 2013 when (apparently) the PDB equally provided access to (maybe a subset of) the data as `.sdf` (which do contain bond order). To quote the [post](https://www.mail-archive.com/openbabel-discuss@lists.sourceforge.net/msg02983.html):. > If your ligand really came from the PDB, you can download the ligand; in SD format. (Just scroll down to ""Ligand"" and click the download; link.) SD files will have the bonding info and should solve your; problem. _Perhaps_ the edit you intend to perform works better out in [RDKit](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=pdb#d-functionality-in-the-rdkit). With a throw-away script like. ```python; #!/bin/usr/env python3. import os. import rdkit; from rdkit import Chem. mol1 = Chem.MolFromPDBFile(""4gq6.pdb""); sdf_content = str(Chem.MolToMolBlock(mol1)). try:; with open(""report.sdf"", mode=""w"",encoding=""utf-8"") as newfile:; newfile.write(sdf_content); except OSError:; print(""Error to deposit the permanent record.""); ```; this warning is not reported, _possibly_ RDKit uses a different approach on [kekulization](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=kekulization#using-a-different-aromaticity-model).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101:1265,Availability,Error,Error,1265,"The change I referred to was in the columns after the label about arginine/alanine and prior to the atom's coordinates:. ![change](https://user-images.githubusercontent.com/19709084/170869519-af9e2f37-1db0-42e4-a23c-05579a25f1b9.png). Re the `.pdb` file, the most relevant entry to your story I was able to identify dates back 2013 when (apparently) the PDB equally provided access to (maybe a subset of) the data as `.sdf` (which do contain bond order). To quote the [post](https://www.mail-archive.com/openbabel-discuss@lists.sourceforge.net/msg02983.html):. > If your ligand really came from the PDB, you can download the ligand; in SD format. (Just scroll down to ""Ligand"" and click the download; link.) SD files will have the bonding info and should solve your; problem. _Perhaps_ the edit you intend to perform works better out in [RDKit](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=pdb#d-functionality-in-the-rdkit). With a throw-away script like. ```python; #!/bin/usr/env python3. import os. import rdkit; from rdkit import Chem. mol1 = Chem.MolFromPDBFile(""4gq6.pdb""); sdf_content = str(Chem.MolToMolBlock(mol1)). try:; with open(""report.sdf"", mode=""w"",encoding=""utf-8"") as newfile:; newfile.write(sdf_content); except OSError:; print(""Error to deposit the permanent record.""); ```; this warning is not reported, _possibly_ RDKit uses a different approach on [kekulization](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=kekulization#using-a-different-aromaticity-model).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101:809,Performance,perform,perform,809,"The change I referred to was in the columns after the label about arginine/alanine and prior to the atom's coordinates:. ![change](https://user-images.githubusercontent.com/19709084/170869519-af9e2f37-1db0-42e4-a23c-05579a25f1b9.png). Re the `.pdb` file, the most relevant entry to your story I was able to identify dates back 2013 when (apparently) the PDB equally provided access to (maybe a subset of) the data as `.sdf` (which do contain bond order). To quote the [post](https://www.mail-archive.com/openbabel-discuss@lists.sourceforge.net/msg02983.html):. > If your ligand really came from the PDB, you can download the ligand; in SD format. (Just scroll down to ""Ligand"" and click the download; link.) SD files will have the bonding info and should solve your; problem. _Perhaps_ the edit you intend to perform works better out in [RDKit](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=pdb#d-functionality-in-the-rdkit). With a throw-away script like. ```python; #!/bin/usr/env python3. import os. import rdkit; from rdkit import Chem. mol1 = Chem.MolFromPDBFile(""4gq6.pdb""); sdf_content = str(Chem.MolToMolBlock(mol1)). try:; with open(""report.sdf"", mode=""w"",encoding=""utf-8"") as newfile:; newfile.write(sdf_content); except OSError:; print(""Error to deposit the permanent record.""); ```; this warning is not reported, _possibly_ RDKit uses a different approach on [kekulization](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=kekulization#using-a-different-aromaticity-model).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101:375,Security,access,access,375,"The change I referred to was in the columns after the label about arginine/alanine and prior to the atom's coordinates:. ![change](https://user-images.githubusercontent.com/19709084/170869519-af9e2f37-1db0-42e4-a23c-05579a25f1b9.png). Re the `.pdb` file, the most relevant entry to your story I was able to identify dates back 2013 when (apparently) the PDB equally provided access to (maybe a subset of) the data as `.sdf` (which do contain bond order). To quote the [post](https://www.mail-archive.com/openbabel-discuss@lists.sourceforge.net/msg02983.html):. > If your ligand really came from the PDB, you can download the ligand; in SD format. (Just scroll down to ""Ligand"" and click the download; link.) SD files will have the bonding info and should solve your; problem. _Perhaps_ the edit you intend to perform works better out in [RDKit](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=pdb#d-functionality-in-the-rdkit). With a throw-away script like. ```python; #!/bin/usr/env python3. import os. import rdkit; from rdkit import Chem. mol1 = Chem.MolFromPDBFile(""4gq6.pdb""); sdf_content = str(Chem.MolToMolBlock(mol1)). try:; with open(""report.sdf"", mode=""w"",encoding=""utf-8"") as newfile:; newfile.write(sdf_content); except OSError:; print(""Error to deposit the permanent record.""); ```; this warning is not reported, _possibly_ RDKit uses a different approach on [kekulization](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=kekulization#using-a-different-aromaticity-model).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140549071:323,Energy Efficiency,charge,charge,323,"RDkit might be better but the message I am now trying to confer isn't about the bonding. I am not too worried about the bonding information either. Let's table the bonding for now. I am just baffled by the fact that OpenBabel turns an Alanine (small hydrophobic sidechain of single methyl group) into an Arginine (positive charge, large sidechain with guanidino group). Those residues couldn't be further in apart from eachother. Where is the code that determines the residue name when reading in a PDB formatted file? It should read ALA as alanine not arginine. This is what I am referring to being wrong:. ```python; from openbabel import openbabel. obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""4GQ6.pdb""). ## WRONG residue name! This is an alanine ALA not an ARG (arginine). Completely different residues; for atom in openbabel.OBResidueAtomIter(pdbmol.GetResidue(109)):; print(atom.GetType()+'\t'+atom.GetResidue().GetName()); Nam	ARG; C3	ARG; C2	ARG; O2	ARG; C3	ARG; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140549071
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140549071:30,Integrability,message,message,30,"RDkit might be better but the message I am now trying to confer isn't about the bonding. I am not too worried about the bonding information either. Let's table the bonding for now. I am just baffled by the fact that OpenBabel turns an Alanine (small hydrophobic sidechain of single methyl group) into an Arginine (positive charge, large sidechain with guanidino group). Those residues couldn't be further in apart from eachother. Where is the code that determines the residue name when reading in a PDB formatted file? It should read ALA as alanine not arginine. This is what I am referring to being wrong:. ```python; from openbabel import openbabel. obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""4GQ6.pdb""). ## WRONG residue name! This is an alanine ALA not an ARG (arginine). Completely different residues; for atom in openbabel.OBResidueAtomIter(pdbmol.GetResidue(109)):; print(atom.GetType()+'\t'+atom.GetResidue().GetName()); Nam	ARG; C3	ARG; C2	ARG; O2	ARG; C3	ARG; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140549071
https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140728696:2798,Integrability,interface,interfaces,2798,"b.org/pdb/file_formats/pdb/pdbguide2.2/part_36.html; void SetName(const std::string &resname);; //! Set the residue number (in the sequence); void SetNum(const unsigned int resnum);; void SetNum(const std::string resnum);; //! Set the chain ID for this residue; void SetChain(const char chain);; //! Set the chain number for this residue; void SetChainNum(const unsigned int chainnum);; //! Set the internal index of this residue in the parent OBMol.; //! Intended mostly for internal use; void SetIdx(const unsigned int idx);; //! Set PDB insertion code information for this residue. This allows; //! consecutive residues to have the same number. Some communities; //! that work in a well-conserved structural world use this, e.g.; //! for immunoglobulins.; void SetInsertionCode(const char insertioncode);; ```. and later line 105. ```; //! \return The residue name; std::string GetName(void) const;; //! \return The residue number (in the sequence); int GetNum(void);; std::string GetNumString(void);; //! \return The number of atoms in this residue; unsigned int GetNumAtoms() const;; //! \return The number of heavy atoms in this residue; unsigned int GetNumHvyAtoms() const;; //! \return The ID of the chain which includes this residue; char GetChain(void) const;; //! \return The number of the chain which includes this residue; unsigned int GetChainNum(void) const;; //! \return The internal index of this residue in the parent OBMol; unsigned int GetIdx(void) const;; //! \return The residue key (i.e., an entry in the OBResidueIndex namespace); unsigned int GetResKey(void) const;; ```; as well as line 307:. ```; //! Residue names (index into Residue[] array); // some of these are invalid or troublesome in scripting interfaces; // so they are removed by the #ifndef SWIG parts; // (otherwise ignore them for C++ use); namespace OBResidueIndex; {; ; enum; {; ALA = 0,; GLY = 1,; LEU = 2,; SER = 3,; VAL = 4,; ```. Better for me to relay this over to those with working knowledge of C/C++.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140728696
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1140938844:86,Deployability,install,install,86,"Hello,. It looks like you have a problem with the BABEL_DATADIR variable. How did you install OpenBabel? And how do you start the Python version?. Kind regards,; Fredrik",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1140938844
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1140938844:64,Modifiability,variab,variable,64,"Hello,. It looks like you have a problem with the BABEL_DATADIR variable. How did you install OpenBabel? And how do you start the Python version?. Kind regards,; Fredrik",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1140938844
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141297413:94,Deployability,install,install,94,"> Hello,; > ; > It looks like you have a problem with the BABEL_DATADIR variable. How did you install OpenBabel? And how do you start the Python version?; > ; > Kind regards, Fredrik. Hello,. Thank you for your reply, my reply is as follows to your two questions:; 1. Install code: conda install openbabel -c conda-forge; 2. Run spyder installed in a virtual environment created with python3.7. Also, I found that I run my code in the anaconda prompt panel, and the calculation works fine, maybe I can't run it directly on spyder?; ![DG4 DA DKRL4$DX8_{_@I](https://user-images.githubusercontent.com/81633044/171024705-15e53b90-bbe4-46c6-b8e7-17378de1761f.png); ![49_VELCKU6~HGH)LAH1NHIX](https://user-images.githubusercontent.com/81633044/171026327-b83579f6-a47d-45a2-b2fc-e876f69bc540.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141297413
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141297413:268,Deployability,Install,Install,268,"> Hello,; > ; > It looks like you have a problem with the BABEL_DATADIR variable. How did you install OpenBabel? And how do you start the Python version?; > ; > Kind regards, Fredrik. Hello,. Thank you for your reply, my reply is as follows to your two questions:; 1. Install code: conda install openbabel -c conda-forge; 2. Run spyder installed in a virtual environment created with python3.7. Also, I found that I run my code in the anaconda prompt panel, and the calculation works fine, maybe I can't run it directly on spyder?; ![DG4 DA DKRL4$DX8_{_@I](https://user-images.githubusercontent.com/81633044/171024705-15e53b90-bbe4-46c6-b8e7-17378de1761f.png); ![49_VELCKU6~HGH)LAH1NHIX](https://user-images.githubusercontent.com/81633044/171026327-b83579f6-a47d-45a2-b2fc-e876f69bc540.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141297413
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141297413:288,Deployability,install,install,288,"> Hello,; > ; > It looks like you have a problem with the BABEL_DATADIR variable. How did you install OpenBabel? And how do you start the Python version?; > ; > Kind regards, Fredrik. Hello,. Thank you for your reply, my reply is as follows to your two questions:; 1. Install code: conda install openbabel -c conda-forge; 2. Run spyder installed in a virtual environment created with python3.7. Also, I found that I run my code in the anaconda prompt panel, and the calculation works fine, maybe I can't run it directly on spyder?; ![DG4 DA DKRL4$DX8_{_@I](https://user-images.githubusercontent.com/81633044/171024705-15e53b90-bbe4-46c6-b8e7-17378de1761f.png); ![49_VELCKU6~HGH)LAH1NHIX](https://user-images.githubusercontent.com/81633044/171026327-b83579f6-a47d-45a2-b2fc-e876f69bc540.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141297413
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141297413:336,Deployability,install,installed,336,"> Hello,; > ; > It looks like you have a problem with the BABEL_DATADIR variable. How did you install OpenBabel? And how do you start the Python version?; > ; > Kind regards, Fredrik. Hello,. Thank you for your reply, my reply is as follows to your two questions:; 1. Install code: conda install openbabel -c conda-forge; 2. Run spyder installed in a virtual environment created with python3.7. Also, I found that I run my code in the anaconda prompt panel, and the calculation works fine, maybe I can't run it directly on spyder?; ![DG4 DA DKRL4$DX8_{_@I](https://user-images.githubusercontent.com/81633044/171024705-15e53b90-bbe4-46c6-b8e7-17378de1761f.png); ![49_VELCKU6~HGH)LAH1NHIX](https://user-images.githubusercontent.com/81633044/171026327-b83579f6-a47d-45a2-b2fc-e876f69bc540.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141297413
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141297413:72,Modifiability,variab,variable,72,"> Hello,; > ; > It looks like you have a problem with the BABEL_DATADIR variable. How did you install OpenBabel? And how do you start the Python version?; > ; > Kind regards, Fredrik. Hello,. Thank you for your reply, my reply is as follows to your two questions:; 1. Install code: conda install openbabel -c conda-forge; 2. Run spyder installed in a virtual environment created with python3.7. Also, I found that I run my code in the anaconda prompt panel, and the calculation works fine, maybe I can't run it directly on spyder?; ![DG4 DA DKRL4$DX8_{_@I](https://user-images.githubusercontent.com/81633044/171024705-15e53b90-bbe4-46c6-b8e7-17378de1761f.png); ![49_VELCKU6~HGH)LAH1NHIX](https://user-images.githubusercontent.com/81633044/171026327-b83579f6-a47d-45a2-b2fc-e876f69bc540.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141297413
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268:58,Modifiability,variab,variables,58,"I don't know how Spyder work when it comes to environment variables. If you see the lines with `set ...` when activating the conda environment, the variables should be set. If Spyder doesn't pick them up, maybe it has some kind of setting where you can specify environment variables? You could also try to set the variable before importing openbabel through `os.environ[""BABEL_DATADIR""] = r""D:\ProgramData\Anaconda38\envs\python37\share\openbabel""`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268:148,Modifiability,variab,variables,148,"I don't know how Spyder work when it comes to environment variables. If you see the lines with `set ...` when activating the conda environment, the variables should be set. If Spyder doesn't pick them up, maybe it has some kind of setting where you can specify environment variables? You could also try to set the variable before importing openbabel through `os.environ[""BABEL_DATADIR""] = r""D:\ProgramData\Anaconda38\envs\python37\share\openbabel""`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268:273,Modifiability,variab,variables,273,"I don't know how Spyder work when it comes to environment variables. If you see the lines with `set ...` when activating the conda environment, the variables should be set. If Spyder doesn't pick them up, maybe it has some kind of setting where you can specify environment variables? You could also try to set the variable before importing openbabel through `os.environ[""BABEL_DATADIR""] = r""D:\ProgramData\Anaconda38\envs\python37\share\openbabel""`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268
https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268:314,Modifiability,variab,variable,314,"I don't know how Spyder work when it comes to environment variables. If you see the lines with `set ...` when activating the conda environment, the variables should be set. If Spyder doesn't pick them up, maybe it has some kind of setting where you can specify environment variables? You could also try to set the variable before importing openbabel through `os.environ[""BABEL_DATADIR""] = r""D:\ProgramData\Anaconda38\envs\python37\share\openbabel""`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147458934:82,Availability,down,downloaded,82,I coudn't find any of pybel.readstring or pybel.from_bel_script_url but I think I downloaded the PyBEL package using pip,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147458934
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147482145:170,Deployability,install,installed,170,Then you aren’t importing the right module. You probably need to change your script to import pybel from openbabel:; `from openbabel import pybel`; assuming openbabel is installed.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147482145
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147649890:38,Deployability,install,installed,38,"how can I make sure that openbabel is installed properly for the script to function well, because I tried multiple ways to install and none of them worked?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147649890
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147649890:123,Deployability,install,install,123,"how can I make sure that openbabel is installed properly for the script to function well, because I tried multiple ways to install and none of them worked?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147649890
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147679342:29,Deployability,install,installed,29,And you can make sure you've installed the right package:; https://pypi.org/project/openbabel/; https://anaconda.org/conda-forge/openbabel. For example:; `conda install -c conda-forge openbabel`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147679342
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147679342:161,Deployability,install,install,161,And you can make sure you've installed the right package:; https://pypi.org/project/openbabel/; https://anaconda.org/conda-forge/openbabel. For example:; `conda install -c conda-forge openbabel`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147679342
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480:123,Availability,error,error,123,"I installed openbabel using conda with the command above. I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480:131,Availability,Error,Error,131,"I installed openbabel using conda with the command above. I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480:564,Availability,error,error,564,"I installed openbabel using conda with the command above. I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480:2,Deployability,install,installed,2,"I installed openbabel using conda with the command above. I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480:165,Deployability,install,installed,165,"I installed openbabel using conda with the command above. I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480:376,Deployability,install,install,376,"I installed openbabel using conda with the command above. I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480:517,Deployability,install,installed,517,"I installed openbabel using conda with the command above. I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1147869480
https://github.com/openbabel/openbabel/issues/2483#issuecomment-1148285803:579,Safety,avoid,avoid,579,"@dkoes re pybel (about openbabel) which _is not_ PyBEL (about biological networks): You were looking for the section [Updating to Open Babel 3.0 from 2.x](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/migration.html), were sub section _Python module_ states:. > ""In OB 3.x, both openbabel.py and pybel.py live within the openbabel module; ```python; # OB 2.x; import openbabel as ob; import pybel. # OB 3.0; from openbabel import openbabel as ob; from openbabel import pybel; ```; > While more verbose, the new arrangement is in line with standard practice and helps avoid conflict with a different Python project, PyBEL.""",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1148285803
https://github.com/openbabel/openbabel/issues/2484#issuecomment-1148276921:106,Deployability,Update,Update,106,"This is more a commentary to improve the presentation of your question, than as to provide a solution:; + Update openbabel. With version 2.4.1 you mention, you limit your work to what was implemented by 2016. Though your code snippet to translate .smi into .xyz still is functional today, the present stable version is 3.1.1 ([reference](https://github.com/openbabel/openbabel/releases)). Because it is possible that if you encounter a problem (or a bug in the underlying source code), this has been addressed since then. + You face a problem with the second example converting the .xyz into a .smi because the representation of the structure contains a pentavalent carbon. Pick up the the two .xyz files (of both examples) you want to convert into SMILES, stash these files into a folder in common, and submit them as .zip archive by drag-and-drop. By this complement to your question, you allow others to replicate your conversion (and perhaps the newer/contemporary version of openbabel trades this conversion better than version 2.4.1).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1148276921
https://github.com/openbabel/openbabel/issues/2484#issuecomment-1148276921:377,Deployability,release,releases,377,"This is more a commentary to improve the presentation of your question, than as to provide a solution:; + Update openbabel. With version 2.4.1 you mention, you limit your work to what was implemented by 2016. Though your code snippet to translate .smi into .xyz still is functional today, the present stable version is 3.1.1 ([reference](https://github.com/openbabel/openbabel/releases)). Because it is possible that if you encounter a problem (or a bug in the underlying source code), this has been addressed since then. + You face a problem with the second example converting the .xyz into a .smi because the representation of the structure contains a pentavalent carbon. Pick up the the two .xyz files (of both examples) you want to convert into SMILES, stash these files into a folder in common, and submit them as .zip archive by drag-and-drop. By this complement to your question, you allow others to replicate your conversion (and perhaps the newer/contemporary version of openbabel trades this conversion better than version 2.4.1).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1148276921
https://github.com/openbabel/openbabel/issues/2484#issuecomment-1148350388:489,Deployability,Update,Update,489,"In addition, the original SMILES looks a bit strange with both the nitrogen and sulphur on the lower right of your image being without hydrogens.; And do you need the .xyz-format? There are other formats that handle chemical information a lot better, now OpenBabel has to guess the bonding based on the present atoms and with the strange radicals in the input that is difficult. Should you use e.g. .mol-format, you would get the same output molecule as you put in.; So, to summarize:; 1. Update OpenBabel; 2. Check your input SMILES; 3. Reconsider using .xyz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1148350388
https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941:1506,Safety,Predict,Predicted,1506,"@fredrikw Good point to spot the missing H in the first structure _as if_ the structures might be subject to keto-enol tautomerism. In fact, submitting the SMILES assigned by ChemDraw to one (putative) structure of these pteridines. ![pteridine](https://user-images.githubusercontent.com/19709084/172549678-aa88ec3b-262c-4b6f-af6e-b4b30dc46d58.png). into [NIH's tautomerizer](https://cactus.nci.nih.gov/cgi-bin/tautomerize.tcl) a set of six isomers (compilation attached below). @DreamMemory001 If there is no better format than .xyz accessible to you (better as in «retains bond orders _in addition_ to atoms' coordinates, like e.g., .mol, .mol2, .sdf), you might consider to check for plausibility of the results openbabel provides with a tool outside (working independently) of openbabel. Because every algorithm requested to enrich the information stored in the records may err once on one, or an other side. Though not leading to SMILES (but .mol files one can express again with SMILES), for «typical organic molecules»* Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) may assist here. It was presented on [RDKit UGM 2020](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf), his [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) about it still is on youtube. *) Known complications are salts, and difficulties with complexes including transition metals, etc. So it is working best for neutral molecules consisting of (C, N, O, P, S; H; halogens). [Predicted tautomers.pdf](https://github.com/openbabel/openbabel/files/8859045/Predicted.tautomers.pdf)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941
https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941:1584,Safety,Predict,Predicted,1584,"@fredrikw Good point to spot the missing H in the first structure _as if_ the structures might be subject to keto-enol tautomerism. In fact, submitting the SMILES assigned by ChemDraw to one (putative) structure of these pteridines. ![pteridine](https://user-images.githubusercontent.com/19709084/172549678-aa88ec3b-262c-4b6f-af6e-b4b30dc46d58.png). into [NIH's tautomerizer](https://cactus.nci.nih.gov/cgi-bin/tautomerize.tcl) a set of six isomers (compilation attached below). @DreamMemory001 If there is no better format than .xyz accessible to you (better as in «retains bond orders _in addition_ to atoms' coordinates, like e.g., .mol, .mol2, .sdf), you might consider to check for plausibility of the results openbabel provides with a tool outside (working independently) of openbabel. Because every algorithm requested to enrich the information stored in the records may err once on one, or an other side. Though not leading to SMILES (but .mol files one can express again with SMILES), for «typical organic molecules»* Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) may assist here. It was presented on [RDKit UGM 2020](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf), his [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) about it still is on youtube. *) Known complications are salts, and difficulties with complexes including transition metals, etc. So it is working best for neutral molecules consisting of (C, N, O, P, S; H; halogens). [Predicted tautomers.pdf](https://github.com/openbabel/openbabel/files/8859045/Predicted.tautomers.pdf)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941
https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941:534,Security,access,accessible,534,"@fredrikw Good point to spot the missing H in the first structure _as if_ the structures might be subject to keto-enol tautomerism. In fact, submitting the SMILES assigned by ChemDraw to one (putative) structure of these pteridines. ![pteridine](https://user-images.githubusercontent.com/19709084/172549678-aa88ec3b-262c-4b6f-af6e-b4b30dc46d58.png). into [NIH's tautomerizer](https://cactus.nci.nih.gov/cgi-bin/tautomerize.tcl) a set of six isomers (compilation attached below). @DreamMemory001 If there is no better format than .xyz accessible to you (better as in «retains bond orders _in addition_ to atoms' coordinates, like e.g., .mol, .mol2, .sdf), you might consider to check for plausibility of the results openbabel provides with a tool outside (working independently) of openbabel. Because every algorithm requested to enrich the information stored in the records may err once on one, or an other side. Though not leading to SMILES (but .mol files one can express again with SMILES), for «typical organic molecules»* Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) may assist here. It was presented on [RDKit UGM 2020](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf), his [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) about it still is on youtube. *) Known complications are salts, and difficulties with complexes including transition metals, etc. So it is working best for neutral molecules consisting of (C, N, O, P, S; H; halogens). [Predicted tautomers.pdf](https://github.com/openbabel/openbabel/files/8859045/Predicted.tautomers.pdf)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941
https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149638888:54,Deployability,update,update,54,"@nbehrnd @fredrikw ; Thanks for your reply.; * I have update the version of openbabel 3.1.1, but the result is not fit. In the document 3.0.0, I find the openbabel provide a new method base on paper ""Fast, efficient fragment-based coordinate generation for Open Babel"". But i can not find the how to use it.; * ""The nitrogen and sulphur on the lower right of my image being without hydrogens."" In this question, i want to explain that because i need to genereate the molecules base on this scaffold. It is the scaffold. In my project, i predict the atomic number and the coordinate to identify a molecule, so i need .xyz file to save my result and the point where without hydrogens is the point that need to add other side chain. ; * I also use the rdkit (ETKDG), it is result is also not fit.; * Now, i use the dataset named QM9, the origin paper shows the idea of utilize smiles to get 3D coordinate. It looks like diffcult to achieve it, but i also try to recurrence it all the time. And the all .xyz file in QM9 can convert .xyz to smiles rightly by openabel. So you have some other ideas in it? Thank you very much. Openbabel is a fantastic tool, i also hope it can become better and better. . ![image](https://user-images.githubusercontent.com/32425458/172571487-7ec24cd3-8e74-4f95-8621-568d14c13ae8.png). * @nbehrnd Ok , i will try it by Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol), Thank you.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149638888
https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149638888:206,Energy Efficiency,efficient,efficient,206,"@nbehrnd @fredrikw ; Thanks for your reply.; * I have update the version of openbabel 3.1.1, but the result is not fit. In the document 3.0.0, I find the openbabel provide a new method base on paper ""Fast, efficient fragment-based coordinate generation for Open Babel"". But i can not find the how to use it.; * ""The nitrogen and sulphur on the lower right of my image being without hydrogens."" In this question, i want to explain that because i need to genereate the molecules base on this scaffold. It is the scaffold. In my project, i predict the atomic number and the coordinate to identify a molecule, so i need .xyz file to save my result and the point where without hydrogens is the point that need to add other side chain. ; * I also use the rdkit (ETKDG), it is result is also not fit.; * Now, i use the dataset named QM9, the origin paper shows the idea of utilize smiles to get 3D coordinate. It looks like diffcult to achieve it, but i also try to recurrence it all the time. And the all .xyz file in QM9 can convert .xyz to smiles rightly by openabel. So you have some other ideas in it? Thank you very much. Openbabel is a fantastic tool, i also hope it can become better and better. . ![image](https://user-images.githubusercontent.com/32425458/172571487-7ec24cd3-8e74-4f95-8621-568d14c13ae8.png). * @nbehrnd Ok , i will try it by Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol), Thank you.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149638888
https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149638888:537,Safety,predict,predict,537,"@nbehrnd @fredrikw ; Thanks for your reply.; * I have update the version of openbabel 3.1.1, but the result is not fit. In the document 3.0.0, I find the openbabel provide a new method base on paper ""Fast, efficient fragment-based coordinate generation for Open Babel"". But i can not find the how to use it.; * ""The nitrogen and sulphur on the lower right of my image being without hydrogens."" In this question, i want to explain that because i need to genereate the molecules base on this scaffold. It is the scaffold. In my project, i predict the atomic number and the coordinate to identify a molecule, so i need .xyz file to save my result and the point where without hydrogens is the point that need to add other side chain. ; * I also use the rdkit (ETKDG), it is result is also not fit.; * Now, i use the dataset named QM9, the origin paper shows the idea of utilize smiles to get 3D coordinate. It looks like diffcult to achieve it, but i also try to recurrence it all the time. And the all .xyz file in QM9 can convert .xyz to smiles rightly by openabel. So you have some other ideas in it? Thank you very much. Openbabel is a fantastic tool, i also hope it can become better and better. . ![image](https://user-images.githubusercontent.com/32425458/172571487-7ec24cd3-8e74-4f95-8621-568d14c13ae8.png). * @nbehrnd Ok , i will try it by Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol), Thank you.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149638888
https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149796371:588,Usability,simpl,simple,588,"I think you should rethink your approach a bit. You will not be able to properly do a force field minimization with a fragment. Better to add a dummy atom or something if that is what you are after. Or create the 3D structure with hydrogens and then replace the proper hydrogens. Since you seem to be working in python, there should be no need to go via the xyz file, you have all the coordinates on the molecule object so use that.; I would do something like:; 1. Create molecule from SMILES, possibly with attachment points as deuteriums or similar.; 2. Create 3D structure, probably a simple --gen3D would suffice since you are going to add substituents that would change the 3D-structure anyway.; 3. Add your attachments; 4. Optionally, minimize the resulting structure. This is a rather common procedure, so you should be able to find plenty of example codes by googling...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149796371
https://github.com/openbabel/openbabel/issues/2488#issuecomment-1152082101:562,Modifiability,extend,extended,562,"Unable to recall if you or an other leading developer of openbabel attended the virtual meeting «InChI Days 2022» in April by [InChI trust](https://www.inchi-trust.org/) or/and are subscriber to the (low traffic) public [discussion board](https://sourceforge.net/p/inchi/mailman/inchi-discuss/), I would like to draw your attention to their [technical meeting](https://www.inchi-trust.org/june-2022-technical-sessions) June 17--19 in Cambridge UK. Again, virtual attendance of the event is possible. . While the meeting wants to focus on ""progress toward adding extended stereochemistry and tautomers"", on Friday, Gerd Blanke chairs one session to clarify if ongoing work is going to be named InChI 1.07 (or 2.0).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2488#issuecomment-1152082101
https://github.com/openbabel/openbabel/pull/2493#issuecomment-1153123259:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2493#issuecomment-1153123259
https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:1234,Availability,echo,echo,1234,"ult one, because . ![case2](https://user-images.githubusercontent.com/19709084/173321323-02474993-8bd2-4ef2-85ba-967e7977bc3b.png). is provided as 2D structure by the .mol file with all z-coordinates equal to zero (the third column in the snippet below):. ```; [...]; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force field, enter `minimize addHydrogens;` after the prompt. (To run the optimization again, use a command in pattern of `minimize steps 1000;`.) When you are satisfied with the geometry suggested, either one of the following lines on Jmol's console yield",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280
https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:1843,Integrability,interface,interface,1843," 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force field, enter `minimize addHydrogens;` after the prompt. (To run the optimization again, use a command in pattern of `minimize steps 1000;`.) When you are satisfied with the geometry suggested, either one of the following lines on Jmol's console yields a permanent record:. ```; write ""result.mol"";; write ""result.xyz"";; write ""result.png"";; ```. ![case2_Jmol_100iterations](https://user-images.githubusercontent.com/19709084/173328469-2f164aa0-2921-4f56-9638-5136ccf3d68f.png). (Yes, it equally is possible to write Jmol scripts for recurrent tasks/loop over files.). [replication.zip](https://github.com/openbabel/openbabel/files/8889967/replication.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280
https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:912,Performance,optimiz,optimization,912,"Your request to openbabel `--gen3d` launches a minimization to identify one optimum (it need not be the the global one). Some cases are more difficult than others; check if the sketcher used offers a native 3D export. Your submitted case is a difficult one, because . ![case2](https://user-images.githubusercontent.com/19709084/173321323-02474993-8bd2-4ef2-85ba-967e7977bc3b.png). is provided as 2D structure by the .mol file with all z-coordinates equal to zero (the third column in the snippet below):. ```; [...]; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280
https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:1769,Performance,load,load,1769," 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force field, enter `minimize addHydrogens;` after the prompt. (To run the optimization again, use a command in pattern of `minimize steps 1000;`.) When you are satisfied with the geometry suggested, either one of the following lines on Jmol's console yields a permanent record:. ```; write ""result.mol"";; write ""result.xyz"";; write ""result.png"";; ```. ![case2_Jmol_100iterations](https://user-images.githubusercontent.com/19709084/173328469-2f164aa0-2921-4f56-9638-5136ccf3d68f.png). (Yes, it equally is possible to write Jmol scripts for recurrent tasks/loop over files.). [replication.zip](https://github.com/openbabel/openbabel/files/8889967/replication.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280
https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:1952,Performance,optimiz,optimization,1952," 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force field, enter `minimize addHydrogens;` after the prompt. (To run the optimization again, use a command in pattern of `minimize steps 1000;`.) When you are satisfied with the geometry suggested, either one of the following lines on Jmol's console yields a permanent record:. ```; write ""result.mol"";; write ""result.xyz"";; write ""result.png"";; ```. ![case2_Jmol_100iterations](https://user-images.githubusercontent.com/19709084/173328469-2f164aa0-2921-4f56-9638-5136ccf3d68f.png). (Yes, it equally is possible to write Jmol scripts for recurrent tasks/loop over files.). [replication.zip](https://github.com/openbabel/openbabel/files/8889967/replication.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280
https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:2068,Performance,optimiz,optimization,2068," 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force field, enter `minimize addHydrogens;` after the prompt. (To run the optimization again, use a command in pattern of `minimize steps 1000;`.) When you are satisfied with the geometry suggested, either one of the following lines on Jmol's console yields a permanent record:. ```; write ""result.mol"";; write ""result.xyz"";; write ""result.png"";; ```. ![case2_Jmol_100iterations](https://user-images.githubusercontent.com/19709084/173328469-2f164aa0-2921-4f56-9638-5136ccf3d68f.png). (Yes, it equally is possible to write Jmol scripts for recurrent tasks/loop over files.). [replication.zip](https://github.com/openbabel/openbabel/files/8889967/replication.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280
https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:1119,Testability,test,tested,1119," (it need not be the the global one). Some cases are more difficult than others; check if the sketcher used offers a native 3D export. Your submitted case is a difficult one, because . ![case2](https://user-images.githubusercontent.com/19709084/173321323-02474993-8bd2-4ef2-85ba-967e7977bc3b.png). is provided as 2D structure by the .mol file with all z-coordinates equal to zero (the third column in the snippet below):. ```; [...]; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force field, enter `minimize addHydrogens;` after the prompt. (To run the optimization aga",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280
https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162219507:374,Deployability,configurat,configurations,374,"@ghutchis The inversion of «clockwise» to «anticlockwise» orientation described for stereogenic centres described in the manual for version 3.0.1 ([entry](https://open-babel.readthedocs.io/en/latest/Stereochemistry/stereo.html#modifying-the-stereochemistry)), padded by snippets of code, led me to the assumption openbabel were capable to recognize .and. assign _R_ and _S_ configurations. From your reply, I recognize this was inversion of these priorities doesn't match with the feature suggestion. Thank you for the clarification.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162219507
https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162219507:374,Modifiability,config,configurations,374,"@ghutchis The inversion of «clockwise» to «anticlockwise» orientation described for stereogenic centres described in the manual for version 3.0.1 ([entry](https://open-babel.readthedocs.io/en/latest/Stereochemistry/stereo.html#modifying-the-stereochemistry)), padded by snippets of code, led me to the assumption openbabel were capable to recognize .and. assign _R_ and _S_ configurations. From your reply, I recognize this was inversion of these priorities doesn't match with the feature suggestion. Thank you for the clarification.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162219507
https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766:1344,Integrability,message,message,1344,"It seems possible a/the reference you refer to is _Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation_ by Robert Hanson _et al._ (J. Chem. Inf. Model. 2018, 58, 1755-1765, [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324)) with synopses like. ![Hanson_2018_01](https://user-images.githubusercontent.com/19709084/174974300-6556c416-c2b0-4b2c-a271-86e926645817.png). and. ![Hanson_2018_02](https://user-images.githubusercontent.com/19709084/174974348-81939aa1-e1d5-45c1-8015-55aaeb29c030.png). and their [validation suite](https://cipvalidationsuite.github.io/ValidationSuite/). In part it builds on a talk _The need for Open-CIP: Comparing Cahn-Ingold-Prelog rule implementations_ by John Mayfield _et al._ (link to the preserving [repository](https://www.nextmovesoftware.com/talks/Mayfield_BuildingOnSand_InChI_201708.pdf)) with comparisons about how well the programs applied the rules at time of the survey (e.g., slide 18):. ![Mayfield_2017_ACS08](https://user-images.githubusercontent.com/19709084/174975215-ce311803-953b-4ddf-85f4-bf5bb895bd9f.png). (Mayfield _et al._, 254th ACS National Meeting & Exposition. Aug 2017). This and other talks compiled by [nextmovesoftware](https://www.nextmovesoftware.com/talks.html) convey the message to be much more aware of limits of implementation, and to become a critic user, than the usual _click and go_. One instructive example / problem not anticipated by interaction _via_ the GUI:. ![Mayfield_2017_ACS08_b](https://user-images.githubusercontent.com/19709084/174977177-3e3768ac-1436-4c1a-b178-9f124508151d.png). (Mayfield talk, slide 22). (This reply is more to a future reader interested in the topic, than for the developers of openbabel.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766
https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766:611,Security,validat,validation,611,"It seems possible a/the reference you refer to is _Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation_ by Robert Hanson _et al._ (J. Chem. Inf. Model. 2018, 58, 1755-1765, [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324)) with synopses like. ![Hanson_2018_01](https://user-images.githubusercontent.com/19709084/174974300-6556c416-c2b0-4b2c-a271-86e926645817.png). and. ![Hanson_2018_02](https://user-images.githubusercontent.com/19709084/174974348-81939aa1-e1d5-45c1-8015-55aaeb29c030.png). and their [validation suite](https://cipvalidationsuite.github.io/ValidationSuite/). In part it builds on a talk _The need for Open-CIP: Comparing Cahn-Ingold-Prelog rule implementations_ by John Mayfield _et al._ (link to the preserving [repository](https://www.nextmovesoftware.com/talks/Mayfield_BuildingOnSand_InChI_201708.pdf)) with comparisons about how well the programs applied the rules at time of the survey (e.g., slide 18):. ![Mayfield_2017_ACS08](https://user-images.githubusercontent.com/19709084/174975215-ce311803-953b-4ddf-85f4-bf5bb895bd9f.png). (Mayfield _et al._, 254th ACS National Meeting & Exposition. Aug 2017). This and other talks compiled by [nextmovesoftware](https://www.nextmovesoftware.com/talks.html) convey the message to be much more aware of limits of implementation, and to become a critic user, than the usual _click and go_. One instructive example / problem not anticipated by interaction _via_ the GUI:. ![Mayfield_2017_ACS08_b](https://user-images.githubusercontent.com/19709084/174977177-3e3768ac-1436-4c1a-b178-9f124508151d.png). (Mayfield talk, slide 22). (This reply is more to a future reader interested in the topic, than for the developers of openbabel.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766
https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766:666,Security,Validat,ValidationSuite,666,"It seems possible a/the reference you refer to is _Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation_ by Robert Hanson _et al._ (J. Chem. Inf. Model. 2018, 58, 1755-1765, [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324)) with synopses like. ![Hanson_2018_01](https://user-images.githubusercontent.com/19709084/174974300-6556c416-c2b0-4b2c-a271-86e926645817.png). and. ![Hanson_2018_02](https://user-images.githubusercontent.com/19709084/174974348-81939aa1-e1d5-45c1-8015-55aaeb29c030.png). and their [validation suite](https://cipvalidationsuite.github.io/ValidationSuite/). In part it builds on a talk _The need for Open-CIP: Comparing Cahn-Ingold-Prelog rule implementations_ by John Mayfield _et al._ (link to the preserving [repository](https://www.nextmovesoftware.com/talks/Mayfield_BuildingOnSand_InChI_201708.pdf)) with comparisons about how well the programs applied the rules at time of the survey (e.g., slide 18):. ![Mayfield_2017_ACS08](https://user-images.githubusercontent.com/19709084/174975215-ce311803-953b-4ddf-85f4-bf5bb895bd9f.png). (Mayfield _et al._, 254th ACS National Meeting & Exposition. Aug 2017). This and other talks compiled by [nextmovesoftware](https://www.nextmovesoftware.com/talks.html) convey the message to be much more aware of limits of implementation, and to become a critic user, than the usual _click and go_. One instructive example / problem not anticipated by interaction _via_ the GUI:. ![Mayfield_2017_ACS08_b](https://user-images.githubusercontent.com/19709084/174977177-3e3768ac-1436-4c1a-b178-9f124508151d.png). (Mayfield talk, slide 22). (This reply is more to a future reader interested in the topic, than for the developers of openbabel.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766
https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766:154,Usability,Guid,Guide,154,"It seems possible a/the reference you refer to is _Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation_ by Robert Hanson _et al._ (J. Chem. Inf. Model. 2018, 58, 1755-1765, [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324)) with synopses like. ![Hanson_2018_01](https://user-images.githubusercontent.com/19709084/174974300-6556c416-c2b0-4b2c-a271-86e926645817.png). and. ![Hanson_2018_02](https://user-images.githubusercontent.com/19709084/174974348-81939aa1-e1d5-45c1-8015-55aaeb29c030.png). and their [validation suite](https://cipvalidationsuite.github.io/ValidationSuite/). In part it builds on a talk _The need for Open-CIP: Comparing Cahn-Ingold-Prelog rule implementations_ by John Mayfield _et al._ (link to the preserving [repository](https://www.nextmovesoftware.com/talks/Mayfield_BuildingOnSand_InChI_201708.pdf)) with comparisons about how well the programs applied the rules at time of the survey (e.g., slide 18):. ![Mayfield_2017_ACS08](https://user-images.githubusercontent.com/19709084/174975215-ce311803-953b-4ddf-85f4-bf5bb895bd9f.png). (Mayfield _et al._, 254th ACS National Meeting & Exposition. Aug 2017). This and other talks compiled by [nextmovesoftware](https://www.nextmovesoftware.com/talks.html) convey the message to be much more aware of limits of implementation, and to become a critic user, than the usual _click and go_. One instructive example / problem not anticipated by interaction _via_ the GUI:. ![Mayfield_2017_ACS08_b](https://user-images.githubusercontent.com/19709084/174977177-3e3768ac-1436-4c1a-b178-9f124508151d.png). (Mayfield talk, slide 22). (This reply is more to a future reader interested in the topic, than for the developers of openbabel.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766
https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163286170:21,Usability,clear,clear,21,"I think we're pretty clear up-front that SystematicRotorSearch does exactly what it says - systematically generate all possible rotamers. Even for a small molecule, this is exponential, roughly 3^n for n rotatable bonds. I'm not sure I'd suggest it for anything beyond 8-10 rotatable bonds. (We've done it, but yes, it takes a lot of memory.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163286170
https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163290711:121,Energy Efficiency,consumption,consumption,121,"Thanks for the quick responses and your time.; I used an pdb file with up to 20 residues and was surprised about the RAM consumption in contrast to the other methods, but it is clear now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163290711
https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163290711:177,Usability,clear,clear,177,"Thanks for the quick responses and your time.; I used an pdb file with up to 20 residues and was surprised about the RAM consumption in contrast to the other methods, but it is clear now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163290711
https://github.com/openbabel/openbabel/issues/2498#issuecomment-1164119400:95,Deployability,release,releases,95,"@Aquaplant You might consider updating openbabel. The contemporary version 3.1.1 is among the [releases](https://github.com/openbabel/openbabel/releases), and there are more recent versions than 2.4.1 you mention repackaged for your OS (brief search on Ubuntu's [package index](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1164119400
https://github.com/openbabel/openbabel/issues/2498#issuecomment-1164119400:144,Deployability,release,releases,144,"@Aquaplant You might consider updating openbabel. The contemporary version 3.1.1 is among the [releases](https://github.com/openbabel/openbabel/releases), and there are more recent versions than 2.4.1 you mention repackaged for your OS (brief search on Ubuntu's [package index](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1164119400
https://github.com/openbabel/openbabel/issues/2502#issuecomment-1166744296:18,Deployability,install,installed,18,"If you have conda installed, why not:; `conda install -c conda-forge openbabel`. https://anaconda.org/conda-forge/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2502#issuecomment-1166744296
https://github.com/openbabel/openbabel/issues/2502#issuecomment-1166744296:46,Deployability,install,install,46,"If you have conda installed, why not:; `conda install -c conda-forge openbabel`. https://anaconda.org/conda-forge/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2502#issuecomment-1166744296
https://github.com/openbabel/openbabel/issues/2502#issuecomment-1166745338:129,Deployability,install,installed,129,"It looks like `_openbabel.so` is linking to some other `libopenbabel`, which is a common challenge if you have multiple versions installed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2502#issuecomment-1166745338
https://github.com/openbabel/openbabel/issues/2502#issuecomment-1170617233:20,Deployability,install,installed,20,"> If you have conda installed, why not: `conda install -c conda-forge openbabel`. Didn’t think to check. So far it is working. I will spend some time when I get a chance to understand what I'm doing wrong here -- probably just me in retrospect. I will keep the issue until concluded.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2502#issuecomment-1170617233
https://github.com/openbabel/openbabel/issues/2502#issuecomment-1170617233:47,Deployability,install,install,47,"> If you have conda installed, why not: `conda install -c conda-forge openbabel`. Didn’t think to check. So far it is working. I will spend some time when I get a chance to understand what I'm doing wrong here -- probably just me in retrospect. I will keep the issue until concluded.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2502#issuecomment-1170617233
https://github.com/openbabel/openbabel/issues/2503#issuecomment-1173578957:376,Availability,error,error,376,"Hi,. How did you install OpenBabel? It looks like a problem with the library paths so one possible solution could be to add /usr/local/lib/ to LD_LIBRARY_PATH, see https://open-babel.readthedocs.io/en/latest/Installation/install.html#troubleshooting-build-problems. ```; LD_LIBRARY_PATH - Used to find the location of the libopenbabel.so file.; You should set this if you get error messages about not being able to find libopenbabel.so.; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2503#issuecomment-1173578957
https://github.com/openbabel/openbabel/issues/2503#issuecomment-1173578957:17,Deployability,install,install,17,"Hi,. How did you install OpenBabel? It looks like a problem with the library paths so one possible solution could be to add /usr/local/lib/ to LD_LIBRARY_PATH, see https://open-babel.readthedocs.io/en/latest/Installation/install.html#troubleshooting-build-problems. ```; LD_LIBRARY_PATH - Used to find the location of the libopenbabel.so file.; You should set this if you get error messages about not being able to find libopenbabel.so.; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2503#issuecomment-1173578957
https://github.com/openbabel/openbabel/issues/2503#issuecomment-1173578957:208,Deployability,Install,Installation,208,"Hi,. How did you install OpenBabel? It looks like a problem with the library paths so one possible solution could be to add /usr/local/lib/ to LD_LIBRARY_PATH, see https://open-babel.readthedocs.io/en/latest/Installation/install.html#troubleshooting-build-problems. ```; LD_LIBRARY_PATH - Used to find the location of the libopenbabel.so file.; You should set this if you get error messages about not being able to find libopenbabel.so.; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2503#issuecomment-1173578957
https://github.com/openbabel/openbabel/issues/2503#issuecomment-1173578957:221,Deployability,install,install,221,"Hi,. How did you install OpenBabel? It looks like a problem with the library paths so one possible solution could be to add /usr/local/lib/ to LD_LIBRARY_PATH, see https://open-babel.readthedocs.io/en/latest/Installation/install.html#troubleshooting-build-problems. ```; LD_LIBRARY_PATH - Used to find the location of the libopenbabel.so file.; You should set this if you get error messages about not being able to find libopenbabel.so.; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2503#issuecomment-1173578957
https://github.com/openbabel/openbabel/issues/2503#issuecomment-1173578957:382,Integrability,message,messages,382,"Hi,. How did you install OpenBabel? It looks like a problem with the library paths so one possible solution could be to add /usr/local/lib/ to LD_LIBRARY_PATH, see https://open-babel.readthedocs.io/en/latest/Installation/install.html#troubleshooting-build-problems. ```; LD_LIBRARY_PATH - Used to find the location of the libopenbabel.so file.; You should set this if you get error messages about not being able to find libopenbabel.so.; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2503#issuecomment-1173578957
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:25,Availability,failure,failures,25,"Can you help look at the failures in the `roundtrip` test you added?. ```; 1102 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1q11_tye.sdf; [726](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:727); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [727](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:53,Testability,test,test,53,"Can you help look at the failures in the `roundtrip` test you added?. ```; 1102 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1q11_tye.sdf; [726](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:727); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [727](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:118,Testability,test,test,118,"Can you help look at the failures in the `roundtrip` test you added?. ```; 1102 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1q11_tye.sdf; [726](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:727); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [727](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:446,Testability,test,test,446,"Can you help look at the failures in the `roundtrip` test you added?. ```; 1102 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1q11_tye.sdf; [726](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:727); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [727](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:775,Testability,test,test,775,"Can you help look at the failures in the `roundtrip` test you added?. ```; 1102 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1q11_tye.sdf; [726](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:727); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [727](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:1104,Testability,test,test,1104,"ou added?. ```; 1102 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1q11_tye.sdf; [726](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:727); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [727](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:1433,Testability,test,test,1433,#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:1762,Testability,test,test,1762,#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:2091,Testability,test,test,2091,#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:2420,Testability,test,test,2420,"#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:2749,Testability,test,test,2749,"#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:3078,Testability,test,test,3078,"#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:3406,Testability,test,test,3406,"e#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /hom",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:3735,Testability,test,test,3735,"e#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /ho",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:4065,Testability,test,test,4065,"e#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot8_6db.sdf; [754](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:755); pdbmol not equal: Could only match 0 of 35 atoms (35); [755](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:756); 13301 /ho",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:4395,Testability,test,test,4395,"itValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot8_6db.sdf; [754](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:755); pdbmol not equal: Could only match 0 of 35 atoms (35); [755](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:756); 13301 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2x94_x94.sdf; [756](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:757); pdbmol not equal: Could only match 0 of 52 atoms (52); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:4725,Testability,test,test,4725,"itValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot8_6db.sdf; [754](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:755); pdbmol not equal: Could only match 0 of 35 atoms (35); [755](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:756); 13301 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2x94_x94.sdf; [756](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:757); pdbmol not equal: Could only match 0 of 52 atoms (52); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:5055,Testability,test,test,5055,"itValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot8_6db.sdf; [754](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:755); pdbmol not equal: Could only match 0 of 35 atoms (35); [755](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:756); 13301 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2x94_x94.sdf; [756](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:757); pdbmol not equal: Could only match 0 of 52 atoms (52); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256
https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164:640,Energy Efficiency,reduce,reduced,640,"Constraining the conversion to a small set (`timeout 120 obabel ache_smiles.smi -O ache.sdf --gen3d 5 --p 7.4`) and the fastest algorithm to suggest a conformer (which need not lead to the global optimum), the CLI reports multiple entries where the stereochemistry either is ambiguous, or wrong (`Could not correct 1 stereocenter(s) in this molecule ()`). Actually, there are entries with more than one problematic chirality center, too. In this perspective, it is better if OpenBabel's permanent record only is about the non-problematic structures. The better thing to do would be a revision of the structure generator; since SMILES are a reduced representation of the structures, possibly the maintainers of the generator may fix the problem and benchmark the assignment of stereochemistry (CIP rules) against a reference set. Meanwhile, perhaps the generator you use offers the export of the molecules as 3D structures, e.g. in the .sdf format to bypass the current problem. https://github.com/CIPValidationSuite/ValidationSuite",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164
https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164:45,Safety,timeout,timeout,45,"Constraining the conversion to a small set (`timeout 120 obabel ache_smiles.smi -O ache.sdf --gen3d 5 --p 7.4`) and the fastest algorithm to suggest a conformer (which need not lead to the global optimum), the CLI reports multiple entries where the stereochemistry either is ambiguous, or wrong (`Could not correct 1 stereocenter(s) in this molecule ()`). Actually, there are entries with more than one problematic chirality center, too. In this perspective, it is better if OpenBabel's permanent record only is about the non-problematic structures. The better thing to do would be a revision of the structure generator; since SMILES are a reduced representation of the structures, possibly the maintainers of the generator may fix the problem and benchmark the assignment of stereochemistry (CIP rules) against a reference set. Meanwhile, perhaps the generator you use offers the export of the molecules as 3D structures, e.g. in the .sdf format to bypass the current problem. https://github.com/CIPValidationSuite/ValidationSuite",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164
https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164:1016,Security,Validat,ValidationSuite,1016,"Constraining the conversion to a small set (`timeout 120 obabel ache_smiles.smi -O ache.sdf --gen3d 5 --p 7.4`) and the fastest algorithm to suggest a conformer (which need not lead to the global optimum), the CLI reports multiple entries where the stereochemistry either is ambiguous, or wrong (`Could not correct 1 stereocenter(s) in this molecule ()`). Actually, there are entries with more than one problematic chirality center, too. In this perspective, it is better if OpenBabel's permanent record only is about the non-problematic structures. The better thing to do would be a revision of the structure generator; since SMILES are a reduced representation of the structures, possibly the maintainers of the generator may fix the problem and benchmark the assignment of stereochemistry (CIP rules) against a reference set. Meanwhile, perhaps the generator you use offers the export of the molecules as 3D structures, e.g. in the .sdf format to bypass the current problem. https://github.com/CIPValidationSuite/ValidationSuite",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164
https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164:748,Testability,benchmark,benchmark,748,"Constraining the conversion to a small set (`timeout 120 obabel ache_smiles.smi -O ache.sdf --gen3d 5 --p 7.4`) and the fastest algorithm to suggest a conformer (which need not lead to the global optimum), the CLI reports multiple entries where the stereochemistry either is ambiguous, or wrong (`Could not correct 1 stereocenter(s) in this molecule ()`). Actually, there are entries with more than one problematic chirality center, too. In this perspective, it is better if OpenBabel's permanent record only is about the non-problematic structures. The better thing to do would be a revision of the structure generator; since SMILES are a reduced representation of the structures, possibly the maintainers of the generator may fix the problem and benchmark the assignment of stereochemistry (CIP rules) against a reference set. Meanwhile, perhaps the generator you use offers the export of the molecules as 3D structures, e.g. in the .sdf format to bypass the current problem. https://github.com/CIPValidationSuite/ValidationSuite",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159:2002,Performance,perform,perform,2002," -- you see an alternating pattern of single and double bonds. (This is a formalism only, because aromatic bonds are neither single, nor double bonds.) Thus, instead of `c1ccccc1` to describe benzene, you may write `C1=CC=CC=C1`, too. The potential hurdle on the side of chemistry is that by e.g., cyclopentadiene (`C1C=CC=C1`), insaturation _alone_ is a necessary, yet not a sufficient condition to consider a compound as _aromatic_. On the other side, there are multiple SMILES dialects used; OpenBabel provides canonical, universal, and inchified SMILES ([reference](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). The more complex the molecular structure to describe, the higher the chance you are going to spot a difference in SMILES strings assigned along these rules. Assuming you didn't know about SMILES earlier, there is a brief entry in [wikipedia](https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system), and thanks to Daylight some [tutorial](https://daylight.com/dayhtml_tutorials/languages/smiles/index.html), [theory](https://daylight.com/dayhtml/doc/theory/theory.smiles.html), and [examples](https://www.daylight.com/dayhtml_tutorials/languages/smiles/smiles_examples.html) compiled in one spot to get started. In case you launch your scripts from the CLI, a slight modification of your code offers to test one SMILES string at a time:. ```python; #!/usr/bin/env python3. import argparse. from openbabel import openbabel; from openbabel import pybel. def main():; """"""Collect SMILES and perform the analysis""""""; parser = argparse.ArgumentParser(; description='Check if OpenBabel considers a structure aromatic'); parser.add_argument('smiles', help='structure to test (SMILES string)'); args = parser.parse_args(). # Reading the molecule; mol = pybel.readstring(""smi"", args.smiles). # Checking the aromaticity; print([; int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol); ]). if __name__ == '__main__':; main(); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159:1818,Testability,test,test,1818," -- you see an alternating pattern of single and double bonds. (This is a formalism only, because aromatic bonds are neither single, nor double bonds.) Thus, instead of `c1ccccc1` to describe benzene, you may write `C1=CC=CC=C1`, too. The potential hurdle on the side of chemistry is that by e.g., cyclopentadiene (`C1C=CC=C1`), insaturation _alone_ is a necessary, yet not a sufficient condition to consider a compound as _aromatic_. On the other side, there are multiple SMILES dialects used; OpenBabel provides canonical, universal, and inchified SMILES ([reference](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). The more complex the molecular structure to describe, the higher the chance you are going to spot a difference in SMILES strings assigned along these rules. Assuming you didn't know about SMILES earlier, there is a brief entry in [wikipedia](https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system), and thanks to Daylight some [tutorial](https://daylight.com/dayhtml_tutorials/languages/smiles/index.html), [theory](https://daylight.com/dayhtml/doc/theory/theory.smiles.html), and [examples](https://www.daylight.com/dayhtml_tutorials/languages/smiles/smiles_examples.html) compiled in one spot to get started. In case you launch your scripts from the CLI, a slight modification of your code offers to test one SMILES string at a time:. ```python; #!/usr/bin/env python3. import argparse. from openbabel import openbabel; from openbabel import pybel. def main():; """"""Collect SMILES and perform the analysis""""""; parser = argparse.ArgumentParser(; description='Check if OpenBabel considers a structure aromatic'); parser.add_argument('smiles', help='structure to test (SMILES string)'); args = parser.parse_args(). # Reading the molecule; mol = pybel.readstring(""smi"", args.smiles). # Checking the aromaticity; print([; int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol); ]). if __name__ == '__main__':; main(); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159:2177,Testability,test,test,2177," -- you see an alternating pattern of single and double bonds. (This is a formalism only, because aromatic bonds are neither single, nor double bonds.) Thus, instead of `c1ccccc1` to describe benzene, you may write `C1=CC=CC=C1`, too. The potential hurdle on the side of chemistry is that by e.g., cyclopentadiene (`C1C=CC=C1`), insaturation _alone_ is a necessary, yet not a sufficient condition to consider a compound as _aromatic_. On the other side, there are multiple SMILES dialects used; OpenBabel provides canonical, universal, and inchified SMILES ([reference](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). The more complex the molecular structure to describe, the higher the chance you are going to spot a difference in SMILES strings assigned along these rules. Assuming you didn't know about SMILES earlier, there is a brief entry in [wikipedia](https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system), and thanks to Daylight some [tutorial](https://daylight.com/dayhtml_tutorials/languages/smiles/index.html), [theory](https://daylight.com/dayhtml/doc/theory/theory.smiles.html), and [examples](https://www.daylight.com/dayhtml_tutorials/languages/smiles/smiles_examples.html) compiled in one spot to get started. In case you launch your scripts from the CLI, a slight modification of your code offers to test one SMILES string at a time:. ```python; #!/usr/bin/env python3. import argparse. from openbabel import openbabel; from openbabel import pybel. def main():; """"""Collect SMILES and perform the analysis""""""; parser = argparse.ArgumentParser(; description='Check if OpenBabel considers a structure aromatic'); parser.add_argument('smiles', help='structure to test (SMILES string)'); args = parser.parse_args(). # Reading the molecule; mol = pybel.readstring(""smi"", args.smiles). # Checking the aromaticity; print([; int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol); ]). if __name__ == '__main__':; main(); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793:382,Testability,test,test,382,"Thank you so much for your nice explanation @nbehrnd. . Actually, I admit that I modified on purpose the SMILE to be sure that the aromatic flag was not well determined. Just to simplify, I have a list of molecules in MOL2 file that have been dearomatized with another software and openbabel didn't recognize the aromaticity by atoms (example attached, just change the extension). [test.txt](https://github.com/openbabel/openbabel/files/9055935/test.txt). Because of that, I want to know how to use ""AssignAromaticFlags"" function. . Nevertheless, you give me the idea to transform the molecule first to new smile and re-read it, like that it is working! However, not sure if the main problem with the MOL2 corresponds to the both ways to present the aromaticity (Kekule or lower-case) or it is a bug. `mol = next(pybel.readfile(""mol2"", ""./test.mol2""))`. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]. `mol.write(""can"")`. > `O=C(N[C@@H](C(=O)N[C@H](CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1\tBDB50137400\n`. `mol = pybel.readstring(""can"", ""O=C(N[C@@H](C(=O)N[C@H]CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1"")`. `mol.OBMol.AddHydrogens()`. > True. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793:445,Testability,test,test,445,"Thank you so much for your nice explanation @nbehrnd. . Actually, I admit that I modified on purpose the SMILE to be sure that the aromatic flag was not well determined. Just to simplify, I have a list of molecules in MOL2 file that have been dearomatized with another software and openbabel didn't recognize the aromaticity by atoms (example attached, just change the extension). [test.txt](https://github.com/openbabel/openbabel/files/9055935/test.txt). Because of that, I want to know how to use ""AssignAromaticFlags"" function. . Nevertheless, you give me the idea to transform the molecule first to new smile and re-read it, like that it is working! However, not sure if the main problem with the MOL2 corresponds to the both ways to present the aromaticity (Kekule or lower-case) or it is a bug. `mol = next(pybel.readfile(""mol2"", ""./test.mol2""))`. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]. `mol.write(""can"")`. > `O=C(N[C@@H](C(=O)N[C@H](CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1\tBDB50137400\n`. `mol = pybel.readstring(""can"", ""O=C(N[C@@H](C(=O)N[C@H]CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1"")`. `mol.OBMol.AddHydrogens()`. > True. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793:839,Testability,test,test,839,"Thank you so much for your nice explanation @nbehrnd. . Actually, I admit that I modified on purpose the SMILE to be sure that the aromatic flag was not well determined. Just to simplify, I have a list of molecules in MOL2 file that have been dearomatized with another software and openbabel didn't recognize the aromaticity by atoms (example attached, just change the extension). [test.txt](https://github.com/openbabel/openbabel/files/9055935/test.txt). Because of that, I want to know how to use ""AssignAromaticFlags"" function. . Nevertheless, you give me the idea to transform the molecule first to new smile and re-read it, like that it is working! However, not sure if the main problem with the MOL2 corresponds to the both ways to present the aromaticity (Kekule or lower-case) or it is a bug. `mol = next(pybel.readfile(""mol2"", ""./test.mol2""))`. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]. `mol.write(""can"")`. > `O=C(N[C@@H](C(=O)N[C@H](CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1\tBDB50137400\n`. `mol = pybel.readstring(""can"", ""O=C(N[C@@H](C(=O)N[C@H]CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1"")`. `mol.OBMol.AddHydrogens()`. > True. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793:178,Usability,simpl,simplify,178,"Thank you so much for your nice explanation @nbehrnd. . Actually, I admit that I modified on purpose the SMILE to be sure that the aromatic flag was not well determined. Just to simplify, I have a list of molecules in MOL2 file that have been dearomatized with another software and openbabel didn't recognize the aromaticity by atoms (example attached, just change the extension). [test.txt](https://github.com/openbabel/openbabel/files/9055935/test.txt). Because of that, I want to know how to use ""AssignAromaticFlags"" function. . Nevertheless, you give me the idea to transform the molecule first to new smile and re-read it, like that it is working! However, not sure if the main problem with the MOL2 corresponds to the both ways to present the aromaticity (Kekule or lower-case) or it is a bug. `mol = next(pybel.readfile(""mol2"", ""./test.mol2""))`. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]. `mol.write(""can"")`. > `O=C(N[C@@H](C(=O)N[C@H](CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1\tBDB50137400\n`. `mol = pybel.readstring(""can"", ""O=C(N[C@@H](C(=O)N[C@H]CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1"")`. `mol.OBMol.AddHydrogens()`. > True. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177258041:539,Usability,simpl,simplest,539,"Without knowing the full specifications of the MOL2 file format it looks like OpenBabel is accepting the aromaticity specified in the infile and hence set the ""AromaticityPerceived"" flag to true which in turn will make IsAromatic to just report the values from the file.; The SMILES reader doesn't ""trust"" the incoming aromaticity designation since different toolkits have different aromaticity models so when you bounce through SMILES, OpenBabel unsets the ""AromaticityPerceived"" which is why IsAromatic finds the aromatic atoms.; So the simplest solution for you is to unset the flag before calling IsAromatic. (I also change the iteration to use pybel's mol.atoms to show a different way of iterate over atoms...); ```python; >>> [int(atom.OBAtom.IsAromatic()) for atom in mol.atoms]; [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; >>> mol.OBMol.SetAromaticPerceived(False); >>> [int(atom.OBAtom.IsAromatic()) for atom in mol.atoms]; [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177258041
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:1112,Deployability,update,updated,1112,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:518,Modifiability,rewrite,rewrite,518,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:164,Performance,perform,perform,164,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:1533,Performance,perform,perform,1533,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:585,Testability,test,test,585,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:886,Testability,test,test,886,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177825212:597,Modifiability,rewrite,rewrite,597,"@fredrikw Thanks for the explanation and the suggestion to iterate over atoms using Pybel. In fact, your solution helps me a lot, and for the moment is well working. I am checking few examples and it seems all of them are correct. So, thanks for suggest this easy solution to use `SetAromaticPerceived` instead of `AssignAromaticFlags`. ; @nbehrnd Thank you so much for all the explanation and links! Actually, I think that the problem as you said is the different annotation of the single and double bonds. For the moment, the solution of @fredrikw seems to work correctly, if not, I will try to rewrite just using the xyz information. The saturation was done with ChemAxon.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177825212
https://github.com/openbabel/openbabel/issues/2508#issuecomment-1880028579:97,Deployability,update,updated,97,"HI @rwxayheee , my pdb file is a ligand, so `CA` is not an alpha carbon of a residue.; BTW, I've updated my question: I have a little question, Is all kinds of aromatic carbon atom in a LIG.pdb be marked as `CA,CD...`?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1880028579
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1177045185:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1177045185
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340:312,Availability,error,error,312,"This looks really nice, but it's breaking tests in `scripts/python` - which expects a `ValueError` for the invalid format over an `OSError` since the file doesn't exist. Can you please either update `scripts/python/examples/testpybel.py:; ```; def testRFformaterror(self):; """"""Test that invalid formats raise an error""""""; self.assertRaises(ValueError, self.RFformaterror); ```. Or in your code, you should be able to check for an invalid format and *then* do your check for files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340:192,Deployability,update,update,192,"This looks really nice, but it's breaking tests in `scripts/python` - which expects a `ValueError` for the invalid format over an `OSError` since the file doesn't exist. Can you please either update `scripts/python/examples/testpybel.py:; ```; def testRFformaterror(self):; """"""Test that invalid formats raise an error""""""; self.assertRaises(ValueError, self.RFformaterror); ```. Or in your code, you should be able to check for an invalid format and *then* do your check for files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340:42,Testability,test,tests,42,"This looks really nice, but it's breaking tests in `scripts/python` - which expects a `ValueError` for the invalid format over an `OSError` since the file doesn't exist. Can you please either update `scripts/python/examples/testpybel.py:; ```; def testRFformaterror(self):; """"""Test that invalid formats raise an error""""""; self.assertRaises(ValueError, self.RFformaterror); ```. Or in your code, you should be able to check for an invalid format and *then* do your check for files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340:224,Testability,test,testpybel,224,"This looks really nice, but it's breaking tests in `scripts/python` - which expects a `ValueError` for the invalid format over an `OSError` since the file doesn't exist. Can you please either update `scripts/python/examples/testpybel.py:; ```; def testRFformaterror(self):; """"""Test that invalid formats raise an error""""""; self.assertRaises(ValueError, self.RFformaterror); ```. Or in your code, you should be able to check for an invalid format and *then* do your check for files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340:248,Testability,test,testRFformaterror,248,"This looks really nice, but it's breaking tests in `scripts/python` - which expects a `ValueError` for the invalid format over an `OSError` since the file doesn't exist. Can you please either update `scripts/python/examples/testpybel.py:; ```; def testRFformaterror(self):; """"""Test that invalid formats raise an error""""""; self.assertRaises(ValueError, self.RFformaterror); ```. Or in your code, you should be able to check for an invalid format and *then* do your check for files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340:277,Testability,Test,Test,277,"This looks really nice, but it's breaking tests in `scripts/python` - which expects a `ValueError` for the invalid format over an `OSError` since the file doesn't exist. Can you please either update `scripts/python/examples/testpybel.py:; ```; def testRFformaterror(self):; """"""Test that invalid formats raise an error""""""; self.assertRaises(ValueError, self.RFformaterror); ```. Or in your code, you should be able to check for an invalid format and *then* do your check for files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340:327,Testability,assert,assertRaises,327,"This looks really nice, but it's breaking tests in `scripts/python` - which expects a `ValueError` for the invalid format over an `OSError` since the file doesn't exist. Can you please either update `scripts/python/examples/testpybel.py:; ```; def testRFformaterror(self):; """"""Test that invalid formats raise an error""""""; self.assertRaises(ValueError, self.RFformaterror); ```. Or in your code, you should be able to check for an invalid format and *then* do your check for files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:550,Availability,error,error,550,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:993,Availability,error,error,993,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:1232,Availability,error,error,1232,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:674,Deployability,update,updated,674,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:828,Energy Efficiency,efficient,efficient,828,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:607,Modifiability,variab,variable,607,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:206,Security,validat,validate,206,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:237,Testability,test,testing,237,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:277,Testability,test,testpybel,277,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:317,Testability,assert,assert,317,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:1130,Testability,test,testpybel,1130,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:1158,Testability,test,testRFformaterror,1158,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:1197,Testability,Test,Test,1197,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:1257,Testability,assert,assertRaises,1257,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:1323,Testability,test,testing,1323,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:200,Availability,error,error,200,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:405,Availability,error,error,405,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:908,Modifiability,variab,variable,908,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:438,Security,validat,validation,438,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:66,Testability,test,testing,66,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:119,Testability,test,testpybel,119,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:137,Testability,Test,TestToolkit,137,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:149,Testability,test,testRFmissingfile,149,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:804,Testability,test,testpybel,804,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:233,Usability,simpl,simply,233,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1205260029:104,Testability,test,test,104,"I was aware of the ""priority"" of the sequence issue, which is why I said you could also just change the test. The modified version looks fine. . I'll double-check the build tests, but this looks good to merge.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1205260029
https://github.com/openbabel/openbabel/pull/2509#issuecomment-1205260029:173,Testability,test,tests,173,"I was aware of the ""priority"" of the sequence issue, which is why I said you could also just change the test. The modified version looks fine. . I'll double-check the build tests, but this looks good to merge.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1205260029
https://github.com/openbabel/openbabel/pull/2510#issuecomment-1180661378:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2510#issuecomment-1180661378
https://github.com/openbabel/openbabel/issues/2512#issuecomment-1184766665:73,Deployability,install,install,73,"There's very little we can say with what you've provided.; - How did you install Open Babel (and the Python module)?; - What version did you install?; - What is your script?. In general, if you are using miniconda, I would recommend `conda install -c conda-forge openbabel` which will install the correct version for you.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2512#issuecomment-1184766665
https://github.com/openbabel/openbabel/issues/2512#issuecomment-1184766665:141,Deployability,install,install,141,"There's very little we can say with what you've provided.; - How did you install Open Babel (and the Python module)?; - What version did you install?; - What is your script?. In general, if you are using miniconda, I would recommend `conda install -c conda-forge openbabel` which will install the correct version for you.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2512#issuecomment-1184766665
https://github.com/openbabel/openbabel/issues/2512#issuecomment-1184766665:240,Deployability,install,install,240,"There's very little we can say with what you've provided.; - How did you install Open Babel (and the Python module)?; - What version did you install?; - What is your script?. In general, if you are using miniconda, I would recommend `conda install -c conda-forge openbabel` which will install the correct version for you.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2512#issuecomment-1184766665
https://github.com/openbabel/openbabel/issues/2512#issuecomment-1184766665:285,Deployability,install,install,285,"There's very little we can say with what you've provided.; - How did you install Open Babel (and the Python module)?; - What version did you install?; - What is your script?. In general, if you are using miniconda, I would recommend `conda install -c conda-forge openbabel` which will install the correct version for you.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2512#issuecomment-1184766665
https://github.com/openbabel/openbabel/pull/2519#issuecomment-1200641255:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2519#issuecomment-1200641255
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209510897:87,Deployability,install,install,87,Can you run `--gen3d` on the command-line? This seems to be a case in which there's an install problem and `rigid-fragments.txt` isn't found. How did you install?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209510897
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209510897:154,Deployability,install,install,154,Can you run `--gen3d` on the command-line? This seems to be a case in which there's an install problem and `rigid-fragments.txt` isn't found. How did you install?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209510897
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209534353:263,Availability,error,error,263,"Hallo, thanks for answering. You are right, in command line, it works fine. ; ```bash; obabel infile.smi -O out.sdf --gen3d; ```. But Windows GUI seems to crash too!!. I am suprised that the python try and except statement does not work but if this is a critical error that goes along with a faulty installation this should not be a problem for python workflows. I installed with conda. ; ```bash; conda install openbabel -c conda-forge; ```; I am checking my setup now...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209534353
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209534353:292,Availability,fault,faulty,292,"Hallo, thanks for answering. You are right, in command line, it works fine. ; ```bash; obabel infile.smi -O out.sdf --gen3d; ```. But Windows GUI seems to crash too!!. I am suprised that the python try and except statement does not work but if this is a critical error that goes along with a faulty installation this should not be a problem for python workflows. I installed with conda. ; ```bash; conda install openbabel -c conda-forge; ```; I am checking my setup now...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209534353
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209534353:299,Deployability,install,installation,299,"Hallo, thanks for answering. You are right, in command line, it works fine. ; ```bash; obabel infile.smi -O out.sdf --gen3d; ```. But Windows GUI seems to crash too!!. I am suprised that the python try and except statement does not work but if this is a critical error that goes along with a faulty installation this should not be a problem for python workflows. I installed with conda. ; ```bash; conda install openbabel -c conda-forge; ```; I am checking my setup now...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209534353
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209534353:365,Deployability,install,installed,365,"Hallo, thanks for answering. You are right, in command line, it works fine. ; ```bash; obabel infile.smi -O out.sdf --gen3d; ```. But Windows GUI seems to crash too!!. I am suprised that the python try and except statement does not work but if this is a critical error that goes along with a faulty installation this should not be a problem for python workflows. I installed with conda. ; ```bash; conda install openbabel -c conda-forge; ```; I am checking my setup now...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209534353
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209534353:404,Deployability,install,install,404,"Hallo, thanks for answering. You are right, in command line, it works fine. ; ```bash; obabel infile.smi -O out.sdf --gen3d; ```. But Windows GUI seems to crash too!!. I am suprised that the python try and except statement does not work but if this is a critical error that goes along with a faulty installation this should not be a problem for python workflows. I installed with conda. ; ```bash; conda install openbabel -c conda-forge; ```; I am checking my setup now...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209534353
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209629547:194,Deployability,install,installed,194,The babel data dir is specified by conda at ``BABEL_DATADIR=C:\Users\...\anaconda3\envs\...\share\openbabel`` and there is a `rigid-fragments.txt`. I have problems getting the binaries plus pip installed for 3.1.1. So I can not test this at the moment.; But I have installed the `OpenBabel-3.1.1-x64.exe` and in ``C:\Users\...\AppData\Roaming\OpenBabel-3.1.1\data`` there is also a `rigid-fragments.txt`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209629547
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209629547:265,Deployability,install,installed,265,The babel data dir is specified by conda at ``BABEL_DATADIR=C:\Users\...\anaconda3\envs\...\share\openbabel`` and there is a `rigid-fragments.txt`. I have problems getting the binaries plus pip installed for 3.1.1. So I can not test this at the moment.; But I have installed the `OpenBabel-3.1.1-x64.exe` and in ``C:\Users\...\AppData\Roaming\OpenBabel-3.1.1\data`` there is also a `rigid-fragments.txt`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209629547
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209629547:228,Testability,test,test,228,The babel data dir is specified by conda at ``BABEL_DATADIR=C:\Users\...\anaconda3\envs\...\share\openbabel`` and there is a `rigid-fragments.txt`. I have problems getting the binaries plus pip installed for 3.1.1. So I can not test this at the moment.; But I have installed the `OpenBabel-3.1.1-x64.exe` and in ``C:\Users\...\AppData\Roaming\OpenBabel-3.1.1\data`` there is also a `rigid-fragments.txt`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209629547
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:326,Availability,error,error,326,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:594,Availability,Error,Error,594,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:74,Deployability,install,installing,74,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:109,Deployability,install,install,109,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:332,Integrability,message,message,332,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:625,Performance,Load,LoadFragments,625,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:240,Testability,test,test,240,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210444386:134,Availability,error,error,134,"Hallo @fredrikw , thank you very much.; I think I got it now. You are right, in conda prompt everything is fine. But I do not get any error message about `fragments.txt` (as you have) anymore...; Also this seems to work:. ```bash; python; >> import openbabel; >> import openbabel.pybel as pybel; >> mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); >> mol.make3D(); ```. It seems that in my IDE Pycharm the BABEL_DATADIR variable gets lost somehow. I could run it with:. ```python; import os; os.environ[""BABEL_DATADIR""] = ""C:\Users\...\anaconda3\envs\...\share\openbabel""; import openbabel; import openbabel.pybel as pybel; try:; mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); mol.make3D(); print(""everything is fine.""); except:; print(""Catched exception""); ```. Just for your information there is also another issue related to this: #2356 ; which could be closed... Last thing:. Did you check the Openbabel GUI, also? I do not know what the error might be here; could be conflict with conda?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210444386
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210444386:980,Availability,error,error,980,"Hallo @fredrikw , thank you very much.; I think I got it now. You are right, in conda prompt everything is fine. But I do not get any error message about `fragments.txt` (as you have) anymore...; Also this seems to work:. ```bash; python; >> import openbabel; >> import openbabel.pybel as pybel; >> mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); >> mol.make3D(); ```. It seems that in my IDE Pycharm the BABEL_DATADIR variable gets lost somehow. I could run it with:. ```python; import os; os.environ[""BABEL_DATADIR""] = ""C:\Users\...\anaconda3\envs\...\share\openbabel""; import openbabel; import openbabel.pybel as pybel; try:; mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); mol.make3D(); print(""everything is fine.""); except:; print(""Catched exception""); ```. Just for your information there is also another issue related to this: #2356 ; which could be closed... Last thing:. Did you check the Openbabel GUI, also? I do not know what the error might be here; could be conflict with conda?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210444386
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210444386:140,Integrability,message,message,140,"Hallo @fredrikw , thank you very much.; I think I got it now. You are right, in conda prompt everything is fine. But I do not get any error message about `fragments.txt` (as you have) anymore...; Also this seems to work:. ```bash; python; >> import openbabel; >> import openbabel.pybel as pybel; >> mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); >> mol.make3D(); ```. It seems that in my IDE Pycharm the BABEL_DATADIR variable gets lost somehow. I could run it with:. ```python; import os; os.environ[""BABEL_DATADIR""] = ""C:\Users\...\anaconda3\envs\...\share\openbabel""; import openbabel; import openbabel.pybel as pybel; try:; mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); mol.make3D(); print(""everything is fine.""); except:; print(""Catched exception""); ```. Just for your information there is also another issue related to this: #2356 ; which could be closed... Last thing:. Did you check the Openbabel GUI, also? I do not know what the error might be here; could be conflict with conda?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210444386
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210444386:438,Modifiability,variab,variable,438,"Hallo @fredrikw , thank you very much.; I think I got it now. You are right, in conda prompt everything is fine. But I do not get any error message about `fragments.txt` (as you have) anymore...; Also this seems to work:. ```bash; python; >> import openbabel; >> import openbabel.pybel as pybel; >> mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); >> mol.make3D(); ```. It seems that in my IDE Pycharm the BABEL_DATADIR variable gets lost somehow. I could run it with:. ```python; import os; os.environ[""BABEL_DATADIR""] = ""C:\Users\...\anaconda3\envs\...\share\openbabel""; import openbabel; import openbabel.pybel as pybel; try:; mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); mol.make3D(); print(""everything is fine.""); except:; print(""Catched exception""); ```. Just for your information there is also another issue related to this: #2356 ; which could be closed... Last thing:. Did you check the Openbabel GUI, also? I do not know what the error might be here; could be conflict with conda?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210444386
https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210452152:35,Deployability,install,installed,35,"I did not check the GUI, I haven't installed the binary package for Windows, only through Conda.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210452152
https://github.com/openbabel/openbabel/issues/2524#issuecomment-1211621277:26,Availability,error,error,26,"To start with, the actual error message says `-- Warning: Python bindings NOT found. Generate using -DRUN_SWIG.` regarding the Python bindings, so you need to rerun cmake with `-DRUN_SWIG`. BUT, you also have a lot of other stuff missing according to cmake so you will have more things to add to get everything working fully. How did you install pymatgen? If you are using a conda environment, the easiest way (by far) to install OpenBabel is through `conda install -c conda-forge openbabel`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2524#issuecomment-1211621277
https://github.com/openbabel/openbabel/issues/2524#issuecomment-1211621277:338,Deployability,install,install,338,"To start with, the actual error message says `-- Warning: Python bindings NOT found. Generate using -DRUN_SWIG.` regarding the Python bindings, so you need to rerun cmake with `-DRUN_SWIG`. BUT, you also have a lot of other stuff missing according to cmake so you will have more things to add to get everything working fully. How did you install pymatgen? If you are using a conda environment, the easiest way (by far) to install OpenBabel is through `conda install -c conda-forge openbabel`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2524#issuecomment-1211621277
https://github.com/openbabel/openbabel/issues/2524#issuecomment-1211621277:422,Deployability,install,install,422,"To start with, the actual error message says `-- Warning: Python bindings NOT found. Generate using -DRUN_SWIG.` regarding the Python bindings, so you need to rerun cmake with `-DRUN_SWIG`. BUT, you also have a lot of other stuff missing according to cmake so you will have more things to add to get everything working fully. How did you install pymatgen? If you are using a conda environment, the easiest way (by far) to install OpenBabel is through `conda install -c conda-forge openbabel`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2524#issuecomment-1211621277
https://github.com/openbabel/openbabel/issues/2524#issuecomment-1211621277:458,Deployability,install,install,458,"To start with, the actual error message says `-- Warning: Python bindings NOT found. Generate using -DRUN_SWIG.` regarding the Python bindings, so you need to rerun cmake with `-DRUN_SWIG`. BUT, you also have a lot of other stuff missing according to cmake so you will have more things to add to get everything working fully. How did you install pymatgen? If you are using a conda environment, the easiest way (by far) to install OpenBabel is through `conda install -c conda-forge openbabel`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2524#issuecomment-1211621277
https://github.com/openbabel/openbabel/issues/2524#issuecomment-1211621277:32,Integrability,message,message,32,"To start with, the actual error message says `-- Warning: Python bindings NOT found. Generate using -DRUN_SWIG.` regarding the Python bindings, so you need to rerun cmake with `-DRUN_SWIG`. BUT, you also have a lot of other stuff missing according to cmake so you will have more things to add to get everything working fully. How did you install pymatgen? If you are using a conda environment, the easiest way (by far) to install OpenBabel is through `conda install -c conda-forge openbabel`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2524#issuecomment-1211621277
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:2334,Availability,down,download,2334," hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.sdf`) encodes singlet, doublet, or triplet radicals, I recommend Biovia's documentation (revised edition by 2020) which is public ([link to a .pdf file on archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf), or the original [.pdf download from Biovia](https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf). --- . There is an ongoing discussion among the developers of [InChI trust](https://www.inchi-trust.org/) and the developers of FOSS about the current license scheme regarding implementations *computing* InChI in FOSS. Right of the tip of my hat, I don't recall if OpenBabel is in the fraction «be safe even if it means using an old version» (i.e., corresponding to InChI 1.03 by June 2010), or found a special agreement with InChI trust. Reference libraries and executables for Linux, Mac, Windows including to contemporary version 1.06 (released December 2020) may be downloaded for free from InChI trust [here](https://www.inchi-trust.org/download-latest-inchi-standard-software/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:3010,Availability,down,downloaded,3010," hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.sdf`) encodes singlet, doublet, or triplet radicals, I recommend Biovia's documentation (revised edition by 2020) which is public ([link to a .pdf file on archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf), or the original [.pdf download from Biovia](https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf). --- . There is an ongoing discussion among the developers of [InChI trust](https://www.inchi-trust.org/) and the developers of FOSS about the current license scheme regarding implementations *computing* InChI in FOSS. Right of the tip of my hat, I don't recall if OpenBabel is in the fraction «be safe even if it means using an old version» (i.e., corresponding to InChI 1.03 by June 2010), or found a special agreement with InChI trust. Reference libraries and executables for Linux, Mac, Windows including to contemporary version 1.06 (released December 2020) may be downloaded for free from InChI trust [here](https://www.inchi-trust.org/download-latest-inchi-standard-software/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:3082,Availability,down,download-latest-inchi-standard-software,3082," hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.sdf`) encodes singlet, doublet, or triplet radicals, I recommend Biovia's documentation (revised edition by 2020) which is public ([link to a .pdf file on archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf), or the original [.pdf download from Biovia](https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf). --- . There is an ongoing discussion among the developers of [InChI trust](https://www.inchi-trust.org/) and the developers of FOSS about the current license scheme regarding implementations *computing* InChI in FOSS. Right of the tip of my hat, I don't recall if OpenBabel is in the fraction «be safe even if it means using an old version» (i.e., corresponding to InChI 1.03 by June 2010), or found a special agreement with InChI trust. Reference libraries and executables for Linux, Mac, Windows including to contemporary version 1.06 (released December 2020) may be downloaded for free from InChI trust [here](https://www.inchi-trust.org/download-latest-inchi-standard-software/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:283,Deployability,update,update,283,"The `.mol` file submitted to openbabel misses an indication that the molecule is a radical (`RAD`); otherwise, the algorithm seems to work fine. This applies at least for openbabel 3.1.1 as the repositories of Linux Debian 12/bookworm (testing) currently provides (i.e., Mar 29 2022 update). For example, let the test page of [ChemDraw JS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) create a methyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the conta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:2979,Deployability,release,released,2979," hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.sdf`) encodes singlet, doublet, or triplet radicals, I recommend Biovia's documentation (revised edition by 2020) which is public ([link to a .pdf file on archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf), or the original [.pdf download from Biovia](https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf). --- . There is an ongoing discussion among the developers of [InChI trust](https://www.inchi-trust.org/) and the developers of FOSS about the current license scheme regarding implementations *computing* InChI in FOSS. Right of the tip of my hat, I don't recall if OpenBabel is in the fraction «be safe even if it means using an old version» (i.e., corresponding to InChI 1.03 by June 2010), or found a special agreement with InChI trust. Reference libraries and executables for Linux, Mac, Windows including to contemporary version 1.06 (released December 2020) may be downloaded for free from InChI trust [here](https://www.inchi-trust.org/download-latest-inchi-standard-software/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:2738,Safety,safe,safe,2738," hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.sdf`) encodes singlet, doublet, or triplet radicals, I recommend Biovia's documentation (revised edition by 2020) which is public ([link to a .pdf file on archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf), or the original [.pdf download from Biovia](https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf). --- . There is an ongoing discussion among the developers of [InChI trust](https://www.inchi-trust.org/) and the developers of FOSS about the current license scheme regarding implementations *computing* InChI in FOSS. Right of the tip of my hat, I don't recall if OpenBabel is in the fraction «be safe even if it means using an old version» (i.e., corresponding to InChI 1.03 by June 2010), or found a special agreement with InChI trust. Reference libraries and executables for Linux, Mac, Windows including to contemporary version 1.06 (released December 2020) may be downloaded for free from InChI trust [here](https://www.inchi-trust.org/download-latest-inchi-standard-software/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:236,Testability,test,testing,236,"The `.mol` file submitted to openbabel misses an indication that the molecule is a radical (`RAD`); otherwise, the algorithm seems to work fine. This applies at least for openbabel 3.1.1 as the repositories of Linux Debian 12/bookworm (testing) currently provides (i.e., Mar 29 2022 update). For example, let the test page of [ChemDraw JS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) create a methyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the conta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:313,Testability,test,test,313,"The `.mol` file submitted to openbabel misses an indication that the molecule is a radical (`RAD`); otherwise, the algorithm seems to work fine. This applies at least for openbabel 3.1.1 as the repositories of Linux Debian 12/bookworm (testing) currently provides (i.e., Mar 29 2022 update). For example, let the test page of [ChemDraw JS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) create a methyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the conta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:982,Testability,test,test,982,"The `.mol` file submitted to openbabel misses an indication that the molecule is a radical (`RAD`); otherwise, the algorithm seems to work fine. This applies at least for openbabel 3.1.1 as the repositories of Linux Debian 12/bookworm (testing) currently provides (i.e., Mar 29 2022 update). For example, let the test page of [ChemDraw JS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) create a methyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the conta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:1023,Testability,test,test,1023,"submitted to openbabel misses an indication that the molecule is a radical (`RAD`); otherwise, the algorithm seems to work fine. This applies at least for openbabel 3.1.1 as the repositories of Linux Debian 12/bookworm (testing) currently provides (i.e., Mar 29 2022 update). For example, let the test page of [ChemDraw JS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) create a methyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:1423,Testability,test,test,1423,"hyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.sdf`) encodes singlet, doublet, or triplet radicals, I recommend Biovia's documentation (revised edition by 2020) which is public ([link to a .pdf file on archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf), or the original [.pdf download from Biovia](https://discover.3ds.com/sites/default/files/2020-08/biovia_",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843:492,Testability,log,logging,492,"Thanks for the detailed reply. I understand the source of the issue, but it seems very unpractical. I had never heard of the RAD specification and I don't know a 3D builder that uses it. I don't think anyone is going to go through the trouble of manually specifying radicals, especially with many structures. As a workaround, a unique identifier can be obtained with the `openbabel` InChI + the actual number of hydrogens in the input structure. Not ideal, but relatively simple. Adding some logging at least to indicate if the option has been registered and is valid would be helpful. It's unfortunate regarding the potential license issues, but it is true that the license is peculiar.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843:472,Usability,simpl,simple,472,"Thanks for the detailed reply. I understand the source of the issue, but it seems very unpractical. I had never heard of the RAD specification and I don't know a 3D builder that uses it. I don't think anyone is going to go through the trouble of manually specifying radicals, especially with many structures. As a workaround, a unique identifier can be obtained with the `openbabel` InChI + the actual number of hydrogens in the input structure. Not ideal, but relatively simple. Adding some logging at least to indicate if the option has been registered and is valid would be helpful. It's unfortunate regarding the potential license issues, but it is true that the license is peculiar.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938:1563,Availability,Down,Download,1563,"May you please clarify what represents for you a «3D builder»?. *Assuming* this refers to a program to set up a computation in a program like Gaussian, Gamess-UK, Games-US, etc. the state of a molecule as radical is described by the spin of the molecule, independent to assigning the molecule as neutral, or charged. As an example, [Avogadro](https://avogadro.cc/) may either read a normal closed-shell molecule (like methane) from a `.mol` or `.sdf` or one may build one from which e.g., hydrogens are removed. With optional extensions you may then export this as as starting point for quantum chemistry calculations as illustrated below:*. ![example_avogadro](https://user-images.githubusercontent.com/19709084/184554375-3077e7f3-932e-40dc-b8b7-cc81995097c0.gif). Some assignments of charges and multiplicities for CH3 above only serve as illustration that it can be set up yet it shows that you can discern between e.g., methyl cation, methyl carbanion, and methy radical. In this perspective, Avogadro trades similar to interfaces like [gabedit](http://gabedit.sourceforge.net/). ![gabedit](https://user-images.githubusercontent.com/19709084/184554505-6e69ed1e-432b-4771-9996-c4bf568f104d.png). (image credit: example 7 of [screenshots](https://sites.google.com/site/allouchear/Home/gabedit/screenshots)). or [chemcompute](https://chemcompute.org). ![chemcompute](https://user-images.githubusercontent.com/19709084/184554567-311ae995-edc4-4533-aeb5-654503d08c79.png). *) In case the optional Avogadro Input Generators plugin (in Avogadro's GUI, Extensions -> Download Plugins; this one requires a working installation of Python) does not yet offer a bridge to your quantum chemical program, you may consider proposing an addition either on [GitHub](https://github.com/OpenChemistry/avogadroapp), or the public [discussion board](https://discuss.avogadro.cc/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938:1609,Deployability,install,installation,1609,"May you please clarify what represents for you a «3D builder»?. *Assuming* this refers to a program to set up a computation in a program like Gaussian, Gamess-UK, Games-US, etc. the state of a molecule as radical is described by the spin of the molecule, independent to assigning the molecule as neutral, or charged. As an example, [Avogadro](https://avogadro.cc/) may either read a normal closed-shell molecule (like methane) from a `.mol` or `.sdf` or one may build one from which e.g., hydrogens are removed. With optional extensions you may then export this as as starting point for quantum chemistry calculations as illustrated below:*. ![example_avogadro](https://user-images.githubusercontent.com/19709084/184554375-3077e7f3-932e-40dc-b8b7-cc81995097c0.gif). Some assignments of charges and multiplicities for CH3 above only serve as illustration that it can be set up yet it shows that you can discern between e.g., methyl cation, methyl carbanion, and methy radical. In this perspective, Avogadro trades similar to interfaces like [gabedit](http://gabedit.sourceforge.net/). ![gabedit](https://user-images.githubusercontent.com/19709084/184554505-6e69ed1e-432b-4771-9996-c4bf568f104d.png). (image credit: example 7 of [screenshots](https://sites.google.com/site/allouchear/Home/gabedit/screenshots)). or [chemcompute](https://chemcompute.org). ![chemcompute](https://user-images.githubusercontent.com/19709084/184554567-311ae995-edc4-4533-aeb5-654503d08c79.png). *) In case the optional Avogadro Input Generators plugin (in Avogadro's GUI, Extensions -> Download Plugins; this one requires a working installation of Python) does not yet offer a bridge to your quantum chemical program, you may consider proposing an addition either on [GitHub](https://github.com/OpenChemistry/avogadroapp), or the public [discussion board](https://discuss.avogadro.cc/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938:308,Energy Efficiency,charge,charged,308,"May you please clarify what represents for you a «3D builder»?. *Assuming* this refers to a program to set up a computation in a program like Gaussian, Gamess-UK, Games-US, etc. the state of a molecule as radical is described by the spin of the molecule, independent to assigning the molecule as neutral, or charged. As an example, [Avogadro](https://avogadro.cc/) may either read a normal closed-shell molecule (like methane) from a `.mol` or `.sdf` or one may build one from which e.g., hydrogens are removed. With optional extensions you may then export this as as starting point for quantum chemistry calculations as illustrated below:*. ![example_avogadro](https://user-images.githubusercontent.com/19709084/184554375-3077e7f3-932e-40dc-b8b7-cc81995097c0.gif). Some assignments of charges and multiplicities for CH3 above only serve as illustration that it can be set up yet it shows that you can discern between e.g., methyl cation, methyl carbanion, and methy radical. In this perspective, Avogadro trades similar to interfaces like [gabedit](http://gabedit.sourceforge.net/). ![gabedit](https://user-images.githubusercontent.com/19709084/184554505-6e69ed1e-432b-4771-9996-c4bf568f104d.png). (image credit: example 7 of [screenshots](https://sites.google.com/site/allouchear/Home/gabedit/screenshots)). or [chemcompute](https://chemcompute.org). ![chemcompute](https://user-images.githubusercontent.com/19709084/184554567-311ae995-edc4-4533-aeb5-654503d08c79.png). *) In case the optional Avogadro Input Generators plugin (in Avogadro's GUI, Extensions -> Download Plugins; this one requires a working installation of Python) does not yet offer a bridge to your quantum chemical program, you may consider proposing an addition either on [GitHub](https://github.com/OpenChemistry/avogadroapp), or the public [discussion board](https://discuss.avogadro.cc/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938:786,Energy Efficiency,charge,charges,786,"May you please clarify what represents for you a «3D builder»?. *Assuming* this refers to a program to set up a computation in a program like Gaussian, Gamess-UK, Games-US, etc. the state of a molecule as radical is described by the spin of the molecule, independent to assigning the molecule as neutral, or charged. As an example, [Avogadro](https://avogadro.cc/) may either read a normal closed-shell molecule (like methane) from a `.mol` or `.sdf` or one may build one from which e.g., hydrogens are removed. With optional extensions you may then export this as as starting point for quantum chemistry calculations as illustrated below:*. ![example_avogadro](https://user-images.githubusercontent.com/19709084/184554375-3077e7f3-932e-40dc-b8b7-cc81995097c0.gif). Some assignments of charges and multiplicities for CH3 above only serve as illustration that it can be set up yet it shows that you can discern between e.g., methyl cation, methyl carbanion, and methy radical. In this perspective, Avogadro trades similar to interfaces like [gabedit](http://gabedit.sourceforge.net/). ![gabedit](https://user-images.githubusercontent.com/19709084/184554505-6e69ed1e-432b-4771-9996-c4bf568f104d.png). (image credit: example 7 of [screenshots](https://sites.google.com/site/allouchear/Home/gabedit/screenshots)). or [chemcompute](https://chemcompute.org). ![chemcompute](https://user-images.githubusercontent.com/19709084/184554567-311ae995-edc4-4533-aeb5-654503d08c79.png). *) In case the optional Avogadro Input Generators plugin (in Avogadro's GUI, Extensions -> Download Plugins; this one requires a working installation of Python) does not yet offer a bridge to your quantum chemical program, you may consider proposing an addition either on [GitHub](https://github.com/OpenChemistry/avogadroapp), or the public [discussion board](https://discuss.avogadro.cc/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938:1024,Integrability,interface,interfaces,1024,"May you please clarify what represents for you a «3D builder»?. *Assuming* this refers to a program to set up a computation in a program like Gaussian, Gamess-UK, Games-US, etc. the state of a molecule as radical is described by the spin of the molecule, independent to assigning the molecule as neutral, or charged. As an example, [Avogadro](https://avogadro.cc/) may either read a normal closed-shell molecule (like methane) from a `.mol` or `.sdf` or one may build one from which e.g., hydrogens are removed. With optional extensions you may then export this as as starting point for quantum chemistry calculations as illustrated below:*. ![example_avogadro](https://user-images.githubusercontent.com/19709084/184554375-3077e7f3-932e-40dc-b8b7-cc81995097c0.gif). Some assignments of charges and multiplicities for CH3 above only serve as illustration that it can be set up yet it shows that you can discern between e.g., methyl cation, methyl carbanion, and methy radical. In this perspective, Avogadro trades similar to interfaces like [gabedit](http://gabedit.sourceforge.net/). ![gabedit](https://user-images.githubusercontent.com/19709084/184554505-6e69ed1e-432b-4771-9996-c4bf568f104d.png). (image credit: example 7 of [screenshots](https://sites.google.com/site/allouchear/Home/gabedit/screenshots)). or [chemcompute](https://chemcompute.org). ![chemcompute](https://user-images.githubusercontent.com/19709084/184554567-311ae995-edc4-4533-aeb5-654503d08c79.png). *) In case the optional Avogadro Input Generators plugin (in Avogadro's GUI, Extensions -> Download Plugins; this one requires a working installation of Python) does not yet offer a bridge to your quantum chemical program, you may consider proposing an addition either on [GitHub](https://github.com/OpenChemistry/avogadroapp), or the public [discussion board](https://discuss.avogadro.cc/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938:1654,Integrability,bridg,bridge,1654,"May you please clarify what represents for you a «3D builder»?. *Assuming* this refers to a program to set up a computation in a program like Gaussian, Gamess-UK, Games-US, etc. the state of a molecule as radical is described by the spin of the molecule, independent to assigning the molecule as neutral, or charged. As an example, [Avogadro](https://avogadro.cc/) may either read a normal closed-shell molecule (like methane) from a `.mol` or `.sdf` or one may build one from which e.g., hydrogens are removed. With optional extensions you may then export this as as starting point for quantum chemistry calculations as illustrated below:*. ![example_avogadro](https://user-images.githubusercontent.com/19709084/184554375-3077e7f3-932e-40dc-b8b7-cc81995097c0.gif). Some assignments of charges and multiplicities for CH3 above only serve as illustration that it can be set up yet it shows that you can discern between e.g., methyl cation, methyl carbanion, and methy radical. In this perspective, Avogadro trades similar to interfaces like [gabedit](http://gabedit.sourceforge.net/). ![gabedit](https://user-images.githubusercontent.com/19709084/184554505-6e69ed1e-432b-4771-9996-c4bf568f104d.png). (image credit: example 7 of [screenshots](https://sites.google.com/site/allouchear/Home/gabedit/screenshots)). or [chemcompute](https://chemcompute.org). ![chemcompute](https://user-images.githubusercontent.com/19709084/184554567-311ae995-edc4-4533-aeb5-654503d08c79.png). *) In case the optional Avogadro Input Generators plugin (in Avogadro's GUI, Extensions -> Download Plugins; this one requires a working installation of Python) does not yet offer a bridge to your quantum chemical program, you may consider proposing an addition either on [GitHub](https://github.com/OpenChemistry/avogadroapp), or the public [discussion board](https://discuss.avogadro.cc/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938:1522,Modifiability,plugin,plugin,1522,"May you please clarify what represents for you a «3D builder»?. *Assuming* this refers to a program to set up a computation in a program like Gaussian, Gamess-UK, Games-US, etc. the state of a molecule as radical is described by the spin of the molecule, independent to assigning the molecule as neutral, or charged. As an example, [Avogadro](https://avogadro.cc/) may either read a normal closed-shell molecule (like methane) from a `.mol` or `.sdf` or one may build one from which e.g., hydrogens are removed. With optional extensions you may then export this as as starting point for quantum chemistry calculations as illustrated below:*. ![example_avogadro](https://user-images.githubusercontent.com/19709084/184554375-3077e7f3-932e-40dc-b8b7-cc81995097c0.gif). Some assignments of charges and multiplicities for CH3 above only serve as illustration that it can be set up yet it shows that you can discern between e.g., methyl cation, methyl carbanion, and methy radical. In this perspective, Avogadro trades similar to interfaces like [gabedit](http://gabedit.sourceforge.net/). ![gabedit](https://user-images.githubusercontent.com/19709084/184554505-6e69ed1e-432b-4771-9996-c4bf568f104d.png). (image credit: example 7 of [screenshots](https://sites.google.com/site/allouchear/Home/gabedit/screenshots)). or [chemcompute](https://chemcompute.org). ![chemcompute](https://user-images.githubusercontent.com/19709084/184554567-311ae995-edc4-4533-aeb5-654503d08c79.png). *) In case the optional Avogadro Input Generators plugin (in Avogadro's GUI, Extensions -> Download Plugins; this one requires a working installation of Python) does not yet offer a bridge to your quantum chemical program, you may consider proposing an addition either on [GitHub](https://github.com/OpenChemistry/avogadroapp), or the public [discussion board](https://discuss.avogadro.cc/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938:1572,Modifiability,Plugin,Plugins,1572,"May you please clarify what represents for you a «3D builder»?. *Assuming* this refers to a program to set up a computation in a program like Gaussian, Gamess-UK, Games-US, etc. the state of a molecule as radical is described by the spin of the molecule, independent to assigning the molecule as neutral, or charged. As an example, [Avogadro](https://avogadro.cc/) may either read a normal closed-shell molecule (like methane) from a `.mol` or `.sdf` or one may build one from which e.g., hydrogens are removed. With optional extensions you may then export this as as starting point for quantum chemistry calculations as illustrated below:*. ![example_avogadro](https://user-images.githubusercontent.com/19709084/184554375-3077e7f3-932e-40dc-b8b7-cc81995097c0.gif). Some assignments of charges and multiplicities for CH3 above only serve as illustration that it can be set up yet it shows that you can discern between e.g., methyl cation, methyl carbanion, and methy radical. In this perspective, Avogadro trades similar to interfaces like [gabedit](http://gabedit.sourceforge.net/). ![gabedit](https://user-images.githubusercontent.com/19709084/184554505-6e69ed1e-432b-4771-9996-c4bf568f104d.png). (image credit: example 7 of [screenshots](https://sites.google.com/site/allouchear/Home/gabedit/screenshots)). or [chemcompute](https://chemcompute.org). ![chemcompute](https://user-images.githubusercontent.com/19709084/184554567-311ae995-edc4-4533-aeb5-654503d08c79.png). *) In case the optional Avogadro Input Generators plugin (in Avogadro's GUI, Extensions -> Download Plugins; this one requires a working installation of Python) does not yet offer a bridge to your quantum chemical program, you may consider proposing an addition either on [GitHub](https://github.com/OpenChemistry/avogadroapp), or the public [discussion board](https://discuss.avogadro.cc/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840:709,Safety,avoid,avoided,709,"By ""3D builder"", I mean software to construct 3D structures like Gaussview, Avogadro, IQmol, Spartan... Creating inputs for calculations is not the issue. The issue is precisely that these inputs don't contain the explicit multiplicity of the molecule to prevent openbabel from adding hydrogens despite being instructed not to. We can't really expect all 3D builders to ask for or guess the multiplicity of molecules. However, it seems to me like _openbabel should simply not add hydrogens with the option ""DoNotAddH""_. Specifying the multiplicity is more like a workaround. That being said, I'm not familiar with the codebase, so this might be easier said than done. Nevertheless, it is confusing and can be avoided, as demonstrated by the official `inchi` software.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840:465,Usability,simpl,simply,465,"By ""3D builder"", I mean software to construct 3D structures like Gaussview, Avogadro, IQmol, Spartan... Creating inputs for calculations is not the issue. The issue is precisely that these inputs don't contain the explicit multiplicity of the molecule to prevent openbabel from adding hydrogens despite being instructed not to. We can't really expect all 3D builders to ask for or guess the multiplicity of molecules. However, it seems to me like _openbabel should simply not add hydrogens with the option ""DoNotAddH""_. Specifying the multiplicity is more like a workaround. That being said, I'm not familiar with the codebase, so this might be easier said than done. Nevertheless, it is confusing and can be avoided, as demonstrated by the official `inchi` software.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1219670021:157,Energy Efficiency,charge,charged,157,"Not only that the typical .xyz file doesn't mention bond orders, if e.g., derived from a .mol file, there is no information retained if/how the molecule was charged which could help in a (re)assignment e.g., with [xyz2mol](https://github.com/jensengroup/xyz2mol) by the Jensen group. Maybe Anders Christensen's [check-sdf](https://github.com/andersx/check-sdf) could help here.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1219670021
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1220967577:787,Energy Efficiency,charge,charges,787,"I don't think that the lack of explicit connectivity is a huge issue here, it can be guessed quite accurately from the interatomic distances. As long as there aren't any clashes (non-bonded atoms at a distance near the sum of their covalent radii), the bonds are trivial to identify. After all, it's not like Gaussview or Avogadro have some special information about the bonding of the molecule; it outputs the bonds that the user created, which do not have to be chemically reasonable (e.g., bonded atoms very far away or non-bonded atoms very close). At that point, it is debatable whether the correct connectivity if the one chosen by the user or the one that would be computed using DFT/WFT. Another option is to use a cheap method like GFN2-xTB to calculate the effective bonds and charges in the molecule, giving quite sensible connectivities in `MOL` format. But then, again, it does not seem to set `M CHG` or `M RAD` either, so we're back to the same issue. Are the charges/radicals really necessary to generate the InChI? At least for `CH3`, the standard InChI key is the same for the neutral radical and for the cation. Edit: `xtb 6.4.1` actually does set `CHG`, but not `RAD`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1220967577
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1220967577:975,Energy Efficiency,charge,charges,975,"I don't think that the lack of explicit connectivity is a huge issue here, it can be guessed quite accurately from the interatomic distances. As long as there aren't any clashes (non-bonded atoms at a distance near the sum of their covalent radii), the bonds are trivial to identify. After all, it's not like Gaussview or Avogadro have some special information about the bonding of the molecule; it outputs the bonds that the user created, which do not have to be chemically reasonable (e.g., bonded atoms very far away or non-bonded atoms very close). At that point, it is debatable whether the correct connectivity if the one chosen by the user or the one that would be computed using DFT/WFT. Another option is to use a cheap method like GFN2-xTB to calculate the effective bonds and charges in the molecule, giving quite sensible connectivities in `MOL` format. But then, again, it does not seem to set `M CHG` or `M RAD` either, so we're back to the same issue. Are the charges/radicals really necessary to generate the InChI? At least for `CH3`, the standard InChI key is the same for the neutral radical and for the cation. Edit: `xtb 6.4.1` actually does set `CHG`, but not `RAD`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1220967577
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221371572:277,Energy Efficiency,charge,charged,277,"The InChI string is a layered representation of the chemical structure; it contains at least the Hill formula and connectivity of the backbone atoms (in case of organic molecules, C, N, O, P, S, etc. but not H) are read from the .sdf/.mol file. *If* the structure described is charged, there will be an additional layer e.g., `q+1` (for single positive), or `q-1` (for single negative), too. Thus,. + processing a radical like the methyl radical yields. ```shell; $ obabel -:""[CH3]"" -oinchi; ==============================; *** Open Babel Warning in InChI code; #1 :Accepted unusual valence(s): C(3); InChI=1S/CH3/h1H3; 1 molecule converted; ```. + while the methyl cation yields; ```shell; $ obabel -:""[CH3+]"" -oinchi; InChI=1S/CH3/h1H3/q+1; 1 molecule converted; ```. + and the methyl carbanion; ```shell; $ obabel -:""[CH3-]"" -oinchi; InChI=1S/CH3/h1H3/q-1; 1 molecule converted; ```. These three InChI strings are dissimilar of each other. If there would be stereogenic centre in the molecule structure (as in mandelic acid, tartaric acid), there would be an additional layer describing this property, too. . The `1S/` indicates that the string is about assigning *a standard InChI* of version 1.x. This is a necessity e.g. when to discern tautomers like 2-hydroxy pyridine vs. the pyridone where only a fixed hydrogen-layer yields different InChI (and subsequently different InChIKey). To illustrate on this very example:. ```shell; $ obabel -:""Oc1ccccn1"" -oinchi; InChI=1S/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7); 1 molecule converted; $ obabel -:""O=c1cccc[nH]1"" -oinchi; InChI=1S/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7); 1 molecule converted; $; $ obabel -:""Oc1ccccn1"" -oinchi -xXFixedH; InChI=1/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7)/f/h7H; 1 molecule converted; $ obabel -:""O=c1cccc[nH]1"" -oinchi -xXFixedH; InChI=1/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7)/f/h6H; 1 molecule converted; $; $ obabel -:""Oc1ccccn1"" -oinchikey; UBQKCCHYAOITMY-UHFFFAOYSA-N; 1 molecule converted; $ obabel -:""O=c1cccc[nH]1""",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221371572
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221382950:14,Energy Efficiency,charge,charge,14,"In absence of charge, why not create the InChI with an undefined charge layer? It's good enough far most uses and that's what the official `inchi` package does. Users that need the charge layer can add the charge specifications.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221382950
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221382950:65,Energy Efficiency,charge,charge,65,"In absence of charge, why not create the InChI with an undefined charge layer? It's good enough far most uses and that's what the official `inchi` package does. Users that need the charge layer can add the charge specifications.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221382950
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221382950:181,Energy Efficiency,charge,charge,181,"In absence of charge, why not create the InChI with an undefined charge layer? It's good enough far most uses and that's what the official `inchi` package does. Users that need the charge layer can add the charge specifications.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221382950
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221382950:206,Energy Efficiency,charge,charge,206,"In absence of charge, why not create the InChI with an undefined charge layer? It's good enough far most uses and that's what the official `inchi` package does. Users that need the charge layer can add the charge specifications.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221382950
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695:369,Deployability,toggle,toggle,369,"@RaphaelRobidas Contrasting to the mandatory Hill formula, the charge layer only is added to the InChI if the underlying structure is charged. The automatic charge recognition is embedded in the algorithm to yield the standard InChI. To best of my knowledge, this is not a parameter InChI trust's reference executables currently (version 1.6 by December 2021) offer to toggle off/relax as they do for the perception of stereochemistry. (And if engaged, this no longer yields the standard InChI `1S/...`, but one non-standard InChI `1/...`. Well, one .or. multiple options may be engaged simultaneously to yield *a* non-standard InChI; so *standard* is *agreed convention*.). On the other hand, there is ongoing development of InChI /per se/ as well as of applications engaging InChI. Past conferences ([example-1](https://cactus.nci.nih.gov/presentations/NIHInChI_2021-03/NIHInChI.html), [example-2](https://www.inchi-trust.org/decks-open-inchi-days-2022/)) and future events [scheduled](https://www.inchi-trust.org/conferences-meetings-of-interest/) illustrate this as well as InChI trust's section [open education resources](https://www.inchi-trust.org/oer/). If you identify a spot where the InChI algorithm may be improved further, a post on their public [mailing list](https://sourceforge.net/p/inchi/mailman/inchi-discuss/) (or joining a working group) may be more effective then here on OpenBabel -- because InChI should not depend on the program used to assign them (OpenBabel, RDKit, ChemDraw, ChemDoodle, ACD ChemSketch, DataWarrior, ChemAxon Marvin, etc.).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695:63,Energy Efficiency,charge,charge,63,"@RaphaelRobidas Contrasting to the mandatory Hill formula, the charge layer only is added to the InChI if the underlying structure is charged. The automatic charge recognition is embedded in the algorithm to yield the standard InChI. To best of my knowledge, this is not a parameter InChI trust's reference executables currently (version 1.6 by December 2021) offer to toggle off/relax as they do for the perception of stereochemistry. (And if engaged, this no longer yields the standard InChI `1S/...`, but one non-standard InChI `1/...`. Well, one .or. multiple options may be engaged simultaneously to yield *a* non-standard InChI; so *standard* is *agreed convention*.). On the other hand, there is ongoing development of InChI /per se/ as well as of applications engaging InChI. Past conferences ([example-1](https://cactus.nci.nih.gov/presentations/NIHInChI_2021-03/NIHInChI.html), [example-2](https://www.inchi-trust.org/decks-open-inchi-days-2022/)) and future events [scheduled](https://www.inchi-trust.org/conferences-meetings-of-interest/) illustrate this as well as InChI trust's section [open education resources](https://www.inchi-trust.org/oer/). If you identify a spot where the InChI algorithm may be improved further, a post on their public [mailing list](https://sourceforge.net/p/inchi/mailman/inchi-discuss/) (or joining a working group) may be more effective then here on OpenBabel -- because InChI should not depend on the program used to assign them (OpenBabel, RDKit, ChemDraw, ChemDoodle, ACD ChemSketch, DataWarrior, ChemAxon Marvin, etc.).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695:134,Energy Efficiency,charge,charged,134,"@RaphaelRobidas Contrasting to the mandatory Hill formula, the charge layer only is added to the InChI if the underlying structure is charged. The automatic charge recognition is embedded in the algorithm to yield the standard InChI. To best of my knowledge, this is not a parameter InChI trust's reference executables currently (version 1.6 by December 2021) offer to toggle off/relax as they do for the perception of stereochemistry. (And if engaged, this no longer yields the standard InChI `1S/...`, but one non-standard InChI `1/...`. Well, one .or. multiple options may be engaged simultaneously to yield *a* non-standard InChI; so *standard* is *agreed convention*.). On the other hand, there is ongoing development of InChI /per se/ as well as of applications engaging InChI. Past conferences ([example-1](https://cactus.nci.nih.gov/presentations/NIHInChI_2021-03/NIHInChI.html), [example-2](https://www.inchi-trust.org/decks-open-inchi-days-2022/)) and future events [scheduled](https://www.inchi-trust.org/conferences-meetings-of-interest/) illustrate this as well as InChI trust's section [open education resources](https://www.inchi-trust.org/oer/). If you identify a spot where the InChI algorithm may be improved further, a post on their public [mailing list](https://sourceforge.net/p/inchi/mailman/inchi-discuss/) (or joining a working group) may be more effective then here on OpenBabel -- because InChI should not depend on the program used to assign them (OpenBabel, RDKit, ChemDraw, ChemDoodle, ACD ChemSketch, DataWarrior, ChemAxon Marvin, etc.).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695:157,Energy Efficiency,charge,charge,157,"@RaphaelRobidas Contrasting to the mandatory Hill formula, the charge layer only is added to the InChI if the underlying structure is charged. The automatic charge recognition is embedded in the algorithm to yield the standard InChI. To best of my knowledge, this is not a parameter InChI trust's reference executables currently (version 1.6 by December 2021) offer to toggle off/relax as they do for the perception of stereochemistry. (And if engaged, this no longer yields the standard InChI `1S/...`, but one non-standard InChI `1/...`. Well, one .or. multiple options may be engaged simultaneously to yield *a* non-standard InChI; so *standard* is *agreed convention*.). On the other hand, there is ongoing development of InChI /per se/ as well as of applications engaging InChI. Past conferences ([example-1](https://cactus.nci.nih.gov/presentations/NIHInChI_2021-03/NIHInChI.html), [example-2](https://www.inchi-trust.org/decks-open-inchi-days-2022/)) and future events [scheduled](https://www.inchi-trust.org/conferences-meetings-of-interest/) illustrate this as well as InChI trust's section [open education resources](https://www.inchi-trust.org/oer/). If you identify a spot where the InChI algorithm may be improved further, a post on their public [mailing list](https://sourceforge.net/p/inchi/mailman/inchi-discuss/) (or joining a working group) may be more effective then here on OpenBabel -- because InChI should not depend on the program used to assign them (OpenBabel, RDKit, ChemDraw, ChemDoodle, ACD ChemSketch, DataWarrior, ChemAxon Marvin, etc.).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695:977,Energy Efficiency,schedul,scheduled,977,"@RaphaelRobidas Contrasting to the mandatory Hill formula, the charge layer only is added to the InChI if the underlying structure is charged. The automatic charge recognition is embedded in the algorithm to yield the standard InChI. To best of my knowledge, this is not a parameter InChI trust's reference executables currently (version 1.6 by December 2021) offer to toggle off/relax as they do for the perception of stereochemistry. (And if engaged, this no longer yields the standard InChI `1S/...`, but one non-standard InChI `1/...`. Well, one .or. multiple options may be engaged simultaneously to yield *a* non-standard InChI; so *standard* is *agreed convention*.). On the other hand, there is ongoing development of InChI /per se/ as well as of applications engaging InChI. Past conferences ([example-1](https://cactus.nci.nih.gov/presentations/NIHInChI_2021-03/NIHInChI.html), [example-2](https://www.inchi-trust.org/decks-open-inchi-days-2022/)) and future events [scheduled](https://www.inchi-trust.org/conferences-meetings-of-interest/) illustrate this as well as InChI trust's section [open education resources](https://www.inchi-trust.org/oer/). If you identify a spot where the InChI algorithm may be improved further, a post on their public [mailing list](https://sourceforge.net/p/inchi/mailman/inchi-discuss/) (or joining a working group) may be more effective then here on OpenBabel -- because InChI should not depend on the program used to assign them (OpenBabel, RDKit, ChemDraw, ChemDoodle, ACD ChemSketch, DataWarrior, ChemAxon Marvin, etc.).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695
https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695:1432,Integrability,depend,depend,1432,"@RaphaelRobidas Contrasting to the mandatory Hill formula, the charge layer only is added to the InChI if the underlying structure is charged. The automatic charge recognition is embedded in the algorithm to yield the standard InChI. To best of my knowledge, this is not a parameter InChI trust's reference executables currently (version 1.6 by December 2021) offer to toggle off/relax as they do for the perception of stereochemistry. (And if engaged, this no longer yields the standard InChI `1S/...`, but one non-standard InChI `1/...`. Well, one .or. multiple options may be engaged simultaneously to yield *a* non-standard InChI; so *standard* is *agreed convention*.). On the other hand, there is ongoing development of InChI /per se/ as well as of applications engaging InChI. Past conferences ([example-1](https://cactus.nci.nih.gov/presentations/NIHInChI_2021-03/NIHInChI.html), [example-2](https://www.inchi-trust.org/decks-open-inchi-days-2022/)) and future events [scheduled](https://www.inchi-trust.org/conferences-meetings-of-interest/) illustrate this as well as InChI trust's section [open education resources](https://www.inchi-trust.org/oer/). If you identify a spot where the InChI algorithm may be improved further, a post on their public [mailing list](https://sourceforge.net/p/inchi/mailman/inchi-discuss/) (or joining a working group) may be more effective then here on OpenBabel -- because InChI should not depend on the program used to assign them (OpenBabel, RDKit, ChemDraw, ChemDoodle, ACD ChemSketch, DataWarrior, ChemAxon Marvin, etc.).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1221517695
https://github.com/openbabel/openbabel/pull/2527#issuecomment-1215880888:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2527#issuecomment-1215880888
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309:461,Performance,Multi-thread,Multi-threaded,461,"Thank you for you reply. I hope if when it generates incorrect stereochemistry, just skip it and don`t continue use the distance geometry method instead. Because when i test in my dataset, some smiles will spend 30 minuets or more with the distance geometry method. . But i used the some methods with set time out with signal or thread to skip the cycle of using the distance geometry method, it not work, I guess in the distance geometry method, are you using Multi-threaded concurrency to control it? How can i skip it.?Thank you very much.; ![image](https://user-images.githubusercontent.com/32425458/187105228-1c737132-a1e7-451d-89b6-fed664c37850.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309:476,Performance,concurren,concurrency,476,"Thank you for you reply. I hope if when it generates incorrect stereochemistry, just skip it and don`t continue use the distance geometry method instead. Because when i test in my dataset, some smiles will spend 30 minuets or more with the distance geometry method. . But i used the some methods with set time out with signal or thread to skip the cycle of using the distance geometry method, it not work, I guess in the distance geometry method, are you using Multi-threaded concurrency to control it? How can i skip it.?Thank you very much.; ![image](https://user-images.githubusercontent.com/32425458/187105228-1c737132-a1e7-451d-89b6-fed664c37850.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309:169,Testability,test,test,169,"Thank you for you reply. I hope if when it generates incorrect stereochemistry, just skip it and don`t continue use the distance geometry method instead. Because when i test in my dataset, some smiles will spend 30 minuets or more with the distance geometry method. . But i used the some methods with set time out with signal or thread to skip the cycle of using the distance geometry method, it not work, I guess in the distance geometry method, are you using Multi-threaded concurrency to control it? How can i skip it.?Thank you very much.; ![image](https://user-images.githubusercontent.com/32425458/187105228-1c737132-a1e7-451d-89b6-fed664c37850.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870:826,Availability,error,error,826,"Maybe something with the SMILES you process is wrong, which could be accidental (e.g., manual entry to a database), or systematic (a computer program generates the molecules/SMILES). Especially if it is for the later, it would be worth to identify the SMILES currently causing the problem in first place before engaging the generation of 2D or 3D structure for a .mol file. It is possible to run the program with SMILES as input as well as output format, e.g., by -ocan. Since SMILES of one (more complex) structure may differ depending on the algorithm/implementation used (e.g., universal, inchified, canonical SMILES in OpenBabel), this often is a good first (or zeroth) step when working with SMILES from different sources/databases anyway. To retain the problematic SMILES, it then might be a question of reading out the error stream, or a try-escape clause (in Python) to check if it is an error in SMILES syntax causing OpenBabel's message. If the molecule in question contains a great number of bonds which -- in principle -- are flexible to rotation, the conversion SMILES -> 3D structure may take substantially more time, than for rigid molecules (note that --gen3d only is one of five levels to guess a conformer, see the manual) though the syntax of the SMILES is a correct one. If you only want one conformer to start with, and not need the of lowest energy (OpenBabel equally offers a systematic conformer search), the two-step SMILES -> 2D (--gen2d) into a .mol, and subsequent 2D mol -> 3D mol (with --gen3d) sometimes is faster (this assumes you have a valid SMILES in first place).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870:896,Availability,error,error,896,"Maybe something with the SMILES you process is wrong, which could be accidental (e.g., manual entry to a database), or systematic (a computer program generates the molecules/SMILES). Especially if it is for the later, it would be worth to identify the SMILES currently causing the problem in first place before engaging the generation of 2D or 3D structure for a .mol file. It is possible to run the program with SMILES as input as well as output format, e.g., by -ocan. Since SMILES of one (more complex) structure may differ depending on the algorithm/implementation used (e.g., universal, inchified, canonical SMILES in OpenBabel), this often is a good first (or zeroth) step when working with SMILES from different sources/databases anyway. To retain the problematic SMILES, it then might be a question of reading out the error stream, or a try-escape clause (in Python) to check if it is an error in SMILES syntax causing OpenBabel's message. If the molecule in question contains a great number of bonds which -- in principle -- are flexible to rotation, the conversion SMILES -> 3D structure may take substantially more time, than for rigid molecules (note that --gen3d only is one of five levels to guess a conformer, see the manual) though the syntax of the SMILES is a correct one. If you only want one conformer to start with, and not need the of lowest energy (OpenBabel equally offers a systematic conformer search), the two-step SMILES -> 2D (--gen2d) into a .mol, and subsequent 2D mol -> 3D mol (with --gen3d) sometimes is faster (this assumes you have a valid SMILES in first place).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870:1364,Energy Efficiency,energy,energy,1364,"Maybe something with the SMILES you process is wrong, which could be accidental (e.g., manual entry to a database), or systematic (a computer program generates the molecules/SMILES). Especially if it is for the later, it would be worth to identify the SMILES currently causing the problem in first place before engaging the generation of 2D or 3D structure for a .mol file. It is possible to run the program with SMILES as input as well as output format, e.g., by -ocan. Since SMILES of one (more complex) structure may differ depending on the algorithm/implementation used (e.g., universal, inchified, canonical SMILES in OpenBabel), this often is a good first (or zeroth) step when working with SMILES from different sources/databases anyway. To retain the problematic SMILES, it then might be a question of reading out the error stream, or a try-escape clause (in Python) to check if it is an error in SMILES syntax causing OpenBabel's message. If the molecule in question contains a great number of bonds which -- in principle -- are flexible to rotation, the conversion SMILES -> 3D structure may take substantially more time, than for rigid molecules (note that --gen3d only is one of five levels to guess a conformer, see the manual) though the syntax of the SMILES is a correct one. If you only want one conformer to start with, and not need the of lowest energy (OpenBabel equally offers a systematic conformer search), the two-step SMILES -> 2D (--gen2d) into a .mol, and subsequent 2D mol -> 3D mol (with --gen3d) sometimes is faster (this assumes you have a valid SMILES in first place).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870:527,Integrability,depend,depending,527,"Maybe something with the SMILES you process is wrong, which could be accidental (e.g., manual entry to a database), or systematic (a computer program generates the molecules/SMILES). Especially if it is for the later, it would be worth to identify the SMILES currently causing the problem in first place before engaging the generation of 2D or 3D structure for a .mol file. It is possible to run the program with SMILES as input as well as output format, e.g., by -ocan. Since SMILES of one (more complex) structure may differ depending on the algorithm/implementation used (e.g., universal, inchified, canonical SMILES in OpenBabel), this often is a good first (or zeroth) step when working with SMILES from different sources/databases anyway. To retain the problematic SMILES, it then might be a question of reading out the error stream, or a try-escape clause (in Python) to check if it is an error in SMILES syntax causing OpenBabel's message. If the molecule in question contains a great number of bonds which -- in principle -- are flexible to rotation, the conversion SMILES -> 3D structure may take substantially more time, than for rigid molecules (note that --gen3d only is one of five levels to guess a conformer, see the manual) though the syntax of the SMILES is a correct one. If you only want one conformer to start with, and not need the of lowest energy (OpenBabel equally offers a systematic conformer search), the two-step SMILES -> 2D (--gen2d) into a .mol, and subsequent 2D mol -> 3D mol (with --gen3d) sometimes is faster (this assumes you have a valid SMILES in first place).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870:939,Integrability,message,message,939,"Maybe something with the SMILES you process is wrong, which could be accidental (e.g., manual entry to a database), or systematic (a computer program generates the molecules/SMILES). Especially if it is for the later, it would be worth to identify the SMILES currently causing the problem in first place before engaging the generation of 2D or 3D structure for a .mol file. It is possible to run the program with SMILES as input as well as output format, e.g., by -ocan. Since SMILES of one (more complex) structure may differ depending on the algorithm/implementation used (e.g., universal, inchified, canonical SMILES in OpenBabel), this often is a good first (or zeroth) step when working with SMILES from different sources/databases anyway. To retain the problematic SMILES, it then might be a question of reading out the error stream, or a try-escape clause (in Python) to check if it is an error in SMILES syntax causing OpenBabel's message. If the molecule in question contains a great number of bonds which -- in principle -- are flexible to rotation, the conversion SMILES -> 3D structure may take substantially more time, than for rigid molecules (note that --gen3d only is one of five levels to guess a conformer, see the manual) though the syntax of the SMILES is a correct one. If you only want one conformer to start with, and not need the of lowest energy (OpenBabel equally offers a systematic conformer search), the two-step SMILES -> 2D (--gen2d) into a .mol, and subsequent 2D mol -> 3D mol (with --gen3d) sometimes is faster (this assumes you have a valid SMILES in first place).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870:1038,Modifiability,flexible,flexible,1038,"Maybe something with the SMILES you process is wrong, which could be accidental (e.g., manual entry to a database), or systematic (a computer program generates the molecules/SMILES). Especially if it is for the later, it would be worth to identify the SMILES currently causing the problem in first place before engaging the generation of 2D or 3D structure for a .mol file. It is possible to run the program with SMILES as input as well as output format, e.g., by -ocan. Since SMILES of one (more complex) structure may differ depending on the algorithm/implementation used (e.g., universal, inchified, canonical SMILES in OpenBabel), this often is a good first (or zeroth) step when working with SMILES from different sources/databases anyway. To retain the problematic SMILES, it then might be a question of reading out the error stream, or a try-escape clause (in Python) to check if it is an error in SMILES syntax causing OpenBabel's message. If the molecule in question contains a great number of bonds which -- in principle -- are flexible to rotation, the conversion SMILES -> 3D structure may take substantially more time, than for rigid molecules (note that --gen3d only is one of five levels to guess a conformer, see the manual) though the syntax of the SMILES is a correct one. If you only want one conformer to start with, and not need the of lowest energy (OpenBabel equally offers a systematic conformer search), the two-step SMILES -> 2D (--gen2d) into a .mol, and subsequent 2D mol -> 3D mol (with --gen3d) sometimes is faster (this assumes you have a valid SMILES in first place).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1230582905:230,Integrability,depend,depends,230,"@DreamMemory001 No, I can't say much about the distance geometry method OpenBabel uses. For what I want, its results fit my needs though there are other programs around (maybe [RDKit](http://rdkit.org/) is one alternative, but it depends on your project and setup). To illustrate further the suggested approach on a one-molecule batch, on occasion, instead of a SMILES to 3d mol conversion with an intermediate 2d structure *like*. ```sh; obabel -:""c1ccncc1"" --gen2d -omol | obabel -imol -h --gen3d -omol; ```. I run . ```sh; obabel -:""c1ccncc1"" --gen2d -omol | obabel -imol --minimize --noh -omol | obabel -imol -h --gen3d -omol; ```. instead. Then, the force field optimization processes the flat 2d structure in absence of hydrogen atoms; this became possible thanks to this [PR](https://github.com/openbabel/openbabel/pull/2184) by Geoffrey Hutchison. Eventually (last pipe), explicit hydrogens (-h) complete the 3D molecular structure (to contrast with implicit ones, flag -d).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1230582905
https://github.com/openbabel/openbabel/issues/2530#issuecomment-1230582905:667,Performance,optimiz,optimization,667,"@DreamMemory001 No, I can't say much about the distance geometry method OpenBabel uses. For what I want, its results fit my needs though there are other programs around (maybe [RDKit](http://rdkit.org/) is one alternative, but it depends on your project and setup). To illustrate further the suggested approach on a one-molecule batch, on occasion, instead of a SMILES to 3d mol conversion with an intermediate 2d structure *like*. ```sh; obabel -:""c1ccncc1"" --gen2d -omol | obabel -imol -h --gen3d -omol; ```. I run . ```sh; obabel -:""c1ccncc1"" --gen2d -omol | obabel -imol --minimize --noh -omol | obabel -imol -h --gen3d -omol; ```. instead. Then, the force field optimization processes the flat 2d structure in absence of hydrogen atoms; this became possible thanks to this [PR](https://github.com/openbabel/openbabel/pull/2184) by Geoffrey Hutchison. Eventually (last pipe), explicit hydrogens (-h) complete the 3D molecular structure (to contrast with implicit ones, flag -d).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1230582905
https://github.com/openbabel/openbabel/issues/2532#issuecomment-1309811409:56,Deployability,install,install,56,"OBDotNet.dll does have 64-bit version, you just need to install 64-bit OBGUI. However if you are using Windows, including 64-bit OBDotNet.dll in the installation dir will not work. Please try 3.0.0 version instead of 3.1.1",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2532#issuecomment-1309811409
https://github.com/openbabel/openbabel/issues/2532#issuecomment-1309811409:149,Deployability,install,installation,149,"OBDotNet.dll does have 64-bit version, you just need to install 64-bit OBGUI. However if you are using Windows, including 64-bit OBDotNet.dll in the installation dir will not work. Please try 3.0.0 version instead of 3.1.1",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2532#issuecomment-1309811409
https://github.com/openbabel/openbabel/issues/2532#issuecomment-2128354954:162,Deployability,Install,Installation,162,I myself have build the openbabel 3.1.1 under Linux successfully with csharp bindings by following this instruction:; https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel; Be sure to use -DALL_BINDINGS=ON or -DCSHARP_BINDINGS=ON options and make sure net 5.0+ is installed.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2532#issuecomment-2128354954
https://github.com/openbabel/openbabel/issues/2532#issuecomment-2128354954:175,Deployability,install,install,175,I myself have build the openbabel 3.1.1 under Linux successfully with csharp bindings by following this instruction:; https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel; Be sure to use -DALL_BINDINGS=ON or -DCSHARP_BINDINGS=ON options and make sure net 5.0+ is installed.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2532#issuecomment-2128354954
https://github.com/openbabel/openbabel/issues/2532#issuecomment-2128354954:301,Deployability,install,installed,301,I myself have build the openbabel 3.1.1 under Linux successfully with csharp bindings by following this instruction:; https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel; Be sure to use -DALL_BINDINGS=ON or -DCSHARP_BINDINGS=ON options and make sure net 5.0+ is installed.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2532#issuecomment-2128354954
https://github.com/openbabel/openbabel/pull/2533#issuecomment-1238666751:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2533#issuecomment-1238666751
https://github.com/openbabel/openbabel/pull/2533#issuecomment-1493386008:55,Deployability,release,release,55,"I was just looking into this as we are using the 3.1.1 release in the Avogadro superbuild. The fix already applied resolves this issue for me. I could use a new release to pin our build to, but I have patched locally and see everything works. I would recommend closing this pull request.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2533#issuecomment-1493386008
https://github.com/openbabel/openbabel/pull/2533#issuecomment-1493386008:161,Deployability,release,release,161,"I was just looking into this as we are using the 3.1.1 release in the Avogadro superbuild. The fix already applied resolves this issue for me. I could use a new release to pin our build to, but I have patched locally and see everything works. I would recommend closing this pull request.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2533#issuecomment-1493386008
https://github.com/openbabel/openbabel/pull/2533#issuecomment-1493386008:201,Deployability,patch,patched,201,"I was just looking into this as we are using the 3.1.1 release in the Avogadro superbuild. The fix already applied resolves this issue for me. I could use a new release to pin our build to, but I have patched locally and see everything works. I would recommend closing this pull request.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2533#issuecomment-1493386008
https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533:79,Testability,log,log,79,"Based on the question, it is not clear if you want a machine-readable trace (a log file), or want to assist a visual inspection by a human checker. In case your project's interest is more on the later, are you aware of RDKit's cookbook with the entry ""Highlight a Substructure in a Molecule"" when using a Jupyter notebook?. http://rdkit.org/docs/Cookbook.html#highlight-a-substructure-in-a-molecule",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533
https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533:33,Usability,clear,clear,33,"Based on the question, it is not clear if you want a machine-readable trace (a log file), or want to assist a visual inspection by a human checker. In case your project's interest is more on the later, are you aware of RDKit's cookbook with the entry ""Highlight a Substructure in a Molecule"" when using a Jupyter notebook?. http://rdkit.org/docs/Cookbook.html#highlight-a-substructure-in-a-molecule",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533
https://github.com/openbabel/openbabel/issues/2534#issuecomment-1248552480:168,Usability,clear,clear,168,"Send me an e-mail and let's talk. There are already several SMILES output options: https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html. It's not clear to me exactly what you're trying to accomplish. For example usually people start with a SMILES or similar for the initial 3D geometry. So usually the question is ""how do I make sure the bonds are assigned properly from this 3D geometry"" - since the first step in your process is not 100% guaranteed. So please send me an e-mail and we can discuss.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1248552480
https://github.com/openbabel/openbabel/issues/2535#issuecomment-1247659485:122,Integrability,wrap,wrappers,122,"Since OpenBabel is written in C++, I really doubt that there would be an impact. The parts that are written in python are wrappers and hence limited to the variable types in C++. I also have problem seeing where such large numbers would be of use in cheminformatics.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2535#issuecomment-1247659485
https://github.com/openbabel/openbabel/issues/2535#issuecomment-1247659485:156,Modifiability,variab,variable,156,"Since OpenBabel is written in C++, I really doubt that there would be an impact. The parts that are written in python are wrappers and hence limited to the variable types in C++. I also have problem seeing where such large numbers would be of use in cheminformatics.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2535#issuecomment-1247659485
https://github.com/openbabel/openbabel/pull/2540#issuecomment-1261239466:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2540#issuecomment-1261239466
https://github.com/openbabel/openbabel/pull/2540#issuecomment-1322458009:91,Deployability,integrat,integrating,91,"Practically speaking, I'm going to dump both of them for now. The contributor who proposed integrating `coordgen` never finished that work, so it's an unused dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2540#issuecomment-1322458009
https://github.com/openbabel/openbabel/pull/2540#issuecomment-1322458009:91,Integrability,integrat,integrating,91,"Practically speaking, I'm going to dump both of them for now. The contributor who proposed integrating `coordgen` never finished that work, so it's an unused dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2540#issuecomment-1322458009
https://github.com/openbabel/openbabel/pull/2540#issuecomment-1322458009:158,Integrability,depend,dependency,158,"Practically speaking, I'm going to dump both of them for now. The contributor who proposed integrating `coordgen` never finished that work, so it's an unused dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2540#issuecomment-1322458009
https://github.com/openbabel/openbabel/issues/2541#issuecomment-1277000322:177,Deployability,Install,Installation,177,"Oh sorry, I wasn't found that in `CMakeLists.txt` has a arg call `OPENMP`. Just trun it on and compile and it works fine. Just change the [cmake](https://openbabel.org/docs/dev/Installation/install.html) command like:; `cmake ../openbabel-2.3.1 -DCMAKE_INSTALL_PREFIX=~/Tools/openbabel-install -DOPENMP=ON`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2541#issuecomment-1277000322
https://github.com/openbabel/openbabel/issues/2541#issuecomment-1277000322:190,Deployability,install,install,190,"Oh sorry, I wasn't found that in `CMakeLists.txt` has a arg call `OPENMP`. Just trun it on and compile and it works fine. Just change the [cmake](https://openbabel.org/docs/dev/Installation/install.html) command like:; `cmake ../openbabel-2.3.1 -DCMAKE_INSTALL_PREFIX=~/Tools/openbabel-install -DOPENMP=ON`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2541#issuecomment-1277000322
https://github.com/openbabel/openbabel/issues/2541#issuecomment-1277000322:286,Deployability,install,install,286,"Oh sorry, I wasn't found that in `CMakeLists.txt` has a arg call `OPENMP`. Just trun it on and compile and it works fine. Just change the [cmake](https://openbabel.org/docs/dev/Installation/install.html) command like:; `cmake ../openbabel-2.3.1 -DCMAKE_INSTALL_PREFIX=~/Tools/openbabel-install -DOPENMP=ON`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2541#issuecomment-1277000322
https://github.com/openbabel/openbabel/issues/2543#issuecomment-1291725587:180,Availability,error,error,180,"> . Thank you for your reply. Yes, I am able to run this above command to write a new file about diethyl ether. However, while converting my input.smi file I am returning to below error:. Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment C1CCCNC1 in rigid-fragments.txt has all zero coordinates.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2543#issuecomment-1291725587
https://github.com/openbabel/openbabel/issues/2543#issuecomment-1291725587:199,Availability,Error,Error,199,"> . Thank you for your reply. Yes, I am able to run this above command to write a new file about diethyl ether. However, while converting my input.smi file I am returning to below error:. Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment C1CCCNC1 in rigid-fragments.txt has all zero coordinates.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2543#issuecomment-1291725587
https://github.com/openbabel/openbabel/issues/2543#issuecomment-1293077635:129,Availability,error,error,129,"How did you install OpenBabel? It seems like there is a problem with the BABEL_DATADIR (that is often the case when you get that error), see e.g. https://github.com/openbabel/openbabel/issues/2356 and https://github.com/openbabel/openbabel/issues/2522",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2543#issuecomment-1293077635
https://github.com/openbabel/openbabel/issues/2543#issuecomment-1293077635:12,Deployability,install,install,12,"How did you install OpenBabel? It seems like there is a problem with the BABEL_DATADIR (that is often the case when you get that error), see e.g. https://github.com/openbabel/openbabel/issues/2356 and https://github.com/openbabel/openbabel/issues/2522",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2543#issuecomment-1293077635
https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291135837:87,Deployability,release,release,87,"Check if you really use openbabel 2.3.1, or if this is just a typo because the present release is 3.1.1. If not, upgrade the program (and, if the operating system equally is more than 6 years old, equally consider an upgrade here, too.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291135837
https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291135837:113,Deployability,upgrade,upgrade,113,"Check if you really use openbabel 2.3.1, or if this is just a typo because the present release is 3.1.1. If not, upgrade the program (and, if the operating system equally is more than 6 years old, equally consider an upgrade here, too.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291135837
https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291135837:217,Deployability,upgrade,upgrade,217,"Check if you really use openbabel 2.3.1, or if this is just a typo because the present release is 3.1.1. If not, upgrade the program (and, if the operating system equally is more than 6 years old, equally consider an upgrade here, too.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291135837
https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575:871,Deployability,configurat,configuration,871,"Google drive reports file structures.sdf to be quite large (1.7G). For me, this is much larger, than anticipated and a stop sign (The documentation contains at least one case study including the Tanimoto scores, see https://open-babel.readthedocs.io/en/latest/Fingerprints/fingerprints.html. It would be nice if the manual would state ahead of time how many GBs will be used when running this example, too.). But, does your test set to document the problem need to contain this many molecules/to be this large in volume? Though .sdf may be compressed (e.g., .zip is a permitted file format for an attachment on GitHub), why not describing the test set e.g., in a text file listing the structures as smiles instead? To index the molecules, obabel possibly does not need to know the coordinates of the atoms as long as the atoms' connectivity and stereochemistry (R/S, E/Z configuration) is described; and the reduced representation by a smiles string typically conveys this information. You still can consider to compress this text file into a .zip (then attached here) to complement your question, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575
https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575:908,Energy Efficiency,reduce,reduced,908,"Google drive reports file structures.sdf to be quite large (1.7G). For me, this is much larger, than anticipated and a stop sign (The documentation contains at least one case study including the Tanimoto scores, see https://open-babel.readthedocs.io/en/latest/Fingerprints/fingerprints.html. It would be nice if the manual would state ahead of time how many GBs will be used when running this example, too.). But, does your test set to document the problem need to contain this many molecules/to be this large in volume? Though .sdf may be compressed (e.g., .zip is a permitted file format for an attachment on GitHub), why not describing the test set e.g., in a text file listing the structures as smiles instead? To index the molecules, obabel possibly does not need to know the coordinates of the atoms as long as the atoms' connectivity and stereochemistry (R/S, E/Z configuration) is described; and the reduced representation by a smiles string typically conveys this information. You still can consider to compress this text file into a .zip (then attached here) to complement your question, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575
https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575:871,Modifiability,config,configuration,871,"Google drive reports file structures.sdf to be quite large (1.7G). For me, this is much larger, than anticipated and a stop sign (The documentation contains at least one case study including the Tanimoto scores, see https://open-babel.readthedocs.io/en/latest/Fingerprints/fingerprints.html. It would be nice if the manual would state ahead of time how many GBs will be used when running this example, too.). But, does your test set to document the problem need to contain this many molecules/to be this large in volume? Though .sdf may be compressed (e.g., .zip is a permitted file format for an attachment on GitHub), why not describing the test set e.g., in a text file listing the structures as smiles instead? To index the molecules, obabel possibly does not need to know the coordinates of the atoms as long as the atoms' connectivity and stereochemistry (R/S, E/Z configuration) is described; and the reduced representation by a smiles string typically conveys this information. You still can consider to compress this text file into a .zip (then attached here) to complement your question, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575
https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575:424,Testability,test,test,424,"Google drive reports file structures.sdf to be quite large (1.7G). For me, this is much larger, than anticipated and a stop sign (The documentation contains at least one case study including the Tanimoto scores, see https://open-babel.readthedocs.io/en/latest/Fingerprints/fingerprints.html. It would be nice if the manual would state ahead of time how many GBs will be used when running this example, too.). But, does your test set to document the problem need to contain this many molecules/to be this large in volume? Though .sdf may be compressed (e.g., .zip is a permitted file format for an attachment on GitHub), why not describing the test set e.g., in a text file listing the structures as smiles instead? To index the molecules, obabel possibly does not need to know the coordinates of the atoms as long as the atoms' connectivity and stereochemistry (R/S, E/Z configuration) is described; and the reduced representation by a smiles string typically conveys this information. You still can consider to compress this text file into a .zip (then attached here) to complement your question, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575
https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575:643,Testability,test,test,643,"Google drive reports file structures.sdf to be quite large (1.7G). For me, this is much larger, than anticipated and a stop sign (The documentation contains at least one case study including the Tanimoto scores, see https://open-babel.readthedocs.io/en/latest/Fingerprints/fingerprints.html. It would be nice if the manual would state ahead of time how many GBs will be used when running this example, too.). But, does your test set to document the problem need to contain this many molecules/to be this large in volume? Though .sdf may be compressed (e.g., .zip is a permitted file format for an attachment on GitHub), why not describing the test set e.g., in a text file listing the structures as smiles instead? To index the molecules, obabel possibly does not need to know the coordinates of the atoms as long as the atoms' connectivity and stereochemistry (R/S, E/Z configuration) is described; and the reduced representation by a smiles string typically conveys this information. You still can consider to compress this text file into a .zip (then attached here) to complement your question, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575
https://github.com/openbabel/openbabel/issues/2544#issuecomment-1341587691:18,Testability,test,test,18,Here is a smaller test set that produces the same issue. . test_maccs.smi: ; [test_maccs.smi.tar.gz](https://github.com/openbabel/openbabel/files/10179954/test_maccs.smi.tar.gz). test_maccs.fs: ; [test_maccs.fs.tar.gz](https://github.com/openbabel/openbabel/files/10179955/test_maccs.fs.tar.gz). the fast search file was created using this command:; obabel -ofs test_maccs.smi -xfMACCS. the structure within test_maccs.smi titled lead_compound was compared to the complete database using this command:; obabel test_maccs.smi -ofpt -s'Nc1ccc2c(c1)nc([nH]2)c1ccc(cc1)C(=O)O' -at0.5,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1341587691
https://github.com/openbabel/openbabel/issues/2545#issuecomment-1293199196:647,Availability,robust,robustly-convert-between-mmcif-and-pdb,647,"@gregcouch If I understood you correctly, you request an extension of OpenBabel's features. Because the .cif you indicate contains multiple model blocks, it may be easier to start with a single model. Thus, using CCDC's viewer Mercury, the first model in your test file was saved it both as .cif and .pdb. The .pdb as second (additional) format was considered because there are programs written for a conversion of .pdb into .mmcif (e.g., [cif2pdb](https://www.iucr.org/resources/cif/software/cif2pdb) on IUCr's software list, or a post on [bioinformatics.stackexchange](https://bioinformatics.stackexchange.com/questions/10896/how-to-quickly-and-robustly-convert-between-mmcif-and-pdb) about an other program) for a comparison with openbabel's record written (said Mercury does not offer an export to .mmcif; I'm not aware if there is a plausibility/syntax checker for .mmcif as there is with [checkcif](https://checkcif.iucr.org/) for .cif files). At least one of the models of your reference data set equally is available as .cif on the COD (entry card [2103886](https://www.crystallography.net/cod/2103886.html)), too. [2022-10-27_single_model.zip](https://github.com/openbabel/openbabel/files/9877491/2022-10-27_single_model.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2545#issuecomment-1293199196
https://github.com/openbabel/openbabel/issues/2545#issuecomment-1293199196:1015,Availability,avail,available,1015,"@gregcouch If I understood you correctly, you request an extension of OpenBabel's features. Because the .cif you indicate contains multiple model blocks, it may be easier to start with a single model. Thus, using CCDC's viewer Mercury, the first model in your test file was saved it both as .cif and .pdb. The .pdb as second (additional) format was considered because there are programs written for a conversion of .pdb into .mmcif (e.g., [cif2pdb](https://www.iucr.org/resources/cif/software/cif2pdb) on IUCr's software list, or a post on [bioinformatics.stackexchange](https://bioinformatics.stackexchange.com/questions/10896/how-to-quickly-and-robustly-convert-between-mmcif-and-pdb) about an other program) for a comparison with openbabel's record written (said Mercury does not offer an export to .mmcif; I'm not aware if there is a plausibility/syntax checker for .mmcif as there is with [checkcif](https://checkcif.iucr.org/) for .cif files). At least one of the models of your reference data set equally is available as .cif on the COD (entry card [2103886](https://www.crystallography.net/cod/2103886.html)), too. [2022-10-27_single_model.zip](https://github.com/openbabel/openbabel/files/9877491/2022-10-27_single_model.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2545#issuecomment-1293199196
https://github.com/openbabel/openbabel/issues/2545#issuecomment-1293199196:260,Testability,test,test,260,"@gregcouch If I understood you correctly, you request an extension of OpenBabel's features. Because the .cif you indicate contains multiple model blocks, it may be easier to start with a single model. Thus, using CCDC's viewer Mercury, the first model in your test file was saved it both as .cif and .pdb. The .pdb as second (additional) format was considered because there are programs written for a conversion of .pdb into .mmcif (e.g., [cif2pdb](https://www.iucr.org/resources/cif/software/cif2pdb) on IUCr's software list, or a post on [bioinformatics.stackexchange](https://bioinformatics.stackexchange.com/questions/10896/how-to-quickly-and-robustly-convert-between-mmcif-and-pdb) about an other program) for a comparison with openbabel's record written (said Mercury does not offer an export to .mmcif; I'm not aware if there is a plausibility/syntax checker for .mmcif as there is with [checkcif](https://checkcif.iucr.org/) for .cif files). At least one of the models of your reference data set equally is available as .cif on the COD (entry card [2103886](https://www.crystallography.net/cod/2103886.html)), too. [2022-10-27_single_model.zip](https://github.com/openbabel/openbabel/files/9877491/2022-10-27_single_model.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2545#issuecomment-1293199196
https://github.com/openbabel/openbabel/pull/2546#issuecomment-1311770630:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546#issuecomment-1311770630
https://github.com/openbabel/openbabel/issues/2547#issuecomment-1330251917:305,Availability,mask,mask,305,"Is there a .pdbqt file 1) you may share (you might get in touch with your PI for this), and 2) isn't to large that you can share it here? For this, archive the file(s) in question as a .zip; this is one of the acceptable file formats for upload here (hoover with the mouse over the lower rim of the input mask). 3) The original post described the addition of non-polar protons as (so far) problematic. But, there is no share of a file to replicate the processing. If it is about a larger molecule greater than say 500 Da, an indication which amino acid needs special attention may accelerate the scrutiny.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2547#issuecomment-1330251917
https://github.com/openbabel/openbabel/issues/2547#issuecomment-1331835822:1241,Integrability,rout,routes,1241,"There are two approaches identified to address the issue. The first one will process the data with intermediate files you may check and use elsewhere. The second one relays the result of one step into the next one as input via pipes; aside of the very input file, there will be only one permanent record of the output. + approach a, step by step:. ``` shell; obabel small_mol_example.pdbqt -O without_hydrogens.pdb ; obabel without_hydrogens.pdb -h -O with_hydrogens.pdb; obabel with_hydrogens.pdb -xh -O with_hydrogens.pdbqt; ```. Note, the addition of hydrogens (`-h`, second step) is *a parameter*. The preservation of hydrogens (`-xh`, third step) is an *output option* to affect the format of the result already computed; this is similar to e.g., `-xc 8` for the generation of a .svg to display multiple molecules at once, but with an explicit, user defined constraint to write a table of 8 columns. + approach b, use of pipes. If your operating system allows to concatenate multiple instructions (e.g., Linux Debian), the result of one processing may be the input of the next. E.g.,. ``` bash; obabel small_mol_example.pdbqt -opdb | obabel -ipdb -h -opdb | obabel -ipdb -xh -O one_step_with_hydrogens.pdbqt; ```. Either one of the two routes proceeds smoothly (obabel 3.1.1, Linux Debian 12). In the display of e.g., Jmol, the addition of hydrogens appears plausible. Out of caution, I recommend to check if the indazole is the correct one; perhaps you have additional evidence for this, or its isomer. In the .zip attached below, I copy the results written by obabel, and visualizations by Jmol (14.32.79, 2022-10-26 15:52) reading the saturated .pdb and .pdbqt. Last but not least: Thank you for pointing out by example `.tar.gz` equally is a file format suitable for upload in a discussion here on GitHub, too. [obabel_pdbqt_conversion.zip](https://github.com/openbabel/openbabel/files/10121334/obabel_pdbqt_conversion.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2547#issuecomment-1331835822
https://github.com/openbabel/openbabel/issues/2547#issuecomment-1345981841:66,Availability,avail,available,66,"And if you comfortable with compiling from master yourself, it is available to test right away.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2547#issuecomment-1345981841
https://github.com/openbabel/openbabel/issues/2547#issuecomment-1345981841:79,Testability,test,test,79,"And if you comfortable with compiling from master yourself, it is available to test right away.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2547#issuecomment-1345981841
https://github.com/openbabel/openbabel/issues/2548#issuecomment-1321759400:164,Deployability,update,update,164,"It looks like a path issue. The force field could probably not be found. But the example script failed to catch this. The example is really old (15 years...) so an update of it is in place to work with ""recent"" changes in the code base...; If you step through the script in a REPL, you will find that `openbabel.OBForceField.FindForceField(""MMFF94"")` returns None...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2548#issuecomment-1321759400
https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481:18,Testability,test,tests,18,"There is a set of tests of the python bindings in the general test suite. (unittest-based, but still...) https://github.com/openbabel/openbabel/blob/master/test/testbindings.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481
https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481:62,Testability,test,test,62,"There is a set of tests of the python bindings in the general test suite. (unittest-based, but still...) https://github.com/openbabel/openbabel/blob/master/test/testbindings.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481
https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481:156,Testability,test,test,156,"There is a set of tests of the python bindings in the general test suite. (unittest-based, but still...) https://github.com/openbabel/openbabel/blob/master/test/testbindings.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481
https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481:161,Testability,test,testbindings,161,"There is a set of tests of the python bindings in the general test suite. (unittest-based, but still...) https://github.com/openbabel/openbabel/blob/master/test/testbindings.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481
https://github.com/openbabel/openbabel/issues/2550#issuecomment-1321845066:98,Availability,down,downloads,98,"I was a bit unclear there, since I just pasted from the spec (can be found at http://www.mdli.com/downloads/literature/ctfile.pdf ATM). I don't think the max of 255 is applicable for OpenBabel.; Everything is possible in Python, so you could do what you want with the text there, but why would you like to prepare a non-compliant mol-file? What is your use case?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2550#issuecomment-1321845066
https://github.com/openbabel/openbabel/issues/2550#issuecomment-1323247057:1265,Availability,avail,available,1265,"@ignaspakamore Let me add two additional points; both are more comment-like:; + If you would like to have a recent compilation of the rules around .mol/.sdf (v3000) and elder .mol/.sdf(v2000), there is an archived .pdf of Biovia's documentation on [archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf). As far as I know, this is the most recent edition (August 2020). + As you mention crystal structures, on one hand, and mol files on the other, maybe the compiled set by [COD](http://www.crystallography.net/cod/index.php), named [cod-tools](https://wiki.crystallography.net/cod-tools/) is helpful for you. It includes `codcif2sdf`, an utility for the CLI to bring the .cif's structure model to the .mol/.sdf format. Often, if the cif2mol conversion by openbabel fails (e.g., ""completion"" of the structure based on the asymmetric unit), this one still finds a reasonable solution, especially for structure models of small organic molecules. Though conceived for the COD repository, thanks to the .cif standard, it equally processes .cif from other sources (publications' SI, CCDC from webCSD and conquest, etc.) Depending on the operating system, the collection equally may be available as a package easier to install, too ([example Debian](https://tracker.debian.org/pkg/cod-tools)). Though the tool (still) writes .sdf in the v2000 format, according to COD's maintainers, a new program is under construction which eventually is going to replace `codcif2sdf`. It were plausible that this one then will write .sdf (v3000).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2550#issuecomment-1323247057
https://github.com/openbabel/openbabel/issues/2550#issuecomment-1323247057:1298,Deployability,install,install,1298,"@ignaspakamore Let me add two additional points; both are more comment-like:; + If you would like to have a recent compilation of the rules around .mol/.sdf (v3000) and elder .mol/.sdf(v2000), there is an archived .pdf of Biovia's documentation on [archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf). As far as I know, this is the most recent edition (August 2020). + As you mention crystal structures, on one hand, and mol files on the other, maybe the compiled set by [COD](http://www.crystallography.net/cod/index.php), named [cod-tools](https://wiki.crystallography.net/cod-tools/) is helpful for you. It includes `codcif2sdf`, an utility for the CLI to bring the .cif's structure model to the .mol/.sdf format. Often, if the cif2mol conversion by openbabel fails (e.g., ""completion"" of the structure based on the asymmetric unit), this one still finds a reasonable solution, especially for structure models of small organic molecules. Though conceived for the COD repository, thanks to the .cif standard, it equally processes .cif from other sources (publications' SI, CCDC from webCSD and conquest, etc.) Depending on the operating system, the collection equally may be available as a package easier to install, too ([example Debian](https://tracker.debian.org/pkg/cod-tools)). Though the tool (still) writes .sdf in the v2000 format, according to COD's maintainers, a new program is under construction which eventually is going to replace `codcif2sdf`. It were plausible that this one then will write .sdf (v3000).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2550#issuecomment-1323247057
https://github.com/openbabel/openbabel/issues/2550#issuecomment-1323247057:1200,Integrability,Depend,Depending,1200,"@ignaspakamore Let me add two additional points; both are more comment-like:; + If you would like to have a recent compilation of the rules around .mol/.sdf (v3000) and elder .mol/.sdf(v2000), there is an archived .pdf of Biovia's documentation on [archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf). As far as I know, this is the most recent edition (August 2020). + As you mention crystal structures, on one hand, and mol files on the other, maybe the compiled set by [COD](http://www.crystallography.net/cod/index.php), named [cod-tools](https://wiki.crystallography.net/cod-tools/) is helpful for you. It includes `codcif2sdf`, an utility for the CLI to bring the .cif's structure model to the .mol/.sdf format. Often, if the cif2mol conversion by openbabel fails (e.g., ""completion"" of the structure based on the asymmetric unit), this one still finds a reasonable solution, especially for structure models of small organic molecules. Though conceived for the COD repository, thanks to the .cif standard, it equally processes .cif from other sources (publications' SI, CCDC from webCSD and conquest, etc.) Depending on the operating system, the collection equally may be available as a package easier to install, too ([example Debian](https://tracker.debian.org/pkg/cod-tools)). Though the tool (still) writes .sdf in the v2000 format, according to COD's maintainers, a new program is under construction which eventually is going to replace `codcif2sdf`. It were plausible that this one then will write .sdf (v3000).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2550#issuecomment-1323247057
https://github.com/openbabel/openbabel/pull/2551#issuecomment-1325175933:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2551#issuecomment-1325175933
https://github.com/openbabel/openbabel/issues/2555#issuecomment-1355195509:15,Deployability,install,installed,15,Zlib and boost installed via brew,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2555#issuecomment-1355195509
https://github.com/openbabel/openbabel/pull/2558#issuecomment-1383717494:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2558#issuecomment-1383717494
https://github.com/openbabel/openbabel/issues/2559#issuecomment-1383940524:357,Availability,error,error,357,"OpenBabel version: 3.1.1; OS: Windows 11 Home SL. At first, I used Chimera UCSF to get ligand from 7vsi protein (RCSB PDB) and I save file as PDB file that only have ligand. In OpenBabel, I want to convert ligand from PDB file (INPUT FORMAT) to PDBQT file (OUTPUT FORMAT). I also add hydrogen but when I click convert it doesnt work and i keep getting this error ""0 molecules converted""; I dont know what to do",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2559#issuecomment-1383940524
https://github.com/openbabel/openbabel/issues/2559#issuecomment-1384000343:54,Integrability,interface,interface,54,"I have very limited experience of using the graphical interface to OpenBabel so I'm afraid I can't suggest anything concrete. If it was the command line, my guess would be that there is a problem with the paths so that the formats doesn't show up but I think the GUI should only allow selection of the formats it actually finds.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2559#issuecomment-1384000343
https://github.com/openbabel/openbabel/issues/2560#issuecomment-1385624392:30,Availability,error,error,30,Hello!. The warning is not an error but it is saying that OpenBabel cannot assign kekulized bonds (i.e. alternating single and double bonds) to the structure. It's most likely not a problem but could indicate that the input molecule has problems in rare cases so the best option is to double check the input and output structures (easiest to do graphically) to assert that they are the same and correct.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2560#issuecomment-1385624392
https://github.com/openbabel/openbabel/issues/2560#issuecomment-1385624392:361,Testability,assert,assert,361,Hello!. The warning is not an error but it is saying that OpenBabel cannot assign kekulized bonds (i.e. alternating single and double bonds) to the structure. It's most likely not a problem but could indicate that the input molecule has problems in rare cases so the best option is to double check the input and output structures (easiest to do graphically) to assert that they are the same and correct.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2560#issuecomment-1385624392
https://github.com/openbabel/openbabel/issues/2561#issuecomment-1493463875:97,Deployability,release,releases,97,"I'm not quite sure why you are unable to, but I can from [https://github.com/openbabel/openbabel/releases/tag/openbabel-3-1-1](https://github.com/openbabel/openbabel/releases/tag/openbabel-3-1-1).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2561#issuecomment-1493463875
https://github.com/openbabel/openbabel/issues/2561#issuecomment-1493463875:166,Deployability,release,releases,166,"I'm not quite sure why you are unable to, but I can from [https://github.com/openbabel/openbabel/releases/tag/openbabel-3-1-1](https://github.com/openbabel/openbabel/releases/tag/openbabel-3-1-1).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2561#issuecomment-1493463875
https://github.com/openbabel/openbabel/pull/2565#issuecomment-1418819191:1076,Deployability,toggle,toggle,1076,"Because I have no working knowledge of any C language, the following only can be a suggestion for an additional feature here:. It took me some time to identify `babel_povray3.inc` in my file system (Linux Debian 12/bookworm), which I actually have twice; namely in path `/usr/share/openbabel/3.1.1` as well as in `/usr/share/povray/include`. Maybe because I do use `openbabel` as provided by the Linux Debian 12/bookworm repository as well as `Avogadro2`, though I'm not sure if either one of the programs just wants to be sure that PovRay has a reference instructions for colours and dimensions to use. But here is a potential pitfall: moving to an other computer, and forgetting the very `babel_povray3.inc` file. Can we have an option that this file `.inc` file is copy-pasted into the current working directory when OpenBabel is requested to generate the first `.pov` in the current working directory? (This would be similar to e.g., Jmol; if one requests to export a structure as `.obj`, a complementary `.mtl` file is written on the fly, too.) At least as an *optional* toggle?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2565#issuecomment-1418819191
https://github.com/openbabel/openbabel/pull/2565#issuecomment-1419062916:4,Availability,error,errors,4,"The errors are unrelated to the PR. The SWIG bindings failure is probably temporary, failed downloads of packages. The lint_python warns for an outdated version of setuptools with a vulnerability in it. I don't even think that the setuptools version is specified in OpenBabel so that is probably related to the GitHub action.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2565#issuecomment-1419062916
https://github.com/openbabel/openbabel/pull/2565#issuecomment-1419062916:54,Availability,failure,failure,54,"The errors are unrelated to the PR. The SWIG bindings failure is probably temporary, failed downloads of packages. The lint_python warns for an outdated version of setuptools with a vulnerability in it. I don't even think that the setuptools version is specified in OpenBabel so that is probably related to the GitHub action.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2565#issuecomment-1419062916
https://github.com/openbabel/openbabel/pull/2565#issuecomment-1419062916:92,Availability,down,downloads,92,"The errors are unrelated to the PR. The SWIG bindings failure is probably temporary, failed downloads of packages. The lint_python warns for an outdated version of setuptools with a vulnerability in it. I don't even think that the setuptools version is specified in OpenBabel so that is probably related to the GitHub action.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2565#issuecomment-1419062916
https://github.com/openbabel/openbabel/issues/2567#issuecomment-1419070601:9,Deployability,release,release,9,"From the release notes of 3.0.0:. > Code for handling implicit hydrogens and kekulization has been entirely replaced. As well as being accurate, the new approach is much faster. It is most likely safe to ignore the warning, but I would check the results to see that the structures look like you expect.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-1419070601
https://github.com/openbabel/openbabel/issues/2567#issuecomment-1419070601:196,Safety,safe,safe,196,"From the release notes of 3.0.0:. > Code for handling implicit hydrogens and kekulization has been entirely replaced. As well as being accurate, the new approach is much faster. It is most likely safe to ignore the warning, but I would check the results to see that the structures look like you expect.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-1419070601
https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024102505:11,Deployability,release,release,11,"> From the release notes of 3.0.0:; > ; > > Code for handling implicit hydrogens and kekulization has been entirely replaced. As well as being accurate, the new approach is much faster.; > ; > It is most likely safe to ignore the warning, but I would check the results to see that the structures look like you expect. can the warning be silenced?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024102505
https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024102505:211,Safety,safe,safe,211,"> From the release notes of 3.0.0:; > ; > > Code for handling implicit hydrogens and kekulization has been entirely replaced. As well as being accurate, the new approach is much faster.; > ; > It is most likely safe to ignore the warning, but I would check the results to see that the structures look like you expect. can the warning be silenced?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024102505
https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024579930:188,Testability,log,logged-warnings-in-pybel,188,"I don't think you could silence only that warning, but you can silence all warnings with `ob.obErrorLog.SetOutputLevel(0)` (see https://stackoverflow.com/questions/50419371/how-to-disable-logged-warnings-in-pybel and https://openbabel.org/api/3.0/classOpenBabel_1_1OBMessageHandler.shtml)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024579930
https://github.com/openbabel/openbabel/issues/2568#issuecomment-1420152979:24,Availability,error,error,24,"I dug a bit deeper. The error appears in the generated OpenBabel3_EXPORTS.cmake. In line 103, it checks whether the targets for maeparser and coordgen are set. They are not, as the coordgen-config.cmake and maeparser-config.cmake, present in /usr/local/lib/cmake, are never searched for or imported.; If I understand correctly, creation of those files happens around line 717 in the top level CMakeLists.txt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2568#issuecomment-1420152979
https://github.com/openbabel/openbabel/issues/2568#issuecomment-1420152979:190,Modifiability,config,config,190,"I dug a bit deeper. The error appears in the generated OpenBabel3_EXPORTS.cmake. In line 103, it checks whether the targets for maeparser and coordgen are set. They are not, as the coordgen-config.cmake and maeparser-config.cmake, present in /usr/local/lib/cmake, are never searched for or imported.; If I understand correctly, creation of those files happens around line 717 in the top level CMakeLists.txt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2568#issuecomment-1420152979
https://github.com/openbabel/openbabel/issues/2568#issuecomment-1420152979:217,Modifiability,config,config,217,"I dug a bit deeper. The error appears in the generated OpenBabel3_EXPORTS.cmake. In line 103, it checks whether the targets for maeparser and coordgen are set. They are not, as the coordgen-config.cmake and maeparser-config.cmake, present in /usr/local/lib/cmake, are never searched for or imported.; If I understand correctly, creation of those files happens around line 717 in the top level CMakeLists.txt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2568#issuecomment-1420152979
https://github.com/openbabel/openbabel/issues/2570#issuecomment-1432322360:18,Deployability,release,released,18,"Version 2.3.1 was released back in 2011: https://open-babel.readthedocs.io/en/latest/ReleaseNotes/ob231.html. You can, for example, use `conda -c condo-forge install openbabel` which will properly install version 3.1.1 including the appropriate Python packages.; https://anaconda.org/conda-forge/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2570#issuecomment-1432322360
https://github.com/openbabel/openbabel/issues/2570#issuecomment-1432322360:85,Deployability,Release,ReleaseNotes,85,"Version 2.3.1 was released back in 2011: https://open-babel.readthedocs.io/en/latest/ReleaseNotes/ob231.html. You can, for example, use `conda -c condo-forge install openbabel` which will properly install version 3.1.1 including the appropriate Python packages.; https://anaconda.org/conda-forge/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2570#issuecomment-1432322360
https://github.com/openbabel/openbabel/issues/2570#issuecomment-1432322360:158,Deployability,install,install,158,"Version 2.3.1 was released back in 2011: https://open-babel.readthedocs.io/en/latest/ReleaseNotes/ob231.html. You can, for example, use `conda -c condo-forge install openbabel` which will properly install version 3.1.1 including the appropriate Python packages.; https://anaconda.org/conda-forge/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2570#issuecomment-1432322360
https://github.com/openbabel/openbabel/issues/2570#issuecomment-1432322360:197,Deployability,install,install,197,"Version 2.3.1 was released back in 2011: https://open-babel.readthedocs.io/en/latest/ReleaseNotes/ob231.html. You can, for example, use `conda -c condo-forge install openbabel` which will properly install version 3.1.1 including the appropriate Python packages.; https://anaconda.org/conda-forge/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2570#issuecomment-1432322360
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1473957774:124,Availability,error,error,124,"I am also experiencing this issue. . I have also tried installing python bindings on python 3.6 and 3.9 and will still have error. . I even tried using the ""--use-pep517"" option and still get the error.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1473957774
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1473957774:196,Availability,error,error,196,"I am also experiencing this issue. . I have also tried installing python bindings on python 3.6 and 3.9 and will still have error. . I even tried using the ""--use-pep517"" option and still get the error.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1473957774
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1473957774:55,Deployability,install,installing,55,"I am also experiencing this issue. . I have also tried installing python bindings on python 3.6 and 3.9 and will still have error. . I even tried using the ""--use-pep517"" option and still get the error.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1473957774
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1475275592:51,Deployability,install,installed,51,Am not sure that latest `openbabel` version can be installed with pip only. See this issues: #2403 #2271 #1956; But I am very much looking forward to this feature. Conda install should work.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1475275592
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1475275592:170,Deployability,install,install,170,Am not sure that latest `openbabel` version can be installed with pip only. See this issues: #2403 #2271 #1956; But I am very much looking forward to this feature. Conda install should work.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1475275592
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1475427034:0,Deployability,Update,Updated,0,Updated pip installers would be great! We know it is a lot of work. But hang in there Openbabel team!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1475427034
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1475427034:12,Deployability,install,installers,12,Updated pip installers would be great! We know it is a lot of work. But hang in there Openbabel team!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1475427034
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:168,Availability,down,download,168,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:231,Availability,down,download,231,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:692,Availability,down,downloaded,692,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:1187,Availability,down,download,1187,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:9,Deployability,update,updated,9,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:21,Deployability,install,installers,21,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:150,Deployability,install,installation,150,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:179,Deployability,install,install,179,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:244,Deployability,install,installer,244,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:303,Deployability,release,releases,303,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:593,Deployability,install,install,593,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:910,Deployability,install,install-openbabel-for-python-,910,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:1210,Deployability,install,install,1210,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:1249,Deployability,install,install,1249,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:417,Modifiability,variab,variable,417,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:445,Modifiability,variab,variables,445,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755:506,Modifiability,variab,variables,506,"I agree, updated pip installers that work on Windows would be great. ; Here is what worked for me (for openbabel 3.1.1, Python 3.10.10):; **Openbabel installation**; - download & install openbabel 3.1.1 64-bit version for Windows (download the installer file from https://github.com/openbabel/openbabel/releases/ ); - IMPORTANT step after if it should be used via Python openbabel / pybel later: delete BABEL_DATADIR variable in the environment variables of Windows; (type in search box: ""edit environment variables"" and open the control panel for that. **Python bindings to openbabel**; - to install Python openbabel bindings on Windows, I only succeeded when using a precompiled .whl wheel downloaded from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel); for reasons see this [related post](https://stackoverflow.com/questions/42151301/how-do-i-install-openbabel-for-python-3-6-in-windows-10).; - Choose an amd64 version that is compatible with the current Python version (check for compatible versions in command prompt via: ` pip debug --verbose` ).; - Then change the directory in the cmd prompt (run as admin) to your download directory and install using a pip command like: `pip install openbabel-3.1.1-cp310-cp310-win_amd64.whl`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1660965755
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911769554:131,Availability,error,error,131,Hi please can anyone guide me on how to pip install openbabel in a virtual environment on a ubuntu system. I keep getting the same error mentioned in this issue. I am trying to do this with a python 3.10 virtual environment on ubuntu 22.04,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911769554
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911769554:44,Deployability,install,install,44,Hi please can anyone guide me on how to pip install openbabel in a virtual environment on a ubuntu system. I keep getting the same error mentioned in this issue. I am trying to do this with a python 3.10 virtual environment on ubuntu 22.04,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911769554
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911769554:21,Usability,guid,guide,21,Hi please can anyone guide me on how to pip install openbabel in a virtual environment on a ubuntu system. I keep getting the same error mentioned in this issue. I am trying to do this with a python 3.10 virtual environment on ubuntu 22.04,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911769554
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911865606:67,Availability,avail,available,67,"An alternative approach is to use openbabel-wheel which equally is available; on pypi and hence can be used with pip. Commands and functionality provided; by this bypass are the same, so keep your line of `from openbabel import pybel`; and other instructions in the Python scripts. How to proceed:. - if the virtual environment is pristine, run `pip install openbabel-wheel`; - if it is not because you once run a `pip install openbabel`, first remove; the old libraries by `pip uninstall openbabel` and subsequently run `pip; install openbabel-wheel` (or just remove the virtual environment for good; and create a new venv).; - if the virtual environment uses a `requirements.txt` file, substitute the; entry `openbabel` by `openbabel-wheel`. Then, as usual, run `pip install; -r ./requirements.txt`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911865606
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911865606:350,Deployability,install,install,350,"An alternative approach is to use openbabel-wheel which equally is available; on pypi and hence can be used with pip. Commands and functionality provided; by this bypass are the same, so keep your line of `from openbabel import pybel`; and other instructions in the Python scripts. How to proceed:. - if the virtual environment is pristine, run `pip install openbabel-wheel`; - if it is not because you once run a `pip install openbabel`, first remove; the old libraries by `pip uninstall openbabel` and subsequently run `pip; install openbabel-wheel` (or just remove the virtual environment for good; and create a new venv).; - if the virtual environment uses a `requirements.txt` file, substitute the; entry `openbabel` by `openbabel-wheel`. Then, as usual, run `pip install; -r ./requirements.txt`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911865606
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911865606:419,Deployability,install,install,419,"An alternative approach is to use openbabel-wheel which equally is available; on pypi and hence can be used with pip. Commands and functionality provided; by this bypass are the same, so keep your line of `from openbabel import pybel`; and other instructions in the Python scripts. How to proceed:. - if the virtual environment is pristine, run `pip install openbabel-wheel`; - if it is not because you once run a `pip install openbabel`, first remove; the old libraries by `pip uninstall openbabel` and subsequently run `pip; install openbabel-wheel` (or just remove the virtual environment for good; and create a new venv).; - if the virtual environment uses a `requirements.txt` file, substitute the; entry `openbabel` by `openbabel-wheel`. Then, as usual, run `pip install; -r ./requirements.txt`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911865606
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911865606:527,Deployability,install,install,527,"An alternative approach is to use openbabel-wheel which equally is available; on pypi and hence can be used with pip. Commands and functionality provided; by this bypass are the same, so keep your line of `from openbabel import pybel`; and other instructions in the Python scripts. How to proceed:. - if the virtual environment is pristine, run `pip install openbabel-wheel`; - if it is not because you once run a `pip install openbabel`, first remove; the old libraries by `pip uninstall openbabel` and subsequently run `pip; install openbabel-wheel` (or just remove the virtual environment for good; and create a new venv).; - if the virtual environment uses a `requirements.txt` file, substitute the; entry `openbabel` by `openbabel-wheel`. Then, as usual, run `pip install; -r ./requirements.txt`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911865606
https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911865606:769,Deployability,install,install,769,"An alternative approach is to use openbabel-wheel which equally is available; on pypi and hence can be used with pip. Commands and functionality provided; by this bypass are the same, so keep your line of `from openbabel import pybel`; and other instructions in the Python scripts. How to proceed:. - if the virtual environment is pristine, run `pip install openbabel-wheel`; - if it is not because you once run a `pip install openbabel`, first remove; the old libraries by `pip uninstall openbabel` and subsequently run `pip; install openbabel-wheel` (or just remove the virtual environment for good; and create a new venv).; - if the virtual environment uses a `requirements.txt` file, substitute the; entry `openbabel` by `openbabel-wheel`. Then, as usual, run `pip install; -r ./requirements.txt`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911865606
https://github.com/openbabel/openbabel/issues/2572#issuecomment-1438477721:44,Safety,predict,predicted,44,"Hi,; What do you mean with ""how is the edge predicted""? Is it the layout you are asking about? In general, an xyz-file will have coordinates in it, so how did you create the image? How would you like it to look?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2572#issuecomment-1438477721
https://github.com/openbabel/openbabel/pull/2574#issuecomment-1441272859:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2574#issuecomment-1441272859
https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306:92,Availability,failure,failure,92,"Thanks for the quick response!. I'm not sure if it's the radical per se that is causing the failure because I have successfully submitted many other radicals and gotten usable coordinates. Here's an example with a related radical that seems to work fine. ```; obabel -:""[CH2]C=C(C)C"" --gen3D --ff MMFF94 -h -oxyz; 14. C 1.01586 -0.21405 0.27494; C 2.43230 -0.08427 0.08158; C 3.08182 -0.05272 -1.09552; C 2.43297 -0.09102 -2.45461; C 4.58463 0.04185 -1.13598; H 0.58958 0.04472 1.23683; H 0.35675 -0.54678 -0.51556; H 3.00523 -0.00707 1.00744; H 1.34148 -0.06758 -2.41775; H 2.73125 -0.99784 -2.98980; H 2.74967 0.77684 -3.04304; H 5.02623 0.08437 -0.13465; H 4.89667 0.94248 -1.67511; H 5.00339 -0.83164 -1.64584; 1 molecule converted; ```. I suppose I was low-key wondering how I was getting results, given that I didn't think MMFF94 supported radicals either, but the geometry guesses I looked at were fine for my application and I assumed obabel had some special way of handling these radicals. So I guess now I'm not sure what's going on, and why most radicals work (or ""work"") but the aforementioned one does not. For what it's worth, I don't actually need perfect geometries for my application because my next step is to feed them to a more accurate optimization. In fact for my purposes I could even obtain the geometry of the anion from obabel and let the more accurate optimization fine-tune the anion to the radical. So getting this perfect isn't immediately crucial to me but I am now curious what obabel is actually doing (and if you have a recommendation for the best way to process radicals in obabel to generate a good starting guess for a more accurate method, I'm all ears). P.S. It's wonderful to hear from you! I think I went for a run with you and Alán when you both visited UCLA!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306
https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306:1257,Performance,optimiz,optimization,1257,"Thanks for the quick response!. I'm not sure if it's the radical per se that is causing the failure because I have successfully submitted many other radicals and gotten usable coordinates. Here's an example with a related radical that seems to work fine. ```; obabel -:""[CH2]C=C(C)C"" --gen3D --ff MMFF94 -h -oxyz; 14. C 1.01586 -0.21405 0.27494; C 2.43230 -0.08427 0.08158; C 3.08182 -0.05272 -1.09552; C 2.43297 -0.09102 -2.45461; C 4.58463 0.04185 -1.13598; H 0.58958 0.04472 1.23683; H 0.35675 -0.54678 -0.51556; H 3.00523 -0.00707 1.00744; H 1.34148 -0.06758 -2.41775; H 2.73125 -0.99784 -2.98980; H 2.74967 0.77684 -3.04304; H 5.02623 0.08437 -0.13465; H 4.89667 0.94248 -1.67511; H 5.00339 -0.83164 -1.64584; 1 molecule converted; ```. I suppose I was low-key wondering how I was getting results, given that I didn't think MMFF94 supported radicals either, but the geometry guesses I looked at were fine for my application and I assumed obabel had some special way of handling these radicals. So I guess now I'm not sure what's going on, and why most radicals work (or ""work"") but the aforementioned one does not. For what it's worth, I don't actually need perfect geometries for my application because my next step is to feed them to a more accurate optimization. In fact for my purposes I could even obtain the geometry of the anion from obabel and let the more accurate optimization fine-tune the anion to the radical. So getting this perfect isn't immediately crucial to me but I am now curious what obabel is actually doing (and if you have a recommendation for the best way to process radicals in obabel to generate a good starting guess for a more accurate method, I'm all ears). P.S. It's wonderful to hear from you! I think I went for a run with you and Alán when you both visited UCLA!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306
https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306:1379,Performance,optimiz,optimization,1379,"Thanks for the quick response!. I'm not sure if it's the radical per se that is causing the failure because I have successfully submitted many other radicals and gotten usable coordinates. Here's an example with a related radical that seems to work fine. ```; obabel -:""[CH2]C=C(C)C"" --gen3D --ff MMFF94 -h -oxyz; 14. C 1.01586 -0.21405 0.27494; C 2.43230 -0.08427 0.08158; C 3.08182 -0.05272 -1.09552; C 2.43297 -0.09102 -2.45461; C 4.58463 0.04185 -1.13598; H 0.58958 0.04472 1.23683; H 0.35675 -0.54678 -0.51556; H 3.00523 -0.00707 1.00744; H 1.34148 -0.06758 -2.41775; H 2.73125 -0.99784 -2.98980; H 2.74967 0.77684 -3.04304; H 5.02623 0.08437 -0.13465; H 4.89667 0.94248 -1.67511; H 5.00339 -0.83164 -1.64584; 1 molecule converted; ```. I suppose I was low-key wondering how I was getting results, given that I didn't think MMFF94 supported radicals either, but the geometry guesses I looked at were fine for my application and I assumed obabel had some special way of handling these radicals. So I guess now I'm not sure what's going on, and why most radicals work (or ""work"") but the aforementioned one does not. For what it's worth, I don't actually need perfect geometries for my application because my next step is to feed them to a more accurate optimization. In fact for my purposes I could even obtain the geometry of the anion from obabel and let the more accurate optimization fine-tune the anion to the radical. So getting this perfect isn't immediately crucial to me but I am now curious what obabel is actually doing (and if you have a recommendation for the best way to process radicals in obabel to generate a good starting guess for a more accurate method, I'm all ears). P.S. It's wonderful to hear from you! I think I went for a run with you and Alán when you both visited UCLA!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306
https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306:1397,Performance,tune,tune,1397,"Thanks for the quick response!. I'm not sure if it's the radical per se that is causing the failure because I have successfully submitted many other radicals and gotten usable coordinates. Here's an example with a related radical that seems to work fine. ```; obabel -:""[CH2]C=C(C)C"" --gen3D --ff MMFF94 -h -oxyz; 14. C 1.01586 -0.21405 0.27494; C 2.43230 -0.08427 0.08158; C 3.08182 -0.05272 -1.09552; C 2.43297 -0.09102 -2.45461; C 4.58463 0.04185 -1.13598; H 0.58958 0.04472 1.23683; H 0.35675 -0.54678 -0.51556; H 3.00523 -0.00707 1.00744; H 1.34148 -0.06758 -2.41775; H 2.73125 -0.99784 -2.98980; H 2.74967 0.77684 -3.04304; H 5.02623 0.08437 -0.13465; H 4.89667 0.94248 -1.67511; H 5.00339 -0.83164 -1.64584; 1 molecule converted; ```. I suppose I was low-key wondering how I was getting results, given that I didn't think MMFF94 supported radicals either, but the geometry guesses I looked at were fine for my application and I assumed obabel had some special way of handling these radicals. So I guess now I'm not sure what's going on, and why most radicals work (or ""work"") but the aforementioned one does not. For what it's worth, I don't actually need perfect geometries for my application because my next step is to feed them to a more accurate optimization. In fact for my purposes I could even obtain the geometry of the anion from obabel and let the more accurate optimization fine-tune the anion to the radical. So getting this perfect isn't immediately crucial to me but I am now curious what obabel is actually doing (and if you have a recommendation for the best way to process radicals in obabel to generate a good starting guess for a more accurate method, I'm all ears). P.S. It's wonderful to hear from you! I think I went for a run with you and Alán when you both visited UCLA!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306
https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306:169,Usability,usab,usable,169,"Thanks for the quick response!. I'm not sure if it's the radical per se that is causing the failure because I have successfully submitted many other radicals and gotten usable coordinates. Here's an example with a related radical that seems to work fine. ```; obabel -:""[CH2]C=C(C)C"" --gen3D --ff MMFF94 -h -oxyz; 14. C 1.01586 -0.21405 0.27494; C 2.43230 -0.08427 0.08158; C 3.08182 -0.05272 -1.09552; C 2.43297 -0.09102 -2.45461; C 4.58463 0.04185 -1.13598; H 0.58958 0.04472 1.23683; H 0.35675 -0.54678 -0.51556; H 3.00523 -0.00707 1.00744; H 1.34148 -0.06758 -2.41775; H 2.73125 -0.99784 -2.98980; H 2.74967 0.77684 -3.04304; H 5.02623 0.08437 -0.13465; H 4.89667 0.94248 -1.67511; H 5.00339 -0.83164 -1.64584; 1 molecule converted; ```. I suppose I was low-key wondering how I was getting results, given that I didn't think MMFF94 supported radicals either, but the geometry guesses I looked at were fine for my application and I assumed obabel had some special way of handling these radicals. So I guess now I'm not sure what's going on, and why most radicals work (or ""work"") but the aforementioned one does not. For what it's worth, I don't actually need perfect geometries for my application because my next step is to feed them to a more accurate optimization. In fact for my purposes I could even obtain the geometry of the anion from obabel and let the more accurate optimization fine-tune the anion to the radical. So getting this perfect isn't immediately crucial to me but I am now curious what obabel is actually doing (and if you have a recommendation for the best way to process radicals in obabel to generate a good starting guess for a more accurate method, I'm all ears). P.S. It's wonderful to hear from you! I think I went for a run with you and Alán when you both visited UCLA!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306
https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956:164,Availability,avail,available,164,"Ah interesting, thanks Fredrik. . Looking at the link you've found, that looks like a code/format no longer supported since 2005. The xbs code I mentioned is still available as part of the Ubuntu repository and is functioning (I downloaded and tested this morning). Maybe it would be more useful to switch the ""bs"" format in obabel to support the xbs format described above? At the moment the obabel user guide doesn't give information about the format it is applying or its usage:; https://openbabel.org/docs/dev/FileFormats/Ball_and_Stick_format.html; The xbs code is also still available on github and has been ported to JS:; https://github.com/Montmorency/XBS; https://observablehq.com/@montmorency/xbs-an-observable-ball-and-stick-viewer; What do you think?; Best wishes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956
https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956:229,Availability,down,downloaded,229,"Ah interesting, thanks Fredrik. . Looking at the link you've found, that looks like a code/format no longer supported since 2005. The xbs code I mentioned is still available as part of the Ubuntu repository and is functioning (I downloaded and tested this morning). Maybe it would be more useful to switch the ""bs"" format in obabel to support the xbs format described above? At the moment the obabel user guide doesn't give information about the format it is applying or its usage:; https://openbabel.org/docs/dev/FileFormats/Ball_and_Stick_format.html; The xbs code is also still available on github and has been ported to JS:; https://github.com/Montmorency/XBS; https://observablehq.com/@montmorency/xbs-an-observable-ball-and-stick-viewer; What do you think?; Best wishes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956
https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956:581,Availability,avail,available,581,"Ah interesting, thanks Fredrik. . Looking at the link you've found, that looks like a code/format no longer supported since 2005. The xbs code I mentioned is still available as part of the Ubuntu repository and is functioning (I downloaded and tested this morning). Maybe it would be more useful to switch the ""bs"" format in obabel to support the xbs format described above? At the moment the obabel user guide doesn't give information about the format it is applying or its usage:; https://openbabel.org/docs/dev/FileFormats/Ball_and_Stick_format.html; The xbs code is also still available on github and has been ported to JS:; https://github.com/Montmorency/XBS; https://observablehq.com/@montmorency/xbs-an-observable-ball-and-stick-viewer; What do you think?; Best wishes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956
https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956:244,Testability,test,tested,244,"Ah interesting, thanks Fredrik. . Looking at the link you've found, that looks like a code/format no longer supported since 2005. The xbs code I mentioned is still available as part of the Ubuntu repository and is functioning (I downloaded and tested this morning). Maybe it would be more useful to switch the ""bs"" format in obabel to support the xbs format described above? At the moment the obabel user guide doesn't give information about the format it is applying or its usage:; https://openbabel.org/docs/dev/FileFormats/Ball_and_Stick_format.html; The xbs code is also still available on github and has been ported to JS:; https://github.com/Montmorency/XBS; https://observablehq.com/@montmorency/xbs-an-observable-ball-and-stick-viewer; What do you think?; Best wishes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956
https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956:405,Usability,guid,guide,405,"Ah interesting, thanks Fredrik. . Looking at the link you've found, that looks like a code/format no longer supported since 2005. The xbs code I mentioned is still available as part of the Ubuntu repository and is functioning (I downloaded and tested this morning). Maybe it would be more useful to switch the ""bs"" format in obabel to support the xbs format described above? At the moment the obabel user guide doesn't give information about the format it is applying or its usage:; https://openbabel.org/docs/dev/FileFormats/Ball_and_Stick_format.html; The xbs code is also still available on github and has been ported to JS:; https://github.com/Montmorency/XBS; https://observablehq.com/@montmorency/xbs-an-observable-ball-and-stick-viewer; What do you think?; Best wishes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956
https://github.com/openbabel/openbabel/issues/2578#issuecomment-1483045204:149,Deployability,release,release,149,Duplicate of https://github.com/openbabel/openbabel/issues/2217 which is fixed in https://github.com/openbabel/openbabel/pull/2218 (8 days after the release of 3.1.1),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2578#issuecomment-1483045204
https://github.com/openbabel/openbabel/issues/2579#issuecomment-1488042158:214,Integrability,depend,depend,214,"To be specific, this is the change I propose. ; https://github.com/openbabel/openbabel/pull/2580. It can be interpreted as it is, or if a there is better mechanism, I can change the `negAtoms` flag I introduced to depend on some flag passed to the format instead of the number of `grid_data`s count.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1488042158
https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716:0,Modifiability,Plugin,Plugins,0,"Plugins, like the file formats, can have options. See for example https://openbabel.org/docs/dev/FileFormats/MOPAC_Cartesian_format.html, and the associated code https://github.com/openbabel/openbabel/blob/master/src/formats/mopacformat.cpp (lines 45 and 449, for example). Regarding testing, there is a test framework; it would be great if you could check in a test file along with a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716
https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716:284,Testability,test,testing,284,"Plugins, like the file formats, can have options. See for example https://openbabel.org/docs/dev/FileFormats/MOPAC_Cartesian_format.html, and the associated code https://github.com/openbabel/openbabel/blob/master/src/formats/mopacformat.cpp (lines 45 and 449, for example). Regarding testing, there is a test framework; it would be great if you could check in a test file along with a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716
https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716:304,Testability,test,test,304,"Plugins, like the file formats, can have options. See for example https://openbabel.org/docs/dev/FileFormats/MOPAC_Cartesian_format.html, and the associated code https://github.com/openbabel/openbabel/blob/master/src/formats/mopacformat.cpp (lines 45 and 449, for example). Regarding testing, there is a test framework; it would be great if you could check in a test file along with a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716
https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716:362,Testability,test,test,362,"Plugins, like the file formats, can have options. See for example https://openbabel.org/docs/dev/FileFormats/MOPAC_Cartesian_format.html, and the associated code https://github.com/openbabel/openbabel/blob/master/src/formats/mopacformat.cpp (lines 45 and 449, for example). Regarding testing, there is a test framework; it would be great if you could check in a test file along with a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716
https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716:385,Testability,test,test,385,"Plugins, like the file formats, can have options. See for example https://openbabel.org/docs/dev/FileFormats/MOPAC_Cartesian_format.html, and the associated code https://github.com/openbabel/openbabel/blob/master/src/formats/mopacformat.cpp (lines 45 and 449, for example). Regarding testing, there is a test framework; it would be great if you could check in a test file along with a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716
https://github.com/openbabel/openbabel/issues/2579#issuecomment-1498474527:140,Usability,simpl,simpler,140,"Thank you for the pointers.; I will take a look into these options. To not complicate things more than needed, I propose to default to the (simpler) format (a) in the case that there is only one grid associated with the molecule.; Having one grid is very common and it is also common that other programs only format (a) anyway. What do you think?. This is implemented in this PR:; https://github.com/openbabel/openbabel/pull/2580. Please let me know if for some reason this is not acceptable and what I can do to fix it.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1498474527
https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706:2,Testability,test,tested,2,I tested the changes on the resulting files read from VESTA and VisIt. ; Any feedback is welcome.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706
https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706:77,Usability,feedback,feedback,77,I tested the changes on the resulting files read from VESTA and VisIt. ; Any feedback is welcome.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706
https://github.com/openbabel/openbabel/pull/2580#issuecomment-1498474898:29,Usability,simpl,simpler,29,I propose to default to the (simpler) format (a) in the case that there is only one grid associated with the molecule.; Having one grid is very common and it is also common that other programs only format (a) anyway. Please let me know if for some reason this is not acceptable and what I can do to fix it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1498474898
https://github.com/openbabel/openbabel/issues/2581#issuecomment-1493956271:527,Performance,load,loaded,527,"Hello,; A) Yes, you should expect that fingerprints MAY change. While the OpenBabel code is rather stable, there might always be a bug fixed or a change made that affects some part of the underlying molecule data structure and hence the fingerprint. In general, it is always best to be consistent to one version of the chemoinformatics software.; B) They should not be sensitive to the --genxD options.; C) I don't really follow the change to InChI here, but the InChI generation should not be sensitive to how the molecule is loaded (unless it comes from an underspecified format such as pdb where guessing of the bond system might lead to different molecules percieved). Normalizing through InChI might be a good option but there are a lot of things to consider before deciding on a normalization scheme.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2581#issuecomment-1493956271
https://github.com/openbabel/openbabel/issues/2582#issuecomment-1500823308:162,Availability,down,downstream,162,"This breaks the API of a core class/method. Such changes cannot be made without a strong reason to do so (e.g. we really need this, it's holding us back) as some downstream code will no longer compile.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2582#issuecomment-1500823308
https://github.com/openbabel/openbabel/issues/2585#issuecomment-1507062362:157,Performance,optimiz,optimizing,157,"It does not use MMFF94 because of the selenium and silicon. The difference between the invocations is that you're doing more ""cleanup"" in the 2nd choice (by optimizing again UFF after the gen3d step). Since you're saving to XYZ format, Avogadro has to re-perceive the bonds .. and in this case, since there isn't a ring fragment with the selenium, it's pretty weird. `obabel -:'C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1' -O gen3d.sdf --gen3d`. <img width=""465"" alt=""Screenshot 2023-04-13 at 10 18 35 AM"" src=""https://user-images.githubusercontent.com/41128/231788665-44c192c8-40be-4b87-bfcb-abee45f0017a.png"">. If instead, I add ""best"" to the `--gen3d` it's much cleaner:. `obabel -:'C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1' -O best.sdf --gen3d best`. <img width=""525"" alt=""Screenshot 2023-04-13 at 10 18 53 AM"" src=""https://user-images.githubusercontent.com/41128/231788909-2052a4b5-6abf-45ea-b66e-3bfba45aa773.png"">. In principal, the `gen3d` would be better if there were some selenium fragments or fallback to the thiophenes, but for your purposes, it's probably easier to just supply `--gen3d best` which will also do some conformer searching.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1507062362
https://github.com/openbabel/openbabel/issues/2585#issuecomment-1507064063:120,Deployability,release,release,120,"And if you want the visualization in Avogadro, I'd definitely recommend saving to SDF or CML, etc. (The next Open Babel release will have a CJSON implementation for Avo2.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1507064063
https://github.com/openbabel/openbabel/issues/2585#issuecomment-1508043626:99,Performance,optimiz,optimizing,99,"> The difference between the invocations is that you're doing more ""cleanup"" in the 2nd choice (by optimizing again UFF after the gen3d step). In addition, openbabel reports if the task was achieved, and informs you if the selected force field is not suitable for the task ahead. Compare the successful interaction with UFF. ``` shell; $ obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff UFF -O test2.xyz; 1 molecule converted; ```. with one calling MMFF94, or MMFF94s. ``` shell; $ obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff MMFF94 -O test2.xyz; Could not setup force field.; 0 molecules converted; $ obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff MMFF94s -O test2.xyz; Could not setup force field.; 0 molecules converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1508043626
https://github.com/openbabel/openbabel/issues/2585#issuecomment-1509001577:130,Availability,down,download,130,"@raulorteg The current documentation about openbabel is [here](https://open-babel.readthedocs.io/en/latest/index.html) (including download as html, pdf, or epub for off-line access). In section [Generating conformers for structures](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=Generating%20conformers%20for%20structures#generating-conformers-for-structures), it however is MMFF94 which is stated as the default.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1509001577
https://github.com/openbabel/openbabel/issues/2585#issuecomment-1509001577:174,Security,access,access,174,"@raulorteg The current documentation about openbabel is [here](https://open-babel.readthedocs.io/en/latest/index.html) (including download as html, pdf, or epub for off-line access). In section [Generating conformers for structures](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=Generating%20conformers%20for%20structures#generating-conformers-for-structures), it however is MMFF94 which is stated as the default.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1509001577
https://github.com/openbabel/openbabel/pull/2588#issuecomment-1537530537:56,Availability,failure,failure,56,"Hey Folks, not sure what i can do about the lint_python failure?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2588#issuecomment-1537530537
https://github.com/openbabel/openbabel/pull/2588#issuecomment-1540566582:18,Testability,test,tests,18,"Redoing some unit tests with SWIG, will make a pull request on success",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2588#issuecomment-1540566582
https://github.com/openbabel/openbabel/issues/2593#issuecomment-1992295069:64,Testability,test,tests,64,Did you figure it out? I'm getting almost the same exact failed tests as you did.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2593#issuecomment-1992295069
https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737:233,Energy Efficiency,CHARGE,CHARGE,233,"Openbabel does not perceive the interatomic distance C-N short enough to qualify for a C=N double bond. ```shell; $ obabel CH2NOH.xyz -omolreport; TITLE: xyz file made by CCI; FORMULA: CH3NO; MASS: 45.0406; ATOM: 1 O TYPE: O3 HYB: 3 CHARGE: -0.2955; ATOM: 2 N TYPE: Nox HYB: 3 CHARGE: -0.0978; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.0591; ATOM: 4 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 5 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 6 H TYPE: HO HYB: 1 CHARGE: 0.2383; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 6 ORDER: 1; BOND: 2 START: 2 END: 3 ORDER: 1; BOND: 3 START: 3 END: 4 ORDER: 1; BOND: 4 START: 3 END: 5 ORDER: 1; 1 molecule converted; ```. The following does not attempt a modification of openbabel's work. Sometimes, Jensen's `xyz2mol` relying on RDKit ([repository](https://github.com/jensengroup/xyz2mol), [presentation slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf) / [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jensen's talk at a user group meeting in 2020) can help here, especially for small organic molecules (""pure"", as organometallics with dative bonds represent more difficulties). Similar to an issue reported [earlier](https://github.com/jensengroup/xyz2mol/issues/38), you can run e.g. in a virtual environment of Python 3.11.2 as provided by Linux Debian 12 / bookworm. ```shell; $ python xyz2mol.py NH2CHNOH.xyz ; N/C=N/O; $ python xyz2mol.py CH2NOH.xyz ; C=NO; $; $ python xyz2mol.py CH2NOH.xyz -o sdf. RDKit 3D. 6 5 0 0 0 0 0 0 0 0999 V2000; 12.8901 15.5454 15.1434 O 0 0 0 0 0 0 0 0 0 0 0 0; 14.0607 14.7831 15.1434 N 0 0 0 0 0 0 0 0 0 0 0 0; 15.0690 15.5844 15.1434 C 0 0 0 0 0 0 0 0 0 0 0 0; 16.0923 15.1782 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 14.9673 16.6830 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 12.2067 14.8542 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0; 1 6 1 0; 2 3 2 0; 3 4 1 0; 3 5 1 0; M END; ```. (one of course can redirect the result by `>` into a permanent record). The .zip archive below includes",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737
https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737:277,Energy Efficiency,CHARGE,CHARGE,277,"Openbabel does not perceive the interatomic distance C-N short enough to qualify for a C=N double bond. ```shell; $ obabel CH2NOH.xyz -omolreport; TITLE: xyz file made by CCI; FORMULA: CH3NO; MASS: 45.0406; ATOM: 1 O TYPE: O3 HYB: 3 CHARGE: -0.2955; ATOM: 2 N TYPE: Nox HYB: 3 CHARGE: -0.0978; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.0591; ATOM: 4 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 5 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 6 H TYPE: HO HYB: 1 CHARGE: 0.2383; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 6 ORDER: 1; BOND: 2 START: 2 END: 3 ORDER: 1; BOND: 3 START: 3 END: 4 ORDER: 1; BOND: 4 START: 3 END: 5 ORDER: 1; 1 molecule converted; ```. The following does not attempt a modification of openbabel's work. Sometimes, Jensen's `xyz2mol` relying on RDKit ([repository](https://github.com/jensengroup/xyz2mol), [presentation slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf) / [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jensen's talk at a user group meeting in 2020) can help here, especially for small organic molecules (""pure"", as organometallics with dative bonds represent more difficulties). Similar to an issue reported [earlier](https://github.com/jensengroup/xyz2mol/issues/38), you can run e.g. in a virtual environment of Python 3.11.2 as provided by Linux Debian 12 / bookworm. ```shell; $ python xyz2mol.py NH2CHNOH.xyz ; N/C=N/O; $ python xyz2mol.py CH2NOH.xyz ; C=NO; $; $ python xyz2mol.py CH2NOH.xyz -o sdf. RDKit 3D. 6 5 0 0 0 0 0 0 0 0999 V2000; 12.8901 15.5454 15.1434 O 0 0 0 0 0 0 0 0 0 0 0 0; 14.0607 14.7831 15.1434 N 0 0 0 0 0 0 0 0 0 0 0 0; 15.0690 15.5844 15.1434 C 0 0 0 0 0 0 0 0 0 0 0 0; 16.0923 15.1782 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 14.9673 16.6830 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 12.2067 14.8542 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0; 1 6 1 0; 2 3 2 0; 3 4 1 0; 3 5 1 0; M END; ```. (one of course can redirect the result by `>` into a permanent record). The .zip archive below includes",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737
https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737:320,Energy Efficiency,CHARGE,CHARGE,320,"Openbabel does not perceive the interatomic distance C-N short enough to qualify for a C=N double bond. ```shell; $ obabel CH2NOH.xyz -omolreport; TITLE: xyz file made by CCI; FORMULA: CH3NO; MASS: 45.0406; ATOM: 1 O TYPE: O3 HYB: 3 CHARGE: -0.2955; ATOM: 2 N TYPE: Nox HYB: 3 CHARGE: -0.0978; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.0591; ATOM: 4 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 5 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 6 H TYPE: HO HYB: 1 CHARGE: 0.2383; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 6 ORDER: 1; BOND: 2 START: 2 END: 3 ORDER: 1; BOND: 3 START: 3 END: 4 ORDER: 1; BOND: 4 START: 3 END: 5 ORDER: 1; 1 molecule converted; ```. The following does not attempt a modification of openbabel's work. Sometimes, Jensen's `xyz2mol` relying on RDKit ([repository](https://github.com/jensengroup/xyz2mol), [presentation slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf) / [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jensen's talk at a user group meeting in 2020) can help here, especially for small organic molecules (""pure"", as organometallics with dative bonds represent more difficulties). Similar to an issue reported [earlier](https://github.com/jensengroup/xyz2mol/issues/38), you can run e.g. in a virtual environment of Python 3.11.2 as provided by Linux Debian 12 / bookworm. ```shell; $ python xyz2mol.py NH2CHNOH.xyz ; N/C=N/O; $ python xyz2mol.py CH2NOH.xyz ; C=NO; $; $ python xyz2mol.py CH2NOH.xyz -o sdf. RDKit 3D. 6 5 0 0 0 0 0 0 0 0999 V2000; 12.8901 15.5454 15.1434 O 0 0 0 0 0 0 0 0 0 0 0 0; 14.0607 14.7831 15.1434 N 0 0 0 0 0 0 0 0 0 0 0 0; 15.0690 15.5844 15.1434 C 0 0 0 0 0 0 0 0 0 0 0 0; 16.0923 15.1782 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 14.9673 16.6830 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 12.2067 14.8542 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0; 1 6 1 0; 2 3 2 0; 3 4 1 0; 3 5 1 0; M END; ```. (one of course can redirect the result by `>` into a permanent record). The .zip archive below includes",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737
https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737:361,Energy Efficiency,CHARGE,CHARGE,361,"Openbabel does not perceive the interatomic distance C-N short enough to qualify for a C=N double bond. ```shell; $ obabel CH2NOH.xyz -omolreport; TITLE: xyz file made by CCI; FORMULA: CH3NO; MASS: 45.0406; ATOM: 1 O TYPE: O3 HYB: 3 CHARGE: -0.2955; ATOM: 2 N TYPE: Nox HYB: 3 CHARGE: -0.0978; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.0591; ATOM: 4 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 5 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 6 H TYPE: HO HYB: 1 CHARGE: 0.2383; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 6 ORDER: 1; BOND: 2 START: 2 END: 3 ORDER: 1; BOND: 3 START: 3 END: 4 ORDER: 1; BOND: 4 START: 3 END: 5 ORDER: 1; 1 molecule converted; ```. The following does not attempt a modification of openbabel's work. Sometimes, Jensen's `xyz2mol` relying on RDKit ([repository](https://github.com/jensengroup/xyz2mol), [presentation slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf) / [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jensen's talk at a user group meeting in 2020) can help here, especially for small organic molecules (""pure"", as organometallics with dative bonds represent more difficulties). Similar to an issue reported [earlier](https://github.com/jensengroup/xyz2mol/issues/38), you can run e.g. in a virtual environment of Python 3.11.2 as provided by Linux Debian 12 / bookworm. ```shell; $ python xyz2mol.py NH2CHNOH.xyz ; N/C=N/O; $ python xyz2mol.py CH2NOH.xyz ; C=NO; $; $ python xyz2mol.py CH2NOH.xyz -o sdf. RDKit 3D. 6 5 0 0 0 0 0 0 0 0999 V2000; 12.8901 15.5454 15.1434 O 0 0 0 0 0 0 0 0 0 0 0 0; 14.0607 14.7831 15.1434 N 0 0 0 0 0 0 0 0 0 0 0 0; 15.0690 15.5844 15.1434 C 0 0 0 0 0 0 0 0 0 0 0 0; 16.0923 15.1782 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 14.9673 16.6830 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 12.2067 14.8542 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0; 1 6 1 0; 2 3 2 0; 3 4 1 0; 3 5 1 0; M END; ```. (one of course can redirect the result by `>` into a permanent record). The .zip archive below includes",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737
https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737:402,Energy Efficiency,CHARGE,CHARGE,402,"Openbabel does not perceive the interatomic distance C-N short enough to qualify for a C=N double bond. ```shell; $ obabel CH2NOH.xyz -omolreport; TITLE: xyz file made by CCI; FORMULA: CH3NO; MASS: 45.0406; ATOM: 1 O TYPE: O3 HYB: 3 CHARGE: -0.2955; ATOM: 2 N TYPE: Nox HYB: 3 CHARGE: -0.0978; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.0591; ATOM: 4 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 5 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 6 H TYPE: HO HYB: 1 CHARGE: 0.2383; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 6 ORDER: 1; BOND: 2 START: 2 END: 3 ORDER: 1; BOND: 3 START: 3 END: 4 ORDER: 1; BOND: 4 START: 3 END: 5 ORDER: 1; 1 molecule converted; ```. The following does not attempt a modification of openbabel's work. Sometimes, Jensen's `xyz2mol` relying on RDKit ([repository](https://github.com/jensengroup/xyz2mol), [presentation slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf) / [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jensen's talk at a user group meeting in 2020) can help here, especially for small organic molecules (""pure"", as organometallics with dative bonds represent more difficulties). Similar to an issue reported [earlier](https://github.com/jensengroup/xyz2mol/issues/38), you can run e.g. in a virtual environment of Python 3.11.2 as provided by Linux Debian 12 / bookworm. ```shell; $ python xyz2mol.py NH2CHNOH.xyz ; N/C=N/O; $ python xyz2mol.py CH2NOH.xyz ; C=NO; $; $ python xyz2mol.py CH2NOH.xyz -o sdf. RDKit 3D. 6 5 0 0 0 0 0 0 0 0999 V2000; 12.8901 15.5454 15.1434 O 0 0 0 0 0 0 0 0 0 0 0 0; 14.0607 14.7831 15.1434 N 0 0 0 0 0 0 0 0 0 0 0 0; 15.0690 15.5844 15.1434 C 0 0 0 0 0 0 0 0 0 0 0 0; 16.0923 15.1782 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 14.9673 16.6830 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 12.2067 14.8542 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0; 1 6 1 0; 2 3 2 0; 3 4 1 0; 3 5 1 0; M END; ```. (one of course can redirect the result by `>` into a permanent record). The .zip archive below includes",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737
https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737:444,Energy Efficiency,CHARGE,CHARGE,444,"Openbabel does not perceive the interatomic distance C-N short enough to qualify for a C=N double bond. ```shell; $ obabel CH2NOH.xyz -omolreport; TITLE: xyz file made by CCI; FORMULA: CH3NO; MASS: 45.0406; ATOM: 1 O TYPE: O3 HYB: 3 CHARGE: -0.2955; ATOM: 2 N TYPE: Nox HYB: 3 CHARGE: -0.0978; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.0591; ATOM: 4 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 5 H TYPE: H HYB: 1 CHARGE: 0.0480; ATOM: 6 H TYPE: HO HYB: 1 CHARGE: 0.2383; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 6 ORDER: 1; BOND: 2 START: 2 END: 3 ORDER: 1; BOND: 3 START: 3 END: 4 ORDER: 1; BOND: 4 START: 3 END: 5 ORDER: 1; 1 molecule converted; ```. The following does not attempt a modification of openbabel's work. Sometimes, Jensen's `xyz2mol` relying on RDKit ([repository](https://github.com/jensengroup/xyz2mol), [presentation slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf) / [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jensen's talk at a user group meeting in 2020) can help here, especially for small organic molecules (""pure"", as organometallics with dative bonds represent more difficulties). Similar to an issue reported [earlier](https://github.com/jensengroup/xyz2mol/issues/38), you can run e.g. in a virtual environment of Python 3.11.2 as provided by Linux Debian 12 / bookworm. ```shell; $ python xyz2mol.py NH2CHNOH.xyz ; N/C=N/O; $ python xyz2mol.py CH2NOH.xyz ; C=NO; $; $ python xyz2mol.py CH2NOH.xyz -o sdf. RDKit 3D. 6 5 0 0 0 0 0 0 0 0999 V2000; 12.8901 15.5454 15.1434 O 0 0 0 0 0 0 0 0 0 0 0 0; 14.0607 14.7831 15.1434 N 0 0 0 0 0 0 0 0 0 0 0 0; 15.0690 15.5844 15.1434 C 0 0 0 0 0 0 0 0 0 0 0 0; 16.0923 15.1782 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 14.9673 16.6830 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 12.2067 14.8542 15.1434 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0; 1 6 1 0; 2 3 2 0; 3 4 1 0; 3 5 1 0; M END; ```. (one of course can redirect the result by `>` into a permanent record). The .zip archive below includes",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2594#issuecomment-1584716737
https://github.com/openbabel/openbabel/issues/2595#issuecomment-1587735580:59,Energy Efficiency,charge,charges,59,"Is there actually a spec for PDBQT? Yes, it looks like the charges should be right-aligned, but if you know of a spec, it would be very helpful.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1587735580
https://github.com/openbabel/openbabel/issues/2595#issuecomment-1588682016:273,Energy Efficiency,charge,charge,273,"Basically it's the [PDB format](http://www.wwpdb.org/documentation/file-format-content/format32/v3.2.html) with the [autodock extensions](https://web.archive.org/web/20190301030908/https://autodock.scripps.edu/faqs-help/faq/what-is-the-format-of-a-pdbqt-file). The partial charge is stored in columns 71-76 (sic! In reality, 67 - 76) inclusive (in %6.3f format, i.e. right-justified, 6 characters wide, with 3 decimal places). The AutoDock atom-type is stored in columns 78-79 inclusive (in %-2.2s format, i.e. left-justified and 2 characters wide.. . https://userguide.mdanalysis.org/1.1.1/formats/reference/pdbqt.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1588682016
https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455:221,Energy Efficiency,charge,charge,221,"@ghutchis I recon the line 406 of pdbqtformat.cpp should thus be ; ``` ; --- pdbqtformat.cpp	2023-06-18 17:10:03.141724231 +0300; +++ pdbqtformatx.cpp	2023-06-18 17:11:47.742477601 +0300; @@ -403,7 +403,7 @@; }; ; double charge = atom->GetPartialCharge();; - snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+5.3f %.2s"",; + snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+8.3f %-2.2s"",; het?""HETATM"":""ATOM "",; index,; type_name,; ```. If we use the specsed %+6.3f for the partial charges, everything except values greater than 99.999 are aligned correctly. ; The columns 67 to 76 can be used. According to the latter link I provided, they use `%+10.4s` so what gives? I use +8.3 and it works just dandy. The current breakdown is currently following:. ```; %s: Placeholder for a string (record name).; %5d: Placeholder for an integer with a width of 5 (serial).; %-4s: Placeholder for a left-aligned string with a width of 4 (atom name).; %-3s: Placeholder for a left-aligned string with a width of 3 (residue name).; %c: Placeholder for a single character (altLoc).; %4d: Placeholder for an integer with a width of 4 (resSeq).; %c: Placeholder for a single character (iCode).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (x).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (y).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (z).; 0.00: Static value for the occupancy column.; 0.00: Static value for the temperature factor column.; %+8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (partialChrg).; %-2.2s: Placeholder for a left-aligned string with a width of 2 (atomType).; ```. Additionally, I just noticed that if I convert (with obabel) mol2 file to PDB file, optimize the geometries and calculate the partial charges with openmopac and convert (with obabel) the resulting P",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455
https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455:544,Energy Efficiency,charge,charges,544,"@ghutchis I recon the line 406 of pdbqtformat.cpp should thus be ; ``` ; --- pdbqtformat.cpp	2023-06-18 17:10:03.141724231 +0300; +++ pdbqtformatx.cpp	2023-06-18 17:11:47.742477601 +0300; @@ -403,7 +403,7 @@; }; ; double charge = atom->GetPartialCharge();; - snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+5.3f %.2s"",; + snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+8.3f %-2.2s"",; het?""HETATM"":""ATOM "",; index,; type_name,; ```. If we use the specsed %+6.3f for the partial charges, everything except values greater than 99.999 are aligned correctly. ; The columns 67 to 76 can be used. According to the latter link I provided, they use `%+10.4s` so what gives? I use +8.3 and it works just dandy. The current breakdown is currently following:. ```; %s: Placeholder for a string (record name).; %5d: Placeholder for an integer with a width of 5 (serial).; %-4s: Placeholder for a left-aligned string with a width of 4 (atom name).; %-3s: Placeholder for a left-aligned string with a width of 3 (residue name).; %c: Placeholder for a single character (altLoc).; %4d: Placeholder for an integer with a width of 4 (resSeq).; %c: Placeholder for a single character (iCode).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (x).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (y).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (z).; 0.00: Static value for the occupancy column.; 0.00: Static value for the temperature factor column.; %+8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (partialChrg).; %-2.2s: Placeholder for a left-aligned string with a width of 2 (atomType).; ```. Additionally, I just noticed that if I convert (with obabel) mol2 file to PDB file, optimize the geometries and calculate the partial charges with openmopac and convert (with obabel) the resulting P",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455
https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455:1937,Energy Efficiency,charge,charges,1937,"tformat.cpp	2023-06-18 17:10:03.141724231 +0300; +++ pdbqtformatx.cpp	2023-06-18 17:11:47.742477601 +0300; @@ -403,7 +403,7 @@; }; ; double charge = atom->GetPartialCharge();; - snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+5.3f %.2s"",; + snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+8.3f %-2.2s"",; het?""HETATM"":""ATOM "",; index,; type_name,; ```. If we use the specsed %+6.3f for the partial charges, everything except values greater than 99.999 are aligned correctly. ; The columns 67 to 76 can be used. According to the latter link I provided, they use `%+10.4s` so what gives? I use +8.3 and it works just dandy. The current breakdown is currently following:. ```; %s: Placeholder for a string (record name).; %5d: Placeholder for an integer with a width of 5 (serial).; %-4s: Placeholder for a left-aligned string with a width of 4 (atom name).; %-3s: Placeholder for a left-aligned string with a width of 3 (residue name).; %c: Placeholder for a single character (altLoc).; %4d: Placeholder for an integer with a width of 4 (resSeq).; %c: Placeholder for a single character (iCode).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (x).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (y).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (z).; 0.00: Static value for the occupancy column.; 0.00: Static value for the temperature factor column.; %+8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (partialChrg).; %-2.2s: Placeholder for a left-aligned string with a width of 2 (atomType).; ```. Additionally, I just noticed that if I convert (with obabel) mol2 file to PDB file, optimize the geometries and calculate the partial charges with openmopac and convert (with obabel) the resulting PDB file (not MOO this time) to PDBQT-file, the charges are all total flat zero..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455
https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455:2048,Energy Efficiency,charge,charges,2048,"tformat.cpp	2023-06-18 17:10:03.141724231 +0300; +++ pdbqtformatx.cpp	2023-06-18 17:11:47.742477601 +0300; @@ -403,7 +403,7 @@; }; ; double charge = atom->GetPartialCharge();; - snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+5.3f %.2s"",; + snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+8.3f %-2.2s"",; het?""HETATM"":""ATOM "",; index,; type_name,; ```. If we use the specsed %+6.3f for the partial charges, everything except values greater than 99.999 are aligned correctly. ; The columns 67 to 76 can be used. According to the latter link I provided, they use `%+10.4s` so what gives? I use +8.3 and it works just dandy. The current breakdown is currently following:. ```; %s: Placeholder for a string (record name).; %5d: Placeholder for an integer with a width of 5 (serial).; %-4s: Placeholder for a left-aligned string with a width of 4 (atom name).; %-3s: Placeholder for a left-aligned string with a width of 3 (residue name).; %c: Placeholder for a single character (altLoc).; %4d: Placeholder for an integer with a width of 4 (resSeq).; %c: Placeholder for a single character (iCode).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (x).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (y).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (z).; 0.00: Static value for the occupancy column.; 0.00: Static value for the temperature factor column.; %+8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (partialChrg).; %-2.2s: Placeholder for a left-aligned string with a width of 2 (atomType).; ```. Additionally, I just noticed that if I convert (with obabel) mol2 file to PDB file, optimize the geometries and calculate the partial charges with openmopac and convert (with obabel) the resulting PDB file (not MOO this time) to PDBQT-file, the charges are all total flat zero..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455
https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455:1887,Performance,optimiz,optimize,1887,"tformat.cpp	2023-06-18 17:10:03.141724231 +0300; +++ pdbqtformatx.cpp	2023-06-18 17:11:47.742477601 +0300; @@ -403,7 +403,7 @@; }; ; double charge = atom->GetPartialCharge();; - snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+5.3f %.2s"",; + snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+8.3f %-2.2s"",; het?""HETATM"":""ATOM "",; index,; type_name,; ```. If we use the specsed %+6.3f for the partial charges, everything except values greater than 99.999 are aligned correctly. ; The columns 67 to 76 can be used. According to the latter link I provided, they use `%+10.4s` so what gives? I use +8.3 and it works just dandy. The current breakdown is currently following:. ```; %s: Placeholder for a string (record name).; %5d: Placeholder for an integer with a width of 5 (serial).; %-4s: Placeholder for a left-aligned string with a width of 4 (atom name).; %-3s: Placeholder for a left-aligned string with a width of 3 (residue name).; %c: Placeholder for a single character (altLoc).; %4d: Placeholder for an integer with a width of 4 (resSeq).; %c: Placeholder for a single character (iCode).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (x).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (y).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (z).; 0.00: Static value for the occupancy column.; 0.00: Static value for the temperature factor column.; %+8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (partialChrg).; %-2.2s: Placeholder for a left-aligned string with a width of 2 (atomType).; ```. Additionally, I just noticed that if I convert (with obabel) mol2 file to PDB file, optimize the geometries and calculate the partial charges with openmopac and convert (with obabel) the resulting PDB file (not MOO this time) to PDBQT-file, the charges are all total flat zero..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455
https://github.com/openbabel/openbabel/pull/2596#issuecomment-1586840277:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2596#issuecomment-1586840277
https://github.com/openbabel/openbabel/pull/2596#issuecomment-1587733707:24,Usability,clear,clear,24,Thanks. That's a pretty clear fix.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2596#issuecomment-1587733707
https://github.com/openbabel/openbabel/pull/2598#issuecomment-1594011629:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2598#issuecomment-1594011629
https://github.com/openbabel/openbabel/issues/2599#issuecomment-1596774095:376,Deployability,install,installation,376,"Maybe your current interest is the conversion e.g., of .sdf into .xyz from the CLI (or, thanks to obgui, a GUI) only. (Because you mention you want to familiarize with the program first, a bookmark https://open-babel.readthedocs.io/en/latest/ can be helpful.) This contrasts to a later contribution to openbabel's source code (if you want). If this assumption is correct, the installation of openbabel as package from Ubuntu's servers (`sudo apt install openbabel`) both suffices and resolves the dependencies for you. An example of a GUI of the package manager is synaptic.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2599#issuecomment-1596774095
https://github.com/openbabel/openbabel/issues/2599#issuecomment-1596774095:446,Deployability,install,install,446,"Maybe your current interest is the conversion e.g., of .sdf into .xyz from the CLI (or, thanks to obgui, a GUI) only. (Because you mention you want to familiarize with the program first, a bookmark https://open-babel.readthedocs.io/en/latest/ can be helpful.) This contrasts to a later contribution to openbabel's source code (if you want). If this assumption is correct, the installation of openbabel as package from Ubuntu's servers (`sudo apt install openbabel`) both suffices and resolves the dependencies for you. An example of a GUI of the package manager is synaptic.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2599#issuecomment-1596774095
https://github.com/openbabel/openbabel/issues/2599#issuecomment-1596774095:497,Integrability,depend,dependencies,497,"Maybe your current interest is the conversion e.g., of .sdf into .xyz from the CLI (or, thanks to obgui, a GUI) only. (Because you mention you want to familiarize with the program first, a bookmark https://open-babel.readthedocs.io/en/latest/ can be helpful.) This contrasts to a later contribution to openbabel's source code (if you want). If this assumption is correct, the installation of openbabel as package from Ubuntu's servers (`sudo apt install openbabel`) both suffices and resolves the dependencies for you. An example of a GUI of the package manager is synaptic.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2599#issuecomment-1596774095
https://github.com/openbabel/openbabel/issues/2600#issuecomment-1596813459:4,Testability,test,testing,4,For testing purposes which yielded this bug. I reckon the title shouldn't be *****,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2600#issuecomment-1596813459
https://github.com/openbabel/openbabel/pull/2601#issuecomment-1596222328:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2601#issuecomment-1596222328
https://github.com/openbabel/openbabel/issues/2602#issuecomment-1599163670:63,Deployability,install,install,63,"Why are you using archaic version of openbabel? Please try and install the current one: 3.1.1; Also, please provide the command line arguments you are using and preferably an example file you are usin.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2602#issuecomment-1599163670
https://github.com/openbabel/openbabel/issues/2603#issuecomment-1624203453:4,Deployability,update,update,4,Any update on this?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2603#issuecomment-1624203453
https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:75,Integrability,interface,interface,75,"Each time one wants to report an issue about openbabel here on GitHub, the interface provides you with a template. This is to help you to organize your observation(s), and others to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395
https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:1161,Integrability,interface,interface,1161,"thers to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$(NX3+[O-]);!$([S,O,N;H1,H2]);!$([+0][S,O;X1-])]; ```. about a longer string. For a short keyword, single backticks are fine, e.g. `print`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395
https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:1608,Safety,safe,safer,1608,"thers to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$(NX3+[O-]);!$([S,O,N;H1,H2]);!$([+0][S,O;X1-])]; ```. about a longer string. For a short keyword, single backticks are fine, e.g. `print`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395
https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:1040,Testability,test,test,1040,"Each time one wants to report an issue about openbabel here on GitHub, the interface provides you with a template. This is to help you to organize your observation(s), and others to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395
https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:1545,Usability,learn,learnxinyminutes,1545,"thers to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$(NX3+[O-]);!$([S,O,N;H1,H2]);!$([+0][S,O;X1-])]; ```. about a longer string. For a short keyword, single backticks are fine, e.g. `print`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395
https://github.com/openbabel/openbabel/pull/2608#issuecomment-1636424704:72,Testability,Test,Test,72,"It's failing on Mac - maybe that's an old Python version?. ```; 218/227 Test #218: pytest_babel .....................***Failed 0.23 sec; /Users/runner/work/openbabel/openbabel/scripts/python:/Users/runner/work/openbabel/build/lib; File ""/Users/runner/work/openbabel/openbabel/test/testbabel.py"", line 528; output, err = run_exec( f""obrms -t 10 {sdffile} {sdffile}""); ^; SyntaxError: invalid syntax; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1636424704
https://github.com/openbabel/openbabel/pull/2608#issuecomment-1636424704:276,Testability,test,test,276,"It's failing on Mac - maybe that's an old Python version?. ```; 218/227 Test #218: pytest_babel .....................***Failed 0.23 sec; /Users/runner/work/openbabel/openbabel/scripts/python:/Users/runner/work/openbabel/build/lib; File ""/Users/runner/work/openbabel/openbabel/test/testbabel.py"", line 528; output, err = run_exec( f""obrms -t 10 {sdffile} {sdffile}""); ^; SyntaxError: invalid syntax; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1636424704
https://github.com/openbabel/openbabel/pull/2608#issuecomment-1636424704:281,Testability,test,testbabel,281,"It's failing on Mac - maybe that's an old Python version?. ```; 218/227 Test #218: pytest_babel .....................***Failed 0.23 sec; /Users/runner/work/openbabel/openbabel/scripts/python:/Users/runner/work/openbabel/build/lib; File ""/Users/runner/work/openbabel/openbabel/test/testbabel.py"", line 528; output, err = run_exec( f""obrms -t 10 {sdffile} {sdffile}""); ^; SyntaxError: invalid syntax; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1636424704
https://github.com/openbabel/openbabel/pull/2608#issuecomment-1773399655:7,Testability,test,test,7,Broken test is unrelated- I'll fix that this weekend.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1773399655
https://github.com/openbabel/openbabel/issues/2609#issuecomment-1631953784:565,Availability,mask,mask,565,"To ease replication of your findings, can you provide additional information, please:. + what program and version of the program used (because ChemDraw isn't the only program which can write .cdxml, see e.g. chemdoodle), and operating system you use; + an example of a .cdxml leading to your observation; + what is the version of openbabel you engage. One approach is to archive the .cdxml as a .zip file. While running a session of GitHub in a web browser, the later format then can be added as an attachment here on GitHub's issue reports (lower rim of the input mask).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2609#issuecomment-1631953784
https://github.com/openbabel/openbabel/issues/2610#issuecomment-1632018903:384,Availability,avail,available,384,"Atom 43 is the oxygen atom within the benzofuran moiety. ![structure](https://github.com/openbabel/openbabel/assets/60490931/bee4a45d-f047-46f6-84d8-afe92f1a27a0). for which one typically assigns sp2 hybridization. The SYBYL atom type notation encodes this by `O.2`; the reference I use here is the table on page 53 of the mid-2005 published SYBYL 7.1/Tripos Mol2 documentation still available as a copy by the time machine on archive.org ([link](https://web.archive.org/web/20160615131623/http://www.tripos.com/data/support/mol2.pdf), record by 2016-06-15, see the file attached below). ----; Two sidenotes:. + You are correct that sdf can be a container of multiple structures. Here, your use of `-m` to split the output into multiple output files however is not necessary because the input file is about a single model containing only one molecule.; + You want to process an input file of syntax of a sdf file which actually carries the file extension `.sdf`. The intended output shall follow the mol2 syntax in a file with the file extension of `.mol2`; again coherent. In such a case, the file extensions are typically *indicative enough* for openbabel to recognize the details of the task ahead; you can issue a shorter instruction to yield the same result:. ```shell; obabel input1.sdf -O out.mol2 --partialcharge none; ```. [mol2.pdf](https://github.com/openbabel/openbabel/files/12025037/mol2.pdf)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2610#issuecomment-1632018903
https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489:406,Modifiability,variab,variables,406,"Re AWK: by default, one space, multiple free spaces, or a tabulator is all one white space. It is one argument e.g. to use [bioawk](https://github.com/vsbuffalo/bioawk-tutorial) to process pdb and FASTA. One however can explicitly define (by `FS`) what AWK should consider as *field separator*, between the columns in a line (a *record*), and by `RS` what should separate the lines. (There equally are the variables `OFS` and `ORS` to specify *output field separator* and *output record separator*. Regarding the task ahead, however, I recommend to substantiate your question with a typical .sdf you want to process, to document the intended workflow, and output format you aim for. So far, it is not clear if you want to remove (or retain) structures which could be considered as a sugar. Perhaps the filter intended shall be more specific (e.g., remove residues of galactose, but not glucose). The project [SugarRemoval](https://github.com/JonasSchaub/SugarRemoval) is an example of such a ""structure cleaner"".",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489
https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489:701,Usability,clear,clear,701,"Re AWK: by default, one space, multiple free spaces, or a tabulator is all one white space. It is one argument e.g. to use [bioawk](https://github.com/vsbuffalo/bioawk-tutorial) to process pdb and FASTA. One however can explicitly define (by `FS`) what AWK should consider as *field separator*, between the columns in a line (a *record*), and by `RS` what should separate the lines. (There equally are the variables `OFS` and `ORS` to specify *output field separator* and *output record separator*. Regarding the task ahead, however, I recommend to substantiate your question with a typical .sdf you want to process, to document the intended workflow, and output format you aim for. So far, it is not clear if you want to remove (or retain) structures which could be considered as a sugar. Perhaps the filter intended shall be more specific (e.g., remove residues of galactose, but not glucose). The project [SugarRemoval](https://github.com/JonasSchaub/SugarRemoval) is an example of such a ""structure cleaner"".",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489
https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728:9,Availability,error,error,9,"Hi, same error here. How do I fix it?. `obgen MRTX1719_2D.sdf -ff UFF > MRTX1719_3D.sdf ; ==============================; *** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in SetTypes; Cannot open UFF.prm; obgen: could not setup force field.; `. Since I compile packages for GNU/Linux distribution Rosa Linux, where I find the file diff to apply?. ![OpenBabelError](https://github.com/user-attachments/assets/94fbe4f6-8c48-40c2-a201-bb48d8b5b8b7)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728
https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728:137,Availability,Error,Error,137,"Hi, same error here. How do I fix it?. `obgen MRTX1719_2D.sdf -ff UFF > MRTX1719_3D.sdf ; ==============================; *** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in SetTypes; Cannot open UFF.prm; obgen: could not setup force field.; `. Since I compile packages for GNU/Linux distribution Rosa Linux, where I find the file diff to apply?. ![OpenBabelError](https://github.com/user-attachments/assets/94fbe4f6-8c48-40c2-a201-bb48d8b5b8b7)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728
https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728:246,Availability,Error,Error,246,"Hi, same error here. How do I fix it?. `obgen MRTX1719_2D.sdf -ff UFF > MRTX1719_3D.sdf ; ==============================; *** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in SetTypes; Cannot open UFF.prm; obgen: could not setup force field.; `. Since I compile packages for GNU/Linux distribution Rosa Linux, where I find the file diff to apply?. ![OpenBabelError](https://github.com/user-attachments/assets/94fbe4f6-8c48-40c2-a201-bb48d8b5b8b7)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728
https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728:339,Availability,Error,Error,339,"Hi, same error here. How do I fix it?. `obgen MRTX1719_2D.sdf -ff UFF > MRTX1719_3D.sdf ; ==============================; *** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in SetTypes; Cannot open UFF.prm; obgen: could not setup force field.; `. Since I compile packages for GNU/Linux distribution Rosa Linux, where I find the file diff to apply?. ![OpenBabelError](https://github.com/user-attachments/assets/94fbe4f6-8c48-40c2-a201-bb48d8b5b8b7)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728
https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728:146,Performance,Load,LoadFragments,146,"Hi, same error here. How do I fix it?. `obgen MRTX1719_2D.sdf -ff UFF > MRTX1719_3D.sdf ; ==============================; *** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in SetTypes; Cannot open UFF.prm; obgen: could not setup force field.; `. Since I compile packages for GNU/Linux distribution Rosa Linux, where I find the file diff to apply?. ![OpenBabelError](https://github.com/user-attachments/assets/94fbe4f6-8c48-40c2-a201-bb48d8b5b8b7)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728
https://github.com/openbabel/openbabel/issues/2614#issuecomment-1661767131:1446,Availability,Error,Error,1446,"According to the documentation, not all elements are covered yet. To quote:. > Right now there is only limited support for element perception. It works for elements with one letter symbols if the atomtype starts with the same letter. source: https://open-babel.readthedocs.io/en/latest/FileFormats/GRO_format.html. Let's say I generate a .gro about diethyl ether by. ```shell; $ obabel -:""CCOCC"" -h --gen3d -ogro. 15; 1UNL C 1 0.095 -0.007 0.005; 1UNL C 2 0.247 -0.010 0.002; 1UNL O 3 0.297 0.089 0.093; 1UNL C 4 0.439 0.091 0.094; 1UNL C 5 0.486 0.197 0.191; 1UNL H 6 0.054 -0.082 -0.063; 1UNL H 7 0.058 0.092 -0.024; 1UNL H 8 0.058 -0.027 0.106; 1UNL H 9 0.283 0.012 -0.099; 1UNL H 10 0.283 -0.109 0.033; 1UNL H 11 0.477 0.113 -0.006; 1UNL H 12 0.477 -0.007 0.126; 1UNL H 13 0.448 0.296 0.162; 1UNL H 14 0.595 0.201 0.195; 1UNL H 15 0.448 0.177 0.292; 0.00000 0.00000 0.00000; 1 molecule converted; ```. As a permanent record (file `ether.gro.txt` attached below), this works fine for subsequent edits by obabel (e.g. conversion to .xyz). Substitution of the first atom entry to `C1` (see `ether_modified.gro.txt` attached) does not matter. Introduction of `Be` as second does not stop the conversion, however yields an .xyz with `B` instead of `Be`. An additional edit of atom 3 to either `Li`, `Mg`, `Na`, `Ca`, `Fe`, `Cl`, or `Br` currently yields. ```shell; $ obabel ether_modified.gro -oxyz; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; ```. equally in an instance of openbabel as provided by Linux Debian 13/trixie (branch testing, version 3.1.1 -- Jan 4 2023 -- 09:58:24). [ether_modified.gro.txt](https://github.com/openbabel/openbabel/files/12237940/ether_modified.gro.txt); [ether.gro.txt](https://github.com/openbabel/openbabel/files/12237942/ether.gro.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1661767131
https://github.com/openbabel/openbabel/issues/2614#issuecomment-1661767131:1608,Testability,test,testing,1608,"According to the documentation, not all elements are covered yet. To quote:. > Right now there is only limited support for element perception. It works for elements with one letter symbols if the atomtype starts with the same letter. source: https://open-babel.readthedocs.io/en/latest/FileFormats/GRO_format.html. Let's say I generate a .gro about diethyl ether by. ```shell; $ obabel -:""CCOCC"" -h --gen3d -ogro. 15; 1UNL C 1 0.095 -0.007 0.005; 1UNL C 2 0.247 -0.010 0.002; 1UNL O 3 0.297 0.089 0.093; 1UNL C 4 0.439 0.091 0.094; 1UNL C 5 0.486 0.197 0.191; 1UNL H 6 0.054 -0.082 -0.063; 1UNL H 7 0.058 0.092 -0.024; 1UNL H 8 0.058 -0.027 0.106; 1UNL H 9 0.283 0.012 -0.099; 1UNL H 10 0.283 -0.109 0.033; 1UNL H 11 0.477 0.113 -0.006; 1UNL H 12 0.477 -0.007 0.126; 1UNL H 13 0.448 0.296 0.162; 1UNL H 14 0.595 0.201 0.195; 1UNL H 15 0.448 0.177 0.292; 0.00000 0.00000 0.00000; 1 molecule converted; ```. As a permanent record (file `ether.gro.txt` attached below), this works fine for subsequent edits by obabel (e.g. conversion to .xyz). Substitution of the first atom entry to `C1` (see `ether_modified.gro.txt` attached) does not matter. Introduction of `Be` as second does not stop the conversion, however yields an .xyz with `B` instead of `Be`. An additional edit of atom 3 to either `Li`, `Mg`, `Na`, `Ca`, `Fe`, `Cl`, or `Br` currently yields. ```shell; $ obabel ether_modified.gro -oxyz; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; ```. equally in an instance of openbabel as provided by Linux Debian 13/trixie (branch testing, version 3.1.1 -- Jan 4 2023 -- 09:58:24). [ether_modified.gro.txt](https://github.com/openbabel/openbabel/files/12237940/ether_modified.gro.txt); [ether.gro.txt](https://github.com/openbabel/openbabel/files/12237942/ether.gro.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1661767131
https://github.com/openbabel/openbabel/issues/2614#issuecomment-1662038070:1535,Availability,Error,Error,1535,"ntation, not all elements are covered yet. To quote:; > ; > > Right now there is only limited support for element perception. It works for elements with one letter symbols if the atomtype starts with the same letter.; > ; > source: https://open-babel.readthedocs.io/en/latest/FileFormats/GRO_format.html; > ; > Let's say I generate a .gro about diethyl ether by; > ; > ```shell; > $ obabel -:""CCOCC"" -h --gen3d -ogro; > ; > 15; > 1UNL C 1 0.095 -0.007 0.005; > 1UNL C 2 0.247 -0.010 0.002; > 1UNL O 3 0.297 0.089 0.093; > 1UNL C 4 0.439 0.091 0.094; > 1UNL C 5 0.486 0.197 0.191; > 1UNL H 6 0.054 -0.082 -0.063; > 1UNL H 7 0.058 0.092 -0.024; > 1UNL H 8 0.058 -0.027 0.106; > 1UNL H 9 0.283 0.012 -0.099; > 1UNL H 10 0.283 -0.109 0.033; > 1UNL H 11 0.477 0.113 -0.006; > 1UNL H 12 0.477 -0.007 0.126; > 1UNL H 13 0.448 0.296 0.162; > 1UNL H 14 0.595 0.201 0.195; > 1UNL H 15 0.448 0.177 0.292; > 0.00000 0.00000 0.00000; > 1 molecule converted; > ```; > ; > As a permanent record (file `ether.gro.txt` attached below), this works fine for subsequent edits by obabel (e.g. conversion to .xyz). Substitution of the first atom entry to `C1` (see `ether_modified.gro.txt` attached) does not matter. Introduction of `Be` as second does not stop the conversion, however yields an .xyz with `B` instead of `Be`. An additional edit of atom 3 to either `Li`, `Mg`, `Na`, `Ca`, `Fe`, `Cl`, or `Br` currently yields; > ; > ```shell; > $ obabel ether_modified.gro -oxyz; > ==============================; > *** Open Babel Error in Convert; > Convert failed with an exception; > 0 molecules converted; > ```; > ; > equally in an instance of openbabel as provided by Linux Debian 13/trixie (branch testing, version 3.1.1 -- Jan 4 2023 -- 09:58:24).; > ; > [ether_modified.gro.txt](https://github.com/openbabel/openbabel/files/12237940/ether_modified.gro.txt) [ether.gro.txt](https://github.com/openbabel/openbabel/files/12237942/ether.gro.txt). Thank you~ I understand. May I ask if it will be fixed in the future?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1662038070
https://github.com/openbabel/openbabel/issues/2614#issuecomment-1662038070:1709,Testability,test,testing,1709,"ntation, not all elements are covered yet. To quote:; > ; > > Right now there is only limited support for element perception. It works for elements with one letter symbols if the atomtype starts with the same letter.; > ; > source: https://open-babel.readthedocs.io/en/latest/FileFormats/GRO_format.html; > ; > Let's say I generate a .gro about diethyl ether by; > ; > ```shell; > $ obabel -:""CCOCC"" -h --gen3d -ogro; > ; > 15; > 1UNL C 1 0.095 -0.007 0.005; > 1UNL C 2 0.247 -0.010 0.002; > 1UNL O 3 0.297 0.089 0.093; > 1UNL C 4 0.439 0.091 0.094; > 1UNL C 5 0.486 0.197 0.191; > 1UNL H 6 0.054 -0.082 -0.063; > 1UNL H 7 0.058 0.092 -0.024; > 1UNL H 8 0.058 -0.027 0.106; > 1UNL H 9 0.283 0.012 -0.099; > 1UNL H 10 0.283 -0.109 0.033; > 1UNL H 11 0.477 0.113 -0.006; > 1UNL H 12 0.477 -0.007 0.126; > 1UNL H 13 0.448 0.296 0.162; > 1UNL H 14 0.595 0.201 0.195; > 1UNL H 15 0.448 0.177 0.292; > 0.00000 0.00000 0.00000; > 1 molecule converted; > ```; > ; > As a permanent record (file `ether.gro.txt` attached below), this works fine for subsequent edits by obabel (e.g. conversion to .xyz). Substitution of the first atom entry to `C1` (see `ether_modified.gro.txt` attached) does not matter. Introduction of `Be` as second does not stop the conversion, however yields an .xyz with `B` instead of `Be`. An additional edit of atom 3 to either `Li`, `Mg`, `Na`, `Ca`, `Fe`, `Cl`, or `Br` currently yields; > ; > ```shell; > $ obabel ether_modified.gro -oxyz; > ==============================; > *** Open Babel Error in Convert; > Convert failed with an exception; > 0 molecules converted; > ```; > ; > equally in an instance of openbabel as provided by Linux Debian 13/trixie (branch testing, version 3.1.1 -- Jan 4 2023 -- 09:58:24).; > ; > [ether_modified.gro.txt](https://github.com/openbabel/openbabel/files/12237940/ether_modified.gro.txt) [ether.gro.txt](https://github.com/openbabel/openbabel/files/12237942/ether.gro.txt). Thank you~ I understand. May I ask if it will be fixed in the future?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1662038070
https://github.com/openbabel/openbabel/issues/2614#issuecomment-1664646094:641,Availability,avail,available,641,"> Thank you~ I understand. May I ask if it will be fixed in the future? . Sorry, I do not know when this will be corrected. Maybe one of the maintainers reads this thread and can easily identify the file(s) to adjust. Meanwhile, maybe there is an other converter than openbabel known among the users of gromacs (maybe in a user list, perhaps on [mattermodelling.se](https://mattermodeling.stackexchange.com/), they use a dedicated tag `gromacs` to highlight questions specific to this program ([81 examples](https://mattermodeling.stackexchange.com/questions/tagged/gromacs), so far). Else, [Jmol](https://jmol.sourceforge.net/) is a freely available structure viewer which can visualize your model structure and write both images as well as export into a couple of other formats from the program's console (File -> Console) by a command in pattern of . ```; write ""structure.png"";; write ""structure.xyz"";; ```. ![structure](https://github.com/openbabel/openbabel/assets/60490931/4ad8a53a-c31b-4899-9508-7b5480324152). [structure.xyz.txt](https://github.com/openbabel/openbabel/files/12255050/structure.xyz.txt); [structure.pdb.txt](https://github.com/openbabel/openbabel/files/12255073/structure.pdb.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1664646094
https://github.com/openbabel/openbabel/issues/2614#issuecomment-1664940153:662,Availability,avail,available,662,"> > Thank you~ I understand. May I ask if it will be fixed in the future?; > ; > Sorry, I do not know when this will be corrected.; > ; > Maybe one of the maintainers reads this thread and can easily identify the file(s) to adjust.; > ; > Meanwhile, maybe there is an other converter than openbabel known among the users of gromacs (maybe in a user list, perhaps on [mattermodelling.se](https://mattermodeling.stackexchange.com/), they use a dedicated tag `gromacs` to highlight questions specific to this program ([81 examples](https://mattermodeling.stackexchange.com/questions/tagged/gromacs), so far). Else, [Jmol](https://jmol.sourceforge.net/) is a freely available structure viewer which can visualize your model structure and write both images as well as export into a couple of other formats from the program's console (File -> Console) by a command in pattern of; > ; > ```; > write ""structure.png"";; > write ""structure.xyz"";; > ```; > ; > ![structure](https://user-images.githubusercontent.com/60490931/258236654-4ad8a53a-c31b-4899-9508-7b5480324152.png); > ; > [structure.xyz.txt](https://github.com/openbabel/openbabel/files/12255050/structure.xyz.txt) [structure.pdb.txt](https://github.com/openbabel/openbabel/files/12255073/structure.pdb.txt). Thank you for your reply and advice🙏🙏🙏. I will try another way to finish my scenario.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1664940153
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1664319416:5,Performance,load,loading,5,I am loading two modules : cmake/3.19.7 and gcc/7.2.0,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1664319416
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1665272020:57,Availability,error,error,57,"If I change the compiler from` gcc to intel/2015.6`, the error comes again as following : ; ![image](https://github.com/openbabel/openbabel/assets/132712537/64c13d6f-2ba9-49da-89db-3143cd0fd236); Suggest please",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1665272020
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1665274979:50,Deployability,install,installed,50,"However, I could find the missing library present/installed already in my HPC at :` /usr/lib/i386-linux-gnu/libstdc++.so.6` ; Do I need to export the library path?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1665274979
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:195,Availability,error,error,195,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:320,Availability,error,error,320,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:434,Availability,error,error,434,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:548,Availability,error,error,548,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:662,Availability,error,error,662,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:896,Availability,error,error,896,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:1149,Availability,error,error,1149,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:1400,Availability,error,error,1400,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:1647,Availability,error,error,1647,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:1755,Availability,Error,Error,1755,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:1814,Availability,Error,Error,1814,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566:1841,Availability,Error,Error,1841,I am still unable to cross pa. > I am getting following issue while building the openbabel version: :; > ; > ```; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:70:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/include/openbabel/typer.h:84:1: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:107:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:108:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:109:10: error: ‘thread_local’ does not name a type; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘char* OpenBabel::OBAtom::GetType()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:473:9: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘unsigned int OpenBabel::OBAtom::GetHyb() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:500:7: error: ‘atomtyper’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘double OpenBabel::OBAtom::GetPartialCharge()’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:547:9: error: ‘phmodel’ was not declared in this scope; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp: In member function ‘bool OpenBabel::OBAtom::IsAromatic() const’:; > /home/admin/software/openbabel-openbabel-3-1-1/src/atom.cpp:778:7: error: ‘aromtyper’ was not declared in this scope; > make[2]: *** [src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; > make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; > make: *** [all] Error 2; > ```; > ; > Please advise. I am still stuck at this point. Please help me to resolve the issue,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1669723566
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670868568:55,Availability,error,error,55,"I'm no expert in compiling, but you stated a different error when you used the intel compiler than when you used gcc. Is that so? Or do you see the CMake error also for gcc?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670868568
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670868568:154,Availability,error,error,154,"I'm no expert in compiling, but you stated a different error when you used the intel compiler than when you used gcc. Is that so? Or do you see the CMake error also for gcc?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670868568
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670909490:22,Availability,error,error,22,"Yes, I am getting the error even though I have loaded gcc module. Any help would be really appreciated. 'Thread_local' related problem I looked through all possible resources but could not find any solution in regards to this openbabel install.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670909490
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670909490:236,Deployability,install,install,236,"Yes, I am getting the error even though I have loaded gcc module. Any help would be really appreciated. 'Thread_local' related problem I looked through all possible resources but could not find any solution in regards to this openbabel install.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670909490
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670909490:47,Performance,load,loaded,47,"Yes, I am getting the error even though I have loaded gcc module. Any help would be really appreciated. 'Thread_local' related problem I looked through all possible resources but could not find any solution in regards to this openbabel install.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670909490
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670941667:4,Availability,error,error,4,The error does not state anything about libstc++. Following error :; ![image](https://github.com/openbabel/openbabel/assets/132712537/dd9b7af1-c9e3-48e7-ad54-38b5987bd0c4),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670941667
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670941667:60,Availability,error,error,60,The error does not state anything about libstc++. Following error :; ![image](https://github.com/openbabel/openbabel/assets/132712537/dd9b7af1-c9e3-48e7-ad54-38b5987bd0c4),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670941667
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670944817:23,Availability,error,error,23,I am meaning the above error where libstc++ does not appear. So is that also related to libstc++ then?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670944817
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670946780:16,Availability,error,error,16,"If you have the error from CMake that says it doesn't find libstc++, and thread_local is a part of c++ I would guess that it's related yes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670946780
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670949515:4,Availability,error,error,4,"The error from CMake with libstc++ is gone now and only the thread_local error seems to retain. So, I need to mention the path of libstc++ desired versions then?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670949515
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670949515:73,Availability,error,error,73,"The error from CMake with libstc++ is gone now and only the thread_local error seems to retain. So, I need to mention the path of libstc++ desired versions then?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670949515
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670954250:35,Availability,error,error,35,"I asked above if you had the CMake error also with gcc (and you answered yes), if you didn't then you can ignore my following comments.; (But there still seems to be a problem with your compilation environment since thread_local is a c++ thing, not an OpenBabel thing.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670954250
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202:13,Availability,error,error,13,I posted two error and sorry that might have caused confusion. libstc++ error is gone when I load gcc module and only `thread_local does not name not a type` error is still showing.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202:72,Availability,error,error,72,I posted two error and sorry that might have caused confusion. libstc++ error is gone when I load gcc module and only `thread_local does not name not a type` error is still showing.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202:158,Availability,error,error,158,I posted two error and sorry that might have caused confusion. libstc++ error is gone when I load gcc module and only `thread_local does not name not a type` error is still showing.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202:93,Performance,load,load,93,I posted two error and sorry that might have caused confusion. libstc++ error is gone when I load gcc module and only `thread_local does not name not a type` error is still showing.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1671003848:135,Availability,error,error,135,Hi; I am loading gcc version 7.2.0 but still with CMake Openbabel selects gcc version 4.7.2 (Debian 4.7.2-5). Can that be the cause of error and I need to ensure gcc 7.2.0 is being taken for compilation?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1671003848
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1671003848:9,Performance,load,loading,9,Hi; I am loading gcc version 7.2.0 but still with CMake Openbabel selects gcc version 4.7.2 (Debian 4.7.2-5). Can that be the cause of error and I need to ensure gcc 7.2.0 is being taken for compilation?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1671003848
https://github.com/openbabel/openbabel/issues/2615#issuecomment-1671325892:27,Availability,error,error,27,> Can that be the cause of error and I need to ensure gcc 7.2.0 is being taken for compilation?. Yes. GCC 4.7 is ancient (over 10 years old).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1671325892
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666031206:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666031206
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907:10,Deployability,integrat,integration,10,"Regarding integration into OB (or any other open source project) t's usual to discuss planned large changes before the work is started so as to receive feedback and address concerns or consider alternatives. In particular, modifications to core classes are considered carefully. Creating a new canonical nomenclature is a very interesting project though, and impressive as an end of degree project. However it probably merits quite a bit of discussion both within OB and the wider cheminf community we are part of before it is integrated. Having a reference implementation provides a basis for that discussion",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907:527,Deployability,integrat,integrated,527,"Regarding integration into OB (or any other open source project) t's usual to discuss planned large changes before the work is started so as to receive feedback and address concerns or consider alternatives. In particular, modifications to core classes are considered carefully. Creating a new canonical nomenclature is a very interesting project though, and impressive as an end of degree project. However it probably merits quite a bit of discussion both within OB and the wider cheminf community we are part of before it is integrated. Having a reference implementation provides a basis for that discussion",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907:10,Integrability,integrat,integration,10,"Regarding integration into OB (or any other open source project) t's usual to discuss planned large changes before the work is started so as to receive feedback and address concerns or consider alternatives. In particular, modifications to core classes are considered carefully. Creating a new canonical nomenclature is a very interesting project though, and impressive as an end of degree project. However it probably merits quite a bit of discussion both within OB and the wider cheminf community we are part of before it is integrated. Having a reference implementation provides a basis for that discussion",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907:527,Integrability,integrat,integrated,527,"Regarding integration into OB (or any other open source project) t's usual to discuss planned large changes before the work is started so as to receive feedback and address concerns or consider alternatives. In particular, modifications to core classes are considered carefully. Creating a new canonical nomenclature is a very interesting project though, and impressive as an end of degree project. However it probably merits quite a bit of discussion both within OB and the wider cheminf community we are part of before it is integrated. Having a reference implementation provides a basis for that discussion",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907:152,Usability,feedback,feedback,152,"Regarding integration into OB (or any other open source project) t's usual to discuss planned large changes before the work is started so as to receive feedback and address concerns or consider alternatives. In particular, modifications to core classes are considered carefully. Creating a new canonical nomenclature is a very interesting project though, and impressive as an end of degree project. However it probably merits quite a bit of discussion both within OB and the wider cheminf community we are part of before it is integrated. Having a reference implementation provides a basis for that discussion",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666891347:5,Availability,echo,echo,5,"I'll echo @baoilleach - these look very interesting, and I'd be happy to see improved handling of organometallic / haptic structures. But let's talk about the approach and alternatives on the list. You mentioned end-of-degree project. Are you willing to work a bit more on this?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666891347
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912:699,Availability,avail,available,699,"Referring to both comments, being a final degree project there were some time limits I had to stick to in order to finish it and make the changes (in about 3 to 5 months, including learning chemistry and understanding the base code from scratch). ; That's why we were not really considering to include too much external feedback, which could have made this process more complex. The project had specific goals, and in that time frame I came up with these solutions. I am by no means an expert in chemistry and my knowledge is quite scarce.; So you will probably find many things that can be improved, done in a more efficient way or better approaches that I might not have thought of. I'm not quite available right now and I am planning on doing other things in the near future. But I could dedicate some of my free time to it, and slowly modify the code until its acceptable. So I am at your disposal, I will need some guidance for this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912:616,Energy Efficiency,efficient,efficient,616,"Referring to both comments, being a final degree project there were some time limits I had to stick to in order to finish it and make the changes (in about 3 to 5 months, including learning chemistry and understanding the base code from scratch). ; That's why we were not really considering to include too much external feedback, which could have made this process more complex. The project had specific goals, and in that time frame I came up with these solutions. I am by no means an expert in chemistry and my knowledge is quite scarce.; So you will probably find many things that can be improved, done in a more efficient way or better approaches that I might not have thought of. I'm not quite available right now and I am planning on doing other things in the near future. But I could dedicate some of my free time to it, and slowly modify the code until its acceptable. So I am at your disposal, I will need some guidance for this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912:181,Usability,learn,learning,181,"Referring to both comments, being a final degree project there were some time limits I had to stick to in order to finish it and make the changes (in about 3 to 5 months, including learning chemistry and understanding the base code from scratch). ; That's why we were not really considering to include too much external feedback, which could have made this process more complex. The project had specific goals, and in that time frame I came up with these solutions. I am by no means an expert in chemistry and my knowledge is quite scarce.; So you will probably find many things that can be improved, done in a more efficient way or better approaches that I might not have thought of. I'm not quite available right now and I am planning on doing other things in the near future. But I could dedicate some of my free time to it, and slowly modify the code until its acceptable. So I am at your disposal, I will need some guidance for this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912:320,Usability,feedback,feedback,320,"Referring to both comments, being a final degree project there were some time limits I had to stick to in order to finish it and make the changes (in about 3 to 5 months, including learning chemistry and understanding the base code from scratch). ; That's why we were not really considering to include too much external feedback, which could have made this process more complex. The project had specific goals, and in that time frame I came up with these solutions. I am by no means an expert in chemistry and my knowledge is quite scarce.; So you will probably find many things that can be improved, done in a more efficient way or better approaches that I might not have thought of. I'm not quite available right now and I am planning on doing other things in the near future. But I could dedicate some of my free time to it, and slowly modify the code until its acceptable. So I am at your disposal, I will need some guidance for this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912
https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912:920,Usability,guid,guidance,920,"Referring to both comments, being a final degree project there were some time limits I had to stick to in order to finish it and make the changes (in about 3 to 5 months, including learning chemistry and understanding the base code from scratch). ; That's why we were not really considering to include too much external feedback, which could have made this process more complex. The project had specific goals, and in that time frame I came up with these solutions. I am by no means an expert in chemistry and my knowledge is quite scarce.; So you will probably find many things that can be improved, done in a more efficient way or better approaches that I might not have thought of. I'm not quite available right now and I am planning on doing other things in the near future. But I could dedicate some of my free time to it, and slowly modify the code until its acceptable. So I am at your disposal, I will need some guidance for this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912
https://github.com/openbabel/openbabel/issues/2617#issuecomment-1669029191:148,Energy Efficiency,charge,charges,148,"[Imatinib_later.zip](https://github.com/openbabel/openbabel/files/12288201/Imatinib_later.zip); There was a problem with alignment of pdbqt partial charges, which has been fixed in 3.1.1. See https://github.com/openbabel/openbabel/issues/2595). . But your bug is in RDKit. See https://github.com/rdkit/rdkit/issues/6501",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2617#issuecomment-1669029191
https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476:329,Modifiability,variab,variable,329,The output of `grep PYTHON CMakeCache.txt` is :; ```; PYTHON_BINDINGS:BOOL=ON; PYTHON_EXECUTABLE:FILEPATH=/usr/local/bin/python3.10; PYTHON_INCLUDE_DIR:PATH=/usr/local/include/python3.10; PYTHON_LIBRARY:FILEPATH=/usr/local/lib/libpython3.10.a; PYTHON_LIBRARY_DEBUG:FILEPATH=PYTHON_LIBRARY_DEBUG-NOTFOUND; //ADVANCED property for variable: PYTHON_EXECUTABLE; PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_INCLUDE_DIR; PYTHON_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY; PYTHON_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY_DEBUG; PYTHON_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476
https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476:421,Modifiability,variab,variable,421,The output of `grep PYTHON CMakeCache.txt` is :; ```; PYTHON_BINDINGS:BOOL=ON; PYTHON_EXECUTABLE:FILEPATH=/usr/local/bin/python3.10; PYTHON_INCLUDE_DIR:PATH=/usr/local/include/python3.10; PYTHON_LIBRARY:FILEPATH=/usr/local/lib/libpython3.10.a; PYTHON_LIBRARY_DEBUG:FILEPATH=PYTHON_LIBRARY_DEBUG-NOTFOUND; //ADVANCED property for variable: PYTHON_EXECUTABLE; PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_INCLUDE_DIR; PYTHON_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY; PYTHON_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY_DEBUG; PYTHON_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476
https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476:515,Modifiability,variab,variable,515,The output of `grep PYTHON CMakeCache.txt` is :; ```; PYTHON_BINDINGS:BOOL=ON; PYTHON_EXECUTABLE:FILEPATH=/usr/local/bin/python3.10; PYTHON_INCLUDE_DIR:PATH=/usr/local/include/python3.10; PYTHON_LIBRARY:FILEPATH=/usr/local/lib/libpython3.10.a; PYTHON_LIBRARY_DEBUG:FILEPATH=PYTHON_LIBRARY_DEBUG-NOTFOUND; //ADVANCED property for variable: PYTHON_EXECUTABLE; PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_INCLUDE_DIR; PYTHON_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY; PYTHON_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY_DEBUG; PYTHON_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476
https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476:601,Modifiability,variab,variable,601,The output of `grep PYTHON CMakeCache.txt` is :; ```; PYTHON_BINDINGS:BOOL=ON; PYTHON_EXECUTABLE:FILEPATH=/usr/local/bin/python3.10; PYTHON_INCLUDE_DIR:PATH=/usr/local/include/python3.10; PYTHON_LIBRARY:FILEPATH=/usr/local/lib/libpython3.10.a; PYTHON_LIBRARY_DEBUG:FILEPATH=PYTHON_LIBRARY_DEBUG-NOTFOUND; //ADVANCED property for variable: PYTHON_EXECUTABLE; PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_INCLUDE_DIR; PYTHON_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY; PYTHON_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY_DEBUG; PYTHON_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476
https://github.com/openbabel/openbabel/issues/2619#issuecomment-1677617400:77,Deployability,release,release,77,Yes - this is now fixed in `HEAD` - not sure how I missed that one. The next release for both OB and Avogadro will fix this.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2619#issuecomment-1677617400
https://github.com/openbabel/openbabel/issues/2620#issuecomment-1680376613:117,Deployability,install,install,117,"By today's perspective, Debian 7/wheezy you report is elder than old stable. If your workflow(s) permit, consider to install and use a newer release (stable branch Debian 12/bookworm, for example).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2620#issuecomment-1680376613
https://github.com/openbabel/openbabel/issues/2620#issuecomment-1680376613:141,Deployability,release,release,141,"By today's perspective, Debian 7/wheezy you report is elder than old stable. If your workflow(s) permit, consider to install and use a newer release (stable branch Debian 12/bookworm, for example).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2620#issuecomment-1680376613
https://github.com/openbabel/openbabel/issues/2622#issuecomment-1695493838:33,Testability,test,test,33,Sure! I want to use Openbabel to test whether a smile molecule ('CCC1=C(SC2=C1SC3=C2N(CC)C4=C3C5=NSN=C5C6=C4N(CC)C7=C6SC8=C7SC(/C=C9C(C%10=C(C\9=C(C#N)/C#N)C=C(F)C(F)=C%10)=O)=C8CC)/C=C%11C(C%12=CC(F)=C(C=C%12C\%11=C(C#N)/C#N)F)=O') is symmetric. But I don't know how to do it with python API. What I want to know is that can you show an example to use openbabel to test the smile. Thank you for your help!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1695493838
https://github.com/openbabel/openbabel/issues/2622#issuecomment-1695493838:366,Testability,test,test,366,Sure! I want to use Openbabel to test whether a smile molecule ('CCC1=C(SC2=C1SC3=C2N(CC)C4=C3C5=NSN=C5C6=C4N(CC)C7=C6SC8=C7SC(/C=C9C(C%10=C(C\9=C(C#N)/C#N)C=C(F)C(F)=C%10)=O)=C8CC)/C=C%11C(C%12=CC(F)=C(C=C%12C\%11=C(C#N)/C#N)F)=O') is symmetric. But I don't know how to do it with python API. What I want to know is that can you show an example to use openbabel to test the smile. Thank you for your help!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1695493838
https://github.com/openbabel/openbabel/issues/2622#issuecomment-1698632019:32,Energy Efficiency,reduce,reduced,32,"@545487677 A SMILES string is a reduced representation of the molecular structure. It describes the atoms' connection and bond orders (on occasion, implicitly) and features of stereochemistry (keyword E/Z, or R/S in CIP rules). It however does not report a specific conformer, i.e. *specific* (x,y,z) atomic coordinates as in an .xyz or a .sdf file are absent. For molecules with conformational flexibility (rings like cyclohexane, rotational free single bonds as in alkyl chains to mention two examples) like your molecule. ![molecule](https://github.com/openbabel/openbabel/assets/19709084/5a161d9c-f9db-4607-a39f-33b6e5d010f9). this is a crucial information missing.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1698632019
https://github.com/openbabel/openbabel/issues/2622#issuecomment-1698720165:899,Testability,test,test,899,"This is how you use OBGraphSym.GetSymmetry:; ```python; from openbabel import openbabel; mol = openbabel.OBMol(); conv = openbabel.OBConversion(); conv.ReadString(mol, 'C1CC2(C1)CC(CC3C2CCC4=CC(=O)CCC34C)O'); conv.SetInFormat('smi'); conv.ReadString(mol, 'C1CC2(C1)CC(CC3C2CCC4=CC(=O)CCC34C)O'); gsym = openbabel.OBGraphSym(mol); symmetry = openbabel.vectorUnsignedInt(); print(gsym.GetSymmetry(symmetry)); print(list(symmetry)); ```; The above will yield the following output:; ```; 19; [4, 10, 19, 10, 11, 14, 8, 17, 15, 9, 6, 16, 7, 13, 2, 5, 12, 18, 3, 1]; ```; I do believe that since the number of atoms in the SMILES and the number of symmetry classes (19) is the same that the molecule doesn't have any symmetry. But note that this is graph symmetries on an atom level. It doesn't mean that the entire molecule is symmetric even if you have symmetries in the graph. So I would advise you to test on several examples to find how to do it best. For the symmetric molecule `CCc(c1)cccc1CC` I get the following:; ```; >>> conv.ReadString(mol, 'CCc(c1)cccc1CC'); True; >>> gsym = openbabel.OBGraphSym(mol); >>> gsym.GetSymmetry(symmetry); 6; >>> list(symmetry); [1, 3, 6, 5, 4, 2, 4, 6, 3, 1]; ```; While `FC(F)(F)c1cc(C)ccc1` will give:; ```; >>> gsym.GetSymmetry(symmetry); 9; >>> mol.NumAtoms(); 11; >>> list(symmetry); [2, 9, 2, 2, 8, 6, 7, 1, 4, 3, 5]; ```; i.e. the three F atoms are symmetric but not the molecule as a whole...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1698720165
https://github.com/openbabel/openbabel/issues/2622#issuecomment-1699386403:97,Safety,detect,detection,97,"The point group is different from the graph symmetry, but yes there is a brute-force point group detection code. In C++. ```; OBMol mol;; OBPointGroup pg;. pg.Setup(&mol);; std::cout << ""Point Group: "" << pg.IdentifyPointGroup() << std::endl;; pg.Symmetrize(&mol);; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1699386403
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:238,Availability,recover,recovery,238,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:431,Availability,recover,recovery,431,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:452,Availability,recover,recovery,452,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:1019,Availability,recover,recovery,1019,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:1091,Availability,recover,recovery,1091,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:271,Energy Efficiency,charge,charges,271,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:313,Energy Efficiency,charge,charges,313,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:357,Energy Efficiency,charge,charge,357,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:604,Integrability,wrap,wrapper,604,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:217,Performance,perform,perform,217,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:238,Safety,recover,recovery,238,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:431,Safety,recover,recovery,431,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:452,Safety,recover,recovery,452,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:1019,Safety,recover,recovery,1019,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:1091,Safety,recover,recovery,1091,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:240,Availability,recover,recovery,240,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:441,Availability,recover,recovery,441,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:464,Availability,recover,recovery,464,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:1062,Availability,recover,recovery,1062,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:1134,Availability,recover,recovery,1134,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:273,Energy Efficiency,charge,charges,273,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:315,Energy Efficiency,charge,charges,315,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:359,Energy Efficiency,charge,charge,359,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:1218,Energy Efficiency,charge,charge,1218,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:640,Integrability,wrap,wrapper,640,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:219,Performance,perform,perform,219,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:240,Safety,recover,recovery,240,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:441,Safety,recover,recovery,441,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:464,Safety,recover,recovery,464,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:1062,Safety,recover,recovery,1062,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:1134,Safety,recover,recovery,1134,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:1008,Availability,error,error,1008,".xyz you want to pass? Starting in line 50, the moderator script includes a `try/except ValueError` clause:. ```python; try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=args.charge); print(Chem.MolToMolBlock(mol)); except ValueError:; print(; ""The attributed global charge by `-c` is incompatible with bond orders assigned.""; ); ```. The (now explicitly assumed) overall neutral molecule. ```shell; $ python xyz2mol_b.py structure.xyz --charge 0; ```. yields the data for a .sdf where as for exemple a net single negative the moderator reports. ```shell; $ python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the «positives» for the same molec",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:1255,Availability,echo,echo,1255,"cept ValueError:; print(; ""The attributed global charge by `-c` is incompatible with bond orders assigned.""; ); ```. The (now explicitly assumed) overall neutral molecule. ```shell; $ python xyz2mol_b.py structure.xyz --charge 0; ```. yields the data for a .sdf where as for exemple a net single negative the moderator reports. ```shell; $ python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the «positives» for the same molecule twice, or even four times negative may be indicative that an automated approach requires supervision and critical inspection. + molecule passing `-c 2`:. ![out_-2](https://github.com/openbabel/openbabel/assets/19709084/a3311e",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:205,Energy Efficiency,charge,charge,205,"@JSLJ23 Well, was is a typical .xyz you want to pass? Starting in line 50, the moderator script includes a `try/except ValueError` clause:. ```python; try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=args.charge); print(Chem.MolToMolBlock(mol)); except ValueError:; print(; ""The attributed global charge by `-c` is incompatible with bond orders assigned.""; ); ```. The (now explicitly assumed) overall neutral molecule. ```shell; $ python xyz2mol_b.py structure.xyz --charge 0; ```. yields the data for a .sdf where as for exemple a net single negative the moderator reports. ```shell; $ python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:217,Energy Efficiency,charge,charge,217,"@JSLJ23 Well, was is a typical .xyz you want to pass? Starting in line 50, the moderator script includes a `try/except ValueError` clause:. ```python; try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=args.charge); print(Chem.MolToMolBlock(mol)); except ValueError:; print(; ""The attributed global charge by `-c` is incompatible with bond orders assigned.""; ); ```. The (now explicitly assumed) overall neutral molecule. ```shell; $ python xyz2mol_b.py structure.xyz --charge 0; ```. yields the data for a .sdf where as for exemple a net single negative the moderator reports. ```shell; $ python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:309,Energy Efficiency,charge,charge,309,"@JSLJ23 Well, was is a typical .xyz you want to pass? Starting in line 50, the moderator script includes a `try/except ValueError` clause:. ```python; try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=args.charge); print(Chem.MolToMolBlock(mol)); except ValueError:; print(; ""The attributed global charge by `-c` is incompatible with bond orders assigned.""; ); ```. The (now explicitly assumed) overall neutral molecule. ```shell; $ python xyz2mol_b.py structure.xyz --charge 0; ```. yields the data for a .sdf where as for exemple a net single negative the moderator reports. ```shell; $ python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:480,Energy Efficiency,charge,charge,480,"@JSLJ23 Well, was is a typical .xyz you want to pass? Starting in line 50, the moderator script includes a `try/except ValueError` clause:. ```python; try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=args.charge); print(Chem.MolToMolBlock(mol)); except ValueError:; print(; ""The attributed global charge by `-c` is incompatible with bond orders assigned.""; ); ```. The (now explicitly assumed) overall neutral molecule. ```shell; $ python xyz2mol_b.py structure.xyz --charge 0; ```. yields the data for a .sdf where as for exemple a net single negative the moderator reports. ```shell; $ python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:663,Energy Efficiency,charge,charge,663,"@JSLJ23 Well, was is a typical .xyz you want to pass? Starting in line 50, the moderator script includes a `try/except ValueError` clause:. ```python; try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=args.charge); print(Chem.MolToMolBlock(mol)); except ValueError:; print(; ""The attributed global charge by `-c` is incompatible with bond orders assigned.""; ); ```. The (now explicitly assumed) overall neutral molecule. ```shell; $ python xyz2mol_b.py structure.xyz --charge 0; ```. yields the data for a .sdf where as for exemple a net single negative the moderator reports. ```shell; $ python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:739,Energy Efficiency,charge,charges,739,"@JSLJ23 Well, was is a typical .xyz you want to pass? Starting in line 50, the moderator script includes a `try/except ValueError` clause:. ```python; try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=args.charge); print(Chem.MolToMolBlock(mol)); except ValueError:; print(; ""The attributed global charge by `-c` is incompatible with bond orders assigned.""; ); ```. The (now explicitly assumed) overall neutral molecule. ```shell; $ python xyz2mol_b.py structure.xyz --charge 0; ```. yields the data for a .sdf where as for exemple a net single negative the moderator reports. ```shell; $ python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:1029,Energy Efficiency,charge,charge,1029,".xyz you want to pass? Starting in line 50, the moderator script includes a `try/except ValueError` clause:. ```python; try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=args.charge); print(Chem.MolToMolBlock(mol)); except ValueError:; print(; ""The attributed global charge by `-c` is incompatible with bond orders assigned.""; ); ```. The (now explicitly assumed) overall neutral molecule. ```shell; $ python xyz2mol_b.py structure.xyz --charge 0; ```. yields the data for a .sdf where as for exemple a net single negative the moderator reports. ```shell; $ python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the «positives» for the same molec",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605
https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:1915,Testability,test,tested,1915," python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the «positives» for the same molecule twice, or even four times negative may be indicative that an automated approach requires supervision and critical inspection. + molecule passing `-c 2`:. ![out_-2](https://github.com/openbabel/openbabel/assets/19709084/a3311e12-0e81-4739-a8c5-03662ea5ea00). + molecule passing `-c 4`. ![out_-4](https://github.com/openbabel/openbabel/assets/19709084/758aa090-2349-4515-8014-6a802d23ab7b). [out_-2.sdf.zip](https://github.com/openbabel/openbabel/files/12467477/out_-2.sdf.zip); [out_-4.sdf.zip](https://github.com/openbabel/openbabel/files/12467478/out_-4.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605
https://github.com/openbabel/openbabel/issues/2624#issuecomment-1706968602:255,Security,validat,validate,255,"@nbehrnd Thank you for the suggestion. I see that it works for this particular case, but is it actually retaining the hydrogen atoms or is it still removing them and then readding them using an internal obabel mechnism?. I am trying to use the formula to validate a specific SMILES dataset, so it is quite important that the hydrogen atoms are ingested as is. P.S. I am @vaitkus, not @merkys. :)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2624#issuecomment-1706968602
https://github.com/openbabel/openbabel/issues/2624#issuecomment-1707883587:370,Energy Efficiency,monitor,monitor,370,"@vaitkus I'm unable to answer how `-h` eventually completes the Hill formula at level of the source code. It were a speculation if functions defined in path `include/openbabel` (e.g., files `atom.h` and `mol.h`) participate here to render the hydrogen atoms explicit, or ones of other files. In absence of knowledge about the C family on my side, perhaps a debugger can monitor processing of the input to probe for retention of hydrogens initially provided. My apologies for accidental use of a tag which belongs to an other user.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2624#issuecomment-1707883587
https://github.com/openbabel/openbabel/issues/2626#issuecomment-1708798053:150,Deployability,install,installed,150,"`obrms` will only be built if eigen3 is found (also, MINIMAL_BUILD needs to be off, but this is the default). If cmake isn't finding eigen3 and it is installed, specify EIGEN3_INCLUDE_DIR directly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2626#issuecomment-1708798053
https://github.com/openbabel/openbabel/issues/2626#issuecomment-1708866210:55,Deployability,install,installed,55,"Thank you Pr.@dkoes for your response. Indeed I hadn't installed eigen3. After eigen3 had been installed, obrms was found.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2626#issuecomment-1708866210
https://github.com/openbabel/openbabel/issues/2626#issuecomment-1708866210:95,Deployability,install,installed,95,"Thank you Pr.@dkoes for your response. Indeed I hadn't installed eigen3. After eigen3 had been installed, obrms was found.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2626#issuecomment-1708866210
https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713233850:135,Deployability,install,installation,135,"No, he meant that you use the Mambaforge (or Anaconda/miniconda) python distribution (see https://mamba.readthedocs.io/en/latest/mamba-installation.html).; Then the openbabel installation is an easy command `mamba install openbabel` or `conda install -c conda-forge openbabel`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713233850
https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713233850:175,Deployability,install,installation,175,"No, he meant that you use the Mambaforge (or Anaconda/miniconda) python distribution (see https://mamba.readthedocs.io/en/latest/mamba-installation.html).; Then the openbabel installation is an easy command `mamba install openbabel` or `conda install -c conda-forge openbabel`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713233850
https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713233850:214,Deployability,install,install,214,"No, he meant that you use the Mambaforge (or Anaconda/miniconda) python distribution (see https://mamba.readthedocs.io/en/latest/mamba-installation.html).; Then the openbabel installation is an easy command `mamba install openbabel` or `conda install -c conda-forge openbabel`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713233850
https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713233850:243,Deployability,install,install,243,"No, he meant that you use the Mambaforge (or Anaconda/miniconda) python distribution (see https://mamba.readthedocs.io/en/latest/mamba-installation.html).; Then the openbabel installation is an easy command `mamba install openbabel` or `conda install -c conda-forge openbabel`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713233850
https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713607102:160,Availability,avail,available,160,"@ivzzognam [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) is one alternative to circumnavigate the currently present problem of openbabel 3.1.1.1 available from PyPI. In the previous week, I faced a similar problem for an instance of Linux Xubuntu 22.04 LTS Jammy to use [my fork](https://github.com/nbehrnd/RegioSQM) of Jan Jensen's RegioSQM. In this particular case, installation of openbabel via `apt` was not possible (for user privileges), but the creation of a virtual environment for Python 3.10.2 and subsequent `pip3 install -r requirements.txt` with a `requirements.txt` file of. ```; numpy>=1.24.2; openbabel-wheel==3.1.1.17; rdkit>=2022.09.3; ```. allowed to use it. Contrasting to your framework of phytebyte, RegioSQM however works locally without interaction with a database. Here, openbabel's task is to convert geometries into input files for subsequent computations with MOPAC.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713607102
https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713607102:383,Deployability,install,installation,383,"@ivzzognam [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) is one alternative to circumnavigate the currently present problem of openbabel 3.1.1.1 available from PyPI. In the previous week, I faced a similar problem for an instance of Linux Xubuntu 22.04 LTS Jammy to use [my fork](https://github.com/nbehrnd/RegioSQM) of Jan Jensen's RegioSQM. In this particular case, installation of openbabel via `apt` was not possible (for user privileges), but the creation of a virtual environment for Python 3.10.2 and subsequent `pip3 install -r requirements.txt` with a `requirements.txt` file of. ```; numpy>=1.24.2; openbabel-wheel==3.1.1.17; rdkit>=2022.09.3; ```. allowed to use it. Contrasting to your framework of phytebyte, RegioSQM however works locally without interaction with a database. Here, openbabel's task is to convert geometries into input files for subsequent computations with MOPAC.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713607102
https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713607102:540,Deployability,install,install,540,"@ivzzognam [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) is one alternative to circumnavigate the currently present problem of openbabel 3.1.1.1 available from PyPI. In the previous week, I faced a similar problem for an instance of Linux Xubuntu 22.04 LTS Jammy to use [my fork](https://github.com/nbehrnd/RegioSQM) of Jan Jensen's RegioSQM. In this particular case, installation of openbabel via `apt` was not possible (for user privileges), but the creation of a virtual environment for Python 3.10.2 and subsequent `pip3 install -r requirements.txt` with a `requirements.txt` file of. ```; numpy>=1.24.2; openbabel-wheel==3.1.1.17; rdkit>=2022.09.3; ```. allowed to use it. Contrasting to your framework of phytebyte, RegioSQM however works locally without interaction with a database. Here, openbabel's task is to convert geometries into input files for subsequent computations with MOPAC.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2627#issuecomment-1713607102
https://github.com/openbabel/openbabel/issues/2628#issuecomment-1714042614:52,Security,access,access,52,"Sorry, what is the particular site you're trying to access with curl, and how does it connect to openbabel? Can you be a bit more specific?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628#issuecomment-1714042614
https://github.com/openbabel/openbabel/issues/2628#issuecomment-1715229411:0,Availability,Down,Download,0,Download the 'FooDB SQL file' from [http://foodb.ca/downloads](http://foodb.ca/downloads) ; This is the site i need to use,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628#issuecomment-1715229411
https://github.com/openbabel/openbabel/issues/2628#issuecomment-1715229411:52,Availability,down,downloads,52,Download the 'FooDB SQL file' from [http://foodb.ca/downloads](http://foodb.ca/downloads) ; This is the site i need to use,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628#issuecomment-1715229411
https://github.com/openbabel/openbabel/issues/2628#issuecomment-1715229411:79,Availability,down,downloads,79,Download the 'FooDB SQL file' from [http://foodb.ca/downloads](http://foodb.ca/downloads) ; This is the site i need to use,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628#issuecomment-1715229411
https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436:151,Deployability,configurat,configuration,151,"I disagree that the depiction lacks an essential detail. If one departs from the Newman projection / steering wheel like approach to assign *R* or *S* configuration within the CIP system (e.g. [here](https://www.organicchemistrytutor.com/topic/cip-rules-and-r-s-stereodescriptors/), the illustration indicates oxygen of the ether, carbon atom of the chiral centre and the two adjacent quaternary carbon atoms below the carbon atom of the methyl group. The trained eye (training by building *physical* molecular models ([example](https://hgs.maruzen.info/products/1002alpha-organic-chemistry-introductory-set)), or/and with visualizing programs (e.g. [Avogadro](https://two.avogadro.cc/)) recalls that a conformation close to a tetrahedral geometry *similar* (not identical) to the one of [methane](https://en.wikipedia.org/wiki/Methane) is more likely, i.e. oxygen of ether and the two quaternary carbons next to the centre are in one level, while the carbon at the chiral centre is in one slightly above; however these four not as much close as the apex to the observer, the carbon of the methyl group:. ![highlight_plane_in_common](https://github.com/openbabel/openbabel/assets/60490931/f72cf4bd-e7e8-4c3e-80fb-bd187034ea29). ChemDraw (sample page [here](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#)) equally reads the SMILES string `Clc1ccc(cc1)[C@](OCC[C@@H]2N(C)CCC2)(c3ccccc3)C` (structure -> load smiles) to depict the molecular structure as. ![chemdraw_js](https://github.com/openbabel/openbabel/assets/60490931/540c81b6-40c5-4e84-b8be-8105a1f646da). The presence of a bold wedge (or the dash) does not always require simultaneous presence of the other (carbon on stereogenic centre alpha to nitrogen). Without doubt, however, it can assist the reader (example by [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html)):. ![cdkdepict](https://github.com/openbabel/openbabel/assets/60490931/5b3ee60d-fca8-432b-bafe-d47bbe332d93). Side note: You might consider an upgra",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436
https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436:1996,Deployability,upgrade,upgrade,1996,"e Newman projection / steering wheel like approach to assign *R* or *S* configuration within the CIP system (e.g. [here](https://www.organicchemistrytutor.com/topic/cip-rules-and-r-s-stereodescriptors/), the illustration indicates oxygen of the ether, carbon atom of the chiral centre and the two adjacent quaternary carbon atoms below the carbon atom of the methyl group. The trained eye (training by building *physical* molecular models ([example](https://hgs.maruzen.info/products/1002alpha-organic-chemistry-introductory-set)), or/and with visualizing programs (e.g. [Avogadro](https://two.avogadro.cc/)) recalls that a conformation close to a tetrahedral geometry *similar* (not identical) to the one of [methane](https://en.wikipedia.org/wiki/Methane) is more likely, i.e. oxygen of ether and the two quaternary carbons next to the centre are in one level, while the carbon at the chiral centre is in one slightly above; however these four not as much close as the apex to the observer, the carbon of the methyl group:. ![highlight_plane_in_common](https://github.com/openbabel/openbabel/assets/60490931/f72cf4bd-e7e8-4c3e-80fb-bd187034ea29). ChemDraw (sample page [here](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#)) equally reads the SMILES string `Clc1ccc(cc1)[C@](OCC[C@@H]2N(C)CCC2)(c3ccccc3)C` (structure -> load smiles) to depict the molecular structure as. ![chemdraw_js](https://github.com/openbabel/openbabel/assets/60490931/540c81b6-40c5-4e84-b8be-8105a1f646da). The presence of a bold wedge (or the dash) does not always require simultaneous presence of the other (carbon on stereogenic centre alpha to nitrogen). Without doubt, however, it can assist the reader (example by [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html)):. ![cdkdepict](https://github.com/openbabel/openbabel/assets/60490931/5b3ee60d-fca8-432b-bafe-d47bbe332d93). Side note: You might consider an upgrade of the operating system (Debian 12/bookworm) and openbabel (version 3.1.1).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436
https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436:151,Modifiability,config,configuration,151,"I disagree that the depiction lacks an essential detail. If one departs from the Newman projection / steering wheel like approach to assign *R* or *S* configuration within the CIP system (e.g. [here](https://www.organicchemistrytutor.com/topic/cip-rules-and-r-s-stereodescriptors/), the illustration indicates oxygen of the ether, carbon atom of the chiral centre and the two adjacent quaternary carbon atoms below the carbon atom of the methyl group. The trained eye (training by building *physical* molecular models ([example](https://hgs.maruzen.info/products/1002alpha-organic-chemistry-introductory-set)), or/and with visualizing programs (e.g. [Avogadro](https://two.avogadro.cc/)) recalls that a conformation close to a tetrahedral geometry *similar* (not identical) to the one of [methane](https://en.wikipedia.org/wiki/Methane) is more likely, i.e. oxygen of ether and the two quaternary carbons next to the centre are in one level, while the carbon at the chiral centre is in one slightly above; however these four not as much close as the apex to the observer, the carbon of the methyl group:. ![highlight_plane_in_common](https://github.com/openbabel/openbabel/assets/60490931/f72cf4bd-e7e8-4c3e-80fb-bd187034ea29). ChemDraw (sample page [here](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#)) equally reads the SMILES string `Clc1ccc(cc1)[C@](OCC[C@@H]2N(C)CCC2)(c3ccccc3)C` (structure -> load smiles) to depict the molecular structure as. ![chemdraw_js](https://github.com/openbabel/openbabel/assets/60490931/540c81b6-40c5-4e84-b8be-8105a1f646da). The presence of a bold wedge (or the dash) does not always require simultaneous presence of the other (carbon on stereogenic centre alpha to nitrogen). Without doubt, however, it can assist the reader (example by [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html)):. ![cdkdepict](https://github.com/openbabel/openbabel/assets/60490931/5b3ee60d-fca8-432b-bafe-d47bbe332d93). Side note: You might consider an upgra",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436
https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436:1418,Performance,load,load,1418,"e Newman projection / steering wheel like approach to assign *R* or *S* configuration within the CIP system (e.g. [here](https://www.organicchemistrytutor.com/topic/cip-rules-and-r-s-stereodescriptors/), the illustration indicates oxygen of the ether, carbon atom of the chiral centre and the two adjacent quaternary carbon atoms below the carbon atom of the methyl group. The trained eye (training by building *physical* molecular models ([example](https://hgs.maruzen.info/products/1002alpha-organic-chemistry-introductory-set)), or/and with visualizing programs (e.g. [Avogadro](https://two.avogadro.cc/)) recalls that a conformation close to a tetrahedral geometry *similar* (not identical) to the one of [methane](https://en.wikipedia.org/wiki/Methane) is more likely, i.e. oxygen of ether and the two quaternary carbons next to the centre are in one level, while the carbon at the chiral centre is in one slightly above; however these four not as much close as the apex to the observer, the carbon of the methyl group:. ![highlight_plane_in_common](https://github.com/openbabel/openbabel/assets/60490931/f72cf4bd-e7e8-4c3e-80fb-bd187034ea29). ChemDraw (sample page [here](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#)) equally reads the SMILES string `Clc1ccc(cc1)[C@](OCC[C@@H]2N(C)CCC2)(c3ccccc3)C` (structure -> load smiles) to depict the molecular structure as. ![chemdraw_js](https://github.com/openbabel/openbabel/assets/60490931/540c81b6-40c5-4e84-b8be-8105a1f646da). The presence of a bold wedge (or the dash) does not always require simultaneous presence of the other (carbon on stereogenic centre alpha to nitrogen). Without doubt, however, it can assist the reader (example by [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html)):. ![cdkdepict](https://github.com/openbabel/openbabel/assets/60490931/5b3ee60d-fca8-432b-bafe-d47bbe332d93). Side note: You might consider an upgrade of the operating system (Debian 12/bookworm) and openbabel (version 3.1.1).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436
https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:210,Testability,benchmark,benchmark,210,```; -------------------------------------------------------------------------------; iterators-mol-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:37; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumAtoms / GetAtom 100 57 1.3395 ms ; 239.704 ns 237.452 ns 242.998 ns ; 13.6856 ns 10.255 ns 17.355 ns ; ; OBMolAtomIter 100 63 1.3356 ms ; 213.093 ns 211.359 ns 215.806 ns ; 10.8516 ns 7.52759 ns 14.4128 ns ; ; BeginAtom / NextAtom 100 115 1.334 ms ; 119.102 ns 117.784 ns 120.949 ns ; 7.96645 ns 6.23579 ns 9.59511 ns ; ; FOR_ATOMS_OF_MOL 100 366 1.3176 ms ; 37.0429 ns 36.6542 ns 37.5867 ns ; 2.33947 ns 1.81348 ns 2.8415 ns ; ; BeginAtoms / EndAtoms 100 321 1.3161 ms ; 37.5913 ns 37.0588 ns 38.2691 ns ; 3.02309 ns 2.49616 ns 3.52564 ns ; ; GetAtoms 100 348 1.3224 ms ; 37.13 ns 36.7279 ns 37.7013 ns ; 2.4104 ns 1.85212 ns 2.89647 ns ; . -------------------------------------------------------------------------------; iterators-mol-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:103; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180
https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:313,Testability,benchmark,benchmark,313,```; -------------------------------------------------------------------------------; iterators-mol-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:37; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumAtoms / GetAtom 100 57 1.3395 ms ; 239.704 ns 237.452 ns 242.998 ns ; 13.6856 ns 10.255 ns 17.355 ns ; ; OBMolAtomIter 100 63 1.3356 ms ; 213.093 ns 211.359 ns 215.806 ns ; 10.8516 ns 7.52759 ns 14.4128 ns ; ; BeginAtom / NextAtom 100 115 1.334 ms ; 119.102 ns 117.784 ns 120.949 ns ; 7.96645 ns 6.23579 ns 9.59511 ns ; ; FOR_ATOMS_OF_MOL 100 366 1.3176 ms ; 37.0429 ns 36.6542 ns 37.5867 ns ; 2.33947 ns 1.81348 ns 2.8415 ns ; ; BeginAtoms / EndAtoms 100 321 1.3161 ms ; 37.5913 ns 37.0588 ns 38.2691 ns ; 3.02309 ns 2.49616 ns 3.52564 ns ; ; GetAtoms 100 348 1.3224 ms ; 37.13 ns 36.7279 ns 37.7013 ns ; 2.4104 ns 1.85212 ns 2.89647 ns ; . -------------------------------------------------------------------------------; iterators-mol-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:103; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180
https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:1351,Testability,benchmark,benchmark,1351,......................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumAtoms / GetAtom 100 57 1.3395 ms ; 239.704 ns 237.452 ns 242.998 ns ; 13.6856 ns 10.255 ns 17.355 ns ; ; OBMolAtomIter 100 63 1.3356 ms ; 213.093 ns 211.359 ns 215.806 ns ; 10.8516 ns 7.52759 ns 14.4128 ns ; ; BeginAtom / NextAtom 100 115 1.334 ms ; 119.102 ns 117.784 ns 120.949 ns ; 7.96645 ns 6.23579 ns 9.59511 ns ; ; FOR_ATOMS_OF_MOL 100 366 1.3176 ms ; 37.0429 ns 36.6542 ns 37.5867 ns ; 2.33947 ns 1.81348 ns 2.8415 ns ; ; BeginAtoms / EndAtoms 100 321 1.3161 ms ; 37.5913 ns 37.0588 ns 38.2691 ns ; 3.02309 ns 2.49616 ns 3.52564 ns ; ; GetAtoms 100 348 1.3224 ms ; 37.13 ns 36.7279 ns 37.7013 ns ; 2.4104 ns 1.85212 ns 2.89647 ns ; . -------------------------------------------------------------------------------; iterators-mol-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:103; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180
https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:1455,Testability,benchmark,benchmark,1455,42.998 ns ; 13.6856 ns 10.255 ns 17.355 ns ; ; OBMolAtomIter 100 63 1.3356 ms ; 213.093 ns 211.359 ns 215.806 ns ; 10.8516 ns 7.52759 ns 14.4128 ns ; ; BeginAtom / NextAtom 100 115 1.334 ms ; 119.102 ns 117.784 ns 120.949 ns ; 7.96645 ns 6.23579 ns 9.59511 ns ; ; FOR_ATOMS_OF_MOL 100 366 1.3176 ms ; 37.0429 ns 36.6542 ns 37.5867 ns ; 2.33947 ns 1.81348 ns 2.8415 ns ; ; BeginAtoms / EndAtoms 100 321 1.3161 ms ; 37.5913 ns 37.0588 ns 38.2691 ns ; 3.02309 ns 2.49616 ns 3.52564 ns ; ; GetAtoms 100 348 1.3224 ms ; 37.13 ns 36.7279 ns 37.7013 ns ; 2.4104 ns 1.85212 ns 2.89647 ns ; . -------------------------------------------------------------------------------; iterators-mol-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:103; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; .........................................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180
https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:2498,Testability,benchmark,benchmark,2498,.................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomBondIter 100 9 1.3851 ms ; 1.60022 us 1.58045 us 1.62492 us ; 112.515 ns 94.3982 ns 129.009 ns ; ; BeginBond / NextBond 100 17 1.36 ms ; 809.956 ns 803.673 ns 820.129 ns ; 39.3122 ns 27.1928 ns 52.9569 ns ; ; FOR_BONDS_OF_ATOM 100 79 1.3272 ms ; 175.51 ns 173.628 ns 178.167 ns ; 11.3124 ns 8.75191 ns 13.7801 ns ; ; BeginBonds / EndBonds 100 78 1.326 ms ; 173.413 ns 171.365 ns 176.226 ns ; 12.1837 ns 9.54524 ns 14.7505 ns ; ; GetBonds 100 109 1.3298 ms ; 125.818 ns 124.27 ns 127.769 ns ; 8.80802 ns 7.1704 ns 10.2525 ns ; . ------------------------------------------------------------------------------,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180
https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:2602,Testability,benchmark,benchmark,2602,33 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomBondIter 100 9 1.3851 ms ; 1.60022 us 1.58045 us 1.62492 us ; 112.515 ns 94.3982 ns 129.009 ns ; ; BeginBond / NextBond 100 17 1.36 ms ; 809.956 ns 803.673 ns 820.129 ns ; 39.3122 ns 27.1928 ns 52.9569 ns ; ; FOR_BONDS_OF_ATOM 100 79 1.3272 ms ; 175.51 ns 173.628 ns 178.167 ns ; 11.3124 ns 8.75191 ns 13.7801 ns ; ; BeginBonds / EndBonds 100 78 1.326 ms ; 173.413 ns 171.365 ns 176.226 ns ; 12.1837 ns 9.54524 ns 14.7505 ns ; ; GetBonds 100 109 1.3298 ms ; 125.818 ns 124.27 ns 127.769 ns ; 8.80802 ns 7.1704 ns 10.2525 ns ; . -------------------------------------------------------------------------------; iterators-atom-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:233; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180
https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:3530,Testability,benchmark,benchmark,3530,8.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomBondIter 100 9 1.3851 ms ; 1.60022 us 1.58045 us 1.62492 us ; 112.515 ns 94.3982 ns 129.009 ns ; ; BeginBond / NextBond 100 17 1.36 ms ; 809.956 ns 803.673 ns 820.129 ns ; 39.3122 ns 27.1928 ns 52.9569 ns ; ; FOR_BONDS_OF_ATOM 100 79 1.3272 ms ; 175.51 ns 173.628 ns 178.167 ns ; 11.3124 ns 8.75191 ns 13.7801 ns ; ; BeginBonds / EndBonds 100 78 1.326 ms ; 173.413 ns 171.365 ns 176.226 ns ; 12.1837 ns 9.54524 ns 14.7505 ns ; ; GetBonds 100 109 1.3298 ms ; 125.818 ns 124.27 ns 127.769 ns ; 8.80802 ns 7.1704 ns 10.2525 ns ; . -------------------------------------------------------------------------------; iterators-atom-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:233; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomAtomIter 100 8 1.332 ms ; 1.75625 us 1.73897 us 1.78088 us ; 105.282 ns 78.5718 ns 131.181 ns ; ; BeginNbr / NextNbr 100 13 1.4313 ms ; 1.12652 us 1.11472 us 1.14416 us ; 72.6578 ns 53.7948 ns 93.3306 ns ; ; FOR_NBORS_OF_ATOM 100 63 1.3356 ms ; 224.037 ns 221.28 ns 227.784 ns ; 16.3251 ns 13.0803 ns 19.7404 ns ; ; GetNbrs 100 60 1.344 ms ; 238.905 ns 235.938 ns 242.825 ns ; 17.3301 ns 13.9846 ns 20.3396 ns ; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180
https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:3634,Testability,benchmark,benchmark,3634,8.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomBondIter 100 9 1.3851 ms ; 1.60022 us 1.58045 us 1.62492 us ; 112.515 ns 94.3982 ns 129.009 ns ; ; BeginBond / NextBond 100 17 1.36 ms ; 809.956 ns 803.673 ns 820.129 ns ; 39.3122 ns 27.1928 ns 52.9569 ns ; ; FOR_BONDS_OF_ATOM 100 79 1.3272 ms ; 175.51 ns 173.628 ns 178.167 ns ; 11.3124 ns 8.75191 ns 13.7801 ns ; ; BeginBonds / EndBonds 100 78 1.326 ms ; 173.413 ns 171.365 ns 176.226 ns ; 12.1837 ns 9.54524 ns 14.7505 ns ; ; GetBonds 100 109 1.3298 ms ; 125.818 ns 124.27 ns 127.769 ns ; 8.80802 ns 7.1704 ns 10.2525 ns ; . -------------------------------------------------------------------------------; iterators-atom-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:233; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomAtomIter 100 8 1.332 ms ; 1.75625 us 1.73897 us 1.78088 us ; 105.282 ns 78.5718 ns 131.181 ns ; ; BeginNbr / NextNbr 100 13 1.4313 ms ; 1.12652 us 1.11472 us 1.14416 us ; 72.6578 ns 53.7948 ns 93.3306 ns ; ; FOR_NBORS_OF_ATOM 100 63 1.3356 ms ; 224.037 ns 221.28 ns 227.784 ns ; 16.3251 ns 13.0803 ns 19.7404 ns ; ; GetNbrs 100 60 1.344 ms ; 238.905 ns 235.938 ns 242.825 ns ; 17.3301 ns 13.9846 ns 20.3396 ns ; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024:25,Availability,failure,failures,25,"@dkoes - I'm seeing test failures in the new test:; > Traceback (most recent call last):; File ""/Users/runner/work/openbabel/openbabel/test/testpdbformat.py"", line 28, in testSegname; mol = pybel.readstring('pdb','''ATOM 102 N CYS A 16 59.916 27.715 54.719 1.00 30.93 A N; AttributeError: 'NoneType' object has no attribute 'readstring'",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024:20,Testability,test,test,20,"@dkoes - I'm seeing test failures in the new test:; > Traceback (most recent call last):; File ""/Users/runner/work/openbabel/openbabel/test/testpdbformat.py"", line 28, in testSegname; mol = pybel.readstring('pdb','''ATOM 102 N CYS A 16 59.916 27.715 54.719 1.00 30.93 A N; AttributeError: 'NoneType' object has no attribute 'readstring'",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024:45,Testability,test,test,45,"@dkoes - I'm seeing test failures in the new test:; > Traceback (most recent call last):; File ""/Users/runner/work/openbabel/openbabel/test/testpdbformat.py"", line 28, in testSegname; mol = pybel.readstring('pdb','''ATOM 102 N CYS A 16 59.916 27.715 54.719 1.00 30.93 A N; AttributeError: 'NoneType' object has no attribute 'readstring'",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024:135,Testability,test,test,135,"@dkoes - I'm seeing test failures in the new test:; > Traceback (most recent call last):; File ""/Users/runner/work/openbabel/openbabel/test/testpdbformat.py"", line 28, in testSegname; mol = pybel.readstring('pdb','''ATOM 102 N CYS A 16 59.916 27.715 54.719 1.00 30.93 A N; AttributeError: 'NoneType' object has no attribute 'readstring'",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024:140,Testability,test,testpdbformat,140,"@dkoes - I'm seeing test failures in the new test:; > Traceback (most recent call last):; File ""/Users/runner/work/openbabel/openbabel/test/testpdbformat.py"", line 28, in testSegname; mol = pybel.readstring('pdb','''ATOM 102 N CYS A 16 59.916 27.715 54.719 1.00 30.93 A N; AttributeError: 'NoneType' object has no attribute 'readstring'",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024:171,Testability,test,testSegname,171,"@dkoes - I'm seeing test failures in the new test:; > Traceback (most recent call last):; File ""/Users/runner/work/openbabel/openbabel/test/testpdbformat.py"", line 28, in testSegname; mol = pybel.readstring('pdb','''ATOM 102 N CYS A 16 59.916 27.715 54.719 1.00 30.93 A N; AttributeError: 'NoneType' object has no attribute 'readstring'",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1796421319:55,Testability,test,testbindings,55,"Huh, why might that be? I'm importing pybel with `from testbindings import pybel` which is what other test files do. The test passes on my workstation and on CI.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1796421319
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1796421319:102,Testability,test,test,102,"Huh, why might that be? I'm importing pybel with `from testbindings import pybel` which is what other test files do. The test passes on my workstation and on CI.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1796421319
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1796421319:121,Testability,test,test,121,"Huh, why might that be? I'm importing pybel with `from testbindings import pybel` which is what other test files do. The test passes on my workstation and on CI.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1796421319
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:519,Availability,avail,available,519,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:84,Deployability,install,installs,84,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:28,Testability,test,test,28,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:64,Testability,test,test,64,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:259,Testability,test,test,259,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:310,Testability,test,test,310,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:318,Testability,test,testpdbformat,318,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:382,Testability,test,test,382,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:534,Testability,test,tested,534,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995:82,Integrability,depend,dependent,82,"Thanks for explaining that to me. I've added an obabel test and guarded the pybel dependent test with a check for the presence of pybel (need this test to actually test the API). The new test revealed a bug with writing the segnames, so that has also been fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995:55,Testability,test,test,55,"Thanks for explaining that to me. I've added an obabel test and guarded the pybel dependent test with a check for the presence of pybel (need this test to actually test the API). The new test revealed a bug with writing the segnames, so that has also been fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995:92,Testability,test,test,92,"Thanks for explaining that to me. I've added an obabel test and guarded the pybel dependent test with a check for the presence of pybel (need this test to actually test the API). The new test revealed a bug with writing the segnames, so that has also been fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995:147,Testability,test,test,147,"Thanks for explaining that to me. I've added an obabel test and guarded the pybel dependent test with a check for the presence of pybel (need this test to actually test the API). The new test revealed a bug with writing the segnames, so that has also been fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995:164,Testability,test,test,164,"Thanks for explaining that to me. I've added an obabel test and guarded the pybel dependent test with a check for the presence of pybel (need this test to actually test the API). The new test revealed a bug with writing the segnames, so that has also been fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995
https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995:187,Testability,test,test,187,"Thanks for explaining that to me. I've added an obabel test and guarded the pybel dependent test with a check for the presence of pybel (need this test to actually test the API). The new test revealed a bug with writing the segnames, so that has also been fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995
https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743:634,Testability,test,test,634,"The string `<TRIPOS>` seems missing, what is the origin of your data (database / program)? See, for example a run for methanol. ```shell; $ obabel -:""CO"" -h -opdbqt; REMARK Name = ; REMARK 1 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and O_2; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 C UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 C ; ATOM 2 O UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 OA; ATOM 3 H UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 HD; ENDROOT; TORSDOF 0; 1 molecule converted; ```. This aside (edit of your file as `test.mol2` attached below), there might be an other problem in your data because. ```shell; $ obabel test.mol2 -p 7.4 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. irrespective to the addition of hydrogen atoms:. ```shell; $ obabel test.mol2 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. [test.mol2.zip](https://github.com/openbabel/openbabel/files/13204022/test.mol2.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743
https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743:735,Testability,test,test,735,"The string `<TRIPOS>` seems missing, what is the origin of your data (database / program)? See, for example a run for methanol. ```shell; $ obabel -:""CO"" -h -opdbqt; REMARK Name = ; REMARK 1 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and O_2; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 C UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 C ; ATOM 2 O UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 OA; ATOM 3 H UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 HD; ENDROOT; TORSDOF 0; 1 molecule converted; ```. This aside (edit of your file as `test.mol2` attached below), there might be an other problem in your data because. ```shell; $ obabel test.mol2 -p 7.4 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. irrespective to the addition of hydrogen atoms:. ```shell; $ obabel test.mol2 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. [test.mol2.zip](https://github.com/openbabel/openbabel/files/13204022/test.mol2.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743
https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743:1098,Testability,test,test,1098,"The string `<TRIPOS>` seems missing, what is the origin of your data (database / program)? See, for example a run for methanol. ```shell; $ obabel -:""CO"" -h -opdbqt; REMARK Name = ; REMARK 1 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and O_2; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 C UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 C ; ATOM 2 O UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 OA; ATOM 3 H UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 HD; ENDROOT; TORSDOF 0; 1 molecule converted; ```. This aside (edit of your file as `test.mol2` attached below), there might be an other problem in your data because. ```shell; $ obabel test.mol2 -p 7.4 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. irrespective to the addition of hydrogen atoms:. ```shell; $ obabel test.mol2 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. [test.mol2.zip](https://github.com/openbabel/openbabel/files/13204022/test.mol2.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743
https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743:1387,Testability,test,test,1387,"The string `<TRIPOS>` seems missing, what is the origin of your data (database / program)? See, for example a run for methanol. ```shell; $ obabel -:""CO"" -h -opdbqt; REMARK Name = ; REMARK 1 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and O_2; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 C UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 C ; ATOM 2 O UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 OA; ATOM 3 H UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 HD; ENDROOT; TORSDOF 0; 1 molecule converted; ```. This aside (edit of your file as `test.mol2` attached below), there might be an other problem in your data because. ```shell; $ obabel test.mol2 -p 7.4 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. irrespective to the addition of hydrogen atoms:. ```shell; $ obabel test.mol2 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. [test.mol2.zip](https://github.com/openbabel/openbabel/files/13204022/test.mol2.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743
https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743:1456,Testability,test,test,1456,"The string `<TRIPOS>` seems missing, what is the origin of your data (database / program)? See, for example a run for methanol. ```shell; $ obabel -:""CO"" -h -opdbqt; REMARK Name = ; REMARK 1 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and O_2; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 C UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 C ; ATOM 2 O UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 OA; ATOM 3 H UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 HD; ENDROOT; TORSDOF 0; 1 molecule converted; ```. This aside (edit of your file as `test.mol2` attached below), there might be an other problem in your data because. ```shell; $ obabel test.mol2 -p 7.4 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. irrespective to the addition of hydrogen atoms:. ```shell; $ obabel test.mol2 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. [test.mol2.zip](https://github.com/openbabel/openbabel/files/13204022/test.mol2.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743
https://github.com/openbabel/openbabel/issues/2639#issuecomment-1783043748:258,Integrability,depend,depending,258,An easy option in your case would be to change the last command to; ```sh; find *.mop | sort -V | parallel -j 4 mopac {}; ```; or; ```sh; find *.mop | sort -k 1.4n | parallel -j 4 mopac {}; ```; or something else using sort. Having OpenBabel adjust the name depending on the number of input molecules doesn't really work since the files are read streaming and hence the number of molecules is not known until the command is finished.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2639#issuecomment-1783043748
https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:91,Availability,redundant,redundant,91,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930
https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:1263,Availability,mask,mask,1263,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930
https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:1586,Availability,mask,mask,1586,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930
https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:771,Performance,perform,performance,771,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930
https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:91,Safety,redund,redundant,91,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930
https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:1268,Usability,Clear,Clear,1268,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930
https://github.com/openbabel/openbabel/issues/2643#issuecomment-1811062288:67,Deployability,release,release,67,"Affirmative. Though you still can obtain the executables from the [release page](https://github.com/openbabel/openbabel/releases) on GitHub, and access the latest documentation via [readthedocs](https://open-babel.readthedocs.io/en/latest/). Addition: consult the package manager of your Linux distribution, survey by [repology.org](https://repology.org/project/openbabel/packages):. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2643#issuecomment-1811062288
https://github.com/openbabel/openbabel/issues/2643#issuecomment-1811062288:120,Deployability,release,releases,120,"Affirmative. Though you still can obtain the executables from the [release page](https://github.com/openbabel/openbabel/releases) on GitHub, and access the latest documentation via [readthedocs](https://open-babel.readthedocs.io/en/latest/). Addition: consult the package manager of your Linux distribution, survey by [repology.org](https://repology.org/project/openbabel/packages):. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2643#issuecomment-1811062288
https://github.com/openbabel/openbabel/issues/2643#issuecomment-1811062288:145,Security,access,access,145,"Affirmative. Though you still can obtain the executables from the [release page](https://github.com/openbabel/openbabel/releases) on GitHub, and access the latest documentation via [readthedocs](https://open-babel.readthedocs.io/en/latest/). Addition: consult the package manager of your Linux distribution, survey by [repology.org](https://repology.org/project/openbabel/packages):. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2643#issuecomment-1811062288
https://github.com/openbabel/openbabel/issues/2643#issuecomment-1852459340:18,Availability,down,down,18,The site is still down. Is there another place online where the documentation for OpenBabel is available?. Thanks!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2643#issuecomment-1852459340
https://github.com/openbabel/openbabel/issues/2643#issuecomment-1852459340:95,Availability,avail,available,95,The site is still down. Is there another place online where the documentation for OpenBabel is available?. Thanks!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2643#issuecomment-1852459340
https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814353703:1209,Performance,perform,perform,1209,"What do you want to do *after* the sort? Try this:. - option A) is an edit in place, in the file. You need a good text editor. In Emacs, jump the block of interest (`C-s`, followed by the criterion e.g. `BOND ANGLES`), mark the block by `M-h` and run `M-x sort-lines`. After that, you however have to put back `BOND ANGLES` to lead this block because an explicit empty space (here leading a column) has a higher priority in this sort, than `B` of string `BOND ANGLES`.; ; If you prefer vim, jump to the block by `/BOND ANGLES/`. Advance one additional line (`j`) to the first line of the array. Enter the visual mode (`v`), mark all to the end of this block (`}`) and run the command `:sort`. In case you didn't advance the single line before entering the visual mode and marked the whole paragraph (including the line `BOND ANGLES`), you now have to copy and yank this line up to the beginning of this block -- similar to Emacs.; There equally is `gvim` (vim with some GUI added); here you can mark the region of interest with your mouse before running the command `:sort`. - option B), your interest is only this very block in an eventually separate file. After manual extraction of the region of interest, perform a natural sort. In Linux, you can run `sort -n input.txt` with a result you can redirect into a new file. (The natural sort puts the string `BOND ANGLES` ahead of the array.). In Linux, csplit allows you to skip the manual search and copy prior to the sort, too. A minimal working example is. ```shell; csplit CCB-CH2CN_1.txt '/^BOND ANGLES$/' -s '/^$/' -f out; ```. to indicate the file to process, the pattern at the start of the paragraph of interest separated from the next one by an empty line (hence `-s '/^$/'`). And to store the output into files `out`. It then is file `out01` which is about the block `BOND ANGLES` you can submit to the sort.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814353703
https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814461528:174,Testability,log,logically,174,"Yes, that is exactly the issue. How am I supposed to sort and compare torsions if the pathing is stochastic and not systematic? Surely, it should start at atom 1 and proceed logically to 2, then 3, and so forth? . I'm coding in Linux, as I have no experience coding in Python, and having to write a code to flip all those fields and compare would be a pain for something that shouldn't be a problem to begin with.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814461528
https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145:361,Testability,test,test,361,"I observe the sequence of the atom indices in conformer 2 is inverse of the sequence of atom indices 3. For instance in the firs line. 11 6 1 2 134.140. vs. 2 1 6 11 137.586. If it is the mere rearrangement of four columns, why not relying on awk in a pattern like. ```shell; awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, $5} }' test.txt; ```. which for file `test.txt`, a concatenation of the two data sets of. ```; 11 6 1 2 134.140; 11 6 1 8 -39.032; 11 6 3 5 103.856; 11 6 3 2 -135.819; 11 6 3 4 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. yields. ```; 2 1 6 11 134.140; 8 1 6 11 -39.032; 5 3 6 11 103.856; 2 3 6 11 -135.819; 4 3 6 11 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. @fredrikw Does the observation following ""the other direction"" for e.g. ` 11 6 1 8 -39.032` (first file, second line) now for `8 1 6 11` now an angle of +140.968 degrees? I.e. ```shell; $ awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, 180+$5} }' test.txt; 2 1 6 11 314.14; 8 1 6 11 140.968; 5 3 6 11 283.856; 2 3 6 11 44.181; 4 3 6 11 157.48; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. [test.txt](https://github.com/openbabel/openbabel/files/13379413/test.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145
https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145:392,Testability,test,test,392,"I observe the sequence of the atom indices in conformer 2 is inverse of the sequence of atom indices 3. For instance in the firs line. 11 6 1 2 134.140. vs. 2 1 6 11 137.586. If it is the mere rearrangement of four columns, why not relying on awk in a pattern like. ```shell; awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, $5} }' test.txt; ```. which for file `test.txt`, a concatenation of the two data sets of. ```; 11 6 1 2 134.140; 11 6 1 8 -39.032; 11 6 3 5 103.856; 11 6 3 2 -135.819; 11 6 3 4 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. yields. ```; 2 1 6 11 134.140; 8 1 6 11 -39.032; 5 3 6 11 103.856; 2 3 6 11 -135.819; 4 3 6 11 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. @fredrikw Does the observation following ""the other direction"" for e.g. ` 11 6 1 8 -39.032` (first file, second line) now for `8 1 6 11` now an angle of +140.968 degrees? I.e. ```shell; $ awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, 180+$5} }' test.txt; 2 1 6 11 314.14; 8 1 6 11 140.968; 5 3 6 11 283.856; 2 3 6 11 44.181; 4 3 6 11 157.48; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. [test.txt](https://github.com/openbabel/openbabel/files/13379413/test.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145
https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145:1113,Testability,test,test,1113,"I observe the sequence of the atom indices in conformer 2 is inverse of the sequence of atom indices 3. For instance in the firs line. 11 6 1 2 134.140. vs. 2 1 6 11 137.586. If it is the mere rearrangement of four columns, why not relying on awk in a pattern like. ```shell; awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, $5} }' test.txt; ```. which for file `test.txt`, a concatenation of the two data sets of. ```; 11 6 1 2 134.140; 11 6 1 8 -39.032; 11 6 3 5 103.856; 11 6 3 2 -135.819; 11 6 3 4 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. yields. ```; 2 1 6 11 134.140; 8 1 6 11 -39.032; 5 3 6 11 103.856; 2 3 6 11 -135.819; 4 3 6 11 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. @fredrikw Does the observation following ""the other direction"" for e.g. ` 11 6 1 8 -39.032` (first file, second line) now for `8 1 6 11` now an angle of +140.968 degrees? I.e. ```shell; $ awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, 180+$5} }' test.txt; 2 1 6 11 314.14; 8 1 6 11 140.968; 5 3 6 11 283.856; 2 3 6 11 44.181; 4 3 6 11 157.48; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. [test.txt](https://github.com/openbabel/openbabel/files/13379413/test.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145
https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145:1307,Testability,test,test,1307,"I observe the sequence of the atom indices in conformer 2 is inverse of the sequence of atom indices 3. For instance in the firs line. 11 6 1 2 134.140. vs. 2 1 6 11 137.586. If it is the mere rearrangement of four columns, why not relying on awk in a pattern like. ```shell; awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, $5} }' test.txt; ```. which for file `test.txt`, a concatenation of the two data sets of. ```; 11 6 1 2 134.140; 11 6 1 8 -39.032; 11 6 3 5 103.856; 11 6 3 2 -135.819; 11 6 3 4 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. yields. ```; 2 1 6 11 134.140; 8 1 6 11 -39.032; 5 3 6 11 103.856; 2 3 6 11 -135.819; 4 3 6 11 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. @fredrikw Does the observation following ""the other direction"" for e.g. ` 11 6 1 8 -39.032` (first file, second line) now for `8 1 6 11` now an angle of +140.968 degrees? I.e. ```shell; $ awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, 180+$5} }' test.txt; 2 1 6 11 314.14; 8 1 6 11 140.968; 5 3 6 11 283.856; 2 3 6 11 44.181; 4 3 6 11 157.48; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. [test.txt](https://github.com/openbabel/openbabel/files/13379413/test.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145
https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145:1371,Testability,test,test,1371,"I observe the sequence of the atom indices in conformer 2 is inverse of the sequence of atom indices 3. For instance in the firs line. 11 6 1 2 134.140. vs. 2 1 6 11 137.586. If it is the mere rearrangement of four columns, why not relying on awk in a pattern like. ```shell; awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, $5} }' test.txt; ```. which for file `test.txt`, a concatenation of the two data sets of. ```; 11 6 1 2 134.140; 11 6 1 8 -39.032; 11 6 3 5 103.856; 11 6 3 2 -135.819; 11 6 3 4 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. yields. ```; 2 1 6 11 134.140; 8 1 6 11 -39.032; 5 3 6 11 103.856; 2 3 6 11 -135.819; 4 3 6 11 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. @fredrikw Does the observation following ""the other direction"" for e.g. ` 11 6 1 8 -39.032` (first file, second line) now for `8 1 6 11` now an angle of +140.968 degrees? I.e. ```shell; $ awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, 180+$5} }' test.txt; 2 1 6 11 314.14; 8 1 6 11 140.968; 5 3 6 11 283.856; 2 3 6 11 44.181; 4 3 6 11 157.48; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. [test.txt](https://github.com/openbabel/openbabel/files/13379413/test.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145
https://github.com/openbabel/openbabel/issues/2645#issuecomment-1814367818:116,Availability,avail,available,116,"It already is known (https://github.com/openbabel/openbabel/issues/2643) for about two days, documentation still is available on readthedocs.io",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2645#issuecomment-1814367818
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293:1014,Deployability,release,release,1014,"Try to replicate the following. ```shell; $ obabel -:""c1ccccc1"" -O aromatic.cml -A; 1 molecule converted; $ obabel aromatic.cml -ocan; c1ccccc1	; 1 molecule converted; ```. as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). ----. Side notes:. - dash, colon, pairwise single/double quotes in `-:""c1ccccc1""` already indicate to OpenBabel ""the input enclosed by the quotes is going to be a SMILES string"". - if the file extension is one described by the manual (cf. [readthedocs](https://open-babel.readthedocs.io/en/latest/)), the explicit indication can be dropped. Indeed, `-icml` in the instruction `obabel -icml aromatic_cml.txt -osmi` only was necessary because the input file *of .cml syntax* uses a non-conventional file extension for a .cml, namely `.txt`. By similar token: the definition `-O test.png` of file name and file format is more compact. - check if your workflow allows to substitute old openbabel 2.4.1 by a more recent version of the program. Pick an executable from the [release page](https://github.com/openbabel/openbabel/releases). Many Linux distributions equally provide a package, the hourly updated survey by [repology.org](https://repology.org/project/openbabel/packages) can be a guide:. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293:1067,Deployability,release,releases,1067,"Try to replicate the following. ```shell; $ obabel -:""c1ccccc1"" -O aromatic.cml -A; 1 molecule converted; $ obabel aromatic.cml -ocan; c1ccccc1	; 1 molecule converted; ```. as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). ----. Side notes:. - dash, colon, pairwise single/double quotes in `-:""c1ccccc1""` already indicate to OpenBabel ""the input enclosed by the quotes is going to be a SMILES string"". - if the file extension is one described by the manual (cf. [readthedocs](https://open-babel.readthedocs.io/en/latest/)), the explicit indication can be dropped. Indeed, `-icml` in the instruction `obabel -icml aromatic_cml.txt -osmi` only was necessary because the input file *of .cml syntax* uses a non-conventional file extension for a .cml, namely `.txt`. By similar token: the definition `-O test.png` of file name and file format is more compact. - check if your workflow allows to substitute old openbabel 2.4.1 by a more recent version of the program. Pick an executable from the [release page](https://github.com/openbabel/openbabel/releases). Many Linux distributions equally provide a package, the hourly updated survey by [repology.org](https://repology.org/project/openbabel/packages) can be a guide:. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293:1141,Deployability,update,updated,1141,"Try to replicate the following. ```shell; $ obabel -:""c1ccccc1"" -O aromatic.cml -A; 1 molecule converted; $ obabel aromatic.cml -ocan; c1ccccc1	; 1 molecule converted; ```. as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). ----. Side notes:. - dash, colon, pairwise single/double quotes in `-:""c1ccccc1""` already indicate to OpenBabel ""the input enclosed by the quotes is going to be a SMILES string"". - if the file extension is one described by the manual (cf. [readthedocs](https://open-babel.readthedocs.io/en/latest/)), the explicit indication can be dropped. Indeed, `-icml` in the instruction `obabel -icml aromatic_cml.txt -osmi` only was necessary because the input file *of .cml syntax* uses a non-conventional file extension for a .cml, namely `.txt`. By similar token: the definition `-O test.png` of file name and file format is more compact. - check if your workflow allows to substitute old openbabel 2.4.1 by a more recent version of the program. Pick an executable from the [release page](https://github.com/openbabel/openbabel/releases). Many Linux distributions equally provide a package, the hourly updated survey by [repology.org](https://repology.org/project/openbabel/packages) can be a guide:. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293:822,Testability,test,test,822,"Try to replicate the following. ```shell; $ obabel -:""c1ccccc1"" -O aromatic.cml -A; 1 molecule converted; $ obabel aromatic.cml -ocan; c1ccccc1	; 1 molecule converted; ```. as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). ----. Side notes:. - dash, colon, pairwise single/double quotes in `-:""c1ccccc1""` already indicate to OpenBabel ""the input enclosed by the quotes is going to be a SMILES string"". - if the file extension is one described by the manual (cf. [readthedocs](https://open-babel.readthedocs.io/en/latest/)), the explicit indication can be dropped. Indeed, `-icml` in the instruction `obabel -icml aromatic_cml.txt -osmi` only was necessary because the input file *of .cml syntax* uses a non-conventional file extension for a .cml, namely `.txt`. By similar token: the definition `-O test.png` of file name and file format is more compact. - check if your workflow allows to substitute old openbabel 2.4.1 by a more recent version of the program. Pick an executable from the [release page](https://github.com/openbabel/openbabel/releases). Many Linux distributions equally provide a package, the hourly updated survey by [repology.org](https://repology.org/project/openbabel/packages) can be a guide:. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293:1232,Usability,guid,guide,1232,"Try to replicate the following. ```shell; $ obabel -:""c1ccccc1"" -O aromatic.cml -A; 1 molecule converted; $ obabel aromatic.cml -ocan; c1ccccc1	; 1 molecule converted; ```. as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). ----. Side notes:. - dash, colon, pairwise single/double quotes in `-:""c1ccccc1""` already indicate to OpenBabel ""the input enclosed by the quotes is going to be a SMILES string"". - if the file extension is one described by the manual (cf. [readthedocs](https://open-babel.readthedocs.io/en/latest/)), the explicit indication can be dropped. Indeed, `-icml` in the instruction `obabel -icml aromatic_cml.txt -osmi` only was necessary because the input file *of .cml syntax* uses a non-conventional file extension for a .cml, namely `.txt`. By similar token: the definition `-O test.png` of file name and file format is more compact. - check if your workflow allows to substitute old openbabel 2.4.1 by a more recent version of the program. Pick an executable from the [release page](https://github.com/openbabel/openbabel/releases). Many Linux distributions equally provide a package, the hourly updated survey by [repology.org](https://repology.org/project/openbabel/packages) can be a guide:. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819540753:918,Availability,error,error,918,"> Try to replicate the following; > ; > ```shell; > $ obabel -:""c1ccccc1"" -O aromatic.cml -A; > 1 molecule converted; > $ obabel aromatic.cml -ocan; > c1ccccc1	; > 1 molecule converted; > ```; > ; > as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). Thanks for the tips on the redundancies in the command. I ran the commands as you said, and that works, but the aromatic.cml created does not write bond orders as aromatic, it writes the Kekule form. ; [aromatic.txt](https://github.com/openbabel/openbabel/files/13417932/aromatic.txt). Changing the -A flag in your prompt to -xA writes the bonds as aromatic and I still see the issue described. ```; $ obabel -:""c1ccccc1"" -O aromatic.cml -xA; 1 molecule converted; $ obabel aromatic.cml -ocan; [CH]1[CH][CH][CH][CH][CH]1; 1 molecule converted; ```. Also for the comment on version, we are currently using the most recent 3.1.1, but I noticed the error we see in 3.1.1 isn't seen in 2.4.1",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819540753
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819540753:299,Safety,redund,redundancies,299,"> Try to replicate the following; > ; > ```shell; > $ obabel -:""c1ccccc1"" -O aromatic.cml -A; > 1 molecule converted; > $ obabel aromatic.cml -ocan; > c1ccccc1	; > 1 molecule converted; > ```; > ; > as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). Thanks for the tips on the redundancies in the command. I ran the commands as you said, and that works, but the aromatic.cml created does not write bond orders as aromatic, it writes the Kekule form. ; [aromatic.txt](https://github.com/openbabel/openbabel/files/13417932/aromatic.txt). Changing the -A flag in your prompt to -xA writes the bonds as aromatic and I still see the issue described. ```; $ obabel -:""c1ccccc1"" -O aromatic.cml -xA; 1 molecule converted; $ obabel aromatic.cml -ocan; [CH]1[CH][CH][CH][CH][CH]1; 1 molecule converted; ```. Also for the comment on version, we are currently using the most recent 3.1.1, but I noticed the error we see in 3.1.1 isn't seen in 2.4.1",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819540753
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819580298:41,Deployability,install,installation,41,"Moving forward I'll be discussing my Mac installation of OpenBabel, which I just updated to be sure. ```; % obabel -v; No input file or format spec or possibly a misplaced option.; Most options must come after the input files. (-i -o -O -m can be anywhwere.). Open Babel 3.1.1 -- Nov 20 2023 -- 13:12:12; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]; Try -H option for more information.; ```. Running the below on the -xA option cml has the issue and write radicals as described. ```; % obabel aromatic.cml -ocan ; [CH]1[CH][CH][CH][CH][CH]1; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819580298
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819580298:81,Deployability,update,updated,81,"Moving forward I'll be discussing my Mac installation of OpenBabel, which I just updated to be sure. ```; % obabel -v; No input file or format spec or possibly a misplaced option.; Most options must come after the input files. (-i -o -O -m can be anywhwere.). Open Babel 3.1.1 -- Nov 20 2023 -- 13:12:12; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]; Try -H option for more information.; ```. Running the below on the -xA option cml has the issue and write radicals as described. ```; % obabel aromatic.cml -ocan ; [CH]1[CH][CH][CH][CH][CH]1; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819580298
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819639642:205,Testability,test,test,205,"I speculate there could be a bug because of the following two different outcomes. 0) generation of the aromatic.cml (bond orders marked by A). ```shell; $ obabel -:""c1ccccc1"" -ocml --gen3d -xA > ~/Desktop/test.cml; 1 molecule converted; $ cat ~/Desktop/test.cml; $ cat ~/Desktop/test.cml ; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""1"" x3=""1.382807"" y3=""-0.221802"" z3=""0.005621""/>; <atom id=""a2"" elementType=""C"" hydrogenCount=""1"" x3=""0.506827"" y3=""-1.306766"" z3=""-0.007235""/>; <atom id=""a3"" elementType=""C"" hydrogenCount=""1"" x3=""-0.871185"" y3=""-1.090814"" z3=""-0.015111""/>; <atom id=""a4"" elementType=""C"" hydrogenCount=""1"" x3=""-1.372721"" y3=""0.210822"" z3=""-0.004526""/>; <atom id=""a5"" elementType=""C"" hydrogenCount=""1"" x3=""-0.496795"" y3=""1.296205"" z3=""0.011557""/>; <atom id=""a6"" elementType=""C"" hydrogenCount=""1"" x3=""0.881190"" y3=""1.080097"" z3=""0.012965""/>; <atom id=""a7"" elementType=""H"" hydrogenCount=""0"" x3=""2.456430"" y3=""-0.390211"" z3=""0.009514""/>; <atom id=""a8"" elementType=""H"" hydrogenCount=""0"" x3=""0.897545"" y3=""-2.320834"" z3=""-0.010961""/>; <atom id=""a9"" elementType=""H"" hydrogenCount=""0"" x3=""-1.553723"" y3=""-1.935967"" z3=""-0.029527""/>; <atom id=""a10"" elementType=""H"" hydrogenCount=""0"" x3=""-2.446585"" y3=""0.379351"" z3=""-0.008513""/>; <atom id=""a11"" elementType=""H"" hydrogenCount=""0"" x3=""-0.887676"" y3=""2.310028"" z3=""0.022209""/>; <atom id=""a12"" elementType=""H"" hydrogenCount=""0"" x3=""1.563844"" y3=""1.925102"" z3=""0.020756""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""A""/>; <bond atomRefs2=""a2 a3"" order=""A""/>; <bond atomRefs2=""a3 a4"" order=""A""/>; <bond atomRefs2=""a4 a5"" order=""A""/>; <bond atomRefs2=""a5 a6"" order=""A""/>; <bond atomRefs2=""a1 a6"" order=""A""/>; <bond atomRefs2=""a1 a7"" order=""1""/>; <bond atomRefs2=""a2 a8"" order=""1""/>; <bond atomRefs2=""a3 a9"" order=""1""/>; <bond atomRefs2=""a4 a10"" order=""1""/>; <bond atomRefs2=""a5 a11"" order=""1""/>; <bond atomRefs2=""a6 a12"" order=""1""/>; </bondArray>; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819639642
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819639642:253,Testability,test,test,253,"I speculate there could be a bug because of the following two different outcomes. 0) generation of the aromatic.cml (bond orders marked by A). ```shell; $ obabel -:""c1ccccc1"" -ocml --gen3d -xA > ~/Desktop/test.cml; 1 molecule converted; $ cat ~/Desktop/test.cml; $ cat ~/Desktop/test.cml ; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""1"" x3=""1.382807"" y3=""-0.221802"" z3=""0.005621""/>; <atom id=""a2"" elementType=""C"" hydrogenCount=""1"" x3=""0.506827"" y3=""-1.306766"" z3=""-0.007235""/>; <atom id=""a3"" elementType=""C"" hydrogenCount=""1"" x3=""-0.871185"" y3=""-1.090814"" z3=""-0.015111""/>; <atom id=""a4"" elementType=""C"" hydrogenCount=""1"" x3=""-1.372721"" y3=""0.210822"" z3=""-0.004526""/>; <atom id=""a5"" elementType=""C"" hydrogenCount=""1"" x3=""-0.496795"" y3=""1.296205"" z3=""0.011557""/>; <atom id=""a6"" elementType=""C"" hydrogenCount=""1"" x3=""0.881190"" y3=""1.080097"" z3=""0.012965""/>; <atom id=""a7"" elementType=""H"" hydrogenCount=""0"" x3=""2.456430"" y3=""-0.390211"" z3=""0.009514""/>; <atom id=""a8"" elementType=""H"" hydrogenCount=""0"" x3=""0.897545"" y3=""-2.320834"" z3=""-0.010961""/>; <atom id=""a9"" elementType=""H"" hydrogenCount=""0"" x3=""-1.553723"" y3=""-1.935967"" z3=""-0.029527""/>; <atom id=""a10"" elementType=""H"" hydrogenCount=""0"" x3=""-2.446585"" y3=""0.379351"" z3=""-0.008513""/>; <atom id=""a11"" elementType=""H"" hydrogenCount=""0"" x3=""-0.887676"" y3=""2.310028"" z3=""0.022209""/>; <atom id=""a12"" elementType=""H"" hydrogenCount=""0"" x3=""1.563844"" y3=""1.925102"" z3=""0.020756""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""A""/>; <bond atomRefs2=""a2 a3"" order=""A""/>; <bond atomRefs2=""a3 a4"" order=""A""/>; <bond atomRefs2=""a4 a5"" order=""A""/>; <bond atomRefs2=""a5 a6"" order=""A""/>; <bond atomRefs2=""a1 a6"" order=""A""/>; <bond atomRefs2=""a1 a7"" order=""1""/>; <bond atomRefs2=""a2 a8"" order=""1""/>; <bond atomRefs2=""a3 a9"" order=""1""/>; <bond atomRefs2=""a4 a10"" order=""1""/>; <bond atomRefs2=""a5 a11"" order=""1""/>; <bond atomRefs2=""a6 a12"" order=""1""/>; </bondArray>; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819639642
https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819639642:279,Testability,test,test,279,"I speculate there could be a bug because of the following two different outcomes. 0) generation of the aromatic.cml (bond orders marked by A). ```shell; $ obabel -:""c1ccccc1"" -ocml --gen3d -xA > ~/Desktop/test.cml; 1 molecule converted; $ cat ~/Desktop/test.cml; $ cat ~/Desktop/test.cml ; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""1"" x3=""1.382807"" y3=""-0.221802"" z3=""0.005621""/>; <atom id=""a2"" elementType=""C"" hydrogenCount=""1"" x3=""0.506827"" y3=""-1.306766"" z3=""-0.007235""/>; <atom id=""a3"" elementType=""C"" hydrogenCount=""1"" x3=""-0.871185"" y3=""-1.090814"" z3=""-0.015111""/>; <atom id=""a4"" elementType=""C"" hydrogenCount=""1"" x3=""-1.372721"" y3=""0.210822"" z3=""-0.004526""/>; <atom id=""a5"" elementType=""C"" hydrogenCount=""1"" x3=""-0.496795"" y3=""1.296205"" z3=""0.011557""/>; <atom id=""a6"" elementType=""C"" hydrogenCount=""1"" x3=""0.881190"" y3=""1.080097"" z3=""0.012965""/>; <atom id=""a7"" elementType=""H"" hydrogenCount=""0"" x3=""2.456430"" y3=""-0.390211"" z3=""0.009514""/>; <atom id=""a8"" elementType=""H"" hydrogenCount=""0"" x3=""0.897545"" y3=""-2.320834"" z3=""-0.010961""/>; <atom id=""a9"" elementType=""H"" hydrogenCount=""0"" x3=""-1.553723"" y3=""-1.935967"" z3=""-0.029527""/>; <atom id=""a10"" elementType=""H"" hydrogenCount=""0"" x3=""-2.446585"" y3=""0.379351"" z3=""-0.008513""/>; <atom id=""a11"" elementType=""H"" hydrogenCount=""0"" x3=""-0.887676"" y3=""2.310028"" z3=""0.022209""/>; <atom id=""a12"" elementType=""H"" hydrogenCount=""0"" x3=""1.563844"" y3=""1.925102"" z3=""0.020756""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""A""/>; <bond atomRefs2=""a2 a3"" order=""A""/>; <bond atomRefs2=""a3 a4"" order=""A""/>; <bond atomRefs2=""a4 a5"" order=""A""/>; <bond atomRefs2=""a5 a6"" order=""A""/>; <bond atomRefs2=""a1 a6"" order=""A""/>; <bond atomRefs2=""a1 a7"" order=""1""/>; <bond atomRefs2=""a2 a8"" order=""1""/>; <bond atomRefs2=""a3 a9"" order=""1""/>; <bond atomRefs2=""a4 a10"" order=""1""/>; <bond atomRefs2=""a5 a11"" order=""1""/>; <bond atomRefs2=""a6 a12"" order=""1""/>; </bondArray>; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819639642
https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028:34,Testability,test,test,34,"Without having your exact file to test on I cannot say for sure but my best suggestion would be to change the command to a piped two-stage command:; `obabel --addtotitle ""_"" --append ""CAT"" in.sdf -osdf | obabel -isdf -Oout.sdf --delete ""CAT""`; (I also changed the property name in `--append` to match the one in `--delete`, in my testing it made a difference if I used upper or lower case); ``` sh; ➜ obabel -:""CCC title"" --gen2D -osdf --property CAT=test | obabel -isdf --addtotitle ""_"" --append ""CAT"" -osdf | obabel -; isdf -osdf --delete ""CAT""; 1 molecule converted; 1 molecule converted; title_ test; OpenBabel11232311102D. 3 2 0 0 0 0 0 0 0 0999 V2000; 1.7321 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; M END; $$$$; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028
https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028:330,Testability,test,testing,330,"Without having your exact file to test on I cannot say for sure but my best suggestion would be to change the command to a piped two-stage command:; `obabel --addtotitle ""_"" --append ""CAT"" in.sdf -osdf | obabel -isdf -Oout.sdf --delete ""CAT""`; (I also changed the property name in `--append` to match the one in `--delete`, in my testing it made a difference if I used upper or lower case); ``` sh; ➜ obabel -:""CCC title"" --gen2D -osdf --property CAT=test | obabel -isdf --addtotitle ""_"" --append ""CAT"" -osdf | obabel -; isdf -osdf --delete ""CAT""; 1 molecule converted; 1 molecule converted; title_ test; OpenBabel11232311102D. 3 2 0 0 0 0 0 0 0 0999 V2000; 1.7321 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; M END; $$$$; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028
https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028:451,Testability,test,test,451,"Without having your exact file to test on I cannot say for sure but my best suggestion would be to change the command to a piped two-stage command:; `obabel --addtotitle ""_"" --append ""CAT"" in.sdf -osdf | obabel -isdf -Oout.sdf --delete ""CAT""`; (I also changed the property name in `--append` to match the one in `--delete`, in my testing it made a difference if I used upper or lower case); ``` sh; ➜ obabel -:""CCC title"" --gen2D -osdf --property CAT=test | obabel -isdf --addtotitle ""_"" --append ""CAT"" -osdf | obabel -; isdf -osdf --delete ""CAT""; 1 molecule converted; 1 molecule converted; title_ test; OpenBabel11232311102D. 3 2 0 0 0 0 0 0 0 0999 V2000; 1.7321 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; M END; $$$$; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028
https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028:599,Testability,test,test,599,"Without having your exact file to test on I cannot say for sure but my best suggestion would be to change the command to a piped two-stage command:; `obabel --addtotitle ""_"" --append ""CAT"" in.sdf -osdf | obabel -isdf -Oout.sdf --delete ""CAT""`; (I also changed the property name in `--append` to match the one in `--delete`, in my testing it made a difference if I used upper or lower case); ``` sh; ➜ obabel -:""CCC title"" --gen2D -osdf --property CAT=test | obabel -isdf --addtotitle ""_"" --append ""CAT"" -osdf | obabel -; isdf -osdf --delete ""CAT""; 1 molecule converted; 1 molecule converted; title_ test; OpenBabel11232311102D. 3 2 0 0 0 0 0 0 0 0999 V2000; 1.7321 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; M END; $$$$; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842094722:220,Testability,test,tests,220,"Since this would be relevant for 3.2, and we can't guarantee canonicalization across feature changes, I think we're okay wrt backwards compatibility of canonicalization. I would regenerate the result files as far as the tests.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842094722
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659:24,Deployability,update,update,24,"I found a simple way to update the result files for SMARTS, formula and formal charge tests. But not for the canonstable test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659:79,Energy Efficiency,charge,charge,79,"I found a simple way to update the result files for SMARTS, formula and formal charge tests. But not for the canonstable test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659:86,Testability,test,tests,86,"I found a simple way to update the result files for SMARTS, formula and formal charge tests. But not for the canonstable test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659:121,Testability,test,test,121,"I found a simple way to update the result files for SMARTS, formula and formal charge tests. But not for the canonstable test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659:10,Usability,simpl,simple,10,"I found a simple way to update the result files for SMARTS, formula and formal charge tests. But not for the canonstable test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842984206:156,Testability,test,test,156,"Weirdly enough, the smartstest is ok when I run it locally. I cannot find a good reason for that. I also get more changes than expected in the formalcharge test results file so something is up with that as well... I'll need to look more at this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842984206
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209:17,Testability,test,tests,17,"Two fails in the tests. One is in testobconv_writers.py and I cannot see how that test has ever worked since the x- and y-coordinates in the expected output are the same. (https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/test/testobconv_writers.py#L2882-L2888); The other is a bigger problem. It's in canonstabletest and the problem is that the failing test there isn't stable.; ```sh; $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; 1 molecule converted. $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; ```. So somehow, there seem to be an edge case in the canonicalization algo that the new SSSR ring code breaks. I don't know the canon code well enough to understand why atm but I will try to look into it. But maybe someone more versed into it can help out?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209:82,Testability,test,test,82,"Two fails in the tests. One is in testobconv_writers.py and I cannot see how that test has ever worked since the x- and y-coordinates in the expected output are the same. (https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/test/testobconv_writers.py#L2882-L2888); The other is a bigger problem. It's in canonstabletest and the problem is that the failing test there isn't stable.; ```sh; $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; 1 molecule converted. $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; ```. So somehow, there seem to be an edge case in the canonicalization algo that the new SSSR ring code breaks. I don't know the canon code well enough to understand why atm but I will try to look into it. But maybe someone more versed into it can help out?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209:257,Testability,test,test,257,"Two fails in the tests. One is in testobconv_writers.py and I cannot see how that test has ever worked since the x- and y-coordinates in the expected output are the same. (https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/test/testobconv_writers.py#L2882-L2888); The other is a bigger problem. It's in canonstabletest and the problem is that the failing test there isn't stable.; ```sh; $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; 1 molecule converted. $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; ```. So somehow, there seem to be an edge case in the canonicalization algo that the new SSSR ring code breaks. I don't know the canon code well enough to understand why atm but I will try to look into it. But maybe someone more versed into it can help out?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209:389,Testability,test,test,389,"Two fails in the tests. One is in testobconv_writers.py and I cannot see how that test has ever worked since the x- and y-coordinates in the expected output are the same. (https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/test/testobconv_writers.py#L2882-L2888); The other is a bigger problem. It's in canonstabletest and the problem is that the failing test there isn't stable.; ```sh; $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; 1 molecule converted. $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; ```. So somehow, there seem to be an edge case in the canonicalization algo that the new SSSR ring code breaks. I don't know the canon code well enough to understand why atm but I will try to look into it. But maybe someone more versed into it can help out?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988712025:124,Deployability,update,updated,124,"OK, found the source of the failing pcjson-test. There was a bug in that format, fixed in #2596. However, this test was not updated to match. I will add a PR for that...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988712025
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988712025:43,Testability,test,test,43,"OK, found the source of the failing pcjson-test. There was a bug in that format, fixed in #2596. However, this test was not updated to match. I will add a PR for that...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988712025
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988712025:111,Testability,test,test,111,"OK, found the source of the failing pcjson-test. There was a bug in that format, fixed in #2596. However, this test was not updated to match. I will add a PR for that...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988712025
https://github.com/openbabel/openbabel/pull/2648#issuecomment-1999103724:45,Testability,test,test,45,I found the problem to the failing canonical test. There was a bug in my new code when there were multiple ring systems in the molecule. It is now fixed and thereby I could also revert the changes to the canonstable file meaning that there are no longer any changes to the canonicalization.; So I think I am done with this now!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1999103724
https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826449590:336,Availability,down,downplay,336,"Cisco contacted me with a short window to fix these. Considering openbabel is used primarily in informatics, I'm not sure what some of these vulnerabilities get you. . You craft a specific Gaussian output file that allows you to hijack the `obabel` process. And do what, exactly? Execute something as the current user?. I don't want to downplay these - they're definitely bugs and should be fixed before the next release. But `obabel` is also a cheminformatics library, not generally facing an open network.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826449590
https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826449590:413,Deployability,release,release,413,"Cisco contacted me with a short window to fix these. Considering openbabel is used primarily in informatics, I'm not sure what some of these vulnerabilities get you. . You craft a specific Gaussian output file that allows you to hijack the `obabel` process. And do what, exactly? Execute something as the current user?. I don't want to downplay these - they're definitely bugs and should be fixed before the next release. But `obabel` is also a cheminformatics library, not generally facing an open network.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826449590
https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826722917:20,Security,attack,attack,20,"I guess a potential attack vector would be If someone were running a publicly exposed webapp that did conversions, and an attacker combined it with a privilege escalation vulnerability, they would have control of the server.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826722917
https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826722917:78,Security,expose,exposed,78,"I guess a potential attack vector would be If someone were running a publicly exposed webapp that did conversions, and an attacker combined it with a privilege escalation vulnerability, they would have control of the server.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826722917
https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826722917:122,Security,attack,attacker,122,"I guess a potential attack vector would be If someone were running a publicly exposed webapp that did conversions, and an attacker combined it with a privilege escalation vulnerability, they would have control of the server.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826722917
https://github.com/openbabel/openbabel/issues/2650#issuecomment-1867623491:39,Security,secur,security,39,This has been brought up by the Debian security team as well: https://bugs.debian.org/1059277,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1867623491
https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857:242,Safety,Detect,Detect,242,"@AlexisGeorgiou There is a technique called `sanitize SMILES strings`. This is to validate SMILES strings (as Geoffrey mentioned, to identify and sort out e.g. pentavalent carbons early), but not limited to this. See RDKit's cookbook, entry [Detect Chemistry Problems](http://rdkit.org/docs/Cookbook.html#detect-chemistry-problems) as an entry and means to cure the problems by an algorithm. Though keep in mind, there often are multiple SMILES strings one can assign to a structure, e.g. ```shell; obabel -:'c1ccncc1' -osmi -xk; C1C=CN=CC=1	; 1 molecule converted; ```. which entered pyridine in an implicit description of the aromaticity to provide a kekulized SMILES string. And there are universal and inchified SMILES strings by openbabel, too ([link](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). As a sequence of characters, OpenBabel's default SMILES about a structure need not be equal to the one by RDKit's default implementation either. (If creating a database, ascertain consistency in the generation of the data.). Aside from valence, stereochemistry in a SMILES string *can* be an issue on its own. For instance `C/C=C/C` about (*E*)-butene, `C/C=C\C` about (*Z*)-butene, and `CC=CC` which can describe both are all valid *by SMILES syntax* (see there depiction e.g. by [CDK depict](https://www.simolecule.com/cdkdepict/depict.html)). Similar ambiguous if e.g. `OC(c1ccccc1)C(=O)O` aims to describe the (*R*)-, the (*S*)- or both enantiomers of mandelic acid.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857
https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857:305,Safety,detect,detect-chemistry-problems,305,"@AlexisGeorgiou There is a technique called `sanitize SMILES strings`. This is to validate SMILES strings (as Geoffrey mentioned, to identify and sort out e.g. pentavalent carbons early), but not limited to this. See RDKit's cookbook, entry [Detect Chemistry Problems](http://rdkit.org/docs/Cookbook.html#detect-chemistry-problems) as an entry and means to cure the problems by an algorithm. Though keep in mind, there often are multiple SMILES strings one can assign to a structure, e.g. ```shell; obabel -:'c1ccncc1' -osmi -xk; C1C=CN=CC=1	; 1 molecule converted; ```. which entered pyridine in an implicit description of the aromaticity to provide a kekulized SMILES string. And there are universal and inchified SMILES strings by openbabel, too ([link](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). As a sequence of characters, OpenBabel's default SMILES about a structure need not be equal to the one by RDKit's default implementation either. (If creating a database, ascertain consistency in the generation of the data.). Aside from valence, stereochemistry in a SMILES string *can* be an issue on its own. For instance `C/C=C/C` about (*E*)-butene, `C/C=C\C` about (*Z*)-butene, and `CC=CC` which can describe both are all valid *by SMILES syntax* (see there depiction e.g. by [CDK depict](https://www.simolecule.com/cdkdepict/depict.html)). Similar ambiguous if e.g. `OC(c1ccccc1)C(=O)O` aims to describe the (*R*)-, the (*S*)- or both enantiomers of mandelic acid.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857
https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857:45,Security,sanitiz,sanitize,45,"@AlexisGeorgiou There is a technique called `sanitize SMILES strings`. This is to validate SMILES strings (as Geoffrey mentioned, to identify and sort out e.g. pentavalent carbons early), but not limited to this. See RDKit's cookbook, entry [Detect Chemistry Problems](http://rdkit.org/docs/Cookbook.html#detect-chemistry-problems) as an entry and means to cure the problems by an algorithm. Though keep in mind, there often are multiple SMILES strings one can assign to a structure, e.g. ```shell; obabel -:'c1ccncc1' -osmi -xk; C1C=CN=CC=1	; 1 molecule converted; ```. which entered pyridine in an implicit description of the aromaticity to provide a kekulized SMILES string. And there are universal and inchified SMILES strings by openbabel, too ([link](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). As a sequence of characters, OpenBabel's default SMILES about a structure need not be equal to the one by RDKit's default implementation either. (If creating a database, ascertain consistency in the generation of the data.). Aside from valence, stereochemistry in a SMILES string *can* be an issue on its own. For instance `C/C=C/C` about (*E*)-butene, `C/C=C\C` about (*Z*)-butene, and `CC=CC` which can describe both are all valid *by SMILES syntax* (see there depiction e.g. by [CDK depict](https://www.simolecule.com/cdkdepict/depict.html)). Similar ambiguous if e.g. `OC(c1ccccc1)C(=O)O` aims to describe the (*R*)-, the (*S*)- or both enantiomers of mandelic acid.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857
https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857:82,Security,validat,validate,82,"@AlexisGeorgiou There is a technique called `sanitize SMILES strings`. This is to validate SMILES strings (as Geoffrey mentioned, to identify and sort out e.g. pentavalent carbons early), but not limited to this. See RDKit's cookbook, entry [Detect Chemistry Problems](http://rdkit.org/docs/Cookbook.html#detect-chemistry-problems) as an entry and means to cure the problems by an algorithm. Though keep in mind, there often are multiple SMILES strings one can assign to a structure, e.g. ```shell; obabel -:'c1ccncc1' -osmi -xk; C1C=CN=CC=1	; 1 molecule converted; ```. which entered pyridine in an implicit description of the aromaticity to provide a kekulized SMILES string. And there are universal and inchified SMILES strings by openbabel, too ([link](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). As a sequence of characters, OpenBabel's default SMILES about a structure need not be equal to the one by RDKit's default implementation either. (If creating a database, ascertain consistency in the generation of the data.). Aside from valence, stereochemistry in a SMILES string *can* be an issue on its own. For instance `C/C=C/C` about (*E*)-butene, `C/C=C\C` about (*Z*)-butene, and `CC=CC` which can describe both are all valid *by SMILES syntax* (see there depiction e.g. by [CDK depict](https://www.simolecule.com/cdkdepict/depict.html)). Similar ambiguous if e.g. `OC(c1ccccc1)C(=O)O` aims to describe the (*R*)-, the (*S*)- or both enantiomers of mandelic acid.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857
https://github.com/openbabel/openbabel/issues/2652#issuecomment-1835053748:1950,Usability,simpl,simple,1950,"; ++i); Intensities.push_back(atof(vs[i].c_str()));. ifs.getline(buffer, BUFF_SIZE); // column labels or Raman intensity; if(strstr(buffer, ""Raman Activ"")) {; ifs.getline(buffer, BUFF_SIZE); // Depolar (P); ifs.getline(buffer, BUFF_SIZE); // Depolar (U); ifs.getline(buffer, BUFF_SIZE); // column labels; }; ifs.getline(buffer, BUFF_SIZE); // actual displacement data; tokenize(vs, buffer);; vector<vector3> vib1, vib2, vib3;; double x, y, z;; while(vs.size() >= 5) {; for (unsigned int i = 2; i < vs.size()-2; i += 3) {; x = atof(vs[i].c_str());; y = atof(vs[i+1].c_str());; z = atof(vs[i+2].c_str());; ```. In the files that `xtb` produces, the frequencies block has the following line headers:; ```; ...; 25 26 27; a a a ; Frequencies -- 3067.8451 3071.3773 3071.6466; Red. masses -- 1.7262 1.7831 1.7831; Frc consts -- 0.0000 0.0000 0.0000; IR Inten -- 0.0120 0.0352 0.0363; Raman Activ -- 0.0000 0.0000 0.0000; Depolar -- 0.0000 0.0000 0.0000; Atom AN X Y Z X Y Z X Y Z; 1 6 -0.09 0.05 -0.00 0.13 -0.07 0.00 0.02 -0.02 0.00; 2 6 0.09 0.05 0.00 -0.04 -0.03 -0.00 -0.12 -0.08 -0.00; ...; ```. i.e. with only a *single* ""Depolar"" line between ""Raman Activ"" and the column labels, whereas openbabel expects two and therefore throws away one line too many. Since the code is checking for specific strings anyway, it is presumably a simple change to get it to only throw away lines up until it finds one saying, for example, ""Atom AN""?. I tried to do a Freq calculation with Gaussian itself to see if `xtb` is formatting its Gaussian-style output files incorrectly, but the output only contained the headers:. ```; 1 2 3; A A A; Frequencies -- 31.0435 139.3587 381.0536; Red. masses -- 1.0167 1.1325 2.1534; Frc consts -- 0.0006 0.0130 0.1842; IR Inten -- 0.0000 0.2046 1.0684; Atom AN X Y Z X Y Z X Y Z; ```. which is the other case accounted for in the openbabel code. So it is not clear whether Gaussian itself would always produce two ""Depolar"" lines (`Depolar (P)` and `Depolar (U)`) or just one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2652#issuecomment-1835053748
https://github.com/openbabel/openbabel/issues/2652#issuecomment-1835053748:2501,Usability,clear,clear,2501,"; ++i); Intensities.push_back(atof(vs[i].c_str()));. ifs.getline(buffer, BUFF_SIZE); // column labels or Raman intensity; if(strstr(buffer, ""Raman Activ"")) {; ifs.getline(buffer, BUFF_SIZE); // Depolar (P); ifs.getline(buffer, BUFF_SIZE); // Depolar (U); ifs.getline(buffer, BUFF_SIZE); // column labels; }; ifs.getline(buffer, BUFF_SIZE); // actual displacement data; tokenize(vs, buffer);; vector<vector3> vib1, vib2, vib3;; double x, y, z;; while(vs.size() >= 5) {; for (unsigned int i = 2; i < vs.size()-2; i += 3) {; x = atof(vs[i].c_str());; y = atof(vs[i+1].c_str());; z = atof(vs[i+2].c_str());; ```. In the files that `xtb` produces, the frequencies block has the following line headers:; ```; ...; 25 26 27; a a a ; Frequencies -- 3067.8451 3071.3773 3071.6466; Red. masses -- 1.7262 1.7831 1.7831; Frc consts -- 0.0000 0.0000 0.0000; IR Inten -- 0.0120 0.0352 0.0363; Raman Activ -- 0.0000 0.0000 0.0000; Depolar -- 0.0000 0.0000 0.0000; Atom AN X Y Z X Y Z X Y Z; 1 6 -0.09 0.05 -0.00 0.13 -0.07 0.00 0.02 -0.02 0.00; 2 6 0.09 0.05 0.00 -0.04 -0.03 -0.00 -0.12 -0.08 -0.00; ...; ```. i.e. with only a *single* ""Depolar"" line between ""Raman Activ"" and the column labels, whereas openbabel expects two and therefore throws away one line too many. Since the code is checking for specific strings anyway, it is presumably a simple change to get it to only throw away lines up until it finds one saying, for example, ""Atom AN""?. I tried to do a Freq calculation with Gaussian itself to see if `xtb` is formatting its Gaussian-style output files incorrectly, but the output only contained the headers:. ```; 1 2 3; A A A; Frequencies -- 31.0435 139.3587 381.0536; Red. masses -- 1.0167 1.1325 2.1534; Frc consts -- 0.0006 0.0130 0.1842; IR Inten -- 0.0000 0.2046 1.0684; Atom AN X Y Z X Y Z X Y Z; ```. which is the other case accounted for in the openbabel code. So it is not clear whether Gaussian itself would always produce two ""Depolar"" lines (`Depolar (P)` and `Depolar (U)`) or just one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2652#issuecomment-1835053748
https://github.com/openbabel/openbabel/issues/2655#issuecomment-1852826142:450,Energy Efficiency,CHARGE,CHARGES,450,"Agreed, `[CH2]` stays CH2 e.g., in [CDK Depict](https://www.simolecule.com/cdkdepict/depict.html) and is not methane represented as `C`; with one explicit hydrogen `[H]C`, or `C[H]`, nor depicted with two explicit hydrogens, `[H]C[H]`. This equally is reflected in openbabel reports:. ```shell; $ obabel -:""[CH2]"" -oreport; FILENAME: ; FORMULA: CH2; MASS: 14.0266; EXACT MASS: 14.0156501; INTERATOMIC DISTANCES. C 1; -----------; C 1 0.0000 . ATOMIC CHARGES; C 1 0.0000000000. BOND ANGLES. TORSION ANGLES. 1 molecule converted; ```. vs, for instance. ```shell; $ obabel -:""C[H]"" -oreport; FILENAME: ; FORMULA: CH4; MASS: 16.0425; EXACT MASS: 16.0313001; TOTAL SPIN: 2; INTERATOMIC DISTANCES. C 1 H 2; ----------------------; C 1 0.0000 ; H 2 0.0000 0.0000 . ATOMIC CHARGES; C 1 -0.0309297904; H 2 0.0309297904. BOND ANGLES. TORSION ANGLES. 1 molecule converted; ```. But then, the equally observed. ```shell; $ obabel -:""[CH2]"" -oxyz -xh; 1. C 0.00000 0.00000 0.00000; 1 molecule converted; ```. isn't consistent, either:. ```shell; $ obabel -:""[CH2]"" -oxyz -h; 3. C 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2655#issuecomment-1852826142
https://github.com/openbabel/openbabel/issues/2655#issuecomment-1852826142:765,Energy Efficiency,CHARGE,CHARGES,765,"Agreed, `[CH2]` stays CH2 e.g., in [CDK Depict](https://www.simolecule.com/cdkdepict/depict.html) and is not methane represented as `C`; with one explicit hydrogen `[H]C`, or `C[H]`, nor depicted with two explicit hydrogens, `[H]C[H]`. This equally is reflected in openbabel reports:. ```shell; $ obabel -:""[CH2]"" -oreport; FILENAME: ; FORMULA: CH2; MASS: 14.0266; EXACT MASS: 14.0156501; INTERATOMIC DISTANCES. C 1; -----------; C 1 0.0000 . ATOMIC CHARGES; C 1 0.0000000000. BOND ANGLES. TORSION ANGLES. 1 molecule converted; ```. vs, for instance. ```shell; $ obabel -:""C[H]"" -oreport; FILENAME: ; FORMULA: CH4; MASS: 16.0425; EXACT MASS: 16.0313001; TOTAL SPIN: 2; INTERATOMIC DISTANCES. C 1 H 2; ----------------------; C 1 0.0000 ; H 2 0.0000 0.0000 . ATOMIC CHARGES; C 1 -0.0309297904; H 2 0.0309297904. BOND ANGLES. TORSION ANGLES. 1 molecule converted; ```. But then, the equally observed. ```shell; $ obabel -:""[CH2]"" -oxyz -xh; 1. C 0.00000 0.00000 0.00000; 1 molecule converted; ```. isn't consistent, either:. ```shell; $ obabel -:""[CH2]"" -oxyz -h; 3. C 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2655#issuecomment-1852826142
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853535825:79,Usability,clear,clearly,79,"@schatzsc Not a solution, only a complementary observation: by default, obabel clearly indicates that the input structure is (in comparison to a ""more usual one"") problematic e.g., during the conversion from .mol to .png:. ```shell; $ obabel -imol carbene_complex.mol.txt -O na.png; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3. ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3. ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 4. 1 molecule converted; norwid@debian:~/Desktop$ obabel -imol carbene_complex.mol.txt -O check.sdf; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3. ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valenc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853535825
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655:186,Energy Efficiency,charge,charge,186,"@schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. ![test_in_marvin](https://github.com/openbabel/openbabel/assets/19709084/a3ee90f5-0a20-4c43-bfd4-97696e937227). Beside saving the structure in the program's original format as a Marvin object (.mrv), it was exported as .mol -- once in the v2000 dialect, once in the more recent v3000 dialect. The Hill formula matches your anticipated result:. ```shell; $ obabel marvin_mol2000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 0.8249 0.0000 ; 1 molecule converted; ```. and . ```shell; $ obabel marvin_mol3000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 1.5399 0.0000 ; 1 molecule converted; ```. For the visualization by obabel, `-xu` replaces the element colors by a black-and-white scheme favourable here, for instance. ```shell; $ obabel marvin_mol2000.mol -O mol2000.png -xu; 1 molecule converted; ```. ![mol2000](https://github.com/openbabel/openbabel/assets/19709084/aed6c32a-e538-4e96-9d9d-d71a1c8f9c01). To ease a replication, see the archive attached below. For the test, I used obabel (version 3.1.1 -- Jan 4 2023 -- 09:58:24) as provided by Linux Debian 13/trixie (branch testing). [2023-12-13_test_in_marvin.zip](https://github.com/openbabel/openbabel/files/13659583/2023-12-13_test_in_marvin.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655:40,Testability,test,test,40,"@schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. ![test_in_marvin](https://github.com/openbabel/openbabel/assets/19709084/a3ee90f5-0a20-4c43-bfd4-97696e937227). Beside saving the structure in the program's original format as a Marvin object (.mrv), it was exported as .mol -- once in the v2000 dialect, once in the more recent v3000 dialect. The Hill formula matches your anticipated result:. ```shell; $ obabel marvin_mol2000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 0.8249 0.0000 ; 1 molecule converted; ```. and . ```shell; $ obabel marvin_mol3000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 1.5399 0.0000 ; 1 molecule converted; ```. For the visualization by obabel, `-xu` replaces the element colors by a black-and-white scheme favourable here, for instance. ```shell; $ obabel marvin_mol2000.mol -O mol2000.png -xu; 1 molecule converted; ```. ![mol2000](https://github.com/openbabel/openbabel/assets/19709084/aed6c32a-e538-4e96-9d9d-d71a1c8f9c01). To ease a replication, see the archive attached below. For the test, I used obabel (version 3.1.1 -- Jan 4 2023 -- 09:58:24) as provided by Linux Debian 13/trixie (branch testing). [2023-12-13_test_in_marvin.zip](https://github.com/openbabel/openbabel/files/13659583/2023-12-13_test_in_marvin.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655:1582,Testability,test,test,1582,"@schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. ![test_in_marvin](https://github.com/openbabel/openbabel/assets/19709084/a3ee90f5-0a20-4c43-bfd4-97696e937227). Beside saving the structure in the program's original format as a Marvin object (.mrv), it was exported as .mol -- once in the v2000 dialect, once in the more recent v3000 dialect. The Hill formula matches your anticipated result:. ```shell; $ obabel marvin_mol2000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 0.8249 0.0000 ; 1 molecule converted; ```. and . ```shell; $ obabel marvin_mol3000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 1.5399 0.0000 ; 1 molecule converted; ```. For the visualization by obabel, `-xu` replaces the element colors by a black-and-white scheme favourable here, for instance. ```shell; $ obabel marvin_mol2000.mol -O mol2000.png -xu; 1 molecule converted; ```. ![mol2000](https://github.com/openbabel/openbabel/assets/19709084/aed6c32a-e538-4e96-9d9d-d71a1c8f9c01). To ease a replication, see the archive attached below. For the test, I used obabel (version 3.1.1 -- Jan 4 2023 -- 09:58:24) as provided by Linux Debian 13/trixie (branch testing). [2023-12-13_test_in_marvin.zip](https://github.com/openbabel/openbabel/files/13659583/2023-12-13_test_in_marvin.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655:1690,Testability,test,testing,1690,"@schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. ![test_in_marvin](https://github.com/openbabel/openbabel/assets/19709084/a3ee90f5-0a20-4c43-bfd4-97696e937227). Beside saving the structure in the program's original format as a Marvin object (.mrv), it was exported as .mol -- once in the v2000 dialect, once in the more recent v3000 dialect. The Hill formula matches your anticipated result:. ```shell; $ obabel marvin_mol2000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 0.8249 0.0000 ; 1 molecule converted; ```. and . ```shell; $ obabel marvin_mol3000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 1.5399 0.0000 ; 1 molecule converted; ```. For the visualization by obabel, `-xu` replaces the element colors by a black-and-white scheme favourable here, for instance. ```shell; $ obabel marvin_mol2000.mol -O mol2000.png -xu; 1 molecule converted; ```. ![mol2000](https://github.com/openbabel/openbabel/assets/19709084/aed6c32a-e538-4e96-9d9d-d71a1c8f9c01). To ease a replication, see the archive attached below. For the test, I used obabel (version 3.1.1 -- Jan 4 2023 -- 09:58:24) as provided by Linux Debian 13/trixie (branch testing). [2023-12-13_test_in_marvin.zip](https://github.com/openbabel/openbabel/files/13659583/2023-12-13_test_in_marvin.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854337760:81,Usability,clear,clearly,81,"> @schatzsc Not a solution, only a complementary observation: by default, obabel clearly indicates that the input structure is (in comparison to a ""more usual one"") problematic e.g., during the conversion from .mol to .png:; > ; > ```shell; > $ obabel -imol carbene_complex.mol.txt -O na.png; > ==============================; > *** Open Babel Warning in ReadMolecule; > WARNING: Problem interpreting the valence field of an atom; > The valence field specifies a valence 2 that is; > less than the observed explicit valence 3. @nbehrnd Well, the carbene carbon atoms are indeed another problematic case - the ""standard valence"" of 2 had to be set here because otherwise, the hydrogen count was too high by 3 not 1 (as you also observed with the Jmol picture). That of course is at conflict with the Lewis formula (and molfile) which features 3 bonds, two C-N and one C-Pt. The main problem seems to be that bonds which do not arise from combination of ""radical fragments"" like A* and B* -> A-B but Lewis acid/base pairs or otherwise not in line with the ""octet rule"" are not treated very well by most cheminformatics approaches.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854337760
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792:188,Energy Efficiency,charge,charge,188,"> @schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. @nbehrnd As also mentioned in the [Chemotion issue](https://github.com/ComPlat/chemotion_ELN/issues/1551) metal-ligand bonds MUST NOT be broken. This will also be the standard in the latest upcoming IUPAC InChI recommendations on organometallics. Furthermore, ""dative"" bonds have no relevancy at least in coordination and organometallic chemistry of the d- and f-elements - all those bonds are more or less polar covalent bonds. The best solution would actually for atoms and bonds to be marked with an attribute ""don't touch"" in terms of bond order and addition of implicit hydrogens and M-L ""lines"" simply be taken as an indication of a bonding interaction without any implication on the electron count. In the context of [TUCAN](https://github.com/TUCAN-nest/TUCAN) we have called these ""simple bonds"". Maybe some Zoom discussion of software developers together with the IUPAC InChi organometallics team would be helpful to work towards general solutions?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792:42,Testability,test,test,42,"> @schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. @nbehrnd As also mentioned in the [Chemotion issue](https://github.com/ComPlat/chemotion_ELN/issues/1551) metal-ligand bonds MUST NOT be broken. This will also be the standard in the latest upcoming IUPAC InChI recommendations on organometallics. Furthermore, ""dative"" bonds have no relevancy at least in coordination and organometallic chemistry of the d- and f-elements - all those bonds are more or less polar covalent bonds. The best solution would actually for atoms and bonds to be marked with an attribute ""don't touch"" in terms of bond order and addition of implicit hydrogens and M-L ""lines"" simply be taken as an indication of a bonding interaction without any implication on the electron count. In the context of [TUCAN](https://github.com/TUCAN-nest/TUCAN) we have called these ""simple bonds"". Maybe some Zoom discussion of software developers together with the IUPAC InChi organometallics team would be helpful to work towards general solutions?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792:834,Usability,simpl,simply,834,"> @schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. @nbehrnd As also mentioned in the [Chemotion issue](https://github.com/ComPlat/chemotion_ELN/issues/1551) metal-ligand bonds MUST NOT be broken. This will also be the standard in the latest upcoming IUPAC InChI recommendations on organometallics. Furthermore, ""dative"" bonds have no relevancy at least in coordination and organometallic chemistry of the d- and f-elements - all those bonds are more or less polar covalent bonds. The best solution would actually for atoms and bonds to be marked with an attribute ""don't touch"" in terms of bond order and addition of implicit hydrogens and M-L ""lines"" simply be taken as an indication of a bonding interaction without any implication on the electron count. In the context of [TUCAN](https://github.com/TUCAN-nest/TUCAN) we have called these ""simple bonds"". Maybe some Zoom discussion of software developers together with the IUPAC InChi organometallics team would be helpful to work towards general solutions?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792:1024,Usability,simpl,simple,1024,"> @schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. @nbehrnd As also mentioned in the [Chemotion issue](https://github.com/ComPlat/chemotion_ELN/issues/1551) metal-ligand bonds MUST NOT be broken. This will also be the standard in the latest upcoming IUPAC InChI recommendations on organometallics. Furthermore, ""dative"" bonds have no relevancy at least in coordination and organometallic chemistry of the d- and f-elements - all those bonds are more or less polar covalent bonds. The best solution would actually for atoms and bonds to be marked with an attribute ""don't touch"" in terms of bond order and addition of implicit hydrogens and M-L ""lines"" simply be taken as an indication of a bonding interaction without any implication on the electron count. In the context of [TUCAN](https://github.com/TUCAN-nest/TUCAN) we have called these ""simple bonds"". Maybe some Zoom discussion of software developers together with the IUPAC InChi organometallics team would be helpful to work towards general solutions?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859235613:1463,Deployability,update,update,1463," plain single lines. The entry in IUPAC's Gold Book[2] with the example about the complex of ammonia and borane however uses the arrow; possibly the delta in the electronegativities in this example is larger, than in your example of the carbene complex. However, Gold Book equally features an entry coordination[2b] with the statement. «The synonym 'dative bond' is obsolete. (The origin of the bonding electrons has by itself no bearing on the character of the bond formed. Thus, the formation of methyl chloride from a methyl cation and a chloride ion involves coordination; the resultant bond obviously differs in no way from the C–Cl bond in methyl chloride formed by any other path, e.g. by colligation of a methyl radical and a chlorine atom.)». which is more similar to your argument ""use a plain line"". I don't know why then IUPAC's Gold Book (still) retains an entry about dative bonds. The test site of ChemDraw JS[3] -- which should be the easiest for the owner to update (once CambridgeSoft -- Brecher's affiliation 2008 -- meanwhile acquired by Perkin), uses dative bonds and again the arrow. A query of PubChem for ZnPc[4] yields a 2D model which does not deploy arrows to the more electropositive metal, but instead dotted lines. It seems to be their pattern adopted, based on the 2018 publication «PubChem chemical structure standardization»[5] by authors involved in PubChem's work (figs 13, 20b, 29b, 29c). Et3N -> BH3: Pauling electronegativity N: 3.04, B: 2.04, delta: 1.00; in case of ZnPc with bonds between Zn and N: Zn: 1.65, delta: 1.39; CuPc Cu: 1.90, delta: 1.50; but; imidazole ./. Pt (your carbene complex) C: 2.55, Pt: 2.28, delta: 0.27; (values by https://en.wikipedia.org/wiki/Electronegativity, version 2023-12-07). [1] Graphical representation standards for chemical structure diagrams (IUPAC Recommendations 2008), https://doi.org/10.1351/pac200880020277; [2] https://goldbook.iupac.org/terms/view/D01523, revision February 24, 2014; [2b] https://goldbook.iupac.org",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859235613
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859235613:1657,Deployability,deploy,deploy,1657,"ivities in this example is larger, than in your example of the carbene complex. However, Gold Book equally features an entry coordination[2b] with the statement. «The synonym 'dative bond' is obsolete. (The origin of the bonding electrons has by itself no bearing on the character of the bond formed. Thus, the formation of methyl chloride from a methyl cation and a chloride ion involves coordination; the resultant bond obviously differs in no way from the C–Cl bond in methyl chloride formed by any other path, e.g. by colligation of a methyl radical and a chlorine atom.)». which is more similar to your argument ""use a plain line"". I don't know why then IUPAC's Gold Book (still) retains an entry about dative bonds. The test site of ChemDraw JS[3] -- which should be the easiest for the owner to update (once CambridgeSoft -- Brecher's affiliation 2008 -- meanwhile acquired by Perkin), uses dative bonds and again the arrow. A query of PubChem for ZnPc[4] yields a 2D model which does not deploy arrows to the more electropositive metal, but instead dotted lines. It seems to be their pattern adopted, based on the 2018 publication «PubChem chemical structure standardization»[5] by authors involved in PubChem's work (figs 13, 20b, 29b, 29c). Et3N -> BH3: Pauling electronegativity N: 3.04, B: 2.04, delta: 1.00; in case of ZnPc with bonds between Zn and N: Zn: 1.65, delta: 1.39; CuPc Cu: 1.90, delta: 1.50; but; imidazole ./. Pt (your carbene complex) C: 2.55, Pt: 2.28, delta: 0.27; (values by https://en.wikipedia.org/wiki/Electronegativity, version 2023-12-07). [1] Graphical representation standards for chemical structure diagrams (IUPAC Recommendations 2008), https://doi.org/10.1351/pac200880020277; [2] https://goldbook.iupac.org/terms/view/D01523, revision February 24, 2014; [2b] https://goldbook.iupac.org/terms/view/C01329, revision February 24, 2014; [3] https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html; [4] https://pubchem.ncbi.nlm.nih.gov/compound/518924; [5] ht",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859235613
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859235613:1387,Testability,test,test,1387," plain single lines. The entry in IUPAC's Gold Book[2] with the example about the complex of ammonia and borane however uses the arrow; possibly the delta in the electronegativities in this example is larger, than in your example of the carbene complex. However, Gold Book equally features an entry coordination[2b] with the statement. «The synonym 'dative bond' is obsolete. (The origin of the bonding electrons has by itself no bearing on the character of the bond formed. Thus, the formation of methyl chloride from a methyl cation and a chloride ion involves coordination; the resultant bond obviously differs in no way from the C–Cl bond in methyl chloride formed by any other path, e.g. by colligation of a methyl radical and a chlorine atom.)». which is more similar to your argument ""use a plain line"". I don't know why then IUPAC's Gold Book (still) retains an entry about dative bonds. The test site of ChemDraw JS[3] -- which should be the easiest for the owner to update (once CambridgeSoft -- Brecher's affiliation 2008 -- meanwhile acquired by Perkin), uses dative bonds and again the arrow. A query of PubChem for ZnPc[4] yields a 2D model which does not deploy arrows to the more electropositive metal, but instead dotted lines. It seems to be their pattern adopted, based on the 2018 publication «PubChem chemical structure standardization»[5] by authors involved in PubChem's work (figs 13, 20b, 29b, 29c). Et3N -> BH3: Pauling electronegativity N: 3.04, B: 2.04, delta: 1.00; in case of ZnPc with bonds between Zn and N: Zn: 1.65, delta: 1.39; CuPc Cu: 1.90, delta: 1.50; but; imidazole ./. Pt (your carbene complex) C: 2.55, Pt: 2.28, delta: 0.27; (values by https://en.wikipedia.org/wiki/Electronegativity, version 2023-12-07). [1] Graphical representation standards for chemical structure diagrams (IUPAC Recommendations 2008), https://doi.org/10.1351/pac200880020277; [2] https://goldbook.iupac.org/terms/view/D01523, revision February 24, 2014; [2b] https://goldbook.iupac.org",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859235613
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859711211:301,Testability,benchmark,benchmark,301,"@schatzsc For your information, there is an early note by Greg Landrum (project of RDKit) [here](https://github.com/rdkit/rdkit/discussions/6995) by today, [2023-12-18 Mon]. By your contribution to chemotion_ELN you possibly have a couple of «typical» carbenes and other complexes one could submit to benchmark an eventually revised approach.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859711211
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860576192:1124,Energy Efficiency,energy,energy,1124,"@nbehrnd . > Yes I do think it were best if the relevant IUPAC commissions and major creators of software (e.g., ChemDraw, Marvin, ChemDoodle; libraries like RDKit), of databases (Reaxys, PubChem, etc) and publishers would get together on this. I will discuss with Sonja Herres-Pawlis from RWTH Aachen who is involved in both the management committee of [NFDI4Chem](https://www.nfdi4chem.de/) but it will likely not be before the winter holidays anymore. One idea that was circulated was to organize such a meeting in the context of or as a satellite meeting to [EuChemS congress 2024](https://euchems2024.org/). > Brecher's compiled rule GR 1.7.1 about coordination compounds[1] advocates plain single lines. Yes, this is in line with the community I am familiar with. Furthermore, this paper goes on with an argument. ""In spite of the analogy of dative bonds with covalent bonds, in that both types imply sharing a common electron pair between two vicinal atoms, the former are distinguished by their significant polarity, lesser strength, and greater length. The distinctive feature of dative bonds is that their minimum-energy rupture in the gas phase or in inert solvent follows the heterolytic bond cleavage path."". that is focused on the reactivity not structure, which is something outside regular cheminformatics models.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860576192
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860585524:365,Usability,clear,clearly,365,"@nbehrnd . Furthermore, Brecher makes an argument for explicit hydrogen atoms on all ligand atoms directly coordinated (bonded) to a metal center:. ""Bonds representing coordination from one atom to a single other atom should be represented as normal plain single bonds. Any hydrogen atoms bonded to the atoms at either end of such a coordination bond must be shown clearly, even if that produces a diagram where some atoms appear to have non-standard valences, such as a nitrogen atom with four attached bonds."". This is particularly important for example with ammine (NH3) ligands, where most software mis-represents cisplatin as [PtCl2(NH2)2] instead of [PtCl2(NH3)2] without explicit hydrogens, since they do not recognize the use of the free electron pair on the ammonia ligands for bonding, which does along with increase of ""valence"" on N from 3 to 4 and try to maintain the ""standard valence"" of N as 3 by removing one H to NH2 instead of NH3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860585524
https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860589720:303,Testability,benchmark,benchmark,303,"> @schatzsc For your information, there is an early note by Greg Landrum (project of RDKit) [here](https://github.com/rdkit/rdkit/discussions/6995) by today, [2023-12-18 Mon]. By your contribution to chemotion_ELN you possibly have a couple of «typical» carbenes and other complexes one could submit to benchmark an eventually revised approach. Thank you very much for pointing me to this additional line of discussion - will take a look there",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860589720
https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642:117,Testability,log,log,117,"@ivzzognam Because there is no line with an `obabel` instruction, is it related to obabel? And if you want to report log from the shell in a GitHub issue, it is better to enclose it in a block starting / closing by a line of three back ticks as code block (see for example the 101 about markdown on [learnxinyminutes](https://learnxinyminutes.com/docs/markdown/)) to yield something in line of . ```shell; $ obabel -:""c1ccncc1"" -h --gen3d -oxyz; 11. C 1.43303 0.05159 0.00100; C 0.68800 1.22595 0.00151; C -0.69424 1.12564 0.00218; N -1.36237 -0.04853 0.00552; C -0.61197 -1.17189 0.00692; C 0.77379 -1.17331 0.00332; H 2.51852 0.09036 -0.00113; H 1.17153 2.19630 0.00127; H -1.31976 2.01344 0.00006; H -1.17257 -2.10232 0.01145; H 1.32543 -2.10632 0.00270; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642
https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642:300,Usability,learn,learnxinyminutes,300,"@ivzzognam Because there is no line with an `obabel` instruction, is it related to obabel? And if you want to report log from the shell in a GitHub issue, it is better to enclose it in a block starting / closing by a line of three back ticks as code block (see for example the 101 about markdown on [learnxinyminutes](https://learnxinyminutes.com/docs/markdown/)) to yield something in line of . ```shell; $ obabel -:""c1ccncc1"" -h --gen3d -oxyz; 11. C 1.43303 0.05159 0.00100; C 0.68800 1.22595 0.00151; C -0.69424 1.12564 0.00218; N -1.36237 -0.04853 0.00552; C -0.61197 -1.17189 0.00692; C 0.77379 -1.17331 0.00332; H 2.51852 0.09036 -0.00113; H 1.17153 2.19630 0.00127; H -1.31976 2.01344 0.00006; H -1.17257 -2.10232 0.01145; H 1.32543 -2.10632 0.00270; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642
https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642:326,Usability,learn,learnxinyminutes,326,"@ivzzognam Because there is no line with an `obabel` instruction, is it related to obabel? And if you want to report log from the shell in a GitHub issue, it is better to enclose it in a block starting / closing by a line of three back ticks as code block (see for example the 101 about markdown on [learnxinyminutes](https://learnxinyminutes.com/docs/markdown/)) to yield something in line of . ```shell; $ obabel -:""c1ccncc1"" -h --gen3d -oxyz; 11. C 1.43303 0.05159 0.00100; C 0.68800 1.22595 0.00151; C -0.69424 1.12564 0.00218; N -1.36237 -0.04853 0.00552; C -0.61197 -1.17189 0.00692; C 0.77379 -1.17331 0.00332; H 2.51852 0.09036 -0.00113; H 1.17153 2.19630 0.00127; H -1.31976 2.01344 0.00006; H -1.17257 -2.10232 0.01145; H 1.32543 -2.10632 0.00270; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642
https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694:656,Availability,error,error,656,"> Hello guys !!!! i'm trying to use the following script :; > ; > #!/bin/bash; > ; > #SBATCH --job-name=index_human #SBATCH --partition=all #SBATCH --ntasks=1 #SBATCH --cpus-per-task=10 #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com) #SBATCH --cpu-bind=rank #SBATCH --mail-type=ALL #SBATCH --hint=compute_bound; > ; > module load STAR/2.6.0c; > ; > srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$; > ; > when i run it this is the error : Dec 13 08:56:22 ..... started STAR run Dec 13 08:56:22 ... starting to generate Genome files Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time... Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk... slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed srun: Exceeded job memory limit slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 *** srun: Job step aborted: Waiting up to 32 seconds for job step to finish. srun: error: falkor7: task 0: Killed; > ; > How can i resolve it ?; > ; > Thanks to everyone !!!!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694
https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694:932,Availability,error,error,932,"> Hello guys !!!! i'm trying to use the following script :; > ; > #!/bin/bash; > ; > #SBATCH --job-name=index_human #SBATCH --partition=all #SBATCH --ntasks=1 #SBATCH --cpus-per-task=10 #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com) #SBATCH --cpu-bind=rank #SBATCH --mail-type=ALL #SBATCH --hint=compute_bound; > ; > module load STAR/2.6.0c; > ; > srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$; > ; > when i run it this is the error : Dec 13 08:56:22 ..... started STAR run Dec 13 08:56:22 ... starting to generate Genome files Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time... Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk... slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed srun: Exceeded job memory limit slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 *** srun: Job step aborted: Waiting up to 32 seconds for job step to finish. srun: error: falkor7: task 0: Killed; > ; > How can i resolve it ?; > ; > Thanks to everyone !!!!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694
https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694:1064,Availability,error,error,1064,"> Hello guys !!!! i'm trying to use the following script :; > ; > #!/bin/bash; > ; > #SBATCH --job-name=index_human #SBATCH --partition=all #SBATCH --ntasks=1 #SBATCH --cpus-per-task=10 #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com) #SBATCH --cpu-bind=rank #SBATCH --mail-type=ALL #SBATCH --hint=compute_bound; > ; > module load STAR/2.6.0c; > ; > srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$; > ; > when i run it this is the error : Dec 13 08:56:22 ..... started STAR run Dec 13 08:56:22 ... starting to generate Genome files Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time... Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk... slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed srun: Exceeded job memory limit slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 *** srun: Job step aborted: Waiting up to 32 seconds for job step to finish. srun: error: falkor7: task 0: Killed; > ; > How can i resolve it ?; > ; > Thanks to everyone !!!!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694
https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694:1217,Availability,error,error,1217,"> Hello guys !!!! i'm trying to use the following script :; > ; > #!/bin/bash; > ; > #SBATCH --job-name=index_human #SBATCH --partition=all #SBATCH --ntasks=1 #SBATCH --cpus-per-task=10 #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com) #SBATCH --cpu-bind=rank #SBATCH --mail-type=ALL #SBATCH --hint=compute_bound; > ; > module load STAR/2.6.0c; > ; > srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$; > ; > when i run it this is the error : Dec 13 08:56:22 ..... started STAR run Dec 13 08:56:22 ... starting to generate Genome files Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time... Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk... slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed srun: Exceeded job memory limit slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 *** srun: Job step aborted: Waiting up to 32 seconds for job step to finish. srun: error: falkor7: task 0: Killed; > ; > How can i resolve it ?; > ; > Thanks to everyone !!!!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694
https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694:349,Performance,load,load,349,"> Hello guys !!!! i'm trying to use the following script :; > ; > #!/bin/bash; > ; > #SBATCH --job-name=index_human #SBATCH --partition=all #SBATCH --ntasks=1 #SBATCH --cpus-per-task=10 #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com) #SBATCH --cpu-bind=rank #SBATCH --mail-type=ALL #SBATCH --hint=compute_bound; > ; > module load STAR/2.6.0c; > ; > srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$; > ; > when i run it this is the error : Dec 13 08:56:22 ..... started STAR run Dec 13 08:56:22 ... starting to generate Genome files Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time... Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk... slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed srun: Exceeded job memory limit slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 *** srun: Job step aborted: Waiting up to 32 seconds for job step to finish. srun: error: falkor7: task 0: Killed; > ; > How can i resolve it ?; > ; > Thanks to everyone !!!!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694
https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694:1153,Safety,abort,aborted,1153,"> Hello guys !!!! i'm trying to use the following script :; > ; > #!/bin/bash; > ; > #SBATCH --job-name=index_human #SBATCH --partition=all #SBATCH --ntasks=1 #SBATCH --cpus-per-task=10 #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com) #SBATCH --cpu-bind=rank #SBATCH --mail-type=ALL #SBATCH --hint=compute_bound; > ; > module load STAR/2.6.0c; > ; > srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$; > ; > when i run it this is the error : Dec 13 08:56:22 ..... started STAR run Dec 13 08:56:22 ... starting to generate Genome files Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time... Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk... slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed srun: Exceeded job memory limit slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 *** srun: Job step aborted: Waiting up to 32 seconds for job step to finish. srun: error: falkor7: task 0: Killed; > ; > How can i resolve it ?; > ; > Thanks to everyone !!!!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860295275:291,Deployability,install,installing,291,"I speculate your setup attempts to fetch openbabel from pypi.org instead of; the OS' package manager. If this is the case, check if the by bypass with openbabel-wheel equally works; for you. This works out of the box e.g., within a virtual environment set up; in Linux Debian 13/trixie when installing openbabel via. ```shell; pip install -r ./requirements.txt; ```. Its current update was published in October 2023.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860295275
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860295275:331,Deployability,install,install,331,"I speculate your setup attempts to fetch openbabel from pypi.org instead of; the OS' package manager. If this is the case, check if the by bypass with openbabel-wheel equally works; for you. This works out of the box e.g., within a virtual environment set up; in Linux Debian 13/trixie when installing openbabel via. ```shell; pip install -r ./requirements.txt; ```. Its current update was published in October 2023.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860295275
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860295275:379,Deployability,update,update,379,"I speculate your setup attempts to fetch openbabel from pypi.org instead of; the OS' package manager. If this is the case, check if the by bypass with openbabel-wheel equally works; for you. This works out of the box e.g., within a virtual environment set up; in Linux Debian 13/trixie when installing openbabel via. ```shell; pip install -r ./requirements.txt; ```. Its current update was published in October 2023.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860295275
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793:840,Availability,error,error,840,"> I speculate your setup attempts to fetch openbabel from pypi.org instead of the OS' package manager. If this is the case, check if the by bypass with openbabel-wheel equally works for you. This works out of the box e.g., within a virtual environment set up in Linux Debian 13/trixie when installing openbabel via ```shell pip install -r ./requirements.txt ``` Its current update was published in October 2023. Sorry, I'm a beginner in this field and I don't understand what you mean.Could you explain it in more detail?. ```bash; pip list; Package Version; --------------- --------; colorama 0.4.6; exceptiongroup 1.2.0; iniconfig 2.0.0; openbabel-wheel 3.1.1.19; packaging 23.2; pip 23.3.1; pluggy 1.3.0; pytest 7.4.3; setuptools 68.2.2; tomli 2.0.1; wheel 0.41.2; ```; i use openbabel-wheel with new try,and delete build cache, but the error was same,. this is my code. ```bash; cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_EXECUTABLE=/home/jf/Programs/anaconda3/envs/gnina/bin/python ..; ```; thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793:290,Deployability,install,installing,290,"> I speculate your setup attempts to fetch openbabel from pypi.org instead of the OS' package manager. If this is the case, check if the by bypass with openbabel-wheel equally works for you. This works out of the box e.g., within a virtual environment set up in Linux Debian 13/trixie when installing openbabel via ```shell pip install -r ./requirements.txt ``` Its current update was published in October 2023. Sorry, I'm a beginner in this field and I don't understand what you mean.Could you explain it in more detail?. ```bash; pip list; Package Version; --------------- --------; colorama 0.4.6; exceptiongroup 1.2.0; iniconfig 2.0.0; openbabel-wheel 3.1.1.19; packaging 23.2; pip 23.3.1; pluggy 1.3.0; pytest 7.4.3; setuptools 68.2.2; tomli 2.0.1; wheel 0.41.2; ```; i use openbabel-wheel with new try,and delete build cache, but the error was same,. this is my code. ```bash; cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_EXECUTABLE=/home/jf/Programs/anaconda3/envs/gnina/bin/python ..; ```; thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793:328,Deployability,install,install,328,"> I speculate your setup attempts to fetch openbabel from pypi.org instead of the OS' package manager. If this is the case, check if the by bypass with openbabel-wheel equally works for you. This works out of the box e.g., within a virtual environment set up in Linux Debian 13/trixie when installing openbabel via ```shell pip install -r ./requirements.txt ``` Its current update was published in October 2023. Sorry, I'm a beginner in this field and I don't understand what you mean.Could you explain it in more detail?. ```bash; pip list; Package Version; --------------- --------; colorama 0.4.6; exceptiongroup 1.2.0; iniconfig 2.0.0; openbabel-wheel 3.1.1.19; packaging 23.2; pip 23.3.1; pluggy 1.3.0; pytest 7.4.3; setuptools 68.2.2; tomli 2.0.1; wheel 0.41.2; ```; i use openbabel-wheel with new try,and delete build cache, but the error was same,. this is my code. ```bash; cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_EXECUTABLE=/home/jf/Programs/anaconda3/envs/gnina/bin/python ..; ```; thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793:374,Deployability,update,update,374,"> I speculate your setup attempts to fetch openbabel from pypi.org instead of the OS' package manager. If this is the case, check if the by bypass with openbabel-wheel equally works for you. This works out of the box e.g., within a virtual environment set up in Linux Debian 13/trixie when installing openbabel via ```shell pip install -r ./requirements.txt ``` Its current update was published in October 2023. Sorry, I'm a beginner in this field and I don't understand what you mean.Could you explain it in more detail?. ```bash; pip list; Package Version; --------------- --------; colorama 0.4.6; exceptiongroup 1.2.0; iniconfig 2.0.0; openbabel-wheel 3.1.1.19; packaging 23.2; pip 23.3.1; pluggy 1.3.0; pytest 7.4.3; setuptools 68.2.2; tomli 2.0.1; wheel 0.41.2; ```; i use openbabel-wheel with new try,and delete build cache, but the error was same,. this is my code. ```bash; cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_EXECUTABLE=/home/jf/Programs/anaconda3/envs/gnina/bin/python ..; ```; thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793:825,Performance,cache,cache,825,"> I speculate your setup attempts to fetch openbabel from pypi.org instead of the OS' package manager. If this is the case, check if the by bypass with openbabel-wheel equally works for you. This works out of the box e.g., within a virtual environment set up in Linux Debian 13/trixie when installing openbabel via ```shell pip install -r ./requirements.txt ``` Its current update was published in October 2023. Sorry, I'm a beginner in this field and I don't understand what you mean.Could you explain it in more detail?. ```bash; pip list; Package Version; --------------- --------; colorama 0.4.6; exceptiongroup 1.2.0; iniconfig 2.0.0; openbabel-wheel 3.1.1.19; packaging 23.2; pip 23.3.1; pluggy 1.3.0; pytest 7.4.3; setuptools 68.2.2; tomli 2.0.1; wheel 0.41.2; ```; i use openbabel-wheel with new try,and delete build cache, but the error was same,. this is my code. ```bash; cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_EXECUTABLE=/home/jf/Programs/anaconda3/envs/gnina/bin/python ..; ```; thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:2158,Availability,error,error,2158,"sing *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ of each other. The advantage of this development *separate* from the libraries used by your operating system: you don't harm your OS. If you are stuck in an error, deactivate the virtual environment, delete the whole folder of this virtual environment, and start all over from scratch. Obviously, for your project, you have to identify and use *your project's* `requirements.txt`. If there is no `requirements.txt`, get in touch with the author of the application. Else, set up a virtual environment, activate it and install [pipreqs](https://pypi.org/project/pipreqs/) to quickly generate a `requirements.txt` about all non-standard Python modules your project requires. *But:* `pipreqs` does not know about openbabel-wheel -- which is why a manual edit in `requirements.txt` is necessary. Try then if your application can be started and used as described by its documentation. An aspect specific point to `openbabel` (from pypi.org) and `openbabel-wheels` (from pypi.org): `openbabel-wheels` as a bypass aims to install where normally `openbabel` would be. In case you already installed `openbabel` in your virtual environment, you then must deinstall `openbabel` (by the command `pip remove openbabel`) in ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:199,Deployability,update,update,199,"The following can only cover some parts. Inferring from Linux Debian, Linux CentOS provides *some basic* support of Python; mainly to support the operating system itself. And if you perform a proper update of the operating system, then equally these supporting libraries are going to be updated. Now to your project. There is a set of modules deemed essential to Python; they constitute the Python standard library *every* Python installation includes, for instance `os`, `sys`, `argparse`. See for instance [here](https://docs.python.org/3/library/index.html) and [here](https://docs.python.org/3/tutorial/stdlib.html). Additional functionality can be imported by additional libraries. One way to manage these *new dependencies* is by a `requirements.txt` file to list these modules -- preferably with indication of their (minimal) version known to work. For example. ```; CairoSVG>=2.7.1; openbabel-wheel>=3.1.1.16; rdkit>=2023.3.2; Requests>=2.31.0; ```. To keep the Python libraries which support your operating system in good shape, it is considered good practice to keep them separate (not accidentally modified) from packages used to develop and experiment with new packages. This is the background of using *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:287,Deployability,update,updated,287,"The following can only cover some parts. Inferring from Linux Debian, Linux CentOS provides *some basic* support of Python; mainly to support the operating system itself. And if you perform a proper update of the operating system, then equally these supporting libraries are going to be updated. Now to your project. There is a set of modules deemed essential to Python; they constitute the Python standard library *every* Python installation includes, for instance `os`, `sys`, `argparse`. See for instance [here](https://docs.python.org/3/library/index.html) and [here](https://docs.python.org/3/tutorial/stdlib.html). Additional functionality can be imported by additional libraries. One way to manage these *new dependencies* is by a `requirements.txt` file to list these modules -- preferably with indication of their (minimal) version known to work. For example. ```; CairoSVG>=2.7.1; openbabel-wheel>=3.1.1.16; rdkit>=2023.3.2; Requests>=2.31.0; ```. To keep the Python libraries which support your operating system in good shape, it is considered good practice to keep them separate (not accidentally modified) from packages used to develop and experiment with new packages. This is the background of using *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:430,Deployability,install,installation,430,"The following can only cover some parts. Inferring from Linux Debian, Linux CentOS provides *some basic* support of Python; mainly to support the operating system itself. And if you perform a proper update of the operating system, then equally these supporting libraries are going to be updated. Now to your project. There is a set of modules deemed essential to Python; they constitute the Python standard library *every* Python installation includes, for instance `os`, `sys`, `argparse`. See for instance [here](https://docs.python.org/3/library/index.html) and [here](https://docs.python.org/3/tutorial/stdlib.html). Additional functionality can be imported by additional libraries. One way to manage these *new dependencies* is by a `requirements.txt` file to list these modules -- preferably with indication of their (minimal) version known to work. For example. ```; CairoSVG>=2.7.1; openbabel-wheel>=3.1.1.16; rdkit>=2023.3.2; Requests>=2.31.0; ```. To keep the Python libraries which support your operating system in good shape, it is considered good practice to keep them separate (not accidentally modified) from packages used to develop and experiment with new packages. This is the background of using *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:1536,Deployability,install,install,1536,".org/3/library/index.html) and [here](https://docs.python.org/3/tutorial/stdlib.html). Additional functionality can be imported by additional libraries. One way to manage these *new dependencies* is by a `requirements.txt` file to list these modules -- preferably with indication of their (minimal) version known to work. For example. ```; CairoSVG>=2.7.1; openbabel-wheel>=3.1.1.16; rdkit>=2023.3.2; Requests>=2.31.0; ```. To keep the Python libraries which support your operating system in good shape, it is considered good practice to keep them separate (not accidentally modified) from packages used to develop and experiment with new packages. This is the background of using *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ of each other. The advantage of this development *separate* from the libraries used by your operating system: you don't harm your OS. If you are stuck in an error, deactivate the virtual environment, delete the whole folder of this virtual environment, and start all over from scratch. Obviously, for your project, you have to identify and use *your project's* `requirements.txt`. If there is no `requirements.txt`, get in touch with the author of the application. Else, set up a virtual environment, activate it and install [pipreqs]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:1956,Deployability,toggle,toggle,1956," ```. To keep the Python libraries which support your operating system in good shape, it is considered good practice to keep them separate (not accidentally modified) from packages used to develop and experiment with new packages. This is the background of using *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ of each other. The advantage of this development *separate* from the libraries used by your operating system: you don't harm your OS. If you are stuck in an error, deactivate the virtual environment, delete the whole folder of this virtual environment, and start all over from scratch. Obviously, for your project, you have to identify and use *your project's* `requirements.txt`. If there is no `requirements.txt`, get in touch with the author of the application. Else, set up a virtual environment, activate it and install [pipreqs](https://pypi.org/project/pipreqs/) to quickly generate a `requirements.txt` about all non-standard Python modules your project requires. *But:* `pipreqs` does not know about openbabel-wheel -- which is why a manual edit in `requirements.txt` is necessary. Try then if your application can be started and used as described by its documentation. An aspect specific point to `openbabel` (from pypi.org) and `openbabel-wh",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:2518,Deployability,install,install,2518," you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ of each other. The advantage of this development *separate* from the libraries used by your operating system: you don't harm your OS. If you are stuck in an error, deactivate the virtual environment, delete the whole folder of this virtual environment, and start all over from scratch. Obviously, for your project, you have to identify and use *your project's* `requirements.txt`. If there is no `requirements.txt`, get in touch with the author of the application. Else, set up a virtual environment, activate it and install [pipreqs](https://pypi.org/project/pipreqs/) to quickly generate a `requirements.txt` about all non-standard Python modules your project requires. *But:* `pipreqs` does not know about openbabel-wheel -- which is why a manual edit in `requirements.txt` is necessary. Try then if your application can be started and used as described by its documentation. An aspect specific point to `openbabel` (from pypi.org) and `openbabel-wheels` (from pypi.org): `openbabel-wheels` as a bypass aims to install where normally `openbabel` would be. In case you already installed `openbabel` in your virtual environment, you then must deinstall `openbabel` (by the command `pip remove openbabel`) in first place before an installation of `openbabel-wheel` is successful. Last but not least I see your `cmake` command. If you work with *an activated* virtual environment of Python, the address of the python interpreter is different from the usually used one. (Of course, because you do not want to",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:3015,Deployability,install,install,3015,"oggle on/off the virtual environment differ of each other. The advantage of this development *separate* from the libraries used by your operating system: you don't harm your OS. If you are stuck in an error, deactivate the virtual environment, delete the whole folder of this virtual environment, and start all over from scratch. Obviously, for your project, you have to identify and use *your project's* `requirements.txt`. If there is no `requirements.txt`, get in touch with the author of the application. Else, set up a virtual environment, activate it and install [pipreqs](https://pypi.org/project/pipreqs/) to quickly generate a `requirements.txt` about all non-standard Python modules your project requires. *But:* `pipreqs` does not know about openbabel-wheel -- which is why a manual edit in `requirements.txt` is necessary. Try then if your application can be started and used as described by its documentation. An aspect specific point to `openbabel` (from pypi.org) and `openbabel-wheels` (from pypi.org): `openbabel-wheels` as a bypass aims to install where normally `openbabel` would be. In case you already installed `openbabel` in your virtual environment, you then must deinstall `openbabel` (by the command `pip remove openbabel`) in first place before an installation of `openbabel-wheel` is successful. Last but not least I see your `cmake` command. If you work with *an activated* virtual environment of Python, the address of the python interpreter is different from the usually used one. (Of course, because you do not want to harm your operating system.) So your command. ```shell; which python; ```. which *normally* points to `/usr/bin/python`* now (again, in the working/activated *virtual environment* of Python) points to a different location of your python interpreter within your virtual environment. Edit your command accordingly and use the address of the interpreter within the active virtual environment. \* which might be itself a symbolic link to the interpreter",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:3080,Deployability,install,installed,3080,"oggle on/off the virtual environment differ of each other. The advantage of this development *separate* from the libraries used by your operating system: you don't harm your OS. If you are stuck in an error, deactivate the virtual environment, delete the whole folder of this virtual environment, and start all over from scratch. Obviously, for your project, you have to identify and use *your project's* `requirements.txt`. If there is no `requirements.txt`, get in touch with the author of the application. Else, set up a virtual environment, activate it and install [pipreqs](https://pypi.org/project/pipreqs/) to quickly generate a `requirements.txt` about all non-standard Python modules your project requires. *But:* `pipreqs` does not know about openbabel-wheel -- which is why a manual edit in `requirements.txt` is necessary. Try then if your application can be started and used as described by its documentation. An aspect specific point to `openbabel` (from pypi.org) and `openbabel-wheels` (from pypi.org): `openbabel-wheels` as a bypass aims to install where normally `openbabel` would be. In case you already installed `openbabel` in your virtual environment, you then must deinstall `openbabel` (by the command `pip remove openbabel`) in first place before an installation of `openbabel-wheel` is successful. Last but not least I see your `cmake` command. If you work with *an activated* virtual environment of Python, the address of the python interpreter is different from the usually used one. (Of course, because you do not want to harm your operating system.) So your command. ```shell; which python; ```. which *normally* points to `/usr/bin/python`* now (again, in the working/activated *virtual environment* of Python) points to a different location of your python interpreter within your virtual environment. Edit your command accordingly and use the address of the interpreter within the active virtual environment. \* which might be itself a symbolic link to the interpreter",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:3232,Deployability,install,installation,3232,"oggle on/off the virtual environment differ of each other. The advantage of this development *separate* from the libraries used by your operating system: you don't harm your OS. If you are stuck in an error, deactivate the virtual environment, delete the whole folder of this virtual environment, and start all over from scratch. Obviously, for your project, you have to identify and use *your project's* `requirements.txt`. If there is no `requirements.txt`, get in touch with the author of the application. Else, set up a virtual environment, activate it and install [pipreqs](https://pypi.org/project/pipreqs/) to quickly generate a `requirements.txt` about all non-standard Python modules your project requires. *But:* `pipreqs` does not know about openbabel-wheel -- which is why a manual edit in `requirements.txt` is necessary. Try then if your application can be started and used as described by its documentation. An aspect specific point to `openbabel` (from pypi.org) and `openbabel-wheels` (from pypi.org): `openbabel-wheels` as a bypass aims to install where normally `openbabel` would be. In case you already installed `openbabel` in your virtual environment, you then must deinstall `openbabel` (by the command `pip remove openbabel`) in first place before an installation of `openbabel-wheel` is successful. Last but not least I see your `cmake` command. If you work with *an activated* virtual environment of Python, the address of the python interpreter is different from the usually used one. (Of course, because you do not want to harm your operating system.) So your command. ```shell; which python; ```. which *normally* points to `/usr/bin/python`* now (again, in the working/activated *virtual environment* of Python) points to a different location of your python interpreter within your virtual environment. Edit your command accordingly and use the address of the interpreter within the active virtual environment. \* which might be itself a symbolic link to the interpreter",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:716,Integrability,depend,dependencies,716,"The following can only cover some parts. Inferring from Linux Debian, Linux CentOS provides *some basic* support of Python; mainly to support the operating system itself. And if you perform a proper update of the operating system, then equally these supporting libraries are going to be updated. Now to your project. There is a set of modules deemed essential to Python; they constitute the Python standard library *every* Python installation includes, for instance `os`, `sys`, `argparse`. See for instance [here](https://docs.python.org/3/library/index.html) and [here](https://docs.python.org/3/tutorial/stdlib.html). Additional functionality can be imported by additional libraries. One way to manage these *new dependencies* is by a `requirements.txt` file to list these modules -- preferably with indication of their (minimal) version known to work. For example. ```; CairoSVG>=2.7.1; openbabel-wheel>=3.1.1.16; rdkit>=2023.3.2; Requests>=2.31.0; ```. To keep the Python libraries which support your operating system in good shape, it is considered good practice to keep them separate (not accidentally modified) from packages used to develop and experiment with new packages. This is the background of using *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:1596,Integrability,depend,dependencies,1596,"orial/stdlib.html). Additional functionality can be imported by additional libraries. One way to manage these *new dependencies* is by a `requirements.txt` file to list these modules -- preferably with indication of their (minimal) version known to work. For example. ```; CairoSVG>=2.7.1; openbabel-wheel>=3.1.1.16; rdkit>=2023.3.2; Requests>=2.31.0; ```. To keep the Python libraries which support your operating system in good shape, it is considered good practice to keep them separate (not accidentally modified) from packages used to develop and experiment with new packages. This is the background of using *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ of each other. The advantage of this development *separate* from the libraries used by your operating system: you don't harm your OS. If you are stuck in an error, deactivate the virtual environment, delete the whole folder of this virtual environment, and start all over from scratch. Obviously, for your project, you have to identify and use *your project's* `requirements.txt`. If there is no `requirements.txt`, get in touch with the author of the application. Else, set up a virtual environment, activate it and install [pipreqs](https://pypi.org/project/pipreqs/) to quickly generate a `require",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:182,Performance,perform,perform,182,"The following can only cover some parts. Inferring from Linux Debian, Linux CentOS provides *some basic* support of Python; mainly to support the operating system itself. And if you perform a proper update of the operating system, then equally these supporting libraries are going to be updated. Now to your project. There is a set of modules deemed essential to Python; they constitute the Python standard library *every* Python installation includes, for instance `os`, `sys`, `argparse`. See for instance [here](https://docs.python.org/3/library/index.html) and [here](https://docs.python.org/3/tutorial/stdlib.html). Additional functionality can be imported by additional libraries. One way to manage these *new dependencies* is by a `requirements.txt` file to list these modules -- preferably with indication of their (minimal) version known to work. For example. ```; CairoSVG>=2.7.1; openbabel-wheel>=3.1.1.16; rdkit>=2023.3.2; Requests>=2.31.0; ```. To keep the Python libraries which support your operating system in good shape, it is considered good practice to keep them separate (not accidentally modified) from packages used to develop and experiment with new packages. This is the background of using *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034
https://github.com/openbabel/openbabel/issues/2659#issuecomment-1884726206:16,Deployability,update,update,16,"You may like to update your swig if you havent already. centos7 default repos have swig 2.0 and as far as I remember, recent versions of cmake require swig 4+, or at least work better.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1884726206
https://github.com/openbabel/openbabel/pull/2661#issuecomment-1868397480:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2661#issuecomment-1868397480
https://github.com/openbabel/openbabel/pull/2663#issuecomment-1872983249:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2663#issuecomment-1872983249
https://github.com/openbabel/openbabel/pull/2663#issuecomment-1872992518:102,Integrability,depend,dependency,102,What's going on with Line 56 where obrms is added if Eigen3 is present? Can you work out whether this dependency is true?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2663#issuecomment-1872992518
https://github.com/openbabel/openbabel/pull/2663#issuecomment-1874581311:50,Integrability,depend,dependency,50,"I have a distinct memory of trying to remove this dependency from the cmake file and it not working, but I've just tried it and it seems fine - obrms uses the built-in matrix3x3 rather than an eigen matrix so it isn't obvious to me why the current code needs the EIGEN dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2663#issuecomment-1874581311
https://github.com/openbabel/openbabel/pull/2663#issuecomment-1874581311:269,Integrability,depend,dependency,269,"I have a distinct memory of trying to remove this dependency from the cmake file and it not working, but I've just tried it and it seems fine - obrms uses the built-in matrix3x3 rather than an eigen matrix so it isn't obvious to me why the current code needs the EIGEN dependency.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2663#issuecomment-1874581311
https://github.com/openbabel/openbabel/pull/2664#issuecomment-1893670412:13,Availability,failure,failure,13,"Hm, the test failure seems to be related to code I haven't touched. Any suggestion on how to debug this?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2664#issuecomment-1893670412
https://github.com/openbabel/openbabel/pull/2664#issuecomment-1893670412:8,Testability,test,test,8,"Hm, the test failure seems to be related to code I haven't touched. Any suggestion on how to debug this?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2664#issuecomment-1893670412
https://github.com/openbabel/openbabel/issues/2665#issuecomment-1893793421:15,Availability,error,error,15,"To check if an error occurs during obabel's format conversion and because you; state ""attached is the output"" prior to the file shared, can you equally share; the input .pdb file? The addition of a `.txt` to upload the model as; `receptor_3.pdb.txt` (to keep the name you used when using openbabel), should; satisfy GitHub's requirements of an attachment. Probably an accidental omission, the generation of a conformer requires two; leading dashes, `--gen3d`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2665#issuecomment-1893793421
https://github.com/openbabel/openbabel/issues/2665#issuecomment-1929128888:27,Availability,error,error,27,I am getting the following error when I use obabel converted pdbqt file of ligand for docking. Structure parsing error: Unknown or inappropriate tag found in flex residue or ligand.; > ROOT,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2665#issuecomment-1929128888
https://github.com/openbabel/openbabel/issues/2665#issuecomment-1929128888:113,Availability,error,error,113,I am getting the following error when I use obabel converted pdbqt file of ligand for docking. Structure parsing error: Unknown or inappropriate tag found in flex residue or ligand.; > ROOT,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2665#issuecomment-1929128888
https://github.com/openbabel/openbabel/issues/2665#issuecomment-1935546267:185,Availability,error,error,185,@AlexisGGk That was one of the molecules obtained from enamine library. obabel was used to convert initial smi. @rwxayheee Thank you. Yes all the compounds having salts are giving this error,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2665#issuecomment-1935546267
https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896349137:611,Availability,avail,available,611,"Hi @NooraAz. The problem was caused by missing ""ROOT"" and ""ENDROOT"" which are structural keywords in ligand PDBQT files for Vina. ; `-r` converts the molecule to a rigid receptor PDBQT. Your ligand is indeed fully rigid without undergoing ring breaking, but it has to have ""ROOT"" and ""ENDROOT"" to represent the ""tree structure"" of a ligand. . There are various options to prepare ligand PDBQT for Vina:; Obabel; `obabel -i pdb hexaA-result_106399.pdb -o pdbqt`; The residue names might change, but it's not harmful to the docking calculation. You can explore better ways of doing this within the version that's available to you, just don't use `-r`. . Geometry-based Approach; **prepare_ligand** in https://ccsb.scripps.edu/adfr/documentation/; The residue names can be preserved. . Valence-based Approach with Interface to RDKit; https://github.com/forlilab/Meeko?tab=readme-ov-file#1-make-pdbqt-files; See if you'd be interested to register your ligand as a RDKit molecule along with the ligand preparation. Edit: See below a PDBQT file of your ligand that works for vina 1.2.5, generated by **prepare_ligand**; ```; REMARK 0 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); ROOT; HETATM 1 N DAL A 1 -1.106 0.231 0.639 1.00 0.00 -0.346 N; HETATM 2 CA DAL A 1 -1.146 -0.803 1.667 1.00 0.00 0.172 C; HETATM 3 C DAL A 1 -1.069 -0.197 3.062 1.00 0.00 0.240 C; HETATM 4 O DAL A 1 -2.003 -0.318 3.854 1.00 0.00 -0.271 OA; HETATM 5 CB DAL A 1 -2.407 -1.643 1.524 1.00 0.00 0.042 C; HETATM 6 H DAL A 1 -1.965 0.510 0.189 1.00 0.00 0.163 HD; ATOM 7 N ALA A 2 0.050 0.456 3.357 1.00 0.00 -0.346 N; ATOM 8 CA ALA A 2 0.161 1.285 4.551 1.00 0.00 0.172 C; ATOM 9 C ALA A 2 -0.897 2.381 4.560 1.00 0.00 0.240 C; ATOM 10 O ALA A 2 -1.380 2.781 5.619 1.00 0.00 -0.271 OA; ATOM 11 CB ALA A 2 1.553 1.893 4.646 1.00 0.00 0.042 C; ATOM 12 H ALA A 2 0.845 0.375 2.738 1.00 0.00 0.163 HD; ATOM 13 N ALA A 3 -1.253 2.863 3.374 1.00 0.00 -0.346 N; ATOM 14 CA ALA A 3 -2.320 3.847 3.236 1.00 0.00 0.172 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896349137
https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896349137:811,Integrability,Interface,Interface,811,"Hi @NooraAz. The problem was caused by missing ""ROOT"" and ""ENDROOT"" which are structural keywords in ligand PDBQT files for Vina. ; `-r` converts the molecule to a rigid receptor PDBQT. Your ligand is indeed fully rigid without undergoing ring breaking, but it has to have ""ROOT"" and ""ENDROOT"" to represent the ""tree structure"" of a ligand. . There are various options to prepare ligand PDBQT for Vina:; Obabel; `obabel -i pdb hexaA-result_106399.pdb -o pdbqt`; The residue names might change, but it's not harmful to the docking calculation. You can explore better ways of doing this within the version that's available to you, just don't use `-r`. . Geometry-based Approach; **prepare_ligand** in https://ccsb.scripps.edu/adfr/documentation/; The residue names can be preserved. . Valence-based Approach with Interface to RDKit; https://github.com/forlilab/Meeko?tab=readme-ov-file#1-make-pdbqt-files; See if you'd be interested to register your ligand as a RDKit molecule along with the ligand preparation. Edit: See below a PDBQT file of your ligand that works for vina 1.2.5, generated by **prepare_ligand**; ```; REMARK 0 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); ROOT; HETATM 1 N DAL A 1 -1.106 0.231 0.639 1.00 0.00 -0.346 N; HETATM 2 CA DAL A 1 -1.146 -0.803 1.667 1.00 0.00 0.172 C; HETATM 3 C DAL A 1 -1.069 -0.197 3.062 1.00 0.00 0.240 C; HETATM 4 O DAL A 1 -2.003 -0.318 3.854 1.00 0.00 -0.271 OA; HETATM 5 CB DAL A 1 -2.407 -1.643 1.524 1.00 0.00 0.042 C; HETATM 6 H DAL A 1 -1.965 0.510 0.189 1.00 0.00 0.163 HD; ATOM 7 N ALA A 2 0.050 0.456 3.357 1.00 0.00 -0.346 N; ATOM 8 CA ALA A 2 0.161 1.285 4.551 1.00 0.00 0.172 C; ATOM 9 C ALA A 2 -0.897 2.381 4.560 1.00 0.00 0.240 C; ATOM 10 O ALA A 2 -1.380 2.781 5.619 1.00 0.00 -0.271 OA; ATOM 11 CB ALA A 2 1.553 1.893 4.646 1.00 0.00 0.042 C; ATOM 12 H ALA A 2 0.845 0.375 2.738 1.00 0.00 0.163 HD; ATOM 13 N ALA A 3 -1.253 2.863 3.374 1.00 0.00 -0.346 N; ATOM 14 CA ALA A 3 -2.320 3.847 3.236 1.00 0.00 0.172 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896349137
https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896519654:25,Modifiability,flexible,flexible,25,"Shameless plug here, but flexible docking is a lot easier with gnina (you can directly specify what residues you want to be flexible without having to setup separate files):; https://github.com/gnina/gnina?tab=readme-ov-file#usage",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896519654
https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896519654:124,Modifiability,flexible,flexible,124,"Shameless plug here, but flexible docking is a lot easier with gnina (you can directly specify what residues you want to be flexible without having to setup separate files):; https://github.com/gnina/gnina?tab=readme-ov-file#usage",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896519654
https://github.com/openbabel/openbabel/issues/2667#issuecomment-1904635646:142,Deployability,update,updates,142,Yeah I was hoping if anybody in this community would have any insight or familiarity with Align-It. Doesn't look like there's been any recent updates about Align-It on the github page.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2667#issuecomment-1904635646
https://github.com/openbabel/openbabel/issues/2670#issuecomment-1946474684:245,Modifiability,plugin,plugin,245,"your speculations seems to be correct , As you mentioned, strcasecmp is a POSIX function, and its usage on Windows may cause compilation issues. either we can make changes to local build by adding something similar to following lines of code in plugin.h; ```; struct OBERROR CharPtrLess; {; bool operator()(const char* p1, const char* p2) const; {; #if defined(_MSC_VER); return _stricmp(p1, p2) < 0;; #else; return strcasecmp(p1, p2) < 0;; #endif; }; };; ```; this should work since _srticmp is a valid function under Microsoft Visual C++ or else you can add a custom function; ```; #include <cctype>. struct CharPtrLess; {; bool operator()(const char* p1, const char* p2) const; {; #if defined(_MSC_VER); return _stricmp(p1, p2) < 0;; #else; while (*p1 && *p2) {; char ch1 = std::toupper(static_cast<unsigned char>(*p1));; char ch2 = std::toupper(static_cast<unsigned char>(*p2));. if (ch1 < ch2) return true;; if (ch1 > ch2) return false;. ++p1;; ++p2;; }. return *p1 < *p2;; #endif; }; };. ```. please verify and correct me if I am wrong , @ghutchis , @chris9672",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2670#issuecomment-1946474684
https://github.com/openbabel/openbabel/issues/2672#issuecomment-1938865909:83,Deployability,install,install,83,Open Babel is a binary package for Python because it's a C++ library. Make sure to install `openbabel` for your Python 3.11 install (e.g. through `conda-forge`),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2672#issuecomment-1938865909
https://github.com/openbabel/openbabel/issues/2672#issuecomment-1938865909:124,Deployability,install,install,124,Open Babel is a binary package for Python because it's a C++ library. Make sure to install `openbabel` for your Python 3.11 install (e.g. through `conda-forge`),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2672#issuecomment-1938865909
https://github.com/openbabel/openbabel/issues/2672#issuecomment-1939863296:21,Deployability,install,install,21,I was having trouble install openbabel in my python 3.11 in myconda env using conda-forge. This issue was fixed by updating my conda.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2672#issuecomment-1939863296
https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947359124:25,Deployability,install,installing,25,"Your issue is that after installing Open Babel and building the Python bindings, you’re unable to import the Openbabel module in Python. This could be due to ,The Open Babel Python bindings might not be in your Python path. You can add the Open Babel Python bindings to your Python path by adding the following line to your .bashrc or .bash_profile file (replace /path/to/openbabel/bindings with the actual path to the Open Babel Python bindings):; ```; export PYTHONPATH=$PYTHONPATH:/path/to/openbabel/bindings; ```; Then, source your .bashrc or .bash_profile file to apply the changes:; ```; source ~/.bashrc; ```; or; ```; source ~/.bash_profile; ```. correct me if I am wrong @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947359124
https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947637905:1133,Performance,cache,cacheformat,1133,t.so cmlformat.so gausszmatformat.so nulformat.so rinchiformat.so; acesformat.so cmlreactformat.so ghemicalformat.so nwchemformat.so rsmiformat.so; acrformat.so cofformat.so groformat.so opendxformat.so rxnformat.so; adfformat.so confabreport.so gromos96format.so orcaformat.so shelxformat.so; alchemyformat.so copyformat.so gulpformat.so outformat.so siestaformat.so; amberformat.so crkformat.so hinformat.so painterformat.so smilesformat.so; aoforceformat.so crystal09format.so inchiformat.so pcmodelformat.so smileyformat.so; APIInterface.so CSRformat.so jaguarformat.so pdbformat.so stlformat.so; asciiformat.so cssrformat.so lmpdatformat.so pdbqtformat.so svgformat.so; balstformat.so daltonformat.so lpmdformat.so plugin_charges.so textformat.so; bgfformat.so dlpolyformat.so maeformat.so plugin_descriptors.so thermoformat.so; boxformat.so dmolformat.so MCDLformat.so plugin_fingerprints.so tinkerformat.so; cacaoformat.so exyzformat.so mdffformat.so plugin_forcefields.so titleformat.so; cacheformat.so fastaformat.so mdlformat.so plugin_ops.so turbomoleformat.so; carformat.so fastsearchformat.so mmcifformat.so png2format.so unichemformat.so; castepformat.so fchkformat.so mmodformat.so pngformat.so vaspformat.so; cccformat.so featformat.so MNAformat.so pointcloudformat.so viewmolformat.so; cdxmlformat.so fhformat.so mol2format.so posformat.so wlnformat.so; chem3dformat.so fhiaimsformat.so moldenformat.so povrayformat.so xedformat.so; chemdoodlejsonformat.so fingerprintformat.so molproformat.so pqrformat.so xmlformat.so; chemdrawcdx.so fpsformat.so molreport.so PQSformat.so xsfformat.so; chemdrawct.so freefracformat.so mopacformat.so pubchemjsonformat.so xyzformat.so; chemicaljsonformat.so gamessformat.so mpdformat.so pubchem.so yasaraformat.so; chemkinformat.so gamessukformat.so mpqcformat.so pwscfformat.so zindoformat.so; chemtoolformat.so gausscubeformat.so msiformat.so qchemformat.so; cifformat.so gaussformat.so msmsformat.so reportformat.so; werner@X10DAi:~$ ls /usr/loc,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947637905
https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947684761:6,Deployability,install,install,6,"`make install` shows the destination, and I guess it is `/usr/local/lib/python3.10/site-packages`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947684761
https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947690802:105,Security,access,access,105,See below in my case:; ```shell; werner@X10DAi:~$ ls /usr/local/lib/python3.10/site-packages; ls: cannot access '/usr/local/lib/python3.10/site-packages': No such file or directory; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947690802
https://github.com/openbabel/openbabel/issues/2673#issuecomment-1948595591:78,Deployability,install,installation,78,while cmake ``` cmake ../openbabel-2.4.0 -DCMAKE_INSTALL_PREFIX : specify the installation prefix (default /usr/local)``` set this to your desired location,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1948595591
https://github.com/openbabel/openbabel/issues/2673#issuecomment-1949633722:151,Deployability,INSTALL,INSTALL,151,"I got it. I must generate the bindings first by [`-DRUN_SWIG=ON`](https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/INSTALL#L61). The following does the trick:. ```shell; werner@X10DAi:~/Public/repo/github.com/openbabel$ cmake .. -DBUILD_GUI=ON -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON; werner@X10DAi:~/Public/repo/github.com/openbabel$ make -j44; werner@X10DAi:~/Public/repo/github.com/openbabel$ make install; $ export PYTHONPATH=/usr/local/lib:$PYTHONPATH; $ python; Python 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel; >>> ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1949633722
https://github.com/openbabel/openbabel/issues/2673#issuecomment-1949633722:432,Deployability,install,install,432,"I got it. I must generate the bindings first by [`-DRUN_SWIG=ON`](https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/INSTALL#L61). The following does the trick:. ```shell; werner@X10DAi:~/Public/repo/github.com/openbabel$ cmake .. -DBUILD_GUI=ON -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON; werner@X10DAi:~/Public/repo/github.com/openbabel$ make -j44; werner@X10DAi:~/Public/repo/github.com/openbabel$ make install; $ export PYTHONPATH=/usr/local/lib:$PYTHONPATH; $ python; Python 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel; >>> ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1949633722
https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056:133,Security,Validat,ValidationSuite,133,"@e-kwsm Complementary observation: entry VS001, spiro[4.5]dec-2-ene in the [cipvalidationsuite](https://cipvalidationsuite.github.io/ValidationSuite/) compiled by Robert Hanson *et al.* equally is assigned by them by the SMILES string `C1[C@]2(CCCC1)CC=CC2`. However, the submission of their 3D .sdf file to Open Babel (version 3.1.1 by Jan 10 2024 in Debian 13/trixie). ```; $ obabel VS001.sdf -ocan; C1CCC2(CC1)CC=CC2	VS001; 1 molecule converted; $ obabel -:""C1[C@]2(CCCC1)CC=CC2"" -ocan; C1CCC2(CC1)CC=CC2	; 1 molecule converted; ```. drops the `@`. The compilation of 300 structures may contain additional entries worth to test. Hanson, R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin, D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. J. Chem. Inf. Model. 2018, 58 (9), 1755–1765. https://doi.org/10.1021/acs.jcim.8b00324.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056
https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056:626,Testability,test,test,626,"@e-kwsm Complementary observation: entry VS001, spiro[4.5]dec-2-ene in the [cipvalidationsuite](https://cipvalidationsuite.github.io/ValidationSuite/) compiled by Robert Hanson *et al.* equally is assigned by them by the SMILES string `C1[C@]2(CCCC1)CC=CC2`. However, the submission of their 3D .sdf file to Open Babel (version 3.1.1 by Jan 10 2024 in Debian 13/trixie). ```; $ obabel VS001.sdf -ocan; C1CCC2(CC1)CC=CC2	VS001; 1 molecule converted; $ obabel -:""C1[C@]2(CCCC1)CC=CC2"" -ocan; C1CCC2(CC1)CC=CC2	; 1 molecule converted; ```. drops the `@`. The compilation of 300 structures may contain additional entries worth to test. Hanson, R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin, D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. J. Chem. Inf. Model. 2018, 58 (9), 1755–1765. https://doi.org/10.1021/acs.jcim.8b00324.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056
https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056:819,Usability,Guid,Guide,819,"@e-kwsm Complementary observation: entry VS001, spiro[4.5]dec-2-ene in the [cipvalidationsuite](https://cipvalidationsuite.github.io/ValidationSuite/) compiled by Robert Hanson *et al.* equally is assigned by them by the SMILES string `C1[C@]2(CCCC1)CC=CC2`. However, the submission of their 3D .sdf file to Open Babel (version 3.1.1 by Jan 10 2024 in Debian 13/trixie). ```; $ obabel VS001.sdf -ocan; C1CCC2(CC1)CC=CC2	VS001; 1 molecule converted; $ obabel -:""C1[C@]2(CCCC1)CC=CC2"" -ocan; C1CCC2(CC1)CC=CC2	; 1 molecule converted; ```. drops the `@`. The compilation of 300 structures may contain additional entries worth to test. Hanson, R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin, D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. J. Chem. Inf. Model. 2018, 58 (9), 1755–1765. https://doi.org/10.1021/acs.jcim.8b00324.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969460982:367,Testability,test,test,367,"@cassguff Based on the [documentation](https://open-babel.readthedocs.io/en/latest/FileFormats/XYZ_cartesian_coordinates_format.html) flag `-b` is an option (`-xb`) of reading. Your input is a SMILES string and eventually you want to write .xyz coordinates only (i.e., the file has no information about bonds). An command like. ```; obabel -:""c1ccncc1"" -h --gen3d -O test.xyz; ```. is sufficient for (this example) to generate a conformer of pyridine (including protons for pH 7.4) written into file `test.xyz`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969460982
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969460982:501,Testability,test,test,501,"@cassguff Based on the [documentation](https://open-babel.readthedocs.io/en/latest/FileFormats/XYZ_cartesian_coordinates_format.html) flag `-b` is an option (`-xb`) of reading. Your input is a SMILES string and eventually you want to write .xyz coordinates only (i.e., the file has no information about bonds). An command like. ```; obabel -:""c1ccncc1"" -h --gen3d -O test.xyz; ```. is sufficient for (this example) to generate a conformer of pyridine (including protons for pH 7.4) written into file `test.xyz`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969460982
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969477912:119,Deployability,install,installed,119,"The bigger problem is that it's reporting it cannot find any of the force field data files. You didn't mention how you installed it, but that's the key problem. The install can't find any files needed for coordinate generation.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969477912
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969477912:165,Deployability,install,install,165,"The bigger problem is that it's reporting it cannot find any of the force field data files. You didn't mention how you installed it, but that's the key problem. The install can't find any files needed for coordinate generation.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969477912
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029:50,Deployability,Install,Installation,50,"Yeah, https://open-babel.readthedocs.io/en/latest/Installation/install.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029:63,Deployability,install,install,63,"Yeah, https://open-babel.readthedocs.io/en/latest/Installation/install.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935:30,Availability,down,downloading,30,"I installed it by simply just downloading the latest version of the 64 bit; binary installer. Thanks for also pointing out that -b is not needed for this command. On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:. > Yeah,; > https://open-babel.readthedocs.io/en/latest/Installation/install.html; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935:2,Deployability,install,installed,2,"I installed it by simply just downloading the latest version of the 64 bit; binary installer. Thanks for also pointing out that -b is not needed for this command. On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:. > Yeah,; > https://open-babel.readthedocs.io/en/latest/Installation/install.html; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935:83,Deployability,install,installer,83,"I installed it by simply just downloading the latest version of the 64 bit; binary installer. Thanks for also pointing out that -b is not needed for this command. On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:. > Yeah,; > https://open-babel.readthedocs.io/en/latest/Installation/install.html; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935:280,Deployability,Install,Installation,280,"I installed it by simply just downloading the latest version of the 64 bit; binary installer. Thanks for also pointing out that -b is not needed for this command. On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:. > Yeah,; > https://open-babel.readthedocs.io/en/latest/Installation/install.html; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935:293,Deployability,install,install,293,"I installed it by simply just downloading the latest version of the 64 bit; binary installer. Thanks for also pointing out that -b is not needed for this command. On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:. > Yeah,; > https://open-babel.readthedocs.io/en/latest/Installation/install.html; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935:684,Integrability,Message,Message,684,"I installed it by simply just downloading the latest version of the 64 bit; binary installer. Thanks for also pointing out that -b is not needed for this command. On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:. > Yeah,; > https://open-babel.readthedocs.io/en/latest/Installation/install.html; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935:18,Usability,simpl,simply,18,"I installed it by simply just downloading the latest version of the 64 bit; binary installer. Thanks for also pointing out that -b is not needed for this command. On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:. > Yeah,; > https://open-babel.readthedocs.io/en/latest/Installation/install.html; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:34,Availability,down,download,34,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:161,Availability,down,downloading,161,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:47,Deployability,install,install,47,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:133,Deployability,install,installed,133,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:216,Deployability,install,installer,216,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:430,Deployability,Install,Installation,430,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:443,Deployability,install,install,443,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:842,Integrability,Message,Message,842,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:149,Usability,simpl,simply,149,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045:79,Deployability,install,installation,79,"Re executables: with Windows 64bit in hand, you might i) deinstall the current installation of openbabel (for 64bit) to ii) then try the installer for 32bit. No guarantee this then works better. Else, openbabel is packaged for a couple of Linuxes. At least Debian, Ubuntu, and Fedora offer live images, i.e. the OS works from the RAM/without permanent installation on the hard disk, while accessing their openbabel package from the corresponding repositories -- just in case you don't want/are not permitted to modify the computer you use. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=3&&minversion=3.0.0)](https://repology.org/project/openbabel/versions). If the structure isn't IP, you may consider [cheminfo.org](https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html) with its online instance of openbabel. It equally allows the conversion of e.g., a SMILES string into a 3D .sdf.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045:137,Deployability,install,installer,137,"Re executables: with Windows 64bit in hand, you might i) deinstall the current installation of openbabel (for 64bit) to ii) then try the installer for 32bit. No guarantee this then works better. Else, openbabel is packaged for a couple of Linuxes. At least Debian, Ubuntu, and Fedora offer live images, i.e. the OS works from the RAM/without permanent installation on the hard disk, while accessing their openbabel package from the corresponding repositories -- just in case you don't want/are not permitted to modify the computer you use. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=3&&minversion=3.0.0)](https://repology.org/project/openbabel/versions). If the structure isn't IP, you may consider [cheminfo.org](https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html) with its online instance of openbabel. It equally allows the conversion of e.g., a SMILES string into a 3D .sdf.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045:352,Deployability,install,installation,352,"Re executables: with Windows 64bit in hand, you might i) deinstall the current installation of openbabel (for 64bit) to ii) then try the installer for 32bit. No guarantee this then works better. Else, openbabel is packaged for a couple of Linuxes. At least Debian, Ubuntu, and Fedora offer live images, i.e. the OS works from the RAM/without permanent installation on the hard disk, while accessing their openbabel package from the corresponding repositories -- just in case you don't want/are not permitted to modify the computer you use. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=3&&minversion=3.0.0)](https://repology.org/project/openbabel/versions). If the structure isn't IP, you may consider [cheminfo.org](https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html) with its online instance of openbabel. It equally allows the conversion of e.g., a SMILES string into a 3D .sdf.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045:389,Security,access,accessing,389,"Re executables: with Windows 64bit in hand, you might i) deinstall the current installation of openbabel (for 64bit) to ii) then try the installer for 32bit. No guarantee this then works better. Else, openbabel is packaged for a couple of Linuxes. At least Debian, Ubuntu, and Fedora offer live images, i.e. the OS works from the RAM/without permanent installation on the hard disk, while accessing their openbabel package from the corresponding repositories -- just in case you don't want/are not permitted to modify the computer you use. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=3&&minversion=3.0.0)](https://repology.org/project/openbabel/versions). If the structure isn't IP, you may consider [cheminfo.org](https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html) with its online instance of openbabel. It equally allows the conversion of e.g., a SMILES string into a 3D .sdf.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801:32,Deployability,install,installer,32,"It didn't work to do the 32 bit installer. I can just use Linux or the; online instance. Thanks. On Fri, Mar 1, 2024 at 9:12 AM nbehrnd ***@***.***> wrote:. > Re executables: with Windows 64bit in hand, you might i) deinstall the; > current installation of openbabel (for 64bit) to ii) then try the installer; > for 32bit. No guarantee this then works better.; >; > Else, openbabel is packaged for a couple of Linuxes. At least Debian,; > Ubuntu, and Fedora offer live images, i.e. the OS works from the; > RAM/without permanent installation on the hard disk, while accessing their; > openbabel package from the corresponding repositories -- just in case you; > don't want/are not permitted to modify the computer you use.; >; > [image: Packaging status]; > <https://repology.org/project/openbabel/versions>; >; > If the structure isn't IP, you may consider cheminfo.org; > <https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html>; > with its online instance of openbabel. It equally allows the conversion of; > e.g., a SMILES string into a 3D .sdf.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FFYNVOYB3B4M6DBDOSTYWCSFDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZTGQ3DMMBUGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801:241,Deployability,install,installation,241,"It didn't work to do the 32 bit installer. I can just use Linux or the; online instance. Thanks. On Fri, Mar 1, 2024 at 9:12 AM nbehrnd ***@***.***> wrote:. > Re executables: with Windows 64bit in hand, you might i) deinstall the; > current installation of openbabel (for 64bit) to ii) then try the installer; > for 32bit. No guarantee this then works better.; >; > Else, openbabel is packaged for a couple of Linuxes. At least Debian,; > Ubuntu, and Fedora offer live images, i.e. the OS works from the; > RAM/without permanent installation on the hard disk, while accessing their; > openbabel package from the corresponding repositories -- just in case you; > don't want/are not permitted to modify the computer you use.; >; > [image: Packaging status]; > <https://repology.org/project/openbabel/versions>; >; > If the structure isn't IP, you may consider cheminfo.org; > <https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html>; > with its online instance of openbabel. It equally allows the conversion of; > e.g., a SMILES string into a 3D .sdf.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FFYNVOYB3B4M6DBDOSTYWCSFDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZTGQ3DMMBUGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801:299,Deployability,install,installer,299,"It didn't work to do the 32 bit installer. I can just use Linux or the; online instance. Thanks. On Fri, Mar 1, 2024 at 9:12 AM nbehrnd ***@***.***> wrote:. > Re executables: with Windows 64bit in hand, you might i) deinstall the; > current installation of openbabel (for 64bit) to ii) then try the installer; > for 32bit. No guarantee this then works better.; >; > Else, openbabel is packaged for a couple of Linuxes. At least Debian,; > Ubuntu, and Fedora offer live images, i.e. the OS works from the; > RAM/without permanent installation on the hard disk, while accessing their; > openbabel package from the corresponding repositories -- just in case you; > don't want/are not permitted to modify the computer you use.; >; > [image: Packaging status]; > <https://repology.org/project/openbabel/versions>; >; > If the structure isn't IP, you may consider cheminfo.org; > <https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html>; > with its online instance of openbabel. It equally allows the conversion of; > e.g., a SMILES string into a 3D .sdf.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FFYNVOYB3B4M6DBDOSTYWCSFDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZTGQ3DMMBUGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801:529,Deployability,install,installation,529,"It didn't work to do the 32 bit installer. I can just use Linux or the; online instance. Thanks. On Fri, Mar 1, 2024 at 9:12 AM nbehrnd ***@***.***> wrote:. > Re executables: with Windows 64bit in hand, you might i) deinstall the; > current installation of openbabel (for 64bit) to ii) then try the installer; > for 32bit. No guarantee this then works better.; >; > Else, openbabel is packaged for a couple of Linuxes. At least Debian,; > Ubuntu, and Fedora offer live images, i.e. the OS works from the; > RAM/without permanent installation on the hard disk, while accessing their; > openbabel package from the corresponding repositories -- just in case you; > don't want/are not permitted to modify the computer you use.; >; > [image: Packaging status]; > <https://repology.org/project/openbabel/versions>; >; > If the structure isn't IP, you may consider cheminfo.org; > <https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html>; > with its online instance of openbabel. It equally allows the conversion of; > e.g., a SMILES string into a 3D .sdf.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FFYNVOYB3B4M6DBDOSTYWCSFDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZTGQ3DMMBUGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801:1451,Integrability,Message,Message,1451,"It didn't work to do the 32 bit installer. I can just use Linux or the; online instance. Thanks. On Fri, Mar 1, 2024 at 9:12 AM nbehrnd ***@***.***> wrote:. > Re executables: with Windows 64bit in hand, you might i) deinstall the; > current installation of openbabel (for 64bit) to ii) then try the installer; > for 32bit. No guarantee this then works better.; >; > Else, openbabel is packaged for a couple of Linuxes. At least Debian,; > Ubuntu, and Fedora offer live images, i.e. the OS works from the; > RAM/without permanent installation on the hard disk, while accessing their; > openbabel package from the corresponding repositories -- just in case you; > don't want/are not permitted to modify the computer you use.; >; > [image: Packaging status]; > <https://repology.org/project/openbabel/versions>; >; > If the structure isn't IP, you may consider cheminfo.org; > <https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html>; > with its online instance of openbabel. It equally allows the conversion of; > e.g., a SMILES string into a 3D .sdf.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FFYNVOYB3B4M6DBDOSTYWCSFDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZTGQ3DMMBUGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801
https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801:566,Security,access,accessing,566,"It didn't work to do the 32 bit installer. I can just use Linux or the; online instance. Thanks. On Fri, Mar 1, 2024 at 9:12 AM nbehrnd ***@***.***> wrote:. > Re executables: with Windows 64bit in hand, you might i) deinstall the; > current installation of openbabel (for 64bit) to ii) then try the installer; > for 32bit. No guarantee this then works better.; >; > Else, openbabel is packaged for a couple of Linuxes. At least Debian,; > Ubuntu, and Fedora offer live images, i.e. the OS works from the; > RAM/without permanent installation on the hard disk, while accessing their; > openbabel package from the corresponding repositories -- just in case you; > don't want/are not permitted to modify the computer you use.; >; > [image: Packaging status]; > <https://repology.org/project/openbabel/versions>; >; > If the structure isn't IP, you may consider cheminfo.org; > <https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html>; > with its online instance of openbabel. It equally allows the conversion of; > e.g., a SMILES string into a 3D .sdf.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FFYNVOYB3B4M6DBDOSTYWCSFDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZTGQ3DMMBUGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1969501287:801,Performance,load,load,801,"@kalinni In an instance of Linux Debian 13/trixie with openbabel 3.1.1., I run the addition of hydrogens by. ```shell; $ obabel 3lcs.pdb -h -O obabel_with_hydrogens.pdb; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Based on this, perhaps some ligands, or chains are a bit deformed to ""fit"" into Open Babel's patterns to recognize them well. This deformation could be by mere distance, or/and geometry. I then run grep, but didn't find any `UNL`, nor `UNK`. ```shell; $ grep UNL ./obabel_with_hydrogens.pdb -c; 0; $ grep UNK ./obabel_with_hydrogens.pdb -c; 0; ```. An alternative approach could be to use [Jmol](http://wiki.jmol.org/index.php/Main_Page), to load the initial .pdb, and (File -> Console) to enter the following commands there (confirmed by enter):. ```; calculate hydrogens;; write ""Jmol_with_hydrogens.pdb"";; ```. for a new .pdb file. This equally didn't have a `UNK` or `UNL`. ```shell; $ grep UNK Jmol_with_hydrogens.pdb -c; 0; $ grep UNL Jmol_with_hydrogens.pdb -c; 0; ```. but a different processing program might provide a .pdb different enough to continue the work. (Contrasting to the input, lattice parameters are missing, though.). [Jmol_with_hydrogens.pdb.txt](https://github.com/openbabel/openbabel/files/14438094/Jmol_with_hydrogens.pdb.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1969501287
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1970798618:731,Integrability,depend,dependencies,731,"To follow up a little - from what I understand, in both cases (using `-h` and using `-p`) eventually `AddNewHydrogens(HydrogenType whichHydrogen, bool correctForPH, double pH)` [defined in mol.cpp](https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/src/mol.cpp#L2116) is called. While with `-h` the option `correctForPH` is set to false, with `-p` it is set to true, triggering the call of `CorrectForPH(pH)`. I assume this is where the residue names and numbers then get messed up. As mentioned, my actual use case is within a Python tool ([PLIP](https://github.com/pharmai/plip)), so I am looking for a solution that does not require additional programs, as I would like to avoid adding further dependencies.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1970798618
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1970798618:710,Safety,avoid,avoid,710,"To follow up a little - from what I understand, in both cases (using `-h` and using `-p`) eventually `AddNewHydrogens(HydrogenType whichHydrogen, bool correctForPH, double pH)` [defined in mol.cpp](https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/src/mol.cpp#L2116) is called. While with `-h` the option `correctForPH` is set to false, with `-p` it is set to true, triggering the call of `CorrectForPH(pH)`. I assume this is where the residue names and numbers then get messed up. As mentioned, my actual use case is within a Python tool ([PLIP](https://github.com/pharmai/plip)), so I am looking for a solution that does not require additional programs, as I would like to avoid adding further dependencies.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1970798618
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1970935119:427,Availability,error,errors,427,"I noticed I am getting the following warning when protonating with the `-p` flag:. ```; >obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; Unable to open data file 'space-groups.txt'; ==============================; *** Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; Cannot initialize database 'space-groups.txt' which may cause further errors.; 1 molecule converted; ```. Maybe that could be related? Not sure what's wrong there, the file is present in the same directory as the phmodel.txt and definitely not missing.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1970935119
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:1333,Availability,error,error,1333," in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) aims to offer a temporary bypass; however, it requires the absence of any ""normal"" openbabel installation (within the virtual environement) to prevent confusion ""which version of library x to use"". It works reasonably well both in Windows, and Linux",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:843,Deployability,install,installation,843,"In absence of working knowledge of C++, I lack insight how Openbabel's C++ code is organized, interacting, and eventually providing results. Your log shared by 2029-02-29 might indicate ""something is broken"" in the setup of Open Babel accessible to you, because issuing the same command as you yields in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:970,Deployability,install,installation,970,"In absence of working knowledge of C++, I lack insight how Openbabel's C++ code is organized, interacting, and eventually providing results. Your log shared by 2029-02-29 might indicate ""something is broken"" in the setup of Open Babel accessible to you, because issuing the same command as you yields in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:1173,Deployability,release,releases,1173," in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) aims to offer a temporary bypass; however, it requires the absence of any ""normal"" openbabel installation (within the virtual environement) to prevent confusion ""which version of library x to use"". It works reasonably well both in Windows, and Linux",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:1926,Deployability,install,install,1926," file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) aims to offer a temporary bypass; however, it requires the absence of any ""normal"" openbabel installation (within the virtual environement) to prevent confusion ""which version of library x to use"". It works reasonably well both in Windows, and Linux. Most importantly: the edit required is only in file `requirements.txt` -- no change of the Python scripts called hereafter. Else, there equally is an Open Babel entry for [Miniconda](https://anaconda.org/conda-forge/openbabel) if this ecosystem more suitable for your work/more familiar to you, than normal [cpython](https://www.python.org/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:2144,Deployability,install,installation,2144," file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) aims to offer a temporary bypass; however, it requires the absence of any ""normal"" openbabel installation (within the virtual environement) to prevent confusion ""which version of library x to use"". It works reasonably well both in Windows, and Linux. Most importantly: the edit required is only in file `requirements.txt` -- no change of the Python scripts called hereafter. Else, there equally is an Open Babel entry for [Miniconda](https://anaconda.org/conda-forge/openbabel) if this ecosystem more suitable for your work/more familiar to you, than normal [cpython](https://www.python.org/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:1342,Integrability,depend,dependencies,1342," in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) aims to offer a temporary bypass; however, it requires the absence of any ""normal"" openbabel installation (within the virtual environement) to prevent confusion ""which version of library x to use"". It works reasonably well both in Windows, and Linux",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:235,Security,access,accessible,235,"In absence of working knowledge of C++, I lack insight how Openbabel's C++ code is organized, interacting, and eventually providing results. Your log shared by 2029-02-29 might indicate ""something is broken"" in the setup of Open Babel accessible to you, because issuing the same command as you yields in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:146,Testability,log,log,146,"In absence of working knowledge of C++, I lack insight how Openbabel's C++ code is organized, interacting, and eventually providing results. Your log shared by 2029-02-29 might indicate ""something is broken"" in the setup of Open Babel accessible to you, because issuing the same command as you yields in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973619698:243,Deployability,install,installation,243,"Hi @nbehrnd, thanks so much for trying to figure this out with me. I'm also limited by my rather limited C++knowledge. 😅. I already adapted the requirements file (on my machine PLIP is using OpenBabel 3.1.1 and there is only the one OpenBabel installation), fought my battle with the OpenBabel Python bindings 3.1.1.1 issue and have PLIP and OpenBabel running in a virtual environment.; I might try a reinstallation though. . When you run the command with `-p` in your setup - are you getting `UNL` or `UNK` records?; Earlier you said you are not getting them with `-h` but that option doesn't produce them for me either. Thanks and have a lovely weekend!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973619698
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973619698:132,Energy Efficiency,adapt,adapted,132,"Hi @nbehrnd, thanks so much for trying to figure this out with me. I'm also limited by my rather limited C++knowledge. 😅. I already adapted the requirements file (on my machine PLIP is using OpenBabel 3.1.1 and there is only the one OpenBabel installation), fought my battle with the OpenBabel Python bindings 3.1.1.1 issue and have PLIP and OpenBabel running in a virtual environment.; I might try a reinstallation though. . When you run the command with `-p` in your setup - are you getting `UNL` or `UNK` records?; Earlier you said you are not getting them with `-h` but that option doesn't produce them for me either. Thanks and have a lovely weekend!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973619698
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973619698:132,Modifiability,adapt,adapted,132,"Hi @nbehrnd, thanks so much for trying to figure this out with me. I'm also limited by my rather limited C++knowledge. 😅. I already adapted the requirements file (on my machine PLIP is using OpenBabel 3.1.1 and there is only the one OpenBabel installation), fought my battle with the OpenBabel Python bindings 3.1.1.1 issue and have PLIP and OpenBabel running in a virtual environment.; I might try a reinstallation though. . When you run the command with `-p` in your setup - are you getting `UNL` or `UNK` records?; Earlier you said you are not getting them with `-h` but that option doesn't produce them for me either. Thanks and have a lovely weekend!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973619698
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974761024:1363,Usability,clear,clearly,1363,"UNL 3lcs_prot.pdb -c; 1500; ```. So I resort to AWK to extract them separately (attached below), i.e. ```shell; $ awk '{if ($0 ~ /UNK/) print}' 3lcs_prot.pdb > UNK.pdb; $ awk '{if ($0 ~ /UNL/) print}' 3lcs_prot.pdb > UNL.pdb; ```. but their individual display e.g., in Jmol does not look pretty. For a protein structure I anticipate a couple of unbounded / unlinked molecules of water, perhaps one/a few small ligands; but there are bit too many atoms/too large ensembles to feel comfortable here. In addition, (UNK_detail), there are a couple of motifs in the structure with added hydrogens which merit a check. E.g., the cyclopropane -- not that it is impossible, but for its ring strain less likely to be seen in a naturally occurring compound. The same frame equally features a carbon exceeding tetravalence .and. hydrogens seemingly sharing the same position; which is not good, chemically speaking. The small molecules [the report](https://www.rcsb.org/structure/3LCS) mentions as independent from the protein are not clearly visible (yet). So I thought one could split the original file (not yet protonated) into molecules Open Babel recognizes as separate:. ```shell; $ obabel 3lcs.pdb --separate -O fragment.pdb -m; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 142 molecules converted; 142 files output. The first is fragment1.pdb; ```. There are some which are large:. ```shell; $ wc -l fragment*.pdb | sort -k 1 -rn | head; 11135 total; 5517 fragment.pdb; 1422 fragment1.pdb; 894 fragment19.pdb; 832 fragment9.pdb; 502 fragment17.pdb; 468 fragment7.pdb; 274 fragment5.pdb; 224 fragment11.pdb; 200 fragment13.pdb; ```. -- fragment13.pdb includes the/a cyclopropane -- yet quite a number which are small (water), too:. ```shell; $ wc -l fragment*.pdb | sort -k 1 -n | grep ""5 frag"" -c; 122; $ wc -l fragment*.pdb | sort -k 1 -n | head; 5 fragment100.pdb; 5 fragment101.pdb; 5",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974761024
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974763178:150,Usability,learn,learned,150,"@kalinni Separate thought: perhaps your workflow does not require the addition; of the complete set of hydrogens either; in a separate conversation I learned; the (ligand) molecules submitted to /in silico/ docking carry hydrogens on; hydrogen donors like -OH, -NH2, but lack hydrogens on the alkyl skeleton.; (But I'm not a user of vina, either.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974763178
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613:304,Integrability,Interface,Interface,304,"Hi @nbehrnd, thanks for taking such a deep dive into this. Actually I am working specifically on PLIP and 3lcs.pdb is only an example file I am currently using for testing. . I am looking into some issues regarding protonation - PLIP currently calls `AddPolarHydrogens()`.; I thought this was the Python Interface equivalent to the command line version with `-h`, actually it is probably the equivalent of `--addpolarh`. So yes, I am indeed only interested in polar hydrogens. However, I am getting a hydrogen atom added to one of the oxygens in glutamic acids side chain which I don't think should be there in physiological conditions. I was experimenting with using `AddHydrogens(True, True, 7.4)` instead to get polar hydrogens for a specific pH value. I thought this would be the Python interface equivalent of `-p`. Turns out, while using it via the Python interface messes up the file in a similar manner, the command line option in contrast to the Python interface option still leaves me with that unwanted hydrogen in glutamic acid's side chain. No idea how that happens... Regarding that cyclopropane - it is a methionine in the original pdb file, I guess open babel messes it up even more than I first noticed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613:791,Integrability,interface,interface,791,"Hi @nbehrnd, thanks for taking such a deep dive into this. Actually I am working specifically on PLIP and 3lcs.pdb is only an example file I am currently using for testing. . I am looking into some issues regarding protonation - PLIP currently calls `AddPolarHydrogens()`.; I thought this was the Python Interface equivalent to the command line version with `-h`, actually it is probably the equivalent of `--addpolarh`. So yes, I am indeed only interested in polar hydrogens. However, I am getting a hydrogen atom added to one of the oxygens in glutamic acids side chain which I don't think should be there in physiological conditions. I was experimenting with using `AddHydrogens(True, True, 7.4)` instead to get polar hydrogens for a specific pH value. I thought this would be the Python interface equivalent of `-p`. Turns out, while using it via the Python interface messes up the file in a similar manner, the command line option in contrast to the Python interface option still leaves me with that unwanted hydrogen in glutamic acid's side chain. No idea how that happens... Regarding that cyclopropane - it is a methionine in the original pdb file, I guess open babel messes it up even more than I first noticed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613:862,Integrability,interface,interface,862,"Hi @nbehrnd, thanks for taking such a deep dive into this. Actually I am working specifically on PLIP and 3lcs.pdb is only an example file I am currently using for testing. . I am looking into some issues regarding protonation - PLIP currently calls `AddPolarHydrogens()`.; I thought this was the Python Interface equivalent to the command line version with `-h`, actually it is probably the equivalent of `--addpolarh`. So yes, I am indeed only interested in polar hydrogens. However, I am getting a hydrogen atom added to one of the oxygens in glutamic acids side chain which I don't think should be there in physiological conditions. I was experimenting with using `AddHydrogens(True, True, 7.4)` instead to get polar hydrogens for a specific pH value. I thought this would be the Python interface equivalent of `-p`. Turns out, while using it via the Python interface messes up the file in a similar manner, the command line option in contrast to the Python interface option still leaves me with that unwanted hydrogen in glutamic acid's side chain. No idea how that happens... Regarding that cyclopropane - it is a methionine in the original pdb file, I guess open babel messes it up even more than I first noticed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613:962,Integrability,interface,interface,962,"Hi @nbehrnd, thanks for taking such a deep dive into this. Actually I am working specifically on PLIP and 3lcs.pdb is only an example file I am currently using for testing. . I am looking into some issues regarding protonation - PLIP currently calls `AddPolarHydrogens()`.; I thought this was the Python Interface equivalent to the command line version with `-h`, actually it is probably the equivalent of `--addpolarh`. So yes, I am indeed only interested in polar hydrogens. However, I am getting a hydrogen atom added to one of the oxygens in glutamic acids side chain which I don't think should be there in physiological conditions. I was experimenting with using `AddHydrogens(True, True, 7.4)` instead to get polar hydrogens for a specific pH value. I thought this would be the Python interface equivalent of `-p`. Turns out, while using it via the Python interface messes up the file in a similar manner, the command line option in contrast to the Python interface option still leaves me with that unwanted hydrogen in glutamic acid's side chain. No idea how that happens... Regarding that cyclopropane - it is a methionine in the original pdb file, I guess open babel messes it up even more than I first noticed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613:164,Testability,test,testing,164,"Hi @nbehrnd, thanks for taking such a deep dive into this. Actually I am working specifically on PLIP and 3lcs.pdb is only an example file I am currently using for testing. . I am looking into some issues regarding protonation - PLIP currently calls `AddPolarHydrogens()`.; I thought this was the Python Interface equivalent to the command line version with `-h`, actually it is probably the equivalent of `--addpolarh`. So yes, I am indeed only interested in polar hydrogens. However, I am getting a hydrogen atom added to one of the oxygens in glutamic acids side chain which I don't think should be there in physiological conditions. I was experimenting with using `AddHydrogens(True, True, 7.4)` instead to get polar hydrogens for a specific pH value. I thought this would be the Python interface equivalent of `-p`. Turns out, while using it via the Python interface messes up the file in a similar manner, the command line option in contrast to the Python interface option still leaves me with that unwanted hydrogen in glutamic acid's side chain. No idea how that happens... Regarding that cyclopropane - it is a methionine in the original pdb file, I guess open babel messes it up even more than I first noticed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1979020410:62,Deployability,Install,Installation,62,@kalinni The page https://open-babel.readthedocs.io/en/latest/Installation/install.html compiles (...) some hints. I agree it merits to pull a chair to digest the steps required.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1979020410
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1979020410:75,Deployability,install,install,75,@kalinni The page https://open-babel.readthedocs.io/en/latest/Installation/install.html compiles (...) some hints. I agree it merits to pull a chair to digest the steps required.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1979020410
https://github.com/openbabel/openbabel/issues/2677#issuecomment-1989009105:105,Deployability,release,release,105,"Hi all,; @fredrikw PR does indeed fix the issue! 🎉; Once his changes are merged and part of an OpenBabel release, this issue can be closed.; Thanks a bunch!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1989009105
https://github.com/openbabel/openbabel/issues/2677#issuecomment-2000033070:185,Availability,checkpoint,checkpoint,185,"@kalinni A postscript: in my pane of «suggested projects», I just encountered a link to [reduce](https://github.com/rlabduke/reduce) by the Richardson group. It might be an interesting checkpoint for your reduction/addition of hydrogen atoms to .pdb for the options and report back to the CLI the program provides (including warnings of possible bumps). Running this once without one of the optional flags (cf. archive below) in the general pattern of. ```shell; $ reduce input.pdb > output.pdb; ```. in an instance of Linux Debian to yield a `reduced.pdb`, there was no occurrence of `UNK` or `UNL` to spot for grep in the result. There is one instance of two carbon atoms pretty close / partially overlapping each other (cf. `detail.gif` enclosed), but possibly already present in the original dataset. [a_partager.zip](https://github.com/openbabel/openbabel/files/14618233/a_partager.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-2000033070
https://github.com/openbabel/openbabel/issues/2677#issuecomment-2000033070:89,Energy Efficiency,reduce,reduce,89,"@kalinni A postscript: in my pane of «suggested projects», I just encountered a link to [reduce](https://github.com/rlabduke/reduce) by the Richardson group. It might be an interesting checkpoint for your reduction/addition of hydrogen atoms to .pdb for the options and report back to the CLI the program provides (including warnings of possible bumps). Running this once without one of the optional flags (cf. archive below) in the general pattern of. ```shell; $ reduce input.pdb > output.pdb; ```. in an instance of Linux Debian to yield a `reduced.pdb`, there was no occurrence of `UNK` or `UNL` to spot for grep in the result. There is one instance of two carbon atoms pretty close / partially overlapping each other (cf. `detail.gif` enclosed), but possibly already present in the original dataset. [a_partager.zip](https://github.com/openbabel/openbabel/files/14618233/a_partager.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-2000033070
https://github.com/openbabel/openbabel/issues/2677#issuecomment-2000033070:125,Energy Efficiency,reduce,reduce,125,"@kalinni A postscript: in my pane of «suggested projects», I just encountered a link to [reduce](https://github.com/rlabduke/reduce) by the Richardson group. It might be an interesting checkpoint for your reduction/addition of hydrogen atoms to .pdb for the options and report back to the CLI the program provides (including warnings of possible bumps). Running this once without one of the optional flags (cf. archive below) in the general pattern of. ```shell; $ reduce input.pdb > output.pdb; ```. in an instance of Linux Debian to yield a `reduced.pdb`, there was no occurrence of `UNK` or `UNL` to spot for grep in the result. There is one instance of two carbon atoms pretty close / partially overlapping each other (cf. `detail.gif` enclosed), but possibly already present in the original dataset. [a_partager.zip](https://github.com/openbabel/openbabel/files/14618233/a_partager.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-2000033070
https://github.com/openbabel/openbabel/issues/2677#issuecomment-2000033070:465,Energy Efficiency,reduce,reduce,465,"@kalinni A postscript: in my pane of «suggested projects», I just encountered a link to [reduce](https://github.com/rlabduke/reduce) by the Richardson group. It might be an interesting checkpoint for your reduction/addition of hydrogen atoms to .pdb for the options and report back to the CLI the program provides (including warnings of possible bumps). Running this once without one of the optional flags (cf. archive below) in the general pattern of. ```shell; $ reduce input.pdb > output.pdb; ```. in an instance of Linux Debian to yield a `reduced.pdb`, there was no occurrence of `UNK` or `UNL` to spot for grep in the result. There is one instance of two carbon atoms pretty close / partially overlapping each other (cf. `detail.gif` enclosed), but possibly already present in the original dataset. [a_partager.zip](https://github.com/openbabel/openbabel/files/14618233/a_partager.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-2000033070
https://github.com/openbabel/openbabel/issues/2677#issuecomment-2000033070:544,Energy Efficiency,reduce,reduced,544,"@kalinni A postscript: in my pane of «suggested projects», I just encountered a link to [reduce](https://github.com/rlabduke/reduce) by the Richardson group. It might be an interesting checkpoint for your reduction/addition of hydrogen atoms to .pdb for the options and report back to the CLI the program provides (including warnings of possible bumps). Running this once without one of the optional flags (cf. archive below) in the general pattern of. ```shell; $ reduce input.pdb > output.pdb; ```. in an instance of Linux Debian to yield a `reduced.pdb`, there was no occurrence of `UNK` or `UNL` to spot for grep in the result. There is one instance of two carbon atoms pretty close / partially overlapping each other (cf. `detail.gif` enclosed), but possibly already present in the original dataset. [a_partager.zip](https://github.com/openbabel/openbabel/files/14618233/a_partager.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-2000033070
https://github.com/openbabel/openbabel/issues/2679#issuecomment-1985674373:45,Usability,clear,clear,45,"@SteelDominic In its current form, it is not clear what you want to achieve with an export to .stl except (now guessing:) perhaps some sort of 3D print with some properties. But which one?. There are instances a molecular surface around an individual molecule is good enough, e.g. for packing models and the .stl format provides enough information. There are instances where an additional information is provided, encoded in color, on an isosurface, e.g. ![b818330a-f12](https://github.com/openbabel/openbabel/assets/19709084/e28f7ec1-763f-4f26-b91f-7b815ea9d3d0). (Mark A. Spackman and Dylan Jayatilaka, [CrystEngComm](https://doi.org/10.1039/1466-8033/1999), 2009, 11, 19-32). for which an .obj file (for the surface) and .mtl file (for the color) is an acceptable format for 3D printing. (Though .obj files can contain color information, and .vrml files are an other acceptable data container format.). ----. Else, do you want to generate a 3D print with either a single molecule on a plinth?. ![single_mol](https://github.com/openbabel/openbabel/assets/19709084/21839e69-0656-4e26-960f-3e3eeae330da). Or a crystal packing of a unit cell?. ![cell](https://github.com/openbabel/openbabel/assets/19709084/33686a20-33bc-4a2e-a377-6a61733f0b04). [concretization.zip](https://github.com/openbabel/openbabel/files/14538450/concretization.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1985674373
https://github.com/openbabel/openbabel/issues/2679#issuecomment-1986783079:6286,Integrability,bridg,bridge,6286,"iOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDk5NjY0NTYsIm5iZiI6MTcwOTk2NjE1NiwicGF0aCI6Ii8xOTcwOTA4NC8zMTEyNDE3ODQtMzM2ODZhMjAtMzNiYy00YTJlLWEzNzctNmE2MTczM2YwYjA0LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzA5VDA2MzU1NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWViNzE2MTVlMTIxZjEwY2ZhYjg0NjVlNTg1ZjRhNTkxYWJmMTU2OTRmYjI4OWJjYWQzYjg1NjQ4OTNlNzNhNWYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.1LgUzVHXllc4kuL4CNID0YrM1c7kXGDmFk6CV15Lm64); > ; > [concretization.zip](https://github.com/openbabel/openbabel/files/14538450/concretization.zip). THANKs for your reply!; My target is tring to convert molecule format(like .cif) to 3Dmesh format(.obj).But I check openbabel usage document，it seems openbabel doesn't support this transformation.So i try to use .stl format as a bridge to achieve my target.I try to use openbabel convert .cif to .stl,and then i can use trimesh to convert .stl to .obj.; i use the following command to convert molecule format to .stl.; obabel -icif xxx.cif to -O xxx.stl; i also try to use other molecule format (e.g. .pdb .mol2),they all cannot give me desired response.; when i use vesta,I can export my desired response data.the following are instances.; ![AABHTZ_vesta](https://github.com/openbabel/openbabel/assets/148681573/921e2982-2582-4074-ba92-8526b5ec793c); ![AACMHX10_vesta](https://github.com/openbabel/openbabel/assets/148681573/02a06dd0-c2c2-4c2a-9a0f-40282fd0fe6e); when i use openbabel,i can only get these response; ![AACMHX10_openbabel](https://github.com/openbabel/openbabel/assets/148681573/b42a0bbe-5a55-43de-8332-d248348e5bd7); ![ACETAC07_openbabel](https://github.com/openbabel/openbabel/assets/148681573/026f16af-5a6a-4950-8e50-bcda0cab00c1); Because i want to transform a lot of data，so i cannot use vesta to hand all the data",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1986783079
https://github.com/openbabel/openbabel/issues/2679#issuecomment-1986783079:47,Usability,clear,clear,47,"> @SteelDominic In its current form, it is not clear what you want to achieve with an export to .stl except (now guessing:) perhaps some sort of 3D print with some properties. But which one?; > ; > There are instances a molecular surface around an individual molecule is good enough, e.g. for packing models and the .stl format provides enough information. There are instances where an additional information is provided, encoded in color, on an isosurface, e.g.; > ; > ![b818330a-f12](https://private-user-images.githubusercontent.com/19709084/311237059-e28f7ec1-763f-4f26-b91f-7b815ea9d3d0.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDk5NjY0NTYsIm5iZiI6MTcwOTk2NjE1NiwicGF0aCI6Ii8xOTcwOTA4NC8zMTEyMzcwNTktZTI4ZjdlYzEtNzYzZi00ZjI2LWI5MWYtN2I4MTVlYTlkM2QwLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzA5VDA2MzU1NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWYzOWQyYzgwMWNhZDEwMDVlNmIxZmU5NThjM2NhZDg2YWM4YzUzYTlhZDgwNmJjYzc4OTFlNjU0YjVlOTliZTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.nhOUXKuy8hcbouX0LRQNsbF8gEC3SBWDhE8oVVoNst8) [ ![b818330a-f12](https://private-user-images.githubusercontent.com/19709084/311237059-e28f7ec1-763f-4f26-b91f-7b815ea9d3d0.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDk5NjY0NTYsIm5iZiI6MTcwOTk2NjE1NiwicGF0aCI6Ii8xOTcwOTA4NC8zMTEyMzcwNTktZTI4ZjdlYzEtNzYzZi00ZjI2LWI5MWYtN2I4MTVlYTlkM2QwLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzA5VDA2MzU1NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWYzOWQyYzgwMWNhZDEwMDVlNmIxZmU5NThjM2NhZDg2YWM4YzUzYTlhZDgwNmJjYz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1986783079
https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:2092,Availability,error,error,2092,"RML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the repository was retired (perhaps the public [mailing list](https://sourceforge.net/p/jmol/mailman/jmol-users/) contains some info, or request help with a mail to <jmol-users@lists.sourceforge.net>). Interestingly, [blender](https://www.blender.org/) became useful for 3D printing of molecules, too, but I can't say if it is efficient for batch conversions. See for instance [atomic blender](https://docs.blender.org/manual/en/latest/addons/import_export/mesh_atomic.html), and publications in JChemEduc ([example](https://pubs.ac",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089
https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:2897,Energy Efficiency,efficient,efficient,2897,"](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the repository was retired (perhaps the public [mailing list](https://sourceforge.net/p/jmol/mailman/jmol-users/) contains some info, or request help with a mail to <jmol-users@lists.sourceforge.net>). Interestingly, [blender](https://www.blender.org/) became useful for 3D printing of molecules, too, but I can't say if it is efficient for batch conversions. See for instance [atomic blender](https://docs.blender.org/manual/en/latest/addons/import_export/mesh_atomic.html), and publications in JChemEduc ([example](https://pubs.acs.org/doi/full/10.1021/acs.jchemed.1c00515), and [an other](https://pubs.acs.org/doi/10.1021/acs.jchemed.2c00907) just found by keyword `blender` for this journal alone).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089
https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:2556,Integrability,interface,interface,2556,"](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the repository was retired (perhaps the public [mailing list](https://sourceforge.net/p/jmol/mailman/jmol-users/) contains some info, or request help with a mail to <jmol-users@lists.sourceforge.net>). Interestingly, [blender](https://www.blender.org/) became useful for 3D printing of molecules, too, but I can't say if it is efficient for batch conversions. See for instance [atomic blender](https://docs.blender.org/manual/en/latest/addons/import_export/mesh_atomic.html), and publications in JChemEduc ([example](https://pubs.acs.org/doi/full/10.1021/acs.jchemed.1c00515), and [an other](https://pubs.acs.org/doi/10.1021/acs.jchemed.2c00907) just found by keyword `blender` for this journal alone).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089
https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:1624,Performance,load,load,1624,"tl is enough), or requires colour (.obj, .vmrl). Note, Scalfani *et al.* address a similar a task with Jmol and data by the COD in their open access publication *Programmatic conversion of crystal structures into 3D printable files using Jmol* ([link](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0181-z)). The authors equally mention [cif2vrml](http://cad4.cpac.washington.edu/Cif2VRMLHome/Cif2VRML.htm) by Werner Kaminsky as an executable for the Windows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089
https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:1709,Performance,load,load,1709,"c conversion of crystal structures into 3D printable files using Jmol* ([link](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0181-z)). The authors equally mention [cif2vrml](http://cad4.cpac.washington.edu/Cif2VRMLHome/Cif2VRML.htm) by Werner Kaminsky as an executable for the Windows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the repository was retired (perhaps the public [mailing list](https://sourceforge.net/p/jmol/mailman/jmol-users/) contains some info, or request help with a mail to <jmol-users@",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089
https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:2046,Performance,load,load,2046,"ndows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the repository was retired (perhaps the public [mailing list](https://sourceforge.net/p/jmol/mailman/jmol-users/) contains some info, or request help with a mail to <jmol-users@lists.sourceforge.net>). Interestingly, [blender](https://www.blender.org/) became useful for 3D printing of molecules, too, but I can't say if it is efficient for batch conversions. See for instance [atomic blender](https://docs.blender.org/manual/en/latest/addons/import_export/mesh_atomic.html)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089
https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:716,Security,access,access,716,"@SteelDominic I think OpenBabel is not the right tool for this. Before trying to convert batches of molecules for 3D print (similar to NIH's [3d print exchange](https://3d.nih.gov/), or CCDC's [printing contests](https://www.ccdc.cam.ac.uk/discover/blog/2017-10-17-we-have-a-csd3dprint-contest-winner/)), one better would define if one wants a ball-and-stick model, or one of van der Waals-spheres; if the model is about individual molecules, or a packing; if the object should be free and isolated, or on a plinth; if the result is good enough in as a structure (where a .stl is enough), or requires colour (.obj, .vmrl). Note, Scalfani *et al.* address a similar a task with Jmol and data by the COD in their open access publication *Programmatic conversion of crystal structures into 3D printable files using Jmol* ([link](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0181-z)). The authors equally mention [cif2vrml](http://cad4.cpac.washington.edu/Cif2VRMLHome/Cif2VRML.htm) by Werner Kaminsky as an executable for the Windows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""};",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089
https://github.com/openbabel/openbabel/issues/2681#issuecomment-1989024281:743,Deployability,install,installer,743,"@tkzv . > As far as I know, there are no free software to read and write RDFs. I presume MDL reaction files and MDL RD files are syntactically the same, because then [DataWarrior](https://openmolecules.org/datawarrior/index.html) (seminal publication [here](https://pubs.acs.org/doi/10.1021/ci500588j)) can both read and write them, e.g., to build combinatorial libraries. That is, e.g. you define a Diels-Alder reaction with a RDF file, and the program then permutates dienes and dienophiles to yield the corresponding products, all organized in a (chemistry aware) spreadsheet / array of data. See for instance the documentation [here](https://openmolecules.org/help/chemistry.html#VirtualLibraries). The program requires Java for which the installer provide a suitable engine, then runs in either in Linux, MacOS, or Windows. The source code is in the public on GitHub, for instance [GUI](https://github.com/thsa/datawarrior) and [auxiliary libraries](https://github.com/Actelion/openchemlib/). See for instance Isabelle Giraud's [tutorial](https://www.youtube.com/watch?v=Is2hLqqSFvM). [example.zip](https://github.com/openbabel/openbabel/files/14562396/example.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2681#issuecomment-1989024281
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2008203656:38,Deployability,install,installing,38,"Point 3) might be similar to problems installing openbabel in a virtual environment to run (Python) scripts from the plain CLI. Either try. a) uninstall openbabel by `pip uninstall openbabel`. Then install openbabel-wheel[1] by `pip install openbabel-wheel` instead. This bypass usually fixes some of the problems, and works fine at least in Windows, and Linux. The only edit necessary would be to update the `requirements.txt` file if you amend your virtual environment this way, but not the the Python scripts itself. b) use `python3-openbabel` as packaged for your favorite Linux distribution (example [Debian](https://tracker.debian.org/pkg/openbabel)), Windows + WSL environment. c) try a different ecosystem around your Python interpreter, for instance [Miniconda](https://anaconda.org/conda-forge/openbabel). It isn't necessary to give up standard [CPython](https://www.python.org/) for good -- there usually is no problem to have multiple interpreters on one computer. But it might require some adjustments on the side of the Jupyter notebook to engage the one you want to use. [1] https://pypi.org/project/openbabel-wheel/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2008203656
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2008203656:198,Deployability,install,install,198,"Point 3) might be similar to problems installing openbabel in a virtual environment to run (Python) scripts from the plain CLI. Either try. a) uninstall openbabel by `pip uninstall openbabel`. Then install openbabel-wheel[1] by `pip install openbabel-wheel` instead. This bypass usually fixes some of the problems, and works fine at least in Windows, and Linux. The only edit necessary would be to update the `requirements.txt` file if you amend your virtual environment this way, but not the the Python scripts itself. b) use `python3-openbabel` as packaged for your favorite Linux distribution (example [Debian](https://tracker.debian.org/pkg/openbabel)), Windows + WSL environment. c) try a different ecosystem around your Python interpreter, for instance [Miniconda](https://anaconda.org/conda-forge/openbabel). It isn't necessary to give up standard [CPython](https://www.python.org/) for good -- there usually is no problem to have multiple interpreters on one computer. But it might require some adjustments on the side of the Jupyter notebook to engage the one you want to use. [1] https://pypi.org/project/openbabel-wheel/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2008203656
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2008203656:233,Deployability,install,install,233,"Point 3) might be similar to problems installing openbabel in a virtual environment to run (Python) scripts from the plain CLI. Either try. a) uninstall openbabel by `pip uninstall openbabel`. Then install openbabel-wheel[1] by `pip install openbabel-wheel` instead. This bypass usually fixes some of the problems, and works fine at least in Windows, and Linux. The only edit necessary would be to update the `requirements.txt` file if you amend your virtual environment this way, but not the the Python scripts itself. b) use `python3-openbabel` as packaged for your favorite Linux distribution (example [Debian](https://tracker.debian.org/pkg/openbabel)), Windows + WSL environment. c) try a different ecosystem around your Python interpreter, for instance [Miniconda](https://anaconda.org/conda-forge/openbabel). It isn't necessary to give up standard [CPython](https://www.python.org/) for good -- there usually is no problem to have multiple interpreters on one computer. But it might require some adjustments on the side of the Jupyter notebook to engage the one you want to use. [1] https://pypi.org/project/openbabel-wheel/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2008203656
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2008203656:398,Deployability,update,update,398,"Point 3) might be similar to problems installing openbabel in a virtual environment to run (Python) scripts from the plain CLI. Either try. a) uninstall openbabel by `pip uninstall openbabel`. Then install openbabel-wheel[1] by `pip install openbabel-wheel` instead. This bypass usually fixes some of the problems, and works fine at least in Windows, and Linux. The only edit necessary would be to update the `requirements.txt` file if you amend your virtual environment this way, but not the the Python scripts itself. b) use `python3-openbabel` as packaged for your favorite Linux distribution (example [Debian](https://tracker.debian.org/pkg/openbabel)), Windows + WSL environment. c) try a different ecosystem around your Python interpreter, for instance [Miniconda](https://anaconda.org/conda-forge/openbabel). It isn't necessary to give up standard [CPython](https://www.python.org/) for good -- there usually is no problem to have multiple interpreters on one computer. But it might require some adjustments on the side of the Jupyter notebook to engage the one you want to use. [1] https://pypi.org/project/openbabel-wheel/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2008203656
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359:40,Deployability,install,installing,40,"> Point 3) might be similar to problems installing openbabel in a virtual environment to run (Python) scripts from the plain CLI. Either try; > ; > a) uninstall openbabel by `pip uninstall openbabel`. Then install openbabel-wheel[1] by `pip install openbabel-wheel` instead. This bypass usually fixes some of the problems, and works fine at least in Windows, and Linux. The only edit necessary would be to update the `requirements.txt` file if you amend your virtual environment this way, but not the the Python scripts itself.; > ; > b) use `python3-openbabel` as packaged for your favorite Linux distribution (example [Debian](https://tracker.debian.org/pkg/openbabel)), Windows + WSL environment; > ; > c) try a different ecosystem around your Python interpreter, for instance [Miniconda](https://anaconda.org/conda-forge/openbabel). It isn't necessary to give up standard [CPython](https://www.python.org/) for good -- there usually is no problem to have multiple interpreters on one computer. But it might require some adjustments on the side of the Jupyter notebook to engage the one you want to use.; > ; > [1] https://pypi.org/project/openbabel-wheel/. Hi thank you for your suggestions! I did try the first one but unfortunately still had the same issue. I am using MacOS so don't think I can try the second one. . But I figured out the issue is something to do with me having several versions of Python installed in my base environment and I couldn't figure out which one Jupyter notebook is using, so I have fixed the issue by creating a new conda environment and installed openbabel via conda in there, and running the notebook from that environment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359:206,Deployability,install,install,206,"> Point 3) might be similar to problems installing openbabel in a virtual environment to run (Python) scripts from the plain CLI. Either try; > ; > a) uninstall openbabel by `pip uninstall openbabel`. Then install openbabel-wheel[1] by `pip install openbabel-wheel` instead. This bypass usually fixes some of the problems, and works fine at least in Windows, and Linux. The only edit necessary would be to update the `requirements.txt` file if you amend your virtual environment this way, but not the the Python scripts itself.; > ; > b) use `python3-openbabel` as packaged for your favorite Linux distribution (example [Debian](https://tracker.debian.org/pkg/openbabel)), Windows + WSL environment; > ; > c) try a different ecosystem around your Python interpreter, for instance [Miniconda](https://anaconda.org/conda-forge/openbabel). It isn't necessary to give up standard [CPython](https://www.python.org/) for good -- there usually is no problem to have multiple interpreters on one computer. But it might require some adjustments on the side of the Jupyter notebook to engage the one you want to use.; > ; > [1] https://pypi.org/project/openbabel-wheel/. Hi thank you for your suggestions! I did try the first one but unfortunately still had the same issue. I am using MacOS so don't think I can try the second one. . But I figured out the issue is something to do with me having several versions of Python installed in my base environment and I couldn't figure out which one Jupyter notebook is using, so I have fixed the issue by creating a new conda environment and installed openbabel via conda in there, and running the notebook from that environment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359:241,Deployability,install,install,241,"> Point 3) might be similar to problems installing openbabel in a virtual environment to run (Python) scripts from the plain CLI. Either try; > ; > a) uninstall openbabel by `pip uninstall openbabel`. Then install openbabel-wheel[1] by `pip install openbabel-wheel` instead. This bypass usually fixes some of the problems, and works fine at least in Windows, and Linux. The only edit necessary would be to update the `requirements.txt` file if you amend your virtual environment this way, but not the the Python scripts itself.; > ; > b) use `python3-openbabel` as packaged for your favorite Linux distribution (example [Debian](https://tracker.debian.org/pkg/openbabel)), Windows + WSL environment; > ; > c) try a different ecosystem around your Python interpreter, for instance [Miniconda](https://anaconda.org/conda-forge/openbabel). It isn't necessary to give up standard [CPython](https://www.python.org/) for good -- there usually is no problem to have multiple interpreters on one computer. But it might require some adjustments on the side of the Jupyter notebook to engage the one you want to use.; > ; > [1] https://pypi.org/project/openbabel-wheel/. Hi thank you for your suggestions! I did try the first one but unfortunately still had the same issue. I am using MacOS so don't think I can try the second one. . But I figured out the issue is something to do with me having several versions of Python installed in my base environment and I couldn't figure out which one Jupyter notebook is using, so I have fixed the issue by creating a new conda environment and installed openbabel via conda in there, and running the notebook from that environment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359:406,Deployability,update,update,406,"> Point 3) might be similar to problems installing openbabel in a virtual environment to run (Python) scripts from the plain CLI. Either try; > ; > a) uninstall openbabel by `pip uninstall openbabel`. Then install openbabel-wheel[1] by `pip install openbabel-wheel` instead. This bypass usually fixes some of the problems, and works fine at least in Windows, and Linux. The only edit necessary would be to update the `requirements.txt` file if you amend your virtual environment this way, but not the the Python scripts itself.; > ; > b) use `python3-openbabel` as packaged for your favorite Linux distribution (example [Debian](https://tracker.debian.org/pkg/openbabel)), Windows + WSL environment; > ; > c) try a different ecosystem around your Python interpreter, for instance [Miniconda](https://anaconda.org/conda-forge/openbabel). It isn't necessary to give up standard [CPython](https://www.python.org/) for good -- there usually is no problem to have multiple interpreters on one computer. But it might require some adjustments on the side of the Jupyter notebook to engage the one you want to use.; > ; > [1] https://pypi.org/project/openbabel-wheel/. Hi thank you for your suggestions! I did try the first one but unfortunately still had the same issue. I am using MacOS so don't think I can try the second one. . But I figured out the issue is something to do with me having several versions of Python installed in my base environment and I couldn't figure out which one Jupyter notebook is using, so I have fixed the issue by creating a new conda environment and installed openbabel via conda in there, and running the notebook from that environment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359:1413,Deployability,install,installed,1413,"> Point 3) might be similar to problems installing openbabel in a virtual environment to run (Python) scripts from the plain CLI. Either try; > ; > a) uninstall openbabel by `pip uninstall openbabel`. Then install openbabel-wheel[1] by `pip install openbabel-wheel` instead. This bypass usually fixes some of the problems, and works fine at least in Windows, and Linux. The only edit necessary would be to update the `requirements.txt` file if you amend your virtual environment this way, but not the the Python scripts itself.; > ; > b) use `python3-openbabel` as packaged for your favorite Linux distribution (example [Debian](https://tracker.debian.org/pkg/openbabel)), Windows + WSL environment; > ; > c) try a different ecosystem around your Python interpreter, for instance [Miniconda](https://anaconda.org/conda-forge/openbabel). It isn't necessary to give up standard [CPython](https://www.python.org/) for good -- there usually is no problem to have multiple interpreters on one computer. But it might require some adjustments on the side of the Jupyter notebook to engage the one you want to use.; > ; > [1] https://pypi.org/project/openbabel-wheel/. Hi thank you for your suggestions! I did try the first one but unfortunately still had the same issue. I am using MacOS so don't think I can try the second one. . But I figured out the issue is something to do with me having several versions of Python installed in my base environment and I couldn't figure out which one Jupyter notebook is using, so I have fixed the issue by creating a new conda environment and installed openbabel via conda in there, and running the notebook from that environment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359:1575,Deployability,install,installed,1575,"> Point 3) might be similar to problems installing openbabel in a virtual environment to run (Python) scripts from the plain CLI. Either try; > ; > a) uninstall openbabel by `pip uninstall openbabel`. Then install openbabel-wheel[1] by `pip install openbabel-wheel` instead. This bypass usually fixes some of the problems, and works fine at least in Windows, and Linux. The only edit necessary would be to update the `requirements.txt` file if you amend your virtual environment this way, but not the the Python scripts itself.; > ; > b) use `python3-openbabel` as packaged for your favorite Linux distribution (example [Debian](https://tracker.debian.org/pkg/openbabel)), Windows + WSL environment; > ; > c) try a different ecosystem around your Python interpreter, for instance [Miniconda](https://anaconda.org/conda-forge/openbabel). It isn't necessary to give up standard [CPython](https://www.python.org/) for good -- there usually is no problem to have multiple interpreters on one computer. But it might require some adjustments on the side of the Jupyter notebook to engage the one you want to use.; > ; > [1] https://pypi.org/project/openbabel-wheel/. Hi thank you for your suggestions! I did try the first one but unfortunately still had the same issue. I am using MacOS so don't think I can try the second one. . But I figured out the issue is something to do with me having several versions of Python installed in my base environment and I couldn't figure out which one Jupyter notebook is using, so I have fixed the issue by creating a new conda environment and installed openbabel via conda in there, and running the notebook from that environment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009412359
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009431061:56,Deployability,install,install,56,"If you compiled from source, you could also use that to install the bindings, see https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009431061
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009431061:126,Deployability,Install,Installation,126,"If you compiled from source, you could also use that to install the bindings, see https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009431061
https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009431061:139,Deployability,install,install,139,"If you compiled from source, you could also use that to install the bindings, see https://open-babel.readthedocs.io/en/latest/Installation/install.html#compile-language-bindings",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2683#issuecomment-2009431061
https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858:250,Security,access,access,250,"Maybe we should also remove the extra check for CYGWIN on line 235. If I understood that comment correctly, this change should fix that bug as well, in a less definitive way (in case CYGWIN adds the missing symbol in the future...). But I don't have access to CYGWIN to test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858
https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858:270,Testability,test,test,270,"Maybe we should also remove the extra check for CYGWIN on line 235. If I understood that comment correctly, this change should fix that bug as well, in a less definitive way (in case CYGWIN adds the missing symbol in the future...). But I don't have access to CYGWIN to test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858
https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:778,Availability,avail,available,778,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975
https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:458,Energy Efficiency,energy,energy,458,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975
https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:319,Integrability,bridg,bridge,319,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975
https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:603,Performance,optimiz,optimization,603,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975
https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:748,Performance,optimiz,optimization,748,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975
https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:968,Performance,optimiz,optimization,968,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975
https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:1271,Performance,optimiz,optimization,1271,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975
https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:707,Testability,log,logic,707,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035:156,Availability,error,error,156,"You don't want `-DBUILD_SHARED=OFF` .. among other things, this is not tested by the build actions. Can you post more of the issue from the initial compile error? It looks like you're building in parallel and the actual error is farther up in the compile log.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035:220,Availability,error,error,220,"You don't want `-DBUILD_SHARED=OFF` .. among other things, this is not tested by the build actions. Can you post more of the issue from the initial compile error? It looks like you're building in parallel and the actual error is farther up in the compile log.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035:71,Testability,test,tested,71,"You don't want `-DBUILD_SHARED=OFF` .. among other things, this is not tested by the build actions. Can you post more of the issue from the initial compile error? It looks like you're building in parallel and the actual error is farther up in the compile log.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035:255,Testability,log,log,255,"You don't want `-DBUILD_SHARED=OFF` .. among other things, this is not tested by the build actions. Can you post more of the issue from the initial compile error? It looks like you're building in parallel and the actual error is farther up in the compile log.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:295,Availability,error,errors,295,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:98070,Availability,error,error,98070," std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 35%] Building CXX object src/formats/CMakeFiles/asciiformat.dir/__/depict/asciipainter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/depict/asciipainter.cpp:18:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h: In member function ‘void OpenBabel::OBStopwatch::Start()’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:65:14: error: ‘clock’ was not declared in this scope; 65 | start= clock();; | ^~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:40:1: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; 39 | #include <math.h>; +++ |+#include <ctime>; 40 | ; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h: In member function ‘double OpenBabel::OBStopwatch::Lap()’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: error: ‘clock’ was not declared in this scope; 70 | stop= clock();; | ^~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: error: ‘CLOCKS_PER_SEC’ was not declared in this scope; 71 | return((stop - start) / (double) CLOCKS_PER_SEC);; | ^~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: note: the macro ‘CLOCKS_",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:98575,Availability,error,error,98575,"binary_function; | ^~~~~~~~~~~~~~~; [ 35%] Building CXX object src/formats/CMakeFiles/asciiformat.dir/__/depict/asciipainter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/depict/asciipainter.cpp:18:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h: In member function ‘void OpenBabel::OBStopwatch::Start()’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:65:14: error: ‘clock’ was not declared in this scope; 65 | start= clock();; | ^~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:40:1: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; 39 | #include <math.h>; +++ |+#include <ctime>; 40 | ; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h: In member function ‘double OpenBabel::OBStopwatch::Lap()’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: error: ‘clock’ was not declared in this scope; 70 | stop= clock();; | ^~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: error: ‘CLOCKS_PER_SEC’ was not declared in this scope; 71 | return((stop - start) / (double) CLOCKS_PER_SEC);; | ^~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: note: the macro ‘CLOCKS_PER_SEC’ had not yet been defined; In file included from /usr/include/time.h:33,; from /usr/include/pthread.h:23,; from /usr/include/x86_64-linux-gnu/c++/12/bits/gthr-default.h:35,; from /usr/include/x86_64-linux-gnu/c++/12/bits/gthr.h:148,; from /usr/include/c++/12/ext/atomicity.h:35,; from /usr/include/c++/12/bits/ios_base.h:39,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:98893,Availability,error,error,98893,"pwatch::Start()’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:65:14: error: ‘clock’ was not declared in this scope; 65 | start= clock();; | ^~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:40:1: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; 39 | #include <math.h>; +++ |+#include <ctime>; 40 | ; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h: In member function ‘double OpenBabel::OBStopwatch::Lap()’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: error: ‘clock’ was not declared in this scope; 70 | stop= clock();; | ^~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: error: ‘CLOCKS_PER_SEC’ was not declared in this scope; 71 | return((stop - start) / (double) CLOCKS_PER_SEC);; | ^~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: note: the macro ‘CLOCKS_PER_SEC’ had not yet been defined; In file included from /usr/include/time.h:33,; from /usr/include/pthread.h:23,; from /usr/include/x86_64-linux-gnu/c++/12/bits/gthr-default.h:35,; from /usr/include/x86_64-linux-gnu/c++/12/bits/gthr.h:148,; from /usr/include/c++/12/ext/atomicity.h:35,; from /usr/include/c++/12/bits/ios_base.h:39,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/depict/painter.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/depict/asciipainter.h:21,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/depict/asciipainter.cpp:19:; /usr/include/x86_64-linux-gnu/bits/time.h:34: note: it was later defined here; 34 | #define CLOCKS_PER_SEC ((__clock_t) 1000000); | ; make[2",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:100105,Availability,Error,Error,100105,"in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; 39 | #include <math.h>; +++ |+#include <ctime>; 40 | ; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h: In member function ‘double OpenBabel::OBStopwatch::Lap()’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: error: ‘clock’ was not declared in this scope; 70 | stop= clock();; | ^~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: error: ‘CLOCKS_PER_SEC’ was not declared in this scope; 71 | return((stop - start) / (double) CLOCKS_PER_SEC);; | ^~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: note: the macro ‘CLOCKS_PER_SEC’ had not yet been defined; In file included from /usr/include/time.h:33,; from /usr/include/pthread.h:23,; from /usr/include/x86_64-linux-gnu/c++/12/bits/gthr-default.h:35,; from /usr/include/x86_64-linux-gnu/c++/12/bits/gthr.h:148,; from /usr/include/c++/12/ext/atomicity.h:35,; from /usr/include/c++/12/bits/ios_base.h:39,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/depict/painter.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/depict/asciipainter.h:21,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/depict/asciipainter.cpp:19:; /usr/include/x86_64-linux-gnu/bits/time.h:34: note: it was later defined here; 34 | #define CLOCKS_PER_SEC ((__clock_t) 1000000); | ; make[2]: *** [src/formats/CMakeFiles/asciiformat.dir/build.make:90: src/formats/CMakeFiles/asciiformat.dir/__/depict/asciipainter.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1736: src/formats/CMakeFiles/asciiformat.dir/all] Error 2; make: *** [Makefile:146: all] Error 2; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:100199,Availability,Error,Error,100199,"in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; 39 | #include <math.h>; +++ |+#include <ctime>; 40 | ; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h: In member function ‘double OpenBabel::OBStopwatch::Lap()’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: error: ‘clock’ was not declared in this scope; 70 | stop= clock();; | ^~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: error: ‘CLOCKS_PER_SEC’ was not declared in this scope; 71 | return((stop - start) / (double) CLOCKS_PER_SEC);; | ^~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: note: the macro ‘CLOCKS_PER_SEC’ had not yet been defined; In file included from /usr/include/time.h:33,; from /usr/include/pthread.h:23,; from /usr/include/x86_64-linux-gnu/c++/12/bits/gthr-default.h:35,; from /usr/include/x86_64-linux-gnu/c++/12/bits/gthr.h:148,; from /usr/include/c++/12/ext/atomicity.h:35,; from /usr/include/c++/12/bits/ios_base.h:39,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/depict/painter.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/depict/asciipainter.h:21,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/depict/asciipainter.cpp:19:; /usr/include/x86_64-linux-gnu/bits/time.h:34: note: it was later defined here; 34 | #define CLOCKS_PER_SEC ((__clock_t) 1000000); | ; make[2]: *** [src/formats/CMakeFiles/asciiformat.dir/build.make:90: src/formats/CMakeFiles/asciiformat.dir/__/depict/asciipainter.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1736: src/formats/CMakeFiles/asciiformat.dir/all] Error 2; make: *** [Makefile:146: all] Error 2; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:100238,Availability,Error,Error,100238,"in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; 39 | #include <math.h>; +++ |+#include <ctime>; 40 | ; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h: In member function ‘double OpenBabel::OBStopwatch::Lap()’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: error: ‘clock’ was not declared in this scope; 70 | stop= clock();; | ^~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:70:13: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: error: ‘CLOCKS_PER_SEC’ was not declared in this scope; 71 | return((stop - start) / (double) CLOCKS_PER_SEC);; | ^~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h:71:40: note: the macro ‘CLOCKS_PER_SEC’ had not yet been defined; In file included from /usr/include/time.h:33,; from /usr/include/pthread.h:23,; from /usr/include/x86_64-linux-gnu/c++/12/bits/gthr-default.h:35,; from /usr/include/x86_64-linux-gnu/c++/12/bits/gthr.h:148,; from /usr/include/c++/12/ext/atomicity.h:35,; from /usr/include/c++/12/bits/ios_base.h:39,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/depict/painter.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/depict/asciipainter.h:21,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/depict/asciipainter.cpp:19:; /usr/include/x86_64-linux-gnu/bits/time.h:34: note: it was later defined here; 34 | #define CLOCKS_PER_SEC ((__clock_t) 1000000); | ; make[2]: *** [src/formats/CMakeFiles/asciiformat.dir/build.make:90: src/formats/CMakeFiles/asciiformat.dir/__/depict/asciipainter.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1736: src/formats/CMakeFiles/asciiformat.dir/all] Error 2; make: *** [Makefile:146: all] Error 2; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12,Deployability,configurat,configuration,12,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:144,Deployability,configurat,configuration,144,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:165,Deployability,configurat,configuration,165,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:238,Deployability,configurat,configuration,238,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:3282,Energy Efficiency,charge,chargemodel,3282,"1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/builder.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/chargemodel.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data_utilities.cpp.o; [ 7%",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:3385,Energy Efficiency,charge,chargemodel,3385,"builder.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/builder.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/chargemodel.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data_utilities.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/descriptor.cpp.o; In file included from /hom",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:3457,Energy Efficiency,charge,chargemodel,3457,"plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/builder.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/chargemodel.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data_utilities.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/descriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; fro",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:68797,Energy Efficiency,charge,charges,68797,"home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/s",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:68900,Energy Efficiency,charge,chargemodel,68900,"<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:68972,Energy Efficiency,charge,charges,68972,"cated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:69423,Energy Efficiency,charge,charges,69423,"el-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:69623,Energy Efficiency,charge,charges,69623,"so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabe",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:69732,Energy Efficiency,charge,chargemodel,69732,"harges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:69804,Energy Efficiency,charge,charges,69804,"pp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabe",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:70552,Energy Efficiency,charge,charges,70552,"~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:70656,Energy Efficiency,charge,chargemodel,70656,"ile included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/cha",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:70728,Energy Efficiency,charge,charges,70728,"/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:71471,Energy Efficiency,charge,charges,71471,"~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:71577,Energy Efficiency,charge,chargemodel,71577,"n file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:71649,Energy Efficiency,charge,charges,71649,"el/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:72394,Energy Efficiency,charge,charges,72394,"~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:72502,Energy Efficiency,charge,chargemodel,72502,"le included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/c",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:72574,Energy Efficiency,charge,charges,72574,"argemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:73321,Energy Efficiency,charge,charges,73321,"~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.c",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:73425,Energy Efficiency,charge,chargemodel,73425,"file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/charg",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:73497,Energy Efficiency,charge,charges,73497,"l/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:73570,Energy Efficiency,charge,charges,73570,"/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cp",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:74313,Energy Efficiency,charge,charges,74313,"dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.c",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:74416,Energy Efficiency,charge,chargemodel,74416,"de/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/charg",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:74488,Energy Efficiency,charge,charges,74488,"1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:74560,Energy Efficiency,charge,charges,74560,".1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:75302,Energy Efficiency,charge,charges,75302,"s.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:75407,Energy Efficiency,charge,chargemodel,75407,"de/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built target plugin_charges; Consolidate compiler generated dependencies of target inchi; [ 26%] Buil",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:75479,Energy Efficiency,charge,charges,75479,"/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built target plugin_charges; Consolidate compiler generated dependencies of target inchi; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_bns.c.o; [ 26%] Bui",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:75553,Energy Efficiency,charge,charges,75553,"rc/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built target plugin_charges; Consolidate compiler generated dependencies of target inchi; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_bns.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_io.c.o; [ 26",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:92246,Energy Efficiency,charge,charge,92246,"ntf(char*, size_t, const char*, ...)’,; inlined from ‘virtual bool OpenBabel::PDBFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’ at /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:702:29:; /usr/include/x86_64-linux-gnu/bits/stdio2.h:71:35: note: ‘__builtin___snprintf_chk’ output between 5 and 11 bytes into a destination of size 10; 71 | return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,; | ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 72 | __glibc_objsize (__s), __fmt,; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 73 | __va_arg_pack ());; | ~~~~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp: In member function ‘virtual bool OpenBabel::PDBFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:739:35: warning: ‘%+d’ directive output may be truncated writing between 2 and 6 bytes into a region of size 3 [-Wformat-truncation=]; 739 | snprintf(scharge, 3, ""%+d"", charge);; | ^~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:739:34: note: directive argument in the range [-32768, 32767]; 739 | snprintf(scharge, 3, ""%+d"", charge);; | ^~~~~; In function ‘int snprintf(char*, size_t, const char*, ...)’,; inlined from ‘virtual bool OpenBabel::PDBFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’ at /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:739:21:; /usr/include/x86_64-linux-gnu/bits/stdio2.h:71:35: note: ‘__builtin___snprintf_chk’ output between 3 and 7 bytes into a destination of size 3; 71 | return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,; | ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 72 | __glibc_objsize (__s), __fmt,; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 73 | __va_arg_pack ());; | ~~~~~~~~~~~~~~~~~; [ 34%] Linking CXX shared module ../../lib/pdbformat.so; [ 34%] Built target pdbformat; C",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:92430,Energy Efficiency,charge,charge,92430,"9:; /usr/include/x86_64-linux-gnu/bits/stdio2.h:71:35: note: ‘__builtin___snprintf_chk’ output between 5 and 11 bytes into a destination of size 10; 71 | return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,; | ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 72 | __glibc_objsize (__s), __fmt,; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 73 | __va_arg_pack ());; | ~~~~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp: In member function ‘virtual bool OpenBabel::PDBFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:739:35: warning: ‘%+d’ directive output may be truncated writing between 2 and 6 bytes into a region of size 3 [-Wformat-truncation=]; 739 | snprintf(scharge, 3, ""%+d"", charge);; | ^~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:739:34: note: directive argument in the range [-32768, 32767]; 739 | snprintf(scharge, 3, ""%+d"", charge);; | ^~~~~; In function ‘int snprintf(char*, size_t, const char*, ...)’,; inlined from ‘virtual bool OpenBabel::PDBFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’ at /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:739:21:; /usr/include/x86_64-linux-gnu/bits/stdio2.h:71:35: note: ‘__builtin___snprintf_chk’ output between 3 and 7 bytes into a destination of size 3; 71 | return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,; | ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 72 | __glibc_objsize (__s), __fmt,; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 73 | __va_arg_pack ());; | ~~~~~~~~~~~~~~~~~; [ 34%] Linking CXX shared module ../../lib/pdbformat.so; [ 34%] Built target pdbformat; Consolidate compiler generated dependencies of target inchiformat; [ 34%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/inchiformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:417,Integrability,depend,dependencies,417,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:512,Integrability,depend,dependencies,512,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:605,Integrability,depend,dependencies,605,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:28289,Integrability,depend,dependencies,28289,"babel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Linking CXX shared library ../lib/libopenbabel.so; [ 17%] Built target openbabel; Consolidate compiler generated dependencies of target plugin_descriptors; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cansmidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cansmidescriptor.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/ica",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:35693,Integrability,depend,dependencies,35693,"l/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/smartsdescriptors.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Linking CXX shared module ../lib/plugin_descriptors.so; [ 18%] Built target plugin_descriptors; Consolidate compiler generated dependencies of target plugin_fingerprints; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger2.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger2.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:39159,Integrability,depend,dependencies,39159,"nbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/fingerecfp.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Linking CXX shared module ../lib/plugin_fingerprints.so; [ 19%] Built target plugin_fingerprints; Consolidate compiler generated dependencies of target plugin_forcefields; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldgaff.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:21:; /usr/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:43768,Integrability,depend,dependencies,43768,"mp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Linking CXX shared module ../lib/plugin_forcefields.so; [ 19%] Built target plugin_forcefields; Consolidate compiler generated dependencies of target plugin_ops; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addfilename.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addfilename.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addfilename.cpp:18:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addinindex.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/in",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:68697,Integrability,depend,dependencies,68697,"bel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:76362,Integrability,depend,dependencies,76362,"openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built target plugin_charges; Consolidate compiler generated dependencies of target inchi; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_bns.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_io.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichican2.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichicano.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichicans.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichiisot.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichilnct.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichimak2.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichimake.c.o; [ 28%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichimap1.c.o; [ 28%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichimap2.c.o; [ 28%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichimap4.c.o; [ 28%] Bui",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:79754,Integrability,depend,dependencies,79754,"ats/libinchi/CMakeFiles/inchi.dir/ichitaut.c.o; [ 31%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ikey_base26.c.o; [ 32%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ikey_dll.c.o; [ 32%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/inchi_dll.c.o; [ 32%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/inchi_dll_a.c.o; [ 32%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/inchi_dll_a2.c.o; [ 32%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/inchi_dll_main.c.o; [ 32%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/runichi.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/sha2.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/strutil.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/util.c.o; [ 33%] Linking C shared library ../../../lib/libinchi.so; [ 33%] Built target inchi; Consolidate compiler generated dependencies of target smilesformat; [ 33%] Building CXX object src/formats/CMakeFiles/smilesformat.dir/smilesformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/smilesformat.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostre",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:83783,Integrability,depend,dependencies,83783," ‘__builtin___snprintf_chk’ output may be truncated before the last format character [-Wformat-truncation=]; 2857 | snprintf(tcount, 10, ""%d"", i);; | ^; In function ‘int snprintf(char*, size_t, const char*, ...)’,; inlined from ‘bool OpenBabel::OBMol2Cansmi::GetSmilesElement(OpenBabel::OBCanSmiNode*, std::vector<OpenBabel::OBAtom*>&, std::vector<unsigned int>&, std::string&)’ at /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/smilesformat.cpp:2857:19:; /usr/include/x86_64-linux-gnu/bits/stdio2.h:71:35: note: ‘__builtin___snprintf_chk’ output between 2 and 11 bytes into a destination of size 10; 71 | return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,; | ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 72 | __glibc_objsize (__s), __fmt,; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 73 | __va_arg_pack ());; | ~~~~~~~~~~~~~~~~~; [ 33%] Linking CXX shared module ../../lib/smilesformat.so; [ 33%] Built target smilesformat; Consolidate compiler generated dependencies of target mdlformat; [ 33%] Building CXX object src/formats/CMakeFiles/mdlformat.dir/mdlformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mdlformat.cpp:35:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mdlformat.cpp:26:; /usr/include/c++/12/bits/stl_function.h:131",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:86737,Integrability,depend,dependencies,86737,"968,; from /usr/include/c++/12/string:53,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/iomanip:40,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mdlformat.cpp:27:; In function ‘int snprintf(char*, size_t, const char*, ...)’,; inlined from ‘std::string OpenBabel::MDLFormat::GetTimeDate()’ at /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mdlformat.cpp:1709:13:; /usr/include/x86_64-linux-gnu/bits/stdio2.h:71:35: note: ‘__builtin___snprintf_chk’ output between 11 and 56 bytes into a destination of size 11; 71 | return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,; | ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 72 | __glibc_objsize (__s), __fmt,; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 73 | __va_arg_pack ());; | ~~~~~~~~~~~~~~~~~; [ 33%] Linking CXX shared module ../../lib/mdlformat.so; [ 33%] Built target mdlformat; Consolidate compiler generated dependencies of target mol2format; [ 33%] Building CXX object src/formats/CMakeFiles/mol2format.dir/mol2format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mol2format.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:88121,Integrability,depend,dependencies,88121,"home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mol2format.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 33%] Linking CXX shared module ../../lib/mol2format.so; [ 33%] Built target mol2format; Consolidate compiler generated dependencies of target pdbformat; [ 33%] Building CXX object src/formats/CMakeFiles/pdbformat.dir/pdbformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:93218,Integrability,depend,dependencies,93218,", 3, ""%+d"", charge);; | ^~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:739:34: note: directive argument in the range [-32768, 32767]; 739 | snprintf(scharge, 3, ""%+d"", charge);; | ^~~~~; In function ‘int snprintf(char*, size_t, const char*, ...)’,; inlined from ‘virtual bool OpenBabel::PDBFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’ at /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:739:21:; /usr/include/x86_64-linux-gnu/bits/stdio2.h:71:35: note: ‘__builtin___snprintf_chk’ output between 3 and 7 bytes into a destination of size 3; 71 | return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,; | ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 72 | __glibc_objsize (__s), __fmt,; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 73 | __va_arg_pack ());; | ~~~~~~~~~~~~~~~~~; [ 34%] Linking CXX shared module ../../lib/pdbformat.so; [ 34%] Built target pdbformat; Consolidate compiler generated dependencies of target inchiformat; [ 34%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/inchiformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/inchiformat.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/inchiformat.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:96398,Integrability,depend,dependencies,96398,"rLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/unique.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/inchiformat.h:134:19: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 134 | : public std::binary_function<const std::string&, const std::string&, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 35%] Linking CXX shared module ../../lib/inchiformat.so; [ 35%] Built target inchiformat; Consolidate compiler generated dependencies of target asciiformat; [ 35%] Building CXX object src/formats/CMakeFiles/asciiformat.dir/asciiformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/asciiformat.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostre",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12,Modifiability,config,configuration,12,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:144,Modifiability,config,configuration,144,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:165,Modifiability,config,configuration,165,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:238,Modifiability,config,configuration,238,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:1022,Modifiability,plugin,plugin,1022,"figuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; [ 5%] Building ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:2460,Modifiability,plugin,plugin,2460,"c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bondtyper.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/builder.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/builder.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/s",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:3540,Modifiability,plugin,plugin,3540,"t> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/builder.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/chargemodel.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data_utilities.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/descriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:23:; /hom",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:4006,Modifiability,plugin,plugin,4006,"l_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/chargemodel.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data_utilities.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/descriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:4592,Modifiability,plugin,plugin,4592,"1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data_utilities.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/descriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/elements.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/fingerprint.cpp.o; In file included from /home/icamps/Temp/openbabel/ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:5772,Modifiability,plugin,plugin,5772,"trLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/elements.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/fingerprint.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:27:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/forcefield.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:6634,Modifiability,plugin,plugin,6634,"t.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:27:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/forcefield.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/stl_tree.h:65,; from /usr/include/c++/12/set:60,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/format.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations];",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:7481,Modifiability,plugin,plugin,7481,"nbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/stl_tree.h:65,; from /usr/include/c++/12/set:60,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/format.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/generic.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/graphsym.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/grid.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/griddata.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/isomorphism.cpp.o; [ 8%] Building CXX object src/CMakeFiles/op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:7947,Modifiability,plugin,plugin,7947,"s/stl_tree.h:65,; from /usr/include/c++/12/set:60,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/format.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/generic.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/graphsym.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/grid.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/griddata.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/isomorphism.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/kekulize.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/locale.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/matrix.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/mcdlutil.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:9030,Modifiability,plugin,plugin,9030," here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/generic.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/graphsym.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/grid.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/griddata.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/isomorphism.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/kekulize.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/locale.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/matrix.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/mcdlutil.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/mcdlutil.cpp:27:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/mcdlutil.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/molchrg.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/mol.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/obconversion.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/o",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:10190,Modifiability,plugin,plugin,10190,"struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/mcdlutil.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/molchrg.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/mol.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/obconversion.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/obconversion.cpp:48:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/fstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/obconversion.cpp:37:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/oberror.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obfunctions.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obiter.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obutil",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:11479,Modifiability,plugin,plugin,11479," /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/fstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/obconversion.cpp:37:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/oberror.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obfunctions.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obiter.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obutil.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/op.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/op.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/patty.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/plugin.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12257,Modifiability,plugin,plugin,12257,"In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/op.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/patty.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/plugin.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12341,Modifiability,plugin,plugin,12341,"/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/op.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/patty.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/plugin.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12419,Modifiability,plugin,plugin,12419,"20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/patty.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/plugin.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/query.cpp:29:; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12885,Modifiability,plugin,plugin,12885,"clude/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/patty.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/plugin.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/query.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:13475,Modifiability,plugin,plugin,13475,"lass _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/query.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/base.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/bond.h:31,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/query.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/query.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rand.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/reactionfacade.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/residue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:15150,Modifiability,plugin,plugin,15150,"sr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rand.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/reactionfacade.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/residue.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/ring.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rotamer.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rotor.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/spectrophore.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/tautomer.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/tautomer.cpp:26:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/tautomer.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/tautomer.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/tokenst.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/transform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/transform.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘t",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:16117,Modifiability,plugin,plugin,16117,"babel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/tautomer.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/tautomer.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/tokenst.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/transform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/transform.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/transform.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/typer.cpp.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/obmolecformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:17387,Modifiability,plugin,plugin,17387," file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/transform.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/typer.cpp.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/obmolecformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/obmolecformat.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/conformersearch.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/conformersearch.cpp:22:; /home/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:18437,Modifiability,plugin,plugin,18437,"rg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/conformersearch.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/conformersearch.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/conformersearch.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/conformersearch.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/confsearch.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:24:; /home/icamps/Temp/ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:19472,Modifiability,plugin,plugin,19472,"mplate<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/conformersearch.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/conformersearch.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/confsearch.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/atom.h:30,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp: In constructor ‘OpenBabel::OBDiversePoses::OBDiversePoses(const OpenBabel::OBMol&, double, bool)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:134:66: warning: ‘std::binder2nd<_Operation> std::bind2nd(const _Operation&, const _Tp&) [with _Operation = less<double>; _Tp = double]’ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:22034,Modifiability,plugin,plugin,22034,"erseConfGen(double, unsigned int, double, bool)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:444:77: warning: ‘std::binder2nd<_Operation> std::bind2nd(const _Operation&, const _Tp&) [with _Operation = plus<double>; _Tp = double]’ is deprecated: use 'std::bind' instead [-Wdeprecated-declarations]; 444 | transform(_energies.begin(), _energies.end(), _energies.begin(), bind2nd(std::plus<double>(), energy_offset));; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12/backward/binders.h:172:5: note: declared here; 172 | bind2nd(const _Operation& __fn, const _Tp& __x); | ^~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/distgeom.cpp:38:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/distgeom.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/distgeom.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/dlhandler_unix.cpp.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/depict/depict.cpp.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/depict/svgpainter.cpp.o; [ 15%] Building CXX object src/CMakeFiles/openba",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:27564,Modifiability,plugin,plugin,27564,"on = equal_to<long unsigned int>; _Tp = long unsigned int]’ is deprecated: use 'std::bind' instead [-Wdeprecated-declarations]; 3005 | const std::binder1st<std::equal_to<OBStereo::Ref> > equal_to_implicitRef = std::bind1st (equal_to<OBStereo::Ref>(), (OBStereo::Ref) OBStereo::ImplicitRef);; | ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12/backward/binders.h:136:5: note: declared here; 136 | bind1st(const _Operation& __fn, const _Tp& __x); | ^~~~~~~; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/facade.cpp.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/gen3dstereohelper.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Linking CXX shared library ../lib/libopenbabel.so; [ 17%] Built target openbabel; Consolidate compiler generated dependencies of target plugin_descriptors; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cansmidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:28771,Modifiability,plugin,plugin,28771,"_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Linking CXX shared library ../lib/libopenbabel.so; [ 17%] Built target openbabel; Consolidate compiler generated dependencies of target plugin_descriptors; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cansmidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cansmidescriptor.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cansmidescriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cmpdfilter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/d",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:29929,Modifiability,plugin,plugin,29929,"| struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cansmidescriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cmpdfilter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cmpdfilter.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cmpdfilter.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/groupcontrib.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descr",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:31172,Modifiability,plugin,plugin,31172,"ool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cmpdfilter.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/groupcontrib.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/groupcontrib.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/groupcontrib.cpp:33:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/groupcontrib.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/filters.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/filters.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::bin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:32075,Modifiability,plugin,plugin,32075,"1.1/src/descriptors/groupcontrib.cpp:33:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/groupcontrib.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/filters.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/filters.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/inchidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<clas",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:33030,Modifiability,plugin,plugin,33030,"ps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/inchidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/inchiformat.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:34744,Modifiability,plugin,plugin,34744,"/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/inchiformat.h:134:19: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 134 | : public std::binary_function<const std::string&, const std::string&, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/smartsdescriptors.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/smartsdescriptors.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/smartsdescriptors.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Linking CXX shared module ../lib/plugin_descriptors.so; [ 18%] Built target plugin_descriptors; Consolidate compiler generated dependencies of target plugin_fingerprints; [",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:36079,Modifiability,plugin,plugin,36079,"lude/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/smartsdescriptors.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Linking CXX shared module ../lib/plugin_descriptors.so; [ 18%] Built target plugin_descriptors; Consolidate compiler generated dependencies of target plugin_fingerprints; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger2.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger2.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger2.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger3.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:37227,Modifiability,plugin,plugin,37227,"ions]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger2.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger3.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger3.cpp:27:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger3.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/fingerecfp.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/fingerecfp.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:38214,Modifiability,plugin,plugin,38214,"1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger3.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/fingerecfp.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/fingerecfp.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/fingerecfp.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Linking CXX shared module ../lib/plugin_fingerprints.so; [ 19%] Built target plugin_fingerprints; Consolidate compiler generated dependencies of target plugin_forcefields; [ 19%]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:39641,Modifiability,plugin,plugin,39641,"sr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/fingerecfp.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Linking CXX shared module ../lib/plugin_fingerprints.so; [ 19%] Built target plugin_fingerprints; Consolidate compiler generated dependencies of target plugin_forcefields; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldgaff.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldghemical.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:40737,Modifiability,plugin,plugin,40737,"inary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldghemical.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcef",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:41825,Modifiability,plugin,plugin,41825,"t std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldmmff94.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefielduff.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:42990,Modifiability,plugin,plugin,42990,"t OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefielduff.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Linking CXX shared module ../lib/plugin_forcefields.so; [ 19%] Built target plugin_forcefields; Consolidate compiler generated dependencies of target plugin_ops; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addfilename.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /h",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:44117,Modifiability,plugin,plugin,44117,"-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Linking CXX shared module ../lib/plugin_forcefields.so; [ 19%] Built target plugin_forcefields; Consolidate compiler generated dependencies of target plugin_ops; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addfilename.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addfilename.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addfilename.cpp:18:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addinindex.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addinindex.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR Cha",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:44940,Modifiability,plugin,plugin,44940,"openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addfilename.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addfilename.cpp:18:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addinindex.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addinindex.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/base.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addinindex.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, cl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:45884,Modifiability,plugin,plugin,45884," /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/base.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addinindex.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addnonpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addnonpolarh.cpp:20:; /home/icamps/Temp/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:46918,Modifiability,plugin,plugin,46918,"emplate<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addnonpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addnonpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addnonpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/canonical.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/canonical.cpp:19:; /home/icamps/Temp/openbab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:47949,Modifiability,plugin,plugin,47949," ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addnonpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/canonical.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/canonical.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/changecell.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/changecell.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR Char",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:48771,Modifiability,plugin,plugin,48771,"el/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/canonical.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/changecell.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/changecell.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/changecell.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:20:; /home/icamps/Temp/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:49800,Modifiability,plugin,plugin,49800,"g: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/changecell.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delnonpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:20:; /home/icamps/Temp/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:50834,Modifiability,plugin,plugin,50834,"emplate<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delnonpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen2D.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen2D.cpp:22:; /home/icamps/Temp/openbabel/openb",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:51857,Modifiability,plugin,plugin,51857,"warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen2D.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen2D.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen2D.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/fillUC.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/fillUC.cpp:20:; /home/icamps/Temp/openbabel/openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:52875,Modifiability,plugin,plugin,52875,":42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen2D.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/fillUC.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/fillUC.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/forcefield.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/forcefield.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR Char",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:53697,Modifiability,plugin,plugin,53697,"babel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/fillUC.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/forcefield.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/forcefield.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/forcefield.cpp:29:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen3d.cpp:20:; /home/icamps/Temp/openbabel/openbab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:54718,Modifiability,plugin,plugin,54718,": warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/forcefield.cpp:29:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen3d.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLes",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:55534,Modifiability,plugin,plugin,55534,"mp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen3d.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56271,Modifiability,plugin,plugin,56271,"Files/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrL",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:57089,Modifiability,plugin,plugin,57089,"les/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opsplit.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opsplit.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:57996,Modifiability,plugin,plugin,57996,"bel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opsplit.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opsplit.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/optransform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:21,; from ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:59125,Modifiability,plugin,plugin,59125,"deprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/optransform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:21,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/optransform.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/phmodel.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/partialcharges.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/partialcharges.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:60129,Modifiability,plugin,plugin,60129,"el/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/phmodel.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/partialcharges.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/partialcharges.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/readconformers.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/readconformers.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBER",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:60959,Modifiability,plugin,plugin,60959,"3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/partialcharges.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/readconformers.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/readconformers.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/sort.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/sort.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : pu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:61769,Modifiability,plugin,plugin,61769,"openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/readconformers.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/sort.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/sort.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/sort.cpp:32:28: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 32 | struct Order : public std::binary_function<std::pair<OBBase*,T>, std::pair<OBBase*,T>, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:63102,Modifiability,plugin,plugin,63102,"icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/sort.cpp:32:28: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 32 | struct Order : public std::binary_function<std::pair<OBBase*,T>, std::pair<OBBase*,T>, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opisomorph.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.h:15,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/ophighlight.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openba",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:64100,Modifiability,plugin,plugin,64100,"penbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/ophighlight.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/xout.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/xout.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_funct",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:64994,Modifiability,plugin,plugin,64994,"babel/openbabel-3.1.1/src/ops/ophighlight.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/xout.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/xout.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/conformer.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:65814,Modifiability,plugin,plugin,65814,"openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/xout.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/conformer.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:29:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opalign.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:20:; /home/icamps/Temp/openbabel/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:66838,Modifiability,plugin,plugin,66838,"arning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:29:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opalign.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opconfab.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:23:; /home/icamps/Temp/openbabel/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:67862,Modifiability,plugin,plugin,67862,"arning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opconfab.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:69055,Modifiability,plugin,plugin,69055,"ic std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | str",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:69893,Modifiability,plugin,plugin,69893,"ude/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result>",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:70359,Modifiability,plugin,plugin,70359,"++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declare",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:70812,Modifiability,plugin,plugin,70812,"harges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Res",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:71278,Modifiability,plugin,plugin,71278,"bel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: dec",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:71735,Modifiability,plugin,plugin,71735,"charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:72201,Modifiability,plugin,plugin,72201,"dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:72662,Modifiability,plugin,plugin,72662,"s/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/pl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:73128,Modifiability,plugin,plugin,73128,"ndler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/pl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:73654,Modifiability,plugin,plugin,73654,"lude/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:74120,Modifiability,plugin,plugin,74120,"lude/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:74643,Modifiability,plugin,plugin,74643,"include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:75109,Modifiability,plugin,plugin,75109,"include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:75638,Modifiability,plugin,plugin,75638,"e/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built target plugin_charges; Consolidate compiler generated dependencies of target inchi; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_bns.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_io.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichican2.c.o",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:76104,Modifiability,plugin,plugin,76104,"e/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built target plugin_charges; Consolidate compiler generated dependencies of target inchi; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_bns.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_io.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichican2.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichicano.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichicans.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichiisot.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichilnct.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichimak2.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/in",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:80296,Modifiability,plugin,plugin,80296,"iles/inchi.dir/inchi_dll_main.c.o; [ 32%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/runichi.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/sha2.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/strutil.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/util.c.o; [ 33%] Linking C shared library ../../../lib/libinchi.so; [ 33%] Built target inchi; Consolidate compiler generated dependencies of target smilesformat; [ 33%] Building CXX object src/formats/CMakeFiles/smilesformat.dir/smilesformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/smilesformat.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/smilesformat.cpp: In member function ‘bool OpenBabel::OBMol2Cansmi::GetSmilesElement(OpenBabel::OBCanSmiNode*, std::vector<OpenBabel::OBAtom*>&, std::vector<unsigned int>&, std::string&)’:; /home/icamps/Temp/o",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:84313,Modifiability,plugin,plugin,84313,":35: note: ‘__builtin___snprintf_chk’ output between 2 and 11 bytes into a destination of size 10; 71 | return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,; | ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 72 | __glibc_objsize (__s), __fmt,; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 73 | __va_arg_pack ());; | ~~~~~~~~~~~~~~~~~; [ 33%] Linking CXX shared module ../../lib/smilesformat.so; [ 33%] Built target smilesformat; Consolidate compiler generated dependencies of target mdlformat; [ 33%] Building CXX object src/formats/CMakeFiles/mdlformat.dir/mdlformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mdlformat.cpp:35:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mdlformat.cpp:26:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mdlformat.cpp: In member function ‘std::string OpenBabel::MDLFormat::GetTimeDate()’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mdlformat.cpp:1709:27: warning: ‘%02d’ directive output may be truncated writing between 2 and 11 bytes into a region of size between 0 and 9 [-Wformat-truncation=]; 1709 | snprintf(td, 11, ""%02d%02d%02d%02d%02d"", ts->tm_mon+1, ts->tm_mda",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:87271,Modifiability,plugin,plugin,87271,"1:35: note: ‘__builtin___snprintf_chk’ output between 11 and 56 bytes into a destination of size 11; 71 | return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,; | ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 72 | __glibc_objsize (__s), __fmt,; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 73 | __va_arg_pack ());; | ~~~~~~~~~~~~~~~~~; [ 33%] Linking CXX shared module ../../lib/mdlformat.so; [ 33%] Built target mdlformat; Consolidate compiler generated dependencies of target mol2format; [ 33%] Building CXX object src/formats/CMakeFiles/mol2format.dir/mol2format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/mol2format.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 33%] Linking CXX shared module ../../lib/mol2format.so; [ 33%] Built target mol2format; Consolidate compiler generated dependencies of target pdbformat; [ 33%] Building CXX object src/formats/CMakeFiles/pdbformat.dir/pdbformat.cpp.o; In file included from /home/i",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:88651,Modifiability,plugin,plugin,88651,"usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 33%] Linking CXX shared module ../../lib/mol2format.so; [ 33%] Built target mol2format; Consolidate compiler generated dependencies of target pdbformat; [ 33%] Building CXX object src/formats/CMakeFiles/pdbformat.dir/pdbformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp: In member function ‘virtual bool OpenBabel::PDBFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:684:58",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:93668,Modifiability,plugin,plugin,93668,"-3.1.1/src/formats/pdbformat.cpp:739:21:; /usr/include/x86_64-linux-gnu/bits/stdio2.h:71:35: note: ‘__builtin___snprintf_chk’ output between 3 and 7 bytes into a destination of size 3; 71 | return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,; | ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 72 | __glibc_objsize (__s), __fmt,; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 73 | __va_arg_pack ());; | ~~~~~~~~~~~~~~~~~; [ 34%] Linking CXX shared module ../../lib/pdbformat.so; [ 34%] Built target pdbformat; Consolidate compiler generated dependencies of target inchiformat; [ 34%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/inchiformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/inchiformat.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/inchiformat.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/inchiformat.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/inchiformat.h:134:19: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 134 | : public std::binary_function<const",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:95239,Modifiability,plugin,plugin,95239,"12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/inchiformat.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/inchiformat.h:134:19: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 134 | : public std::binary_function<const std::string&, const std::string&, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 34%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/getinchi.cpp.o; [ 35%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/__/ops/unique.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/unique.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/unique.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/inchiformat.h:134:19: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 134 | : public std::binary_function<const std::string&, const std::string&, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | s",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:96936,Modifiability,plugin,plugin,96936,"g: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 134 | : public std::binary_function<const std::string&, const std::string&, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 35%] Linking CXX shared module ../../lib/inchiformat.so; [ 35%] Built target inchiformat; Consolidate compiler generated dependencies of target asciiformat; [ 35%] Building CXX object src/formats/CMakeFiles/asciiformat.dir/asciiformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/asciiformat.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 35%] Building CXX object src/formats/CMakeFiles/asciiformat.dir/__/depict/asciipainter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/depict/asciipainter.cpp:18:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56105,Performance,load,loader,56105,":23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56193,Performance,load,loader,56193," binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56643,Performance,load,loader,56643," deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:179,Testability,log,log,179,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:252,Testability,log,log,252,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:309,Testability,log,log,309,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:373,Testability,log,log,373,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2454635326:80,Availability,error,error,80,"I had the same problem. But adding the following statement, as suggested in the error message, solved the problem for me. —————; openbabel-3.1.1/include/openbabel/obutil.h:40:1: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; —————; include/openbabel/obutil.h. 39 | #include <math.h>; +++ |+#include <ctime>; 40 | ; —————",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2454635326
https://github.com/openbabel/openbabel/issues/2688#issuecomment-2454635326:86,Integrability,message,message,86,"I had the same problem. But adding the following statement, as suggested in the error message, solved the problem for me. —————; openbabel-3.1.1/include/openbabel/obutil.h:40:1: note: ‘clock’ is defined in header ‘<ctime>’; did you forget to ‘#include <ctime>’?; —————; include/openbabel/obutil.h. 39 | #include <math.h>; +++ |+#include <ctime>; 40 | ; —————",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2454635326
https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077180132:1495,Integrability,wrap,wrapped,1495,"@apaydinemre Perhaps there is an accidental typo by you, because (obabel 3.1.1 as provided by Linux Debian 13/trixie) once provides the information, i.e. about the less likely ligand of pyridine and `partialcharge`. ```shell; $ obabel -:""c1ccncc1"" --gen3d -xr -p 7.4 --partialcharge Gasteiger -opdbqt; REMARK Name = ; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ATOM 1 C UNL 1 1.433 0.052 0.001 0.00 0.00 +0.003 A ; ATOM 2 C UNL 1 0.688 1.226 0.002 0.00 0.00 +0.020 A ; ATOM 3 C UNL 1 -0.694 1.126 0.002 0.00 0.00 +0.110 A ; ATOM 4 N UNL 1 -1.362 -0.049 0.006 0.00 0.00 -0.263 NA; ATOM 5 C UNL 1 -0.612 -1.172 0.007 0.00 0.00 +0.110 A ; ATOM 6 C UNL 1 0.774 -1.173 0.003 0.00 0.00 +0.020 A ; TER ; 1 molecule converted; ```. while using the plural `partialcharges` *does not*, i.e. `q` are all zero. ```shell; $ obabel -:""c1ccncc1"" --gen3d -xr -p 7.4 --partialcharges Gasteiger -opdbqt; REMARK Name = ; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ATOM 1 C UNL 1 1.433 0.052 0.001 0.00 0.00 +0.000 A ; ATOM 2 C UNL 1 0.688 1.226 0.002 0.00 0.00 +0.000 A ; ATOM 3 C UNL 1 -0.694 1.126 0.002 0.00 0.00 +0.000 A ; ATOM 4 N UNL 1 -1.362 -0.049 0.006 0.00 0.00 +0.000 NA; ATOM 5 C UNL 1 -0.612 -1.172 0.007 0.00 0.00 +0.000 A ; ATOM 6 C UNL 1 0.774 -1.173 0.003 0.00 0.00 +0.000 A ; TER ; 1 molecule converted; ```. ----. For future reference: you can share input/output structure data as e.g., .pdb and .pdbqt files wrapped in a .zip archive attached which then is a file format the issue reports on GitHub know to process. Else (e.g., for a brief section of a data file, a snippet of code), as a (fenced) *code block* enclosed by a leading and a trailing line of three back ticks/accent graves (cf. [ref](https://learnxinyminutes.com/docs/markdown/)). If you opt-in for the alternative indentation by four spaces, this then has to be applied (i.e., added) to retain an empty line in the source code represented as such.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077180132
https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077180132:1793,Usability,learn,learnxinyminutes,1793,"@apaydinemre Perhaps there is an accidental typo by you, because (obabel 3.1.1 as provided by Linux Debian 13/trixie) once provides the information, i.e. about the less likely ligand of pyridine and `partialcharge`. ```shell; $ obabel -:""c1ccncc1"" --gen3d -xr -p 7.4 --partialcharge Gasteiger -opdbqt; REMARK Name = ; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ATOM 1 C UNL 1 1.433 0.052 0.001 0.00 0.00 +0.003 A ; ATOM 2 C UNL 1 0.688 1.226 0.002 0.00 0.00 +0.020 A ; ATOM 3 C UNL 1 -0.694 1.126 0.002 0.00 0.00 +0.110 A ; ATOM 4 N UNL 1 -1.362 -0.049 0.006 0.00 0.00 -0.263 NA; ATOM 5 C UNL 1 -0.612 -1.172 0.007 0.00 0.00 +0.110 A ; ATOM 6 C UNL 1 0.774 -1.173 0.003 0.00 0.00 +0.020 A ; TER ; 1 molecule converted; ```. while using the plural `partialcharges` *does not*, i.e. `q` are all zero. ```shell; $ obabel -:""c1ccncc1"" --gen3d -xr -p 7.4 --partialcharges Gasteiger -opdbqt; REMARK Name = ; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ATOM 1 C UNL 1 1.433 0.052 0.001 0.00 0.00 +0.000 A ; ATOM 2 C UNL 1 0.688 1.226 0.002 0.00 0.00 +0.000 A ; ATOM 3 C UNL 1 -0.694 1.126 0.002 0.00 0.00 +0.000 A ; ATOM 4 N UNL 1 -1.362 -0.049 0.006 0.00 0.00 +0.000 NA; ATOM 5 C UNL 1 -0.612 -1.172 0.007 0.00 0.00 +0.000 A ; ATOM 6 C UNL 1 0.774 -1.173 0.003 0.00 0.00 +0.000 A ; TER ; 1 molecule converted; ```. ----. For future reference: you can share input/output structure data as e.g., .pdb and .pdbqt files wrapped in a .zip archive attached which then is a file format the issue reports on GitHub know to process. Else (e.g., for a brief section of a data file, a snippet of code), as a (fenced) *code block* enclosed by a leading and a trailing line of three back ticks/accent graves (cf. [ref](https://learnxinyminutes.com/docs/markdown/)). If you opt-in for the alternative indentation by four spaces, this then has to be applied (i.e., added) to retain an empty line in the source code represented as such.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077180132
https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077472848:32,Usability,simpl,simple,32,"Oh, thank you so much. It was a simple typo :D",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077472848
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085729875:426,Availability,recover,recover,426,"@husakm Can you share a specific example? The assignment of bonds in a .cif file is not mandatory (let alone *bond order*), and accounting for molecules on *special positions* (where symmetry operators of the unit cell [most frequently a centre of inversion, a mirror plane, a proper axis of rotation]) allow a *crystallographic motif* to be smaller than the whole molecule described can be difficult. With varying success to recover a molecule as such from a .cif file, you could resort to GUIs established in the field e.g., CCDC's Mercury (already in the [community edition](https://www.ccdc.cam.ac.uk/solutions/software/free-mercury/)), [Jmol](https://wiki.jmol.org/index.php/Main_Page), [Avogadro](https://github.com/OpenChemistry/avogadroapp). If you have a stack of files to process, an automated conversion into a .mol/.sdf file (or/then further processed to yield an .xyz) could be an option, too. Examples include `codcif2sdf` of the [cod-tools](https://wiki.crystallography.net/cod-tools/), a Jmol script, or Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) extension to RDKit. As mentioned by Jensen himself ([talk at the RDKit user meeting 2020](https://www.youtube.com/watch?v=HD6IpXMVKeo), link to a youtube recording), organometallic structures are more difficult in assigning bonds and bond order.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085729875
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085729875:426,Safety,recover,recover,426,"@husakm Can you share a specific example? The assignment of bonds in a .cif file is not mandatory (let alone *bond order*), and accounting for molecules on *special positions* (where symmetry operators of the unit cell [most frequently a centre of inversion, a mirror plane, a proper axis of rotation]) allow a *crystallographic motif* to be smaller than the whole molecule described can be difficult. With varying success to recover a molecule as such from a .cif file, you could resort to GUIs established in the field e.g., CCDC's Mercury (already in the [community edition](https://www.ccdc.cam.ac.uk/solutions/software/free-mercury/)), [Jmol](https://wiki.jmol.org/index.php/Main_Page), [Avogadro](https://github.com/OpenChemistry/avogadroapp). If you have a stack of files to process, an automated conversion into a .mol/.sdf file (or/then further processed to yield an .xyz) could be an option, too. Examples include `codcif2sdf` of the [cod-tools](https://wiki.crystallography.net/cod-tools/), a Jmol script, or Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) extension to RDKit. As mentioned by Jensen himself ([talk at the RDKit user meeting 2020](https://www.youtube.com/watch?v=HD6IpXMVKeo), link to a youtube recording), organometallic structures are more difficult in assigning bonds and bond order.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085729875
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085832676:214,Energy Efficiency,charge,charge,214,"Sure, I will post a salt CIF file demonstrating the problem.; Give me 2 days, I am out of office ...,; Generaly the issue is not CIF specific, the Kekulization will probably not work for any aromatic cycle with 1+ charge and protonated aromatic nitrogen.; We need OpenBabel primary as a tool for force field atom type assigment. We are crystallographers = we already implemented our CIF parser + space group handling engine on our side, so we can send to OB any format and molecules already fully completed by symetry operations + with special positions handled on our side. Vincent Favre-Nicolin who hed implemented OB CIF parser was working with me in the past ...; We only need correct handling of charged fragments in OB and posibility to export force field atom types detected (or enough output information so we can assign force fields atom types on our side).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085832676
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085832676:701,Energy Efficiency,charge,charged,701,"Sure, I will post a salt CIF file demonstrating the problem.; Give me 2 days, I am out of office ...,; Generaly the issue is not CIF specific, the Kekulization will probably not work for any aromatic cycle with 1+ charge and protonated aromatic nitrogen.; We need OpenBabel primary as a tool for force field atom type assigment. We are crystallographers = we already implemented our CIF parser + space group handling engine on our side, so we can send to OB any format and molecules already fully completed by symetry operations + with special positions handled on our side. Vincent Favre-Nicolin who hed implemented OB CIF parser was working with me in the past ...; We only need correct handling of charged fragments in OB and posibility to export force field atom types detected (or enough output information so we can assign force fields atom types on our side).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085832676
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085832676:773,Safety,detect,detected,773,"Sure, I will post a salt CIF file demonstrating the problem.; Give me 2 days, I am out of office ...,; Generaly the issue is not CIF specific, the Kekulization will probably not work for any aromatic cycle with 1+ charge and protonated aromatic nitrogen.; We need OpenBabel primary as a tool for force field atom type assigment. We are crystallographers = we already implemented our CIF parser + space group handling engine on our side, so we can send to OB any format and molecules already fully completed by symetry operations + with special positions handled on our side. Vincent Favre-Nicolin who hed implemented OB CIF parser was working with me in the past ...; We only need correct handling of charged fragments in OB and posibility to export force field atom types detected (or enough output information so we can assign force fields atom types on our side).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085832676
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131:797,Testability,test,tested,797,"To make the problem simple and clearly visible, I had separated the issue form CIF file usage and I will demonstrate it on .XYZ file.; [KAXWOV_cation_xyz.txt](https://github.com/openbabel/openbabel/files/15184837/KAXWOV_cation_xyz.txt); The file in attachment describes a cation separated from a CIF file.; I had proceed it by following command:; obabel.exe KAXWOV_cation.xyz -obgf -OKAXWOV_cation.bgf; The code had reported following issues:. _*** Open Babel Warning in OpenBabel::OBMol::PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is KAXWO; V)_. The generated .bgf file contains incorrect Dreading ff atom type assignments:; N_2 instead of N_R; C_2 instead of C_R; C_3 instead of C_R. After removing the hydrogen on the N atom, all works OK (can be tested by following file):; [KAXWOV_neutral_xyz.txt](https://github.com/openbabel/openbabel/files/15184893/KAXWOV_neutral_xyz.txt). I woul like to be able to specify the fragment is ionized or let OB to identify this.; And correctly identify the resonant bonds in the ionized fragments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131:20,Usability,simpl,simple,20,"To make the problem simple and clearly visible, I had separated the issue form CIF file usage and I will demonstrate it on .XYZ file.; [KAXWOV_cation_xyz.txt](https://github.com/openbabel/openbabel/files/15184837/KAXWOV_cation_xyz.txt); The file in attachment describes a cation separated from a CIF file.; I had proceed it by following command:; obabel.exe KAXWOV_cation.xyz -obgf -OKAXWOV_cation.bgf; The code had reported following issues:. _*** Open Babel Warning in OpenBabel::OBMol::PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is KAXWO; V)_. The generated .bgf file contains incorrect Dreading ff atom type assignments:; N_2 instead of N_R; C_2 instead of C_R; C_3 instead of C_R. After removing the hydrogen on the N atom, all works OK (can be tested by following file):; [KAXWOV_neutral_xyz.txt](https://github.com/openbabel/openbabel/files/15184893/KAXWOV_neutral_xyz.txt). I woul like to be able to specify the fragment is ionized or let OB to identify this.; And correctly identify the resonant bonds in the ionized fragments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131:31,Usability,clear,clearly,31,"To make the problem simple and clearly visible, I had separated the issue form CIF file usage and I will demonstrate it on .XYZ file.; [KAXWOV_cation_xyz.txt](https://github.com/openbabel/openbabel/files/15184837/KAXWOV_cation_xyz.txt); The file in attachment describes a cation separated from a CIF file.; I had proceed it by following command:; obabel.exe KAXWOV_cation.xyz -obgf -OKAXWOV_cation.bgf; The code had reported following issues:. _*** Open Babel Warning in OpenBabel::OBMol::PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is KAXWO; V)_. The generated .bgf file contains incorrect Dreading ff atom type assignments:; N_2 instead of N_R; C_2 instead of C_R; C_3 instead of C_R. After removing the hydrogen on the N atom, all works OK (can be tested by following file):; [KAXWOV_neutral_xyz.txt](https://github.com/openbabel/openbabel/files/15184893/KAXWOV_neutral_xyz.txt). I woul like to be able to specify the fragment is ionized or let OB to identify this.; And correctly identify the resonant bonds in the ionized fragments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089792005:15,Usability,clear,clearly,15,The problem is clearly demonstrated on the image in attachment. The Dreading atom types on the right part of the image are correctly assigned by a commercial engine (Materials Studio) witch handle the fragment correctly automatically. The left part of the image shows OB results. OB was not able to identify the resonant bonds on the ionized aromatic cycle = atom types assignment is incorrect. I believe not only Dreading but the other force-fields atom type assignment will be incorrect as well. ![KAXWOV_inocrrect-atom_types](https://github.com/openbabel/openbabel/assets/55315298/e5f1d64f-6f6f-4dcc-8496-dddd567e3eaa),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089792005
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:51,Availability,mainten,maintenance,51,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:596,Energy Efficiency,charge,charge,596,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:718,Energy Efficiency,charge,charge,718,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:280,Modifiability,extend,extend,280,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:323,Modifiability,extend,extended,323,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:75,Performance,perform,performance,75,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:857,Testability,test,tested,857,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:3288,Testability,test,test,3288,"44 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.80510 H_ 1 0 0.06091; HETATM 13 H13 RES A 444 -2.38340 8.44830 11.29190 H_ 1 0 0.06091; HETATM 14 H14 RES A 444 -3.67620 6.90350 13.29250 H_ 1 0 0.06248; HETATM 15 H15 RES A 444 -3.39390 4.67230 14.28870 H_ 1 0 0.06767; HETATM 16 H16 RES A 444 -2.39890 2.87120 12.93810 H_ 1 0 0.13754; FORMAT CONECT (a6,12i6). CONECT 1 2 8 9; ORDER 1 2 1 1; CONECT 2 1 3 11; ORDER 2 2 1 1; CONECT 3 2 4 6; ORDER 3 1 1 2; CONECT 4 3 5 12 13; ORDER 4 1 1 1 1; CONECT 5 4 10; ORDER 5 1 1; CONECT 6 3 7 14; ORDER 6 2 1 1; CONECT 7 6 8 15; ORDER 7 1 2 1; CONECT 8 7 1 16; ORDER 8 2 1 1; CONECT 9 1; ORDER 9 1; CONECT 10 5; ORDER 10 1; CONECT 11 2; ORDER 11 1; CONECT 12 4; ORDER 12 1; CONECT 13 4; ORDER 13 1; CONECT 14 6; ORDER 14 1; CONECT 15 7; ORDER 15 1; CONECT 16 8; ORDER 16 1; END; ```. The intermediate .sdf carries three double bonds, the visualization in Jmol now carries the cyclic array of \pi electrons:. ![cation_jmol](https://github.com/openbabel/openbabel/assets/19709084/fa3d98f4-c747-4f98-9837-a78d65134bce). (While reading the .sdf, the computation of bonds by Jmol was disabled.). The labeling of `N1` as `N_R` in the .bgf file now matches your requirement, too. However, does the modification improve the file *over all*? For ease of replication, the files used/obtained in this limited test are attached in the .zip archive below. [2024-05-02_test_case_cation.zip](https://github.com/openbabel/openbabel/files/15189528/2024-05-02_test_case_cation.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2091249390:60,Energy Efficiency,charge,charged,60,"So you suggest:; A) Correct the OpenBabel engine (implement charged fragments support on our side); or; B) Switch from OpenBabel to RDkit, witch alredy have the required functionality ?; Generaly the key is bond type asigment. We can encode the ff atom types assigmend based on molecule topologic information on our side ...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2091249390
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2091496606:50,Safety,detect,detect,50,"One more comment:; Can any of the suggested tools detect, the fragment is iont ?; I need to make the whole procedure automatic ...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2091496606
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:765,Availability,error,error,765,"Point a) I would describe this task as ""extend what obabel already can do""; Point b) I'm not aware if RDKit offers an interface to Materials Studio / .bgf files. The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; descrip",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:1507,Availability,avail,available,1507,"ly once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argument(; ""file"",; metavar=""FILE"",; type=argparse.FileType(""rt""),; nargs=""+"",; help=""""""; Provide one, or multiple .xyz files to process (`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:2546,Availability,avail,available,2546,"bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argument(; ""file"",; metavar=""FILE"",; type=argparse.FileType(""rt""),; nargs=""+"",; help=""""""; Provide one, or multiple .xyz files to process (`*.xyz` is possible, too)."""""",; ). parser.add_argument(; ""-p"", ""--parallel"", help=""process with all available CPU"", action=""store_true""; ). return parser.parse_args(). def apply_xyz2mol(input_xyz):; """"""convert .xyz into a .sdf block if molecule is over all charge balanced""""""; raw_mol = Chem.MolFromXYZFile(input_xyz); mol = Chem.Mol(raw_mol). try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=0); mol.SetProp(""_Name"", input_xyz) # add an internal tag to .sdf block; result = Chem.MolToMolBlock(mol). output_file = """".join([input_xyz, "".sdf""]); with open(output_file, mode=""w"", encoding=""utf-8"") as new:; new.write(result). except ValueError:; print(f""{input_xyz} possibly is not charge balanced. Check again.""). def main():; """"""Join the functionalities""""""; args = get_args(). if args.parallel:; # distribute the lis of work on all CPU available, start:; work_ahead = []; for file in args.file:; work_ahead.append(file.name). pool = Pool(); pool.map(apply_xyz2mol, work_ahead); pool.close(); pool.join(); else:; for file in args.file:; apply_xyz2mol(file.name). if __name__ == ""__",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:3293,Availability,avail,available,3293,"yz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argument(; ""file"",; metavar=""FILE"",; type=argparse.FileType(""rt""),; nargs=""+"",; help=""""""; Provide one, or multiple .xyz files to process (`*.xyz` is possible, too)."""""",; ). parser.add_argument(; ""-p"", ""--parallel"", help=""process with all available CPU"", action=""store_true""; ). return parser.parse_args(). def apply_xyz2mol(input_xyz):; """"""convert .xyz into a .sdf block if molecule is over all charge balanced""""""; raw_mol = Chem.MolFromXYZFile(input_xyz); mol = Chem.Mol(raw_mol). try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=0); mol.SetProp(""_Name"", input_xyz) # add an internal tag to .sdf block; result = Chem.MolToMolBlock(mol). output_file = """".join([input_xyz, "".sdf""]); with open(output_file, mode=""w"", encoding=""utf-8"") as new:; new.write(result). except ValueError:; print(f""{input_xyz} possibly is not charge balanced. Check again.""). def main():; """"""Join the functionalities""""""; args = get_args(). if args.parallel:; # distribute the lis of work on all CPU available, start:; work_ahead = []; for file in args.file:; work_ahead.append(file.name). pool = Pool(); pool.map(apply_xyz2mol, work_ahead); pool.close(); pool.join(); else:; for file in args.file:; apply_xyz2mol(file.name). if __name__ == ""__main__"":; main(); ```. [2024-05-03_negative.zip](https://github.com/openbabel/openbabel/files/15202628/2024-05-03_negative.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:615,Energy Efficiency,charge,charge,615,"Point a) I would describe this task as ""extend what obabel already can do""; Point b) I'm not aware if RDKit offers an interface to Materials Studio / .bgf files. The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; descrip",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:651,Energy Efficiency,charge,charge,651,"Point a) I would describe this task as ""extend what obabel already can do""; Point b) I'm not aware if RDKit offers an interface to Materials Studio / .bgf files. The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; descrip",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:1198,Energy Efficiency,charge,charge,1198,"The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, th",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:1283,Energy Efficiency,charge,charge,1283,"g the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:2122,Energy Efficiency,charge,charge,2122,"hon script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argument(; ""file"",; metavar=""FILE"",; type=argparse.FileType(""rt""),; nargs=""+"",; help=""""""; Provide one, or multiple .xyz files to process (`*.xyz` is possible, too)."""""",; ). parser.add_argument(; ""-p"", ""--parallel"", help=""process with all available CPU"", action=""store_true""; ). return parser.parse_args(). def apply_xyz2mol(input_xyz):; """"""convert .xyz into a .sdf block if molecule is over all charge balanced""""""; raw_mol = Chem.MolFromXYZFile(input_xyz); mol = Chem.Mol(raw_mol). try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=0); mol.SetProp(""_Name"", input_xyz) # add an internal tag to .sdf block; result = Chem.MolToMolBlock(mol). output_file = """".join([input_xyz, "".sdf""]); with open(output_file, mode=""w"", encoding=""utf-8"") as new:; new.write(result). except ValueError:; print(f""{input_xy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:2703,Energy Efficiency,charge,charge,2703,"yz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argument(; ""file"",; metavar=""FILE"",; type=argparse.FileType(""rt""),; nargs=""+"",; help=""""""; Provide one, or multiple .xyz files to process (`*.xyz` is possible, too)."""""",; ). parser.add_argument(; ""-p"", ""--parallel"", help=""process with all available CPU"", action=""store_true""; ). return parser.parse_args(). def apply_xyz2mol(input_xyz):; """"""convert .xyz into a .sdf block if molecule is over all charge balanced""""""; raw_mol = Chem.MolFromXYZFile(input_xyz); mol = Chem.Mol(raw_mol). try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=0); mol.SetProp(""_Name"", input_xyz) # add an internal tag to .sdf block; result = Chem.MolToMolBlock(mol). output_file = """".join([input_xyz, "".sdf""]); with open(output_file, mode=""w"", encoding=""utf-8"") as new:; new.write(result). except ValueError:; print(f""{input_xyz} possibly is not charge balanced. Check again.""). def main():; """"""Join the functionalities""""""; args = get_args(). if args.parallel:; # distribute the lis of work on all CPU available, start:; work_ahead = []; for file in args.file:; work_ahead.append(file.name). pool = Pool(); pool.map(apply_xyz2mol, work_ahead); pool.close(); pool.join(); else:; for file in args.file:; apply_xyz2mol(file.name). if __name__ == ""__main__"":; main(); ```. [2024-05-03_negative.zip](https://github.com/openbabel/openbabel/files/15202628/2024-05-03_negative.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:2844,Energy Efficiency,charge,charge,2844,"yz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argument(; ""file"",; metavar=""FILE"",; type=argparse.FileType(""rt""),; nargs=""+"",; help=""""""; Provide one, or multiple .xyz files to process (`*.xyz` is possible, too)."""""",; ). parser.add_argument(; ""-p"", ""--parallel"", help=""process with all available CPU"", action=""store_true""; ). return parser.parse_args(). def apply_xyz2mol(input_xyz):; """"""convert .xyz into a .sdf block if molecule is over all charge balanced""""""; raw_mol = Chem.MolFromXYZFile(input_xyz); mol = Chem.Mol(raw_mol). try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=0); mol.SetProp(""_Name"", input_xyz) # add an internal tag to .sdf block; result = Chem.MolToMolBlock(mol). output_file = """".join([input_xyz, "".sdf""]); with open(output_file, mode=""w"", encoding=""utf-8"") as new:; new.write(result). except ValueError:; print(f""{input_xyz} possibly is not charge balanced. Check again.""). def main():; """"""Join the functionalities""""""; args = get_args(). if args.parallel:; # distribute the lis of work on all CPU available, start:; work_ahead = []; for file in args.file:; work_ahead.append(file.name). pool = Pool(); pool.map(apply_xyz2mol, work_ahead); pool.close(); pool.join(); else:; for file in args.file:; apply_xyz2mol(file.name). if __name__ == ""__main__"":; main(); ```. [2024-05-03_negative.zip](https://github.com/openbabel/openbabel/files/15202628/2024-05-03_negative.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:3137,Energy Efficiency,charge,charge,3137,"yz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argument(; ""file"",; metavar=""FILE"",; type=argparse.FileType(""rt""),; nargs=""+"",; help=""""""; Provide one, or multiple .xyz files to process (`*.xyz` is possible, too)."""""",; ). parser.add_argument(; ""-p"", ""--parallel"", help=""process with all available CPU"", action=""store_true""; ). return parser.parse_args(). def apply_xyz2mol(input_xyz):; """"""convert .xyz into a .sdf block if molecule is over all charge balanced""""""; raw_mol = Chem.MolFromXYZFile(input_xyz); mol = Chem.Mol(raw_mol). try:; rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=0); mol.SetProp(""_Name"", input_xyz) # add an internal tag to .sdf block; result = Chem.MolToMolBlock(mol). output_file = """".join([input_xyz, "".sdf""]); with open(output_file, mode=""w"", encoding=""utf-8"") as new:; new.write(result). except ValueError:; print(f""{input_xyz} possibly is not charge balanced. Check again.""). def main():; """"""Join the functionalities""""""; args = get_args(). if args.parallel:; # distribute the lis of work on all CPU available, start:; work_ahead = []; for file in args.file:; work_ahead.append(file.name). pool = Pool(); pool.map(apply_xyz2mol, work_ahead); pool.close(); pool.join(); else:; for file in args.file:; apply_xyz2mol(file.name). if __name__ == ""__main__"":; main(); ```. [2024-05-03_negative.zip](https://github.com/openbabel/openbabel/files/15202628/2024-05-03_negative.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:118,Integrability,interface,interface,118,"Point a) I would describe this task as ""extend what obabel already can do""; Point b) I'm not aware if RDKit offers an interface to Materials Studio / .bgf files. The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; descrip",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:40,Modifiability,extend,extend,40,"Point a) I would describe this task as ""extend what obabel already can do""; Point b) I'm not aware if RDKit offers an interface to Materials Studio / .bgf files. The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; descrip",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:1655,Performance,perform,perform,1655," an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argument(; ""file"",; metavar=""FILE"",; type=argparse.FileType(""rt""),; nargs=""+"",; help=""""""; Provide one, or multiple .xyz files to process (`*.xyz` is possible, too)."""""",; ). parser.add_argument(; ""-p"", ""--parallel"", help=""process with all available CPU"", action=""store_true""; ). return parser.parse_args(). def apply_xyz2mol(input_xyz):; """"""convert .xyz int",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:506,Safety,detect,detect,506,"Point a) I would describe this task as ""extend what obabel already can do""; Point b) I'm not aware if RDKit offers an interface to Materials Studio / .bgf files. The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; descrip",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462
https://github.com/openbabel/openbabel/pull/2693#issuecomment-2098325236:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2693#issuecomment-2098325236
https://github.com/openbabel/openbabel/issues/2696#issuecomment-2121757288:45,Testability,log,logic,45,Nice bisect. @fredrikw presumably the lookup logic is incorrect in your commit.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2696#issuecomment-2121757288
https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:47,Deployability,configurat,configuration,47,"@arebruvold No, it is not twisted. However the configuration of the N=N double bond is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510
https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:297,Deployability,configurat,configuration,297,"@arebruvold No, it is not twisted. However the configuration of the N=N double bond is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510
https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:634,Deployability,configurat,configuration,634,"@arebruvold No, it is not twisted. However the configuration of the N=N double bond is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510
https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:47,Modifiability,config,configuration,47,"@arebruvold No, it is not twisted. However the configuration of the N=N double bond is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510
https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:297,Modifiability,config,configuration,297,"@arebruvold No, it is not twisted. However the configuration of the N=N double bond is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510
https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:634,Modifiability,config,configuration,634,"@arebruvold No, it is not twisted. However the configuration of the N=N double bond is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510
https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:1582,Modifiability,extend,extended,1582,"d is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)). As an illustration, `F\N=N/F |lp:0:3,1:1,2:1,3:3|` describes above (*Z*) isomer.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510
https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:1655,Modifiability,extend,extended-smiles-and-smarts-cxsmiles-and-cxsmarts,1655,"d is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)). As an illustration, `F\N=N/F |lp:0:3,1:1,2:1,3:3|` describes above (*Z*) isomer.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510
https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:1433,Testability,test,test,1433,"d is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)). As an illustration, `F\N=N/F |lp:0:3,1:1,2:1,3:3|` describes above (*Z*) isomer.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510
https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:875,Usability,learn,learn,875,"@arebruvold No, it is not twisted. However the configuration of the N=N double bond is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510
https://github.com/openbabel/openbabel/pull/2702#issuecomment-2182673357:16,Availability,error,error,16,"The Python lint error is a separate issue, so lgtm.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2702#issuecomment-2182673357
https://github.com/openbabel/openbabel/pull/2702#issuecomment-2182842517:202,Availability,error,error,202,"Thanks for merging this @ghutchis. I do not know much about libxml, but it seems that `xmlResetError()` is no longer necessary as the main thread is responsible for keeping and cleaning up the last XML error.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2702#issuecomment-2182842517
https://github.com/openbabel/openbabel/issues/2703#issuecomment-2189319702:297,Availability,reliab,reliably,297,"@RamziWeslati My interpretation of. > Minimal support of chemical structure information only. (online [documentation](https://open-babel.readthedocs.io/en/latest/FileFormats/ChemDraw_CDXML_format.html) / section 18.9.1 of the manual by July 2023) is the export of reactions as `.cdxml` isn't yet (reliably) implemented. And by section 18.9.3, the binary .cdx format is *read only*. If there are only a couple of data to process, then an editor (e.g. ChemDraw; ChemDoodle, Marvin) can/could provide the corresponding SMILES to .cdxml/.cdx conversion on a one-by-one basis. [test_reaction.zip](https://github.com/user-attachments/files/15973984/test_reaction.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2703#issuecomment-2189319702
https://github.com/openbabel/openbabel/issues/2708#issuecomment-2229652050:185,Usability,clear,clear,185,"> Checkout `OBResidue`. Thanks @dkoes! I've been able to identify `GetInsertionCode()` already, but not the other three attributes. Sorry I should have stated that initially to be more clear.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2229652050
https://github.com/openbabel/openbabel/issues/2708#issuecomment-2258111025:981,Modifiability,rewrite,rewrite,981,"Thanks @ghutchis and @dkoes that's really helpful. I was struggling to find some of these attributes. I actually have another question regarding chirality, it seems that the methods `IsPositiveStereo()` and `IsNegativeStereo()` are not supported in OpenBabel == 3.x. I'm looking in `ob.OBStereoFacade(obmol).GetTetrahedralStereo.GetConfig().winding` but this always seems to be 1, even when I pass in a SMILE string that is in a different orientation (i.e. should return 2 if its anticlockwise -> see [here](http://openbabel.org/api/3.0/structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7)). Am I doing something wrong? See code snippet below. ```; num_tetra = 0; mol = pybel.readstring(""smi"", ""F/C=C/C[C@@H](Cl)Br""). m = mol.OBMol. facade = ob.OBStereoFacade(m). for atom in ob.OBMolAtomIter(m):; mid = atom.GetId(); if facade.HasTetrahedralStereo(mid):; tetra = facade.GetTetrahedralStereo(mid); print(tetra.GetConfig().winding) # this always prints 1, even if I rewrite the SMILES string; if tetra.IsSpecified():; num_tetra += 1; ```. > The place to look is in https://github.com/openbabel/openbabel/blob/master/src/formats/pdbformat.cpp, specifically, `parseAtomRecord`. If it isn't parsed from a PDB, then there isn't a standard place to store the information. Surprisingly, it doesn't look like the temperature factor is retained, but the occupancy is stored as a data attribute. It would be great if you submitted a pull request that also stored the temperature. Yes I noticed that temperature factor isn't stored so I'd be happy to submit a PR for that. I'm currently under the pump with university and my project but I will make myself a note to submit a PR once I have some free time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2258111025
https://github.com/openbabel/openbabel/issues/2708#issuecomment-2264279062:364,Availability,error,errors,364,"> Re stereo, have you read https://open-babel.readthedocs.io/en/latest/Stereochemistry/stereo.html ? Happy to answer any questions if unclear. Thanks @baoilleach. I have read that but having to specify the view as from or towards is just not going to be a convenient method for converting to S/R stereochemistry for MDAnalysis. I am quite worried about it causing errors to be generated when converting stereochemistry across. There was an `OBAtom.IsNegativeStereo` and `OBAtom.IsPositiveStereo` in OpenBabel 2.x but I believe it's been depreciated unfortunately. I was hoping there might be another similar method that was retained in version 3.0 and above.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2264279062
https://github.com/openbabel/openbabel/issues/2708#issuecomment-2265880964:859,Integrability,Message,Message,859,"OB doesn't have any code to calculate R/S. The positive/negative stereo was; unrelated. On Fri 2 Aug 2024, 18:46 Geoff Hutchison, ***@***.***> wrote:. > Converting to R/S is not something I'd attempt:; >; > - e.g.,; > https://www.nextmovesoftware.com/talks/Mayfield_ChanIngoldPrelog_ACS_201708.pdf; > - https://doi.org/10.1021/acs.jcim.8b00324; >; > ""If you are not naming stereoisomers you (probably) don’t want to use CIP""; >; > What do you want / need from the MDAnalysis side?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2708#issuecomment-2265866166>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGKPBKFE7PERRLWUA63ZPPAWJAVCNFSM6AAAAABK5NWGQGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDENRVHA3DMMJWGY>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2265880964
https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834:536,Availability,error,errors,536,"> Open Babel already reads multiple coordinate sets from an XYZ (or others). On the command-line, it's the option `--readconformer`; > ; > You just need [`OBMol::AddConformer`](http://openbabel.org/api/3.0/classOpenBabel_1_1OBMol.shtml#a7b80e7015d000221e0cc92fd3cf6f9e4). Thanks @ghutchis. I need to make this work in python rather than command line I'm afraid though. I have been attempting to use OBMol.AddConformer(conf) where conf is a swig double * created from GetConformer or CopyConformer, but it's giving me some lovely memory errors. Example:. ```; def test_multipleconf(self):; obconversion = ob.OBConversion(); obconversion.SetInFormat(""xyz""); obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol, ""met_enkaph_movie.xyx""); obmol_master = ob.OBMol(); obconversion.ReadFile(obmol_master, ""met_enkaph_movie.xyx""); while notatend:; print(obmol.GetConformer(0)); temp = obmol.GetConformer(0); obmol_master.AddConformer(temp); obmol = ob.OBMol(); notatend = obconversion.Read(obmol); ```. Fatal error caused at `obmol_master.AddConformer(temp)`; ```; python(22713,0x7ff8476c27c0) malloc: double free for ptr 0x7fc42223da00; python(22713,0x7ff8476c27c0) malloc: *** set a breakpoint in malloc_error_break to debug; Fatal Python error: Aborted; ```. I haven't been able to find any documentation on how to create a multiconformer OBMol from a file with multiple conformers/timesteps with python bindings so I'd appreciate some guidance, if it is even possible...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834
https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834:1007,Availability,error,error,1007,"> Open Babel already reads multiple coordinate sets from an XYZ (or others). On the command-line, it's the option `--readconformer`; > ; > You just need [`OBMol::AddConformer`](http://openbabel.org/api/3.0/classOpenBabel_1_1OBMol.shtml#a7b80e7015d000221e0cc92fd3cf6f9e4). Thanks @ghutchis. I need to make this work in python rather than command line I'm afraid though. I have been attempting to use OBMol.AddConformer(conf) where conf is a swig double * created from GetConformer or CopyConformer, but it's giving me some lovely memory errors. Example:. ```; def test_multipleconf(self):; obconversion = ob.OBConversion(); obconversion.SetInFormat(""xyz""); obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol, ""met_enkaph_movie.xyx""); obmol_master = ob.OBMol(); obconversion.ReadFile(obmol_master, ""met_enkaph_movie.xyx""); while notatend:; print(obmol.GetConformer(0)); temp = obmol.GetConformer(0); obmol_master.AddConformer(temp); obmol = ob.OBMol(); notatend = obconversion.Read(obmol); ```. Fatal error caused at `obmol_master.AddConformer(temp)`; ```; python(22713,0x7ff8476c27c0) malloc: double free for ptr 0x7fc42223da00; python(22713,0x7ff8476c27c0) malloc: *** set a breakpoint in malloc_error_break to debug; Fatal Python error: Aborted; ```. I haven't been able to find any documentation on how to create a multiconformer OBMol from a file with multiple conformers/timesteps with python bindings so I'd appreciate some guidance, if it is even possible...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834
https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834:1239,Availability,error,error,1239,"> Open Babel already reads multiple coordinate sets from an XYZ (or others). On the command-line, it's the option `--readconformer`; > ; > You just need [`OBMol::AddConformer`](http://openbabel.org/api/3.0/classOpenBabel_1_1OBMol.shtml#a7b80e7015d000221e0cc92fd3cf6f9e4). Thanks @ghutchis. I need to make this work in python rather than command line I'm afraid though. I have been attempting to use OBMol.AddConformer(conf) where conf is a swig double * created from GetConformer or CopyConformer, but it's giving me some lovely memory errors. Example:. ```; def test_multipleconf(self):; obconversion = ob.OBConversion(); obconversion.SetInFormat(""xyz""); obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol, ""met_enkaph_movie.xyx""); obmol_master = ob.OBMol(); obconversion.ReadFile(obmol_master, ""met_enkaph_movie.xyx""); while notatend:; print(obmol.GetConformer(0)); temp = obmol.GetConformer(0); obmol_master.AddConformer(temp); obmol = ob.OBMol(); notatend = obconversion.Read(obmol); ```. Fatal error caused at `obmol_master.AddConformer(temp)`; ```; python(22713,0x7ff8476c27c0) malloc: double free for ptr 0x7fc42223da00; python(22713,0x7ff8476c27c0) malloc: *** set a breakpoint in malloc_error_break to debug; Fatal Python error: Aborted; ```. I haven't been able to find any documentation on how to create a multiconformer OBMol from a file with multiple conformers/timesteps with python bindings so I'd appreciate some guidance, if it is even possible...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834
https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834:1246,Safety,Abort,Aborted,1246,"> Open Babel already reads multiple coordinate sets from an XYZ (or others). On the command-line, it's the option `--readconformer`; > ; > You just need [`OBMol::AddConformer`](http://openbabel.org/api/3.0/classOpenBabel_1_1OBMol.shtml#a7b80e7015d000221e0cc92fd3cf6f9e4). Thanks @ghutchis. I need to make this work in python rather than command line I'm afraid though. I have been attempting to use OBMol.AddConformer(conf) where conf is a swig double * created from GetConformer or CopyConformer, but it's giving me some lovely memory errors. Example:. ```; def test_multipleconf(self):; obconversion = ob.OBConversion(); obconversion.SetInFormat(""xyz""); obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol, ""met_enkaph_movie.xyx""); obmol_master = ob.OBMol(); obconversion.ReadFile(obmol_master, ""met_enkaph_movie.xyx""); while notatend:; print(obmol.GetConformer(0)); temp = obmol.GetConformer(0); obmol_master.AddConformer(temp); obmol = ob.OBMol(); notatend = obconversion.Read(obmol); ```. Fatal error caused at `obmol_master.AddConformer(temp)`; ```; python(22713,0x7ff8476c27c0) malloc: double free for ptr 0x7fc42223da00; python(22713,0x7ff8476c27c0) malloc: *** set a breakpoint in malloc_error_break to debug; Fatal Python error: Aborted; ```. I haven't been able to find any documentation on how to create a multiconformer OBMol from a file with multiple conformers/timesteps with python bindings so I'd appreciate some guidance, if it is even possible...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834
https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834:1437,Usability,guid,guidance,1437,"> Open Babel already reads multiple coordinate sets from an XYZ (or others). On the command-line, it's the option `--readconformer`; > ; > You just need [`OBMol::AddConformer`](http://openbabel.org/api/3.0/classOpenBabel_1_1OBMol.shtml#a7b80e7015d000221e0cc92fd3cf6f9e4). Thanks @ghutchis. I need to make this work in python rather than command line I'm afraid though. I have been attempting to use OBMol.AddConformer(conf) where conf is a swig double * created from GetConformer or CopyConformer, but it's giving me some lovely memory errors. Example:. ```; def test_multipleconf(self):; obconversion = ob.OBConversion(); obconversion.SetInFormat(""xyz""); obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol, ""met_enkaph_movie.xyx""); obmol_master = ob.OBMol(); obconversion.ReadFile(obmol_master, ""met_enkaph_movie.xyx""); while notatend:; print(obmol.GetConformer(0)); temp = obmol.GetConformer(0); obmol_master.AddConformer(temp); obmol = ob.OBMol(); notatend = obconversion.Read(obmol); ```. Fatal error caused at `obmol_master.AddConformer(temp)`; ```; python(22713,0x7ff8476c27c0) malloc: double free for ptr 0x7fc42223da00; python(22713,0x7ff8476c27c0) malloc: *** set a breakpoint in malloc_error_break to debug; Fatal Python error: Aborted; ```. I haven't been able to find any documentation on how to create a multiconformer OBMol from a file with multiple conformers/timesteps with python bindings so I'd appreciate some guidance, if it is even possible...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834
https://github.com/openbabel/openbabel/issues/2709#issuecomment-2233512252:224,Usability,simpl,simple,224,"@Yannlefrancois To retain the hydrogens regardless if bound to (N,O,P,S) or C you can use `-h` as a *format modifier*. For the purpose of illustration, consider the example of diethyl ether (SMILES string `CCOCC`) either by simple addition of hydrogen atoms (`-h`). ```shell; $ obabel -:""CCOCC"" --gen3d -h -opdbqt; REMARK Name = ; REMARK 4 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and C_2; REMARK 2 A between atoms: C_2 and O_3; REMARK 3 A between atoms: O_3 and C_4; REMARK 4 A between atoms: C_4 and C_5; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 O UNL 1 2.991 -0.912 -0.912 0.00 0.00 +0.000 OA; ENDROOT; BRANCH 1 3; ATOM 2 C UNL 1 0.979 0.074 -0.061 0.00 0.00 +0.000 C ; ATOM 3 C UNL 1 2.494 0.101 -0.038 0.00 0.00 +0.000 C ; ENDBRANCH 1 3; BRANCH 1 4; ATOM 4 C UNL 1 4.417 -0.929 -0.927 0.00 0.00 +0.000 C ; ATOM 5 C UNL 1 4.889 -2.020 -1.868 0.00 0.00 +0.000 C ; ENDBRANCH 1 4; TORSDOF 2; 1 molecule converted; ```. or one with the addition of hydrogen atoms (`-h`) and retaining them all explicit (`-xh`) in the new record to write:. ```shell; $ obabel -:""CCOCC"" --gen3d -h -opdbqt -xh; REMARK Name = ; REMARK 4 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and C_2; REMARK 2 A between atoms: C_2 and O_3; REMARK 3 A between atoms: O_3 and C_4; REMARK 4 A between atoms: C_4 and C_5; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 O UNL 1 2.955 -0.517 1.197 0.00 0.00 +0.000 OA; ENDROOT; BRANCH 1 2; ATOM 2 C UNL 1 2.459 0.089 0.004 0.00 0.00 +0.000 C ; ATOM 3 H UNL 1 2.818 1.123 -0.060 0.00 0.00 +0.000 HD; ATOM 4 H UNL 1 2.818 -0.469 -0.869 0.00 0.00 +0.000 HD; BRANCH 2 5; ATOM 5 C UNL 1 0.943 0.075 0.031 0.00 0.00 +0.000 C ; ATOM 6 H UNL 1 0.535 0.534 -0.873 0.00 0.00 +0.000 HD; ATOM 7 H UNL 1 0.566 0.619 0.904 0.00 0.00 +0.000 HD; ATOM 8 H UNL 1 0.566 -0.950 0.107 0",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2709#issuecomment-2233512252
https://github.com/openbabel/openbabel/issues/2710#issuecomment-2402730556:20,Availability,error,error,20,Have you fixed this error? Please help me. Thank you very much.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2710#issuecomment-2402730556
https://github.com/openbabel/openbabel/issues/2712#issuecomment-2252603764:61,Deployability,install,installation,61,"Since you mention Ubuntu as operating system used, would the installation of; openbabel as packaged by DebiChem an option to you? As checked (xubuntu 22.04; LTS), the package for `apt` then equally provides the executable and man page; of `obminimize` to the command line.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2712#issuecomment-2252603764
https://github.com/openbabel/openbabel/issues/2713#issuecomment-2260862155:186,Usability,simpl,simply,186,"While I understand the concept, this would be extremely difficult. Many formats lack coordinates, much less periodic boundary conditions. Is a molecule identical if the coordinates have simply shifted? etc. I'm happy to consider a pull request, but I think you need to carefully consider what ""equals"" means in the context of an OBMol or Pybel Molecule.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2260862155
https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909:492,Deployability,update,updated,492,"Thank you for the thoughtful questions and advice. My original intention was simple and mainly evolved around .cif files:; 1. if two OBMol objects are read from the same file, they should be equal.; 2. for crystal structures (such as in .cif file), the order of atoms that are defined doesn't matter (e.g. C1, C2, H3 vs. H3, C1, C2), so comparing OBMol from such two different .cif files should be equal. I will think of the other OBMol objects read from different file formats and keep this updated!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909
https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909:95,Modifiability,evolve,evolved,95,"Thank you for the thoughtful questions and advice. My original intention was simple and mainly evolved around .cif files:; 1. if two OBMol objects are read from the same file, they should be equal.; 2. for crystal structures (such as in .cif file), the order of atoms that are defined doesn't matter (e.g. C1, C2, H3 vs. H3, C1, C2), so comparing OBMol from such two different .cif files should be equal. I will think of the other OBMol objects read from different file formats and keep this updated!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909
https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909:77,Usability,simpl,simple,77,"Thank you for the thoughtful questions and advice. My original intention was simple and mainly evolved around .cif files:; 1. if two OBMol objects are read from the same file, they should be equal.; 2. for crystal structures (such as in .cif file), the order of atoms that are defined doesn't matter (e.g. C1, C2, H3 vs. H3, C1, C2), so comparing OBMol from such two different .cif files should be equal. I will think of the other OBMol objects read from different file formats and keep this updated!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2267773431:86,Deployability,install,installed,86,"Yes, the files are present in the same folder of the scripts.; I have already Python3 installed, I don't know how to proceed. Il lun 5 ago 2024, 00:05 Amy He ***@***.***> ha scritto:. > Hi @Brett628 <https://github.com/Brett628>; > Are these files in the same folder where you execute the script? This; > looks like a file not found problem.; > You don't need to convert python2 to python3 manually.; > $MGLROOT/bin/pythonsh is a python2 interpreter with the required; > packages. Feel free to contact us; > <https://autodocksuite.scripps.edu/support/> if you have any further; > questions ^^; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2714#issuecomment-2267762252>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BKKDETZAAKAIOXJHIE7WLKLZP2QRVAVCNFSM6AAAAABL7EUVNWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDENRXG43DEMRVGI>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2267773431
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2267773431:971,Integrability,Message,Message,971,"Yes, the files are present in the same folder of the scripts.; I have already Python3 installed, I don't know how to proceed. Il lun 5 ago 2024, 00:05 Amy He ***@***.***> ha scritto:. > Hi @Brett628 <https://github.com/Brett628>; > Are these files in the same folder where you execute the script? This; > looks like a file not found problem.; > You don't need to convert python2 to python3 manually.; > $MGLROOT/bin/pythonsh is a python2 interpreter with the required; > packages. Feel free to contact us; > <https://autodocksuite.scripps.edu/support/> if you have any further; > questions ^^; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2714#issuecomment-2267762252>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BKKDETZAAKAIOXJHIE7WLKLZP2QRVAVCNFSM6AAAAABL7EUVNWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDENRXG43DEMRVGI>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2267773431
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2268442486:308,Deployability,release,release,308,"@rwxayheee As a side note about. > You will need the $MGLROOT/bin/pythonsh python2 interpreter [...] won't have to manually edit the scripts for python2 to 3 conversion. [2to3](https://docs.python.org/3/library/2to3.html) *still* is in Python's standard library with a scheduled removal for Python 3.13 (its release candidate 1 was published on August 1st, 2024). While it might not fix every line in the source code during a transition of Python2 to Python3 (e.g., numpy later changed the syntax of arrays of floating numbers), could it equally assist you for a consistent modernization of the scripts you refer to?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2268442486
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2268442486:269,Energy Efficiency,schedul,scheduled,269,"@rwxayheee As a side note about. > You will need the $MGLROOT/bin/pythonsh python2 interpreter [...] won't have to manually edit the scripts for python2 to 3 conversion. [2to3](https://docs.python.org/3/library/2to3.html) *still* is in Python's standard library with a scheduled removal for Python 3.13 (its release candidate 1 was published on August 1st, 2024). While it might not fix every line in the source code during a transition of Python2 to Python3 (e.g., numpy later changed the syntax of arrays of floating numbers), could it equally assist you for a consistent modernization of the scripts you refer to?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2268442486
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472:315,Availability,error,error,315,"> Hi, Does it help if you use the full path of the files (just like how you call the scripts)? You will need the $MGLROOT/bin/pythonsh python2 interpreter in the following steps. If you use this in the first step, you won't have to manually edit the scripts for python2 to 3 conversion. Hello, yes i tried and this error appears:; ```; C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent>python C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py --ligand C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\l; igand1.mol2 --ligindices 24,25 --receptor C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\3upo; _protein.pdb --residue B:SER222 --outputfile C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\l; igcovalent.pdb; ==============================; *** Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; Unable to open data file 'space-groups.txt'; ==============================; *** Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; Cannot initialize database 'space-groups.txt' which may cause further errors.; Processing residue B:SER222; [start] output filename is: C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\ligcovalent.pdb; WARNING! Residue [B:SER222] was not recognized; SMILES[ [NH][C@H]([C]=O)C[O] C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\3upo_protein.pdb [COPY]; ]; Guess was [ser], Pattern |[$([NX3H2,NX4H3+]),$([NX3H](C)(C))][CX4H]([CH2X4][OX2H])[CX3](=[OX1])|; Traceback (most recent call last):; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1319, in <module>; x = CovalentDockingMaster(); ^^^^^^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 871, in __init__; self.start(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1262, in start; self.processResidues(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 129",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472:1067,Availability,error,errors,1067," (just like how you call the scripts)? You will need the $MGLROOT/bin/pythonsh python2 interpreter in the following steps. If you use this in the first step, you won't have to manually edit the scripts for python2 to 3 conversion. Hello, yes i tried and this error appears:; ```; C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent>python C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py --ligand C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\l; igand1.mol2 --ligindices 24,25 --receptor C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\3upo; _protein.pdb --residue B:SER222 --outputfile C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\l; igcovalent.pdb; ==============================; *** Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; Unable to open data file 'space-groups.txt'; ==============================; *** Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; Cannot initialize database 'space-groups.txt' which may cause further errors.; Processing residue B:SER222; [start] output filename is: C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\ligcovalent.pdb; WARNING! Residue [B:SER222] was not recognized; SMILES[ [NH][C@H]([C]=O)C[O] C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\3upo_protein.pdb [COPY]; ]; Guess was [ser], Pattern |[$([NX3H2,NX4H3+]),$([NX3H](C)(C))][CX4H]([CH2X4][OX2H])[CX3](=[OX1])|; Traceback (most recent call last):; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1319, in <module>; x = CovalentDockingMaster(); ^^^^^^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 871, in __init__; self.start(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1262, in start; self.processResidues(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1298, in processResidues; aligner = self.x = CovalentDocki",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472:2801,Deployability,install,install,2801,"pen data file 'space-groups.txt'; ==============================; *** Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; Cannot initialize database 'space-groups.txt' which may cause further errors.; Processing residue B:SER222; [start] output filename is: C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\ligcovalent.pdb; WARNING! Residue [B:SER222] was not recognized; SMILES[ [NH][C@H]([C]=O)C[O] C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\3upo_protein.pdb [COPY]; ]; Guess was [ser], Pattern |[$([NX3H2,NX4H3+]),$([NX3H](C)(C))][CX4H]([CH2X4][OX2H])[CX3](=[OX1])|; Traceback (most recent call last):; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1319, in <module>; x = CovalentDockingMaster(); ^^^^^^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 871, in __init__; self.start(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1262, in start; self.processResidues(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1298, in processResidues; aligner = self.x = CovalentDockingMaker(**self.alignerArgs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 230, in __init__; self.initResidue(); ^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 273, in initResidue; self.residueProfile(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 298, in residueProfile; self.setResidueParms(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 325, in setResidueParms; resInfo = self._residueParms[self.resType]; ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^; TypeError: unhashable type: 'dict'; ```. To make it simple, should I install Python2.7 and try to run the script with that Python version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472:2784,Usability,simpl,simple,2784,"pen data file 'space-groups.txt'; ==============================; *** Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; Cannot initialize database 'space-groups.txt' which may cause further errors.; Processing residue B:SER222; [start] output filename is: C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\ligcovalent.pdb; WARNING! Residue [B:SER222] was not recognized; SMILES[ [NH][C@H]([C]=O)C[O] C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\3upo_protein.pdb [COPY]; ]; Guess was [ser], Pattern |[$([NX3H2,NX4H3+]),$([NX3H](C)(C))][CX4H]([CH2X4][OX2H])[CX3](=[OX1])|; Traceback (most recent call last):; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1319, in <module>; x = CovalentDockingMaster(); ^^^^^^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 871, in __init__; self.start(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1262, in start; self.processResidues(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1298, in processResidues; aligner = self.x = CovalentDockingMaker(**self.alignerArgs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 230, in __init__; self.initResidue(); ^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 273, in initResidue; self.residueProfile(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 298, in residueProfile; self.setResidueParms(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 325, in setResidueParms; resInfo = self._residueParms[self.resType]; ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^; TypeError: unhashable type: 'dict'; ```. To make it simple, should I install Python2.7 and try to run the script with that Python version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983:82,Availability,down,download,82,"Hi @Brett628 ; If you want to follow the given procedure in this tutorial, please download the required `pythonsh` interpreter for the subsequent steps: ; https://ccsb.scripps.edu/mgltools/downloads/. Reasons we strongly recommend this `pythonsh`: ; (1) it's a ready-to-use python2.7. You do not have to install it by yourself (or replace your base Python3 with an older Python, which will cause many further inconvinience); (2) it has a specific set of packages, including a specific version of Obabel and some other packages developed by the same authors. No installation of additional packages needed . I'm not 100% sure if this works on Win11. But I have tested it on Linux, so I'm more confident that the same workflow works in WSL ^^ . Just another note - . This covalent docking method you're following has a newer implementation supported by [Meeko](https://github.com/forlilab/Meeko?tab=readme-ov-file#docking-covalent-ligands-as-flexible-sidechains), a more recently developed tool for receptor and ligand preparation. . This workflow does run with Python3 and recent versions of RDKit, numpy, etc. if you're willing to give it a try. However, it may not work for Python 3.12 at the moment. See [this](https://github.com/forlilab/Meeko/issues/139#issuecomment-2231257208) for more detail",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983:189,Availability,down,downloads,189,"Hi @Brett628 ; If you want to follow the given procedure in this tutorial, please download the required `pythonsh` interpreter for the subsequent steps: ; https://ccsb.scripps.edu/mgltools/downloads/. Reasons we strongly recommend this `pythonsh`: ; (1) it's a ready-to-use python2.7. You do not have to install it by yourself (or replace your base Python3 with an older Python, which will cause many further inconvinience); (2) it has a specific set of packages, including a specific version of Obabel and some other packages developed by the same authors. No installation of additional packages needed . I'm not 100% sure if this works on Win11. But I have tested it on Linux, so I'm more confident that the same workflow works in WSL ^^ . Just another note - . This covalent docking method you're following has a newer implementation supported by [Meeko](https://github.com/forlilab/Meeko?tab=readme-ov-file#docking-covalent-ligands-as-flexible-sidechains), a more recently developed tool for receptor and ligand preparation. . This workflow does run with Python3 and recent versions of RDKit, numpy, etc. if you're willing to give it a try. However, it may not work for Python 3.12 at the moment. See [this](https://github.com/forlilab/Meeko/issues/139#issuecomment-2231257208) for more detail",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983:304,Deployability,install,install,304,"Hi @Brett628 ; If you want to follow the given procedure in this tutorial, please download the required `pythonsh` interpreter for the subsequent steps: ; https://ccsb.scripps.edu/mgltools/downloads/. Reasons we strongly recommend this `pythonsh`: ; (1) it's a ready-to-use python2.7. You do not have to install it by yourself (or replace your base Python3 with an older Python, which will cause many further inconvinience); (2) it has a specific set of packages, including a specific version of Obabel and some other packages developed by the same authors. No installation of additional packages needed . I'm not 100% sure if this works on Win11. But I have tested it on Linux, so I'm more confident that the same workflow works in WSL ^^ . Just another note - . This covalent docking method you're following has a newer implementation supported by [Meeko](https://github.com/forlilab/Meeko?tab=readme-ov-file#docking-covalent-ligands-as-flexible-sidechains), a more recently developed tool for receptor and ligand preparation. . This workflow does run with Python3 and recent versions of RDKit, numpy, etc. if you're willing to give it a try. However, it may not work for Python 3.12 at the moment. See [this](https://github.com/forlilab/Meeko/issues/139#issuecomment-2231257208) for more detail",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983:561,Deployability,install,installation,561,"Hi @Brett628 ; If you want to follow the given procedure in this tutorial, please download the required `pythonsh` interpreter for the subsequent steps: ; https://ccsb.scripps.edu/mgltools/downloads/. Reasons we strongly recommend this `pythonsh`: ; (1) it's a ready-to-use python2.7. You do not have to install it by yourself (or replace your base Python3 with an older Python, which will cause many further inconvinience); (2) it has a specific set of packages, including a specific version of Obabel and some other packages developed by the same authors. No installation of additional packages needed . I'm not 100% sure if this works on Win11. But I have tested it on Linux, so I'm more confident that the same workflow works in WSL ^^ . Just another note - . This covalent docking method you're following has a newer implementation supported by [Meeko](https://github.com/forlilab/Meeko?tab=readme-ov-file#docking-covalent-ligands-as-flexible-sidechains), a more recently developed tool for receptor and ligand preparation. . This workflow does run with Python3 and recent versions of RDKit, numpy, etc. if you're willing to give it a try. However, it may not work for Python 3.12 at the moment. See [this](https://github.com/forlilab/Meeko/issues/139#issuecomment-2231257208) for more detail",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983:939,Modifiability,flexible,flexible-sidechains,939,"Hi @Brett628 ; If you want to follow the given procedure in this tutorial, please download the required `pythonsh` interpreter for the subsequent steps: ; https://ccsb.scripps.edu/mgltools/downloads/. Reasons we strongly recommend this `pythonsh`: ; (1) it's a ready-to-use python2.7. You do not have to install it by yourself (or replace your base Python3 with an older Python, which will cause many further inconvinience); (2) it has a specific set of packages, including a specific version of Obabel and some other packages developed by the same authors. No installation of additional packages needed . I'm not 100% sure if this works on Win11. But I have tested it on Linux, so I'm more confident that the same workflow works in WSL ^^ . Just another note - . This covalent docking method you're following has a newer implementation supported by [Meeko](https://github.com/forlilab/Meeko?tab=readme-ov-file#docking-covalent-ligands-as-flexible-sidechains), a more recently developed tool for receptor and ligand preparation. . This workflow does run with Python3 and recent versions of RDKit, numpy, etc. if you're willing to give it a try. However, it may not work for Python 3.12 at the moment. See [this](https://github.com/forlilab/Meeko/issues/139#issuecomment-2231257208) for more detail",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983:659,Testability,test,tested,659,"Hi @Brett628 ; If you want to follow the given procedure in this tutorial, please download the required `pythonsh` interpreter for the subsequent steps: ; https://ccsb.scripps.edu/mgltools/downloads/. Reasons we strongly recommend this `pythonsh`: ; (1) it's a ready-to-use python2.7. You do not have to install it by yourself (or replace your base Python3 with an older Python, which will cause many further inconvinience); (2) it has a specific set of packages, including a specific version of Obabel and some other packages developed by the same authors. No installation of additional packages needed . I'm not 100% sure if this works on Win11. But I have tested it on Linux, so I'm more confident that the same workflow works in WSL ^^ . Just another note - . This covalent docking method you're following has a newer implementation supported by [Meeko](https://github.com/forlilab/Meeko?tab=readme-ov-file#docking-covalent-ligands-as-flexible-sidechains), a more recently developed tool for receptor and ligand preparation. . This workflow does run with Python3 and recent versions of RDKit, numpy, etc. if you're willing to give it a try. However, it may not work for Python 3.12 at the moment. See [this](https://github.com/forlilab/Meeko/issues/139#issuecomment-2231257208) for more detail",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983
https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269517865:557,Testability,test,tested,557,"Hi @nbehrnd ; Thanks so much for your kind reply. We have [a newer method for covalent docking](https://github.com/forlilab/Meeko/?tab=readme-ov-file#reactive-docking), supported by a set of new tools (and python3 packages). . The inquired covalent docking is a relatively old method. But it should still work with the designated python2.7 interpreter, which is complemented by a set of Python2 packages, including a specific (older) version of obabel. . The reported issues might be caused by a version change or by the fact that the Win11 platform wasn't tested when the tutorial was written.. We appreciate the report and all of your kind support. @Brett628 If you have any further questions, please do not hesitate to reach out.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269517865
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303927317:200,Availability,error,error,200,"I haven't tested and I don't do minimizations that often but you could try with; `obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e` with the `-e` part telling obabel to continue on error. In general, I think that the ""specialized"" commands are less supported and maintained so if you manage to do something through the obabel interface it will be better.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303927317
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303927317:345,Integrability,interface,interface,345,"I haven't tested and I don't do minimizations that often but you could try with; `obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e` with the `-e` part telling obabel to continue on error. In general, I think that the ""specialized"" commands are less supported and maintained so if you manage to do something through the obabel interface it will be better.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303927317
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303927317:10,Testability,test,tested,10,"I haven't tested and I don't do minimizations that often but you could try with; `obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e` with the `-e` part telling obabel to continue on error. In general, I think that the ""specialized"" commands are less supported and maintained so if you manage to do something through the obabel interface it will be better.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303927317
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303977199:201,Availability,error,error,201,"> I haven't tested and I don't do minimizations that often but you could try with `obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e` with the `-e` part telling obabel to continue on error. In general, I think that the ""specialized"" commands are less supported and maintained so if you manage to do something through the obabel interface it will be better. This seems to be working fine. Thank you!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303977199
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303977199:346,Integrability,interface,interface,346,"> I haven't tested and I don't do minimizations that often but you could try with `obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e` with the `-e` part telling obabel to continue on error. In general, I think that the ""specialized"" commands are less supported and maintained so if you manage to do something through the obabel interface it will be better. This seems to be working fine. Thank you!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303977199
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303977199:12,Testability,test,tested,12,"> I haven't tested and I don't do minimizations that often but you could try with `obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e` with the `-e` part telling obabel to continue on error. In general, I think that the ""specialized"" commands are less supported and maintained so if you manage to do something through the obabel interface it will be better. This seems to be working fine. Thank you!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303977199
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304466730:406,Availability,error,error,406,"> Maybe one of your entries contains an atom/an ion the authors of the force field did not consider / did not consider yet. Hi @fredrikw ; The command ran successfully and 31473 molecules were converted into into energy minimized structure.; Now when I'm trying to split the target.sdf file into separate sdf files using the following command,; **obabel -isdf target.sdf -osdf -O *.sdf -m**, ; I'm getting error.; ![Screenshot 2024-08-22 171231](https://github.com/user-attachments/assets/030d28fd-89fa-4fc5-af0e-bcf1467ee3bd). I've also attached another screenshot showing where the last command stopped to cross verify if the energy minimization was done correctly; ![Screenshot 2024-08-22 171504](https://github.com/user-attachments/assets/4afe09fe-8d9a-4e58-afb5-5a5955af33c9); .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304466730
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304466730:213,Energy Efficiency,energy,energy,213,"> Maybe one of your entries contains an atom/an ion the authors of the force field did not consider / did not consider yet. Hi @fredrikw ; The command ran successfully and 31473 molecules were converted into into energy minimized structure.; Now when I'm trying to split the target.sdf file into separate sdf files using the following command,; **obabel -isdf target.sdf -osdf -O *.sdf -m**, ; I'm getting error.; ![Screenshot 2024-08-22 171231](https://github.com/user-attachments/assets/030d28fd-89fa-4fc5-af0e-bcf1467ee3bd). I've also attached another screenshot showing where the last command stopped to cross verify if the energy minimization was done correctly; ![Screenshot 2024-08-22 171504](https://github.com/user-attachments/assets/4afe09fe-8d9a-4e58-afb5-5a5955af33c9); .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304466730
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304466730:628,Energy Efficiency,energy,energy,628,"> Maybe one of your entries contains an atom/an ion the authors of the force field did not consider / did not consider yet. Hi @fredrikw ; The command ran successfully and 31473 molecules were converted into into energy minimized structure.; Now when I'm trying to split the target.sdf file into separate sdf files using the following command,; **obabel -isdf target.sdf -osdf -O *.sdf -m**, ; I'm getting error.; ![Screenshot 2024-08-22 171231](https://github.com/user-attachments/assets/030d28fd-89fa-4fc5-af0e-bcf1467ee3bd). I've also attached another screenshot showing where the last command stopped to cross verify if the energy minimization was done correctly; ![Screenshot 2024-08-22 171504](https://github.com/user-attachments/assets/4afe09fe-8d9a-4e58-afb5-5a5955af33c9); .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304466730
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304479292:577,Testability,test,test,577,"Difficult to say what may be the problem there without the files. Some questions:; * Have you tried adding the `-m` flag to the first command? (`obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e -m`; * I think you may have entered the filename wrong on your ""-m-command"" it should probably be something like `obabel -isdf target.sdf -osdf -O target_split.sdf -m` to give files like 'target_split1.sdf', 'target_split2.sdf' etc.; * If the above doesn't help, could you try with a subset of molecules? E.g. the first 10 or so and attach the file so that we can test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304479292
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938:88,Availability,down,downloading,88,"@nilanjana1996 By ""distorted"", do you refer to assigned stereochemistry? This is based, downloading your files and processing with openbabel 3.1.1 as packaged for Linux Debian 13/trixie, on two warnings issued:. ```bash; $ for file in emem*.pdbqt; > do; > echo ""work on $file""; > obabel ""$file"" -O ""$file"".sdf; > done; work on emem10.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem11.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem1.pdbqt; 1 molecule converted; work on emem2.pdbqt; 1 molecule converted; work on emem3.pdbqt; 1 molecule converted; work on emem4.pdbqt; 1 molecule converted; work on emem5.pdbqt; 1 molecule converted; work on emem6.pdbqt; 1 molecule converted; work on emem7.pdbqt; 1 molecule converted; work on emem8.pdbqt; 1 molecule converted; work on emem9.pdbqt; 1 molecule converted; ```. Else, does ""distorted"" refer to altered atomic positions/coordinates while comparing the .sdf (of the force field optimized conformer geometry) and the .pdbqt of one and the same structure? There may be some small changes, e.g. by the number of decimals to express the atomic coordinates. On the other hand, if the .pdbqt is used as a starting geometry in the docking experiment, are these differences significant? If so, can you indicate which atom(s) in which file(s) are most representative for the change you observe?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938:256,Availability,echo,echo,256,"@nilanjana1996 By ""distorted"", do you refer to assigned stereochemistry? This is based, downloading your files and processing with openbabel 3.1.1 as packaged for Linux Debian 13/trixie, on two warnings issued:. ```bash; $ for file in emem*.pdbqt; > do; > echo ""work on $file""; > obabel ""$file"" -O ""$file"".sdf; > done; work on emem10.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem11.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem1.pdbqt; 1 molecule converted; work on emem2.pdbqt; 1 molecule converted; work on emem3.pdbqt; 1 molecule converted; work on emem4.pdbqt; 1 molecule converted; work on emem5.pdbqt; 1 molecule converted; work on emem6.pdbqt; 1 molecule converted; work on emem7.pdbqt; 1 molecule converted; work on emem8.pdbqt; 1 molecule converted; work on emem9.pdbqt; 1 molecule converted; ```. Else, does ""distorted"" refer to altered atomic positions/coordinates while comparing the .sdf (of the force field optimized conformer geometry) and the .pdbqt of one and the same structure? There may be some small changes, e.g. by the number of decimals to express the atomic coordinates. On the other hand, if the .pdbqt is used as a starting geometry in the docking experiment, are these differences significant? If so, can you indicate which atom(s) in which file(s) are most representative for the change you observe?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938:388,Availability,Error,Error,388,"@nilanjana1996 By ""distorted"", do you refer to assigned stereochemistry? This is based, downloading your files and processing with openbabel 3.1.1 as packaged for Linux Debian 13/trixie, on two warnings issued:. ```bash; $ for file in emem*.pdbqt; > do; > echo ""work on $file""; > obabel ""$file"" -O ""$file"".sdf; > done; work on emem10.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem11.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem1.pdbqt; 1 molecule converted; work on emem2.pdbqt; 1 molecule converted; work on emem3.pdbqt; 1 molecule converted; work on emem4.pdbqt; 1 molecule converted; work on emem5.pdbqt; 1 molecule converted; work on emem6.pdbqt; 1 molecule converted; work on emem7.pdbqt; 1 molecule converted; work on emem8.pdbqt; 1 molecule converted; work on emem9.pdbqt; 1 molecule converted; ```. Else, does ""distorted"" refer to altered atomic positions/coordinates while comparing the .sdf (of the force field optimized conformer geometry) and the .pdbqt of one and the same structure? There may be some small changes, e.g. by the number of decimals to express the atomic coordinates. On the other hand, if the .pdbqt is used as a starting geometry in the docking experiment, are these differences significant? If so, can you indicate which atom(s) in which file(s) are most representative for the change you observe?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938:470,Availability,avail,available,470,"@nilanjana1996 By ""distorted"", do you refer to assigned stereochemistry? This is based, downloading your files and processing with openbabel 3.1.1 as packaged for Linux Debian 13/trixie, on two warnings issued:. ```bash; $ for file in emem*.pdbqt; > do; > echo ""work on $file""; > obabel ""$file"" -O ""$file"".sdf; > done; work on emem10.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem11.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem1.pdbqt; 1 molecule converted; work on emem2.pdbqt; 1 molecule converted; work on emem3.pdbqt; 1 molecule converted; work on emem4.pdbqt; 1 molecule converted; work on emem5.pdbqt; 1 molecule converted; work on emem6.pdbqt; 1 molecule converted; work on emem7.pdbqt; 1 molecule converted; work on emem8.pdbqt; 1 molecule converted; work on emem9.pdbqt; 1 molecule converted; ```. Else, does ""distorted"" refer to altered atomic positions/coordinates while comparing the .sdf (of the force field optimized conformer geometry) and the .pdbqt of one and the same structure? There may be some small changes, e.g. by the number of decimals to express the atomic coordinates. On the other hand, if the .pdbqt is used as a starting geometry in the docking experiment, are these differences significant? If so, can you indicate which atom(s) in which file(s) are most representative for the change you observe?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938:577,Availability,Error,Error,577,"@nilanjana1996 By ""distorted"", do you refer to assigned stereochemistry? This is based, downloading your files and processing with openbabel 3.1.1 as packaged for Linux Debian 13/trixie, on two warnings issued:. ```bash; $ for file in emem*.pdbqt; > do; > echo ""work on $file""; > obabel ""$file"" -O ""$file"".sdf; > done; work on emem10.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem11.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem1.pdbqt; 1 molecule converted; work on emem2.pdbqt; 1 molecule converted; work on emem3.pdbqt; 1 molecule converted; work on emem4.pdbqt; 1 molecule converted; work on emem5.pdbqt; 1 molecule converted; work on emem6.pdbqt; 1 molecule converted; work on emem7.pdbqt; 1 molecule converted; work on emem8.pdbqt; 1 molecule converted; work on emem9.pdbqt; 1 molecule converted; ```. Else, does ""distorted"" refer to altered atomic positions/coordinates while comparing the .sdf (of the force field optimized conformer geometry) and the .pdbqt of one and the same structure? There may be some small changes, e.g. by the number of decimals to express the atomic coordinates. On the other hand, if the .pdbqt is used as a starting geometry in the docking experiment, are these differences significant? If so, can you indicate which atom(s) in which file(s) are most representative for the change you observe?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938:659,Availability,avail,available,659,"@nilanjana1996 By ""distorted"", do you refer to assigned stereochemistry? This is based, downloading your files and processing with openbabel 3.1.1 as packaged for Linux Debian 13/trixie, on two warnings issued:. ```bash; $ for file in emem*.pdbqt; > do; > echo ""work on $file""; > obabel ""$file"" -O ""$file"".sdf; > done; work on emem10.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem11.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem1.pdbqt; 1 molecule converted; work on emem2.pdbqt; 1 molecule converted; work on emem3.pdbqt; 1 molecule converted; work on emem4.pdbqt; 1 molecule converted; work on emem5.pdbqt; 1 molecule converted; work on emem6.pdbqt; 1 molecule converted; work on emem7.pdbqt; 1 molecule converted; work on emem8.pdbqt; 1 molecule converted; work on emem9.pdbqt; 1 molecule converted; ```. Else, does ""distorted"" refer to altered atomic positions/coordinates while comparing the .sdf (of the force field optimized conformer geometry) and the .pdbqt of one and the same structure? There may be some small changes, e.g. by the number of decimals to express the atomic coordinates. On the other hand, if the .pdbqt is used as a starting geometry in the docking experiment, are these differences significant? If so, can you indicate which atom(s) in which file(s) are most representative for the change you observe?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938:1203,Performance,optimiz,optimized,1203,"@nilanjana1996 By ""distorted"", do you refer to assigned stereochemistry? This is based, downloading your files and processing with openbabel 3.1.1 as packaged for Linux Debian 13/trixie, on two warnings issued:. ```bash; $ for file in emem*.pdbqt; > do; > echo ""work on $file""; > obabel ""$file"" -O ""$file"".sdf; > done; work on emem10.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem11.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem1.pdbqt; 1 molecule converted; work on emem2.pdbqt; 1 molecule converted; work on emem3.pdbqt; 1 molecule converted; work on emem4.pdbqt; 1 molecule converted; work on emem5.pdbqt; 1 molecule converted; work on emem6.pdbqt; 1 molecule converted; work on emem7.pdbqt; 1 molecule converted; work on emem8.pdbqt; 1 molecule converted; work on emem9.pdbqt; 1 molecule converted; ```. Else, does ""distorted"" refer to altered atomic positions/coordinates while comparing the .sdf (of the force field optimized conformer geometry) and the .pdbqt of one and the same structure? There may be some small changes, e.g. by the number of decimals to express the atomic coordinates. On the other hand, if the .pdbqt is used as a starting geometry in the docking experiment, are these differences significant? If so, can you indicate which atom(s) in which file(s) are most representative for the change you observe?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309752203:663,Deployability,toggle,toggle,663,"@nilanjana1996 The thought passed my mind to superimpose two data files about one structure in Jmol. In its own input (file -> console), I entered. ```; load files ""emem1.pdbqt"" ""em1.sdf""; select 1.1; color lightgreen; model 0; ```. Differences in atomic positions appear to be small:. ![superposition](https://github.com/user-attachments/assets/a2f1bd71-77fc-42c6-abf0-39006d22600e). ----. With `select 1.1`, the first model of the first input file is selected to eventual alter its coloring (`color cpk` would revert it to the original scheme). Subsequent `model 0` displays both models simultaneously; since there are two models in the working memory, one can toggle to one or the other by `model 1` and `model 2`, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309752203
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309752203:153,Performance,load,load,153,"@nilanjana1996 The thought passed my mind to superimpose two data files about one structure in Jmol. In its own input (file -> console), I entered. ```; load files ""emem1.pdbqt"" ""em1.sdf""; select 1.1; color lightgreen; model 0; ```. Differences in atomic positions appear to be small:. ![superposition](https://github.com/user-attachments/assets/a2f1bd71-77fc-42c6-abf0-39006d22600e). ----. With `select 1.1`, the first model of the first input file is selected to eventual alter its coloring (`color cpk` would revert it to the original scheme). Subsequent `model 0` displays both models simultaneously; since there are two models in the working memory, one can toggle to one or the other by `model 1` and `model 2`, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309752203
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2311815101:176,Availability,error,error,176,"Hi,; I would need you to be a bit more specific. Are you experiencing a different problem now? You did not find the molecules responsible for the ""could not setup force field"" error? It is a lot better if you keep the different problems in different issues, if nothing else to help people arriving to the issues in the future.; So, using the ""-e"" flag, could you find out which molecules gave the original error?; Regarding the ""distortion"", please create a new issue, and be specific as to how you notice the distortion, be clear on what is the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2311815101
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2311815101:406,Availability,error,error,406,"Hi,; I would need you to be a bit more specific. Are you experiencing a different problem now? You did not find the molecules responsible for the ""could not setup force field"" error? It is a lot better if you keep the different problems in different issues, if nothing else to help people arriving to the issues in the future.; So, using the ""-e"" flag, could you find out which molecules gave the original error?; Regarding the ""distortion"", please create a new issue, and be specific as to how you notice the distortion, be clear on what is the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2311815101
https://github.com/openbabel/openbabel/issues/2719#issuecomment-2311815101:525,Usability,clear,clear,525,"Hi,; I would need you to be a bit more specific. Are you experiencing a different problem now? You did not find the molecules responsible for the ""could not setup force field"" error? It is a lot better if you keep the different problems in different issues, if nothing else to help people arriving to the issues in the future.; So, using the ""-e"" flag, could you find out which molecules gave the original error?; Regarding the ""distortion"", please create a new issue, and be specific as to how you notice the distortion, be clear on what is the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2311815101
https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312067067:147,Security,access,accessed,147,"Yes. I tried with a subset of the large SDF file containing only 10 ligands, and processed them as I explained it last comment. ; The files can be accessed in the Google drive link, [https://drive.google.com/drive/folders/19tDdzlWhIfmRpBGNMW1mINjm9RF0LBR3?usp=drive_link]. I have also uploaded docking output from autodock vina of two ligand, emem8 and emem9 respectively.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312067067
https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312326322:76,Energy Efficiency,energy,energy,76,"Hi @fredrikw . It seems the issue has been resolved. This time, I performed energy minimization on the combined SDF file and then split it into separate SDF files in next step. . Subsequently, I used the ""--gen3D"" flag while converting the individual SDF files to PDBQT, which successfully generated the 3D structures. Therefore, I believe the problem is now solved, and I'm closing the issue. Thank you for your assistance.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312326322
https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312326322:66,Performance,perform,performed,66,"Hi @fredrikw . It seems the issue has been resolved. This time, I performed energy minimization on the combined SDF file and then split it into separate SDF files in next step. . Subsequently, I used the ""--gen3D"" flag while converting the individual SDF files to PDBQT, which successfully generated the 3D structures. Therefore, I believe the problem is now solved, and I'm closing the issue. Thank you for your assistance.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312326322
https://github.com/openbabel/openbabel/pull/2721#issuecomment-2352209026:72,Usability,guid,guidelines,72,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2352209026
https://github.com/openbabel/openbabel/pull/2721#issuecomment-2353736997:156,Deployability,release,release,156,"No, we're not going to grab `master`. For consistency and security, it's much better to grab a specific commit hash. That's immutable. I'd rather see a new release of rapidjson, but in the meantime, I'd prefer something like `7c73dd7de7c4f14379b781418c6e947ad464c818`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2353736997
https://github.com/openbabel/openbabel/pull/2721#issuecomment-2353736997:58,Security,secur,security,58,"No, we're not going to grab `master`. For consistency and security, it's much better to grab a specific commit hash. That's immutable. I'd rather see a new release of rapidjson, but in the meantime, I'd prefer something like `7c73dd7de7c4f14379b781418c6e947ad464c818`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2353736997
https://github.com/openbabel/openbabel/pull/2721#issuecomment-2353736997:111,Security,hash,hash,111,"No, we're not going to grab `master`. For consistency and security, it's much better to grab a specific commit hash. That's immutable. I'd rather see a new release of rapidjson, but in the meantime, I'd prefer something like `7c73dd7de7c4f14379b781418c6e947ad464c818`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2353736997
https://github.com/openbabel/openbabel/pull/2721#issuecomment-2354094553:30,Security,hash,hash,30,"Fair enough, I swapped in the hash you suggested i.e. the most recent commit hash.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2354094553
https://github.com/openbabel/openbabel/pull/2721#issuecomment-2354094553:77,Security,hash,hash,77,"Fair enough, I swapped in the hash you suggested i.e. the most recent commit hash.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2354094553
https://github.com/openbabel/openbabel/issues/2725#issuecomment-2360603973:107,Availability,down,download,107,"@emadellaloggia I have no prior knowledge about the purpose of this archive, nor its content. Thus I won't download, let alone unzip it.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725#issuecomment-2360603973
https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536:182,Testability,log,log,182,"Look at ```ob.obErrorLog.GetMessagesOfLevel(0)``` in combination with the information at http://openbabel.org/api/3.0/classOpenBabel_1_1OBMessageHandler.shtml. You should check this log, and then perhaps clear it each time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536
https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536:204,Usability,clear,clear,204,"Look at ```ob.obErrorLog.GetMessagesOfLevel(0)``` in combination with the information at http://openbabel.org/api/3.0/classOpenBabel_1_1OBMessageHandler.shtml. You should check this log, and then perhaps clear it each time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536
https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407113120:70,Deployability,integrat,integrate,70,"@baoilleach thank you for quick response. ; However, I do not know to integrate it into my python script. Please give me a more detail information.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407113120
https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407113120:70,Integrability,integrat,integrate,70,"@baoilleach thank you for quick response. ; However, I do not know to integrate it into my python script. Please give me a more detail information.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407113120
https://github.com/openbabel/openbabel/issues/2729#issuecomment-2414909989:205,Modifiability,portab,portable,205,"@jonathaw PyPi references the unofficial repository / fork of [openbabel-wheel](https://pypi.org/project/openbabel-wheel/). A couple of times, this project was an helpful alternative for me (e.g., for the portable [winpython](https://winpython.github.io/)) when the setup of ""openbabel 3.1.1.1"" ([entry](https://pypi.org/project/openbabel/)) failed. It only requires an adjustment in the `requirements.txt` file (if your project is organized this way), other source code remains the same. (Ensure that the Python virtual environment uses _only_ `openbabel-wheel`, though.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2729#issuecomment-2414909989
https://github.com/openbabel/openbabel/issues/2729#issuecomment-2414924746:19,Deployability,update,update,19,"@ghutchis The last update of the PyPI repository of [openbabel](https://pypi.org/project/openbabel/) providing ""openbabel 3.1.1.1"" was by May 2020. Should one consider this source as ""only deep resting/because at some point in future there will be an update"", or as legacy (because of your hint to the entry in the [conda](https://anaconda.org/conda-forge/openbabel) ecosystem)?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2729#issuecomment-2414924746
https://github.com/openbabel/openbabel/issues/2729#issuecomment-2414924746:251,Deployability,update,update,251,"@ghutchis The last update of the PyPI repository of [openbabel](https://pypi.org/project/openbabel/) providing ""openbabel 3.1.1.1"" was by May 2020. Should one consider this source as ""only deep resting/because at some point in future there will be an update"", or as legacy (because of your hint to the entry in the [conda](https://anaconda.org/conda-forge/openbabel) ecosystem)?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2729#issuecomment-2414924746
https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1299,Deployability,release,releases,1299,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325
https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1620,Deployability,release,release,1620,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325
https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1606,Energy Efficiency,schedul,schedules,1606,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325
https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:29,Modifiability,layers,layers,29,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325
https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1223,Modifiability,portab,portable,1223,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325
https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1066,Performance,load,load,1066,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325
https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1101,Performance,cache,cache,1101,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325
https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1019,Security,access,accessing,1019,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325
https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:500,Testability,test,test,500,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325
https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:701,Testability,test,test,701,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325
