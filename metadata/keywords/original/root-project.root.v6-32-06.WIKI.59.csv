id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/doc/master/classTGeoHelix.html:3767,Energy Efficiency,charge,charge,3767,"at can be made such that the error between linear-helix extrapolation is less than EPSIL. ;  ; const Double_t * GetCurrentDirection () const;  ; const Double_t * GetCurrentPoint () const;  ; Double_t GetStep () const;  ; Double_t GetTotalCurvature () const;  Compute helix total curvature. ;  ; Double_t GetXYcurvature () const;  ; void InitDirection (Double_t *dir, Bool_t is_normalized=kTRUE);  Initialize particle direction (tangent on the helix in initial point) ;  ; void InitDirection (Double_t dirx, Double_t diry, Double_t dirz, Bool_t is_normalized=kTRUE);  Initialize particle direction (tangent on the helix in initial point) ;  ; void InitPoint (Double_t *point);  Set initial point on the helix. ;  ; void InitPoint (Double_t x0, Double_t y0, Double_t z0);  Initialize coordinates of a point on the helix. ;  ; TClass * IsA () const override;  ; Bool_t IsRightHanded () const;  ; void ResetStep ();  Reset current point/direction to initial values. ;  ; void SetCharge (Int_t charge);  Positive charge means left-handed helix. ;  ; void SetField (Double_t bx, Double_t by, Double_t bz, Bool_t is_normalized=kTRUE);  Initialize particle direction (tangent on the helix in initial point) ;  ; void SetHelixStep (Double_t hstep);  Set Z step of the helix on a complete turn. Positive or null. ;  ; void SetXYcurvature (Double_t curvature);  Set XY curvature: c = 1/Rxy. ;  ; void Step (Double_t step);  Make a step from current point along the helix and compute new point, direction and angle To reach a plane/ shape boundary, one has to: ;  ; Double_t StepToPlane (Double_t *point, Double_t *norm);  Propagate initial point up to a given Z position in MARS. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateHelix ();  Update the local helix matrix. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TO",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:3786,Energy Efficiency,charge,charge,3786,"at can be made such that the error between linear-helix extrapolation is less than EPSIL. ;  ; const Double_t * GetCurrentDirection () const;  ; const Double_t * GetCurrentPoint () const;  ; Double_t GetStep () const;  ; Double_t GetTotalCurvature () const;  Compute helix total curvature. ;  ; Double_t GetXYcurvature () const;  ; void InitDirection (Double_t *dir, Bool_t is_normalized=kTRUE);  Initialize particle direction (tangent on the helix in initial point) ;  ; void InitDirection (Double_t dirx, Double_t diry, Double_t dirz, Bool_t is_normalized=kTRUE);  Initialize particle direction (tangent on the helix in initial point) ;  ; void InitPoint (Double_t *point);  Set initial point on the helix. ;  ; void InitPoint (Double_t x0, Double_t y0, Double_t z0);  Initialize coordinates of a point on the helix. ;  ; TClass * IsA () const override;  ; Bool_t IsRightHanded () const;  ; void ResetStep ();  Reset current point/direction to initial values. ;  ; void SetCharge (Int_t charge);  Positive charge means left-handed helix. ;  ; void SetField (Double_t bx, Double_t by, Double_t bz, Bool_t is_normalized=kTRUE);  Initialize particle direction (tangent on the helix in initial point) ;  ; void SetHelixStep (Double_t hstep);  Set Z step of the helix on a complete turn. Positive or null. ;  ; void SetXYcurvature (Double_t curvature);  Set XY curvature: c = 1/Rxy. ;  ; void Step (Double_t step);  Make a step from current point along the helix and compute new point, direction and angle To reach a plane/ shape boundary, one has to: ;  ; Double_t StepToPlane (Double_t *point, Double_t *norm);  Propagate initial point up to a given Z position in MARS. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateHelix ();  Update the local helix matrix. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TO",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:14301,Energy Efficiency,charge,charge,14301,"erited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHelix.h>. Inheritance diagram for TGeoHelix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoHelixTypes. enum TGeoHelix::EGeoHelixTypes. EnumeratorkHelixNeedUpdate ; kHelixStraight ; kHelixCircle . Definition at line 37 of file TGeoHelix.h. Constructor & Destructor Documentation. ◆ TGeoHelix() [1/3]. TGeoHelix::TGeoHelix ; (; const TGeoHelix & ; ). privatedelete . ◆ TGeoHelix() [2/3]. TGeoHelix::TGeoHelix ; (; ). Dummy constructor. ; Definition at line 61 of file TGeoHelix.cxx. ◆ TGeoHelix() [3/3]. TGeoHelix::TGeoHelix ; (; Double_t ; curvature, . Double_t ; step, . Int_t ; charge = 1 . ). Normal constructor. ; Definition at line 82 of file TGeoHelix.cxx. ◆ ~TGeoHelix(). TGeoHelix::~TGeoHelix ; (; ). override . Destructor. ; Definition at line 104 of file TGeoHelix.cxx. Member Function Documentation. ◆ Class(). static TClass * TGeoHelix::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoHelix::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoHelix::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 73 of file TGeoHelix.h. ◆ ComputeSafeStep(). Double_t TGeoHelix::ComputeSafeStep ; (; Double_t ; epsil = 1E-6); const. Compute safe linear step that can be made such that the error between linear-helix extrapolation is less than EPSIL. ; Definition at line 114 of file TGeoHelix.cxx. ◆ DeclFileName(). static const char * TGeoHelix::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class de",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:17470,Energy Efficiency,charge,charge,17470,"in initial point) ; Definition at line 145 of file TGeoHelix.cxx. ◆ InitPoint() [1/2]. void TGeoHelix::InitPoint ; (; Double_t * ; point). Set initial point on the helix. ; Definition at line 137 of file TGeoHelix.cxx. ◆ InitPoint() [2/2]. void TGeoHelix::InitPoint ; (; Double_t ; x0, . Double_t ; y0, . Double_t ; z0 . ). Initialize coordinates of a point on the helix. ; Definition at line 126 of file TGeoHelix.cxx. ◆ IsA(). TClass * TGeoHelix::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 73 of file TGeoHelix.h. ◆ IsRightHanded(). Bool_t TGeoHelix::IsRightHanded ; (; ); const. inline . Definition at line 55 of file TGeoHelix.h. ◆ operator=(). TGeoHelix & TGeoHelix::operator= ; (; const TGeoHelix & ; ). privatedelete . ◆ ResetStep(). void TGeoHelix::ResetStep ; (; ). Reset current point/direction to initial values. ; Definition at line 242 of file TGeoHelix.cxx. ◆ SetCharge(). void TGeoHelix::SetCharge ; (; Int_t ; charge). Positive charge means left-handed helix. ; Definition at line 195 of file TGeoHelix.cxx. ◆ SetField(). void TGeoHelix::SetField ; (; Double_t ; bx, . Double_t ; by, . Double_t ; bz, . Bool_t ; is_normalized = kTRUE . ). Initialize particle direction (tangent on the helix in initial point) ; Definition at line 211 of file TGeoHelix.cxx. ◆ SetHelixStep(). void TGeoHelix::SetHelixStep ; (; Double_t ; hstep). Set Z step of the helix on a complete turn. Positive or null. ; Definition at line 227 of file TGeoHelix.cxx. ◆ SetXYcurvature(). void TGeoHelix::SetXYcurvature ; (; Double_t ; curvature). Set XY curvature: c = 1/Rxy. ; Definition at line 178 of file TGeoHelix.cxx. ◆ Step(). void TGeoHelix::Step ; (; Double_t ; step). Make a step from current point along the helix and compute new point, direction and angle To reach a plane/ shape boundary, one has to: . Compute the safety to the plane/boundary; Define / update a helix according local field and particle state (",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:17488,Energy Efficiency,charge,charge,17488,"f file TGeoHelix.cxx. ◆ InitPoint() [1/2]. void TGeoHelix::InitPoint ; (; Double_t * ; point). Set initial point on the helix. ; Definition at line 137 of file TGeoHelix.cxx. ◆ InitPoint() [2/2]. void TGeoHelix::InitPoint ; (; Double_t ; x0, . Double_t ; y0, . Double_t ; z0 . ). Initialize coordinates of a point on the helix. ; Definition at line 126 of file TGeoHelix.cxx. ◆ IsA(). TClass * TGeoHelix::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 73 of file TGeoHelix.h. ◆ IsRightHanded(). Bool_t TGeoHelix::IsRightHanded ; (; ); const. inline . Definition at line 55 of file TGeoHelix.h. ◆ operator=(). TGeoHelix & TGeoHelix::operator= ; (; const TGeoHelix & ; ). privatedelete . ◆ ResetStep(). void TGeoHelix::ResetStep ; (; ). Reset current point/direction to initial values. ; Definition at line 242 of file TGeoHelix.cxx. ◆ SetCharge(). void TGeoHelix::SetCharge ; (; Int_t ; charge). Positive charge means left-handed helix. ; Definition at line 195 of file TGeoHelix.cxx. ◆ SetField(). void TGeoHelix::SetField ; (; Double_t ; bx, . Double_t ; by, . Double_t ; bz, . Bool_t ; is_normalized = kTRUE . ). Initialize particle direction (tangent on the helix in initial point) ; Definition at line 211 of file TGeoHelix.cxx. ◆ SetHelixStep(). void TGeoHelix::SetHelixStep ; (; Double_t ; hstep). Set Z step of the helix on a complete turn. Positive or null. ; Definition at line 227 of file TGeoHelix.cxx. ◆ SetXYcurvature(). void TGeoHelix::SetXYcurvature ; (; Double_t ; curvature). Set XY curvature: c = 1/Rxy. ; Definition at line 178 of file TGeoHelix.cxx. ◆ Step(). void TGeoHelix::Step ; (; Double_t ; step). Make a step from current point along the helix and compute new point, direction and angle To reach a plane/ shape boundary, one has to: . Compute the safety to the plane/boundary; Define / update a helix according local field and particle state (position, direction, charge); Compute the mag",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:18475,Energy Efficiency,charge,charge,18475," means left-handed helix. ; Definition at line 195 of file TGeoHelix.cxx. ◆ SetField(). void TGeoHelix::SetField ; (; Double_t ; bx, . Double_t ; by, . Double_t ; bz, . Bool_t ; is_normalized = kTRUE . ). Initialize particle direction (tangent on the helix in initial point) ; Definition at line 211 of file TGeoHelix.cxx. ◆ SetHelixStep(). void TGeoHelix::SetHelixStep ; (; Double_t ; hstep). Set Z step of the helix on a complete turn. Positive or null. ; Definition at line 227 of file TGeoHelix.cxx. ◆ SetXYcurvature(). void TGeoHelix::SetXYcurvature ; (; Double_t ; curvature). Set XY curvature: c = 1/Rxy. ; Definition at line 178 of file TGeoHelix.cxx. ◆ Step(). void TGeoHelix::Step ; (; Double_t ; step). Make a step from current point along the helix and compute new point, direction and angle To reach a plane/ shape boundary, one has to: . Compute the safety to the plane/boundary; Define / update a helix according local field and particle state (position, direction, charge); Compute the magnetic safety (maximum distance for which the field can be considered constant); Call TGeoHelix::Step() having as argument the minimum between 1. and 3.; Repeat from 1. until the step to be made is small enough.; Add to the total step the distance along a straight line from the last point to the plane/shape boundary . Definition at line 260 of file TGeoHelix.cxx. ◆ StepToPlane(). Double_t TGeoHelix::StepToPlane ; (; Double_t * ; point, . Double_t * ; norm . ). Propagate initial point up to a given Z position in MARS. ; Definition at line 293 of file TGeoHelix.cxx. ◆ Streamer(). void TGeoHelix::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGeoHelix::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 73 of file TGeoHelix.h. ◆ UpdateHelix(). void TGeoHelix::UpdateHelix ; (; ). Update the local helix matrix. ; Definition at line 352 of file TGeoHeli",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:6444,Integrability,message,message,6444,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:6985,Integrability,message,message,6985,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:8187,Integrability,message,message,8187,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:11549,Integrability,message,message,11549," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:11922,Integrability,message,message,11922," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:1874,Modifiability,inherit,inherited,1874,"tion_t Option_t TPoint TPoint angleDefinition TGWin32VirtualXProxy.cxx:68; In particular, a helix describes the trajectory of a charged particle in magnetic field. In such case, the helix is right-handed for negative particle charge. To define a helix, one must define:; the curvature - positive defined; the Z step made after one full turn of the helix; the particle charge sign; the initial particle position and direction (force normalization to unit); the magnetic field direction. A helix provides:; propagation to a given Z position (in global frame) Double_t *point = TGeoHelix::PropagateToZ(Double_t z);; propagation to an arbitrary plane, returning also the new point; propagation in a geometry until the next crossed surface; computation of the total track length along a helix . Definition at line 19 of file TGeoHelix.h. Public Types; enum  EGeoHelixTypes { kHelixNeedUpdate = (1ULL << ( 16 )); , kHelixStraight = (1ULL << ( 17 )); , kHelixCircle = (1ULL << ( 18 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoHelix ();  Dummy constructor. ;  ;  TGeoHelix (Double_t curvature, Double_t step, Int_t charge=1);  Normal constructor. ;  ;  ~TGeoHelix () override;  Destructor. ;  ; Double_t ComputeSafeStep (Double_t epsil=1E-6) const;  Compute safe linear step that can be made such that the error between linear-helix extrapolation is less than EPSIL. ;  ; con",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:4677,Modifiability,inherit,inherited,4677," Reset current point/direction to initial values. ;  ; void SetCharge (Int_t charge);  Positive charge means left-handed helix. ;  ; void SetField (Double_t bx, Double_t by, Double_t bz, Bool_t is_normalized=kTRUE);  Initialize particle direction (tangent on the helix in initial point) ;  ; void SetHelixStep (Double_t hstep);  Set Z step of the helix on a complete turn. Positive or null. ;  ; void SetXYcurvature (Double_t curvature);  Set XY curvature: c = 1/Rxy. ;  ; void Step (Double_t step);  Make a step from current point along the helix and compute new point, direction and angle To reach a plane/ shape boundary, one has to: ;  ; Double_t StepToPlane (Double_t *point, Double_t *norm);  Propagate initial point up to a given Z position in MARS. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateHelix ();  Update the local helix matrix. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:6074,Modifiability,inherit,inheritance,6074,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:8285,Modifiability,inherit,inherits,8285,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:8402,Modifiability,inherit,inherits,8402,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:12423,Modifiability,inherit,inherited,12423,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoHelix (const TGeoHelix &)=delete;  ; TGeoHelix & operator= (const TGeoHelix &)=delete;  . Private Attributes; Double_t fB [3];  ; Double_t fC;  ; Double_t fDir [3];  ; Double_t fDirInit [3];  ; TGeoHMatrix * fMatrix {nullptr};  ; Double_t fPhi;  ; Double_t fPoint [3];  ; Double_t fPointInit [3];  ; Int_t fQ;  ; Double_t fS;  ; Double_t fStep;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions ",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:13335,Modifiability,inherit,inherited,13335," TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoHelix (const TGeoHelix &)=delete;  ; TGeoHelix & operator= (const TGeoHelix &)=delete;  . Private Attributes; Double_t fB [3];  ; Double_t fC;  ; Double_t fDir [3];  ; Double_t fDirInit [3];  ; TGeoHMatrix * fMatrix {nullptr};  ; Double_t fPhi;  ; Double_t fPoint [3];  ; Double_t fPointInit [3];  ; Int_t fQ;  ; Double_t fS;  ; Double_t fStep;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHelix.h>. Inheritance diagram for TGeoHelix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoHelixTypes. enum TGeoHelix::EGeoHelixTypes. EnumeratorkHelixNeedUpdate ; kHelixStraight ; kHelixCircle . Definition at line 37 of file TGeoHelix.h. Constructor & Destructor Documentation. ◆ TGeoHelix() [1/3]. TGeoHelix::TGeoHelix ; (; const TGeoHelix & ; ). privatedelete . ◆ TGeoHelix() [2/3]. TGeoHelix::TGeoHelix ; (; ). Dummy constructor. ; Definition at line 61 of file TGeoHelix.cxx. ◆ TGeoHelix() [3/3]. TGeoHelix::TGeoHelix ; (; Double_t ; curvature, . Double_t ; step, . Int_t ; charge = 1 . ). Normal constructor. ; Definition at line 82 of file TGeoHelix.cxx. ◆ ~TGeoHelix(). TGeoHelix::~TGeoHelix ; (; ). override",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:13434,Modifiability,inherit,inherited,13434," TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoHelix (const TGeoHelix &)=delete;  ; TGeoHelix & operator= (const TGeoHelix &)=delete;  . Private Attributes; Double_t fB [3];  ; Double_t fC;  ; Double_t fDir [3];  ; Double_t fDirInit [3];  ; TGeoHMatrix * fMatrix {nullptr};  ; Double_t fPhi;  ; Double_t fPoint [3];  ; Double_t fPointInit [3];  ; Int_t fQ;  ; Double_t fS;  ; Double_t fStep;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHelix.h>. Inheritance diagram for TGeoHelix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoHelixTypes. enum TGeoHelix::EGeoHelixTypes. EnumeratorkHelixNeedUpdate ; kHelixStraight ; kHelixCircle . Definition at line 37 of file TGeoHelix.h. Constructor & Destructor Documentation. ◆ TGeoHelix() [1/3]. TGeoHelix::TGeoHelix ; (; const TGeoHelix & ; ). privatedelete . ◆ TGeoHelix() [2/3]. TGeoHelix::TGeoHelix ; (; ). Dummy constructor. ; Definition at line 61 of file TGeoHelix.cxx. ◆ TGeoHelix() [3/3]. TGeoHelix::TGeoHelix ; (; Double_t ; curvature, . Double_t ; step, . Int_t ; charge = 1 . ). Normal constructor. ; Definition at line 82 of file TGeoHelix.cxx. ◆ ~TGeoHelix(). TGeoHelix::~TGeoHelix ; (; ). override",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:2759,Safety,safe,safe,2759,")); , kHelixStraight = (1ULL << ( 17 )); , kHelixCircle = (1ULL << ( 18 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoHelix ();  Dummy constructor. ;  ;  TGeoHelix (Double_t curvature, Double_t step, Int_t charge=1);  Normal constructor. ;  ;  ~TGeoHelix () override;  Destructor. ;  ; Double_t ComputeSafeStep (Double_t epsil=1E-6) const;  Compute safe linear step that can be made such that the error between linear-helix extrapolation is less than EPSIL. ;  ; const Double_t * GetCurrentDirection () const;  ; const Double_t * GetCurrentPoint () const;  ; Double_t GetStep () const;  ; Double_t GetTotalCurvature () const;  Compute helix total curvature. ;  ; Double_t GetXYcurvature () const;  ; void InitDirection (Double_t *dir, Bool_t is_normalized=kTRUE);  Initialize particle direction (tangent on the helix in initial point) ;  ; void InitDirection (Double_t dirx, Double_t diry, Double_t dirz, Bool_t is_normalized=kTRUE);  Initialize particle direction (tangent on the helix in initial point) ;  ; void InitPoint (Double_t *point);  Set initial point on the helix. ;  ; void InitPoint (Double_t x0, Double_t y0, Double_t z0);  Initialize coordinates of a point on the helix. ;  ; TClass * IsA () const override;  ; Bool_t IsRightHanded () const;  ; void ResetStep ();  Reset current point/direction to initial values. ;  ; void SetCharge (Int_t charge);  Po",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:15014,Safety,safe,safe,15014," & ; ). privatedelete . ◆ TGeoHelix() [2/3]. TGeoHelix::TGeoHelix ; (; ). Dummy constructor. ; Definition at line 61 of file TGeoHelix.cxx. ◆ TGeoHelix() [3/3]. TGeoHelix::TGeoHelix ; (; Double_t ; curvature, . Double_t ; step, . Int_t ; charge = 1 . ). Normal constructor. ; Definition at line 82 of file TGeoHelix.cxx. ◆ ~TGeoHelix(). TGeoHelix::~TGeoHelix ; (; ). override . Destructor. ; Definition at line 104 of file TGeoHelix.cxx. Member Function Documentation. ◆ Class(). static TClass * TGeoHelix::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoHelix::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoHelix::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 73 of file TGeoHelix.h. ◆ ComputeSafeStep(). Double_t TGeoHelix::ComputeSafeStep ; (; Double_t ; epsil = 1E-6); const. Compute safe linear step that can be made such that the error between linear-helix extrapolation is less than EPSIL. ; Definition at line 114 of file TGeoHelix.cxx. ◆ DeclFileName(). static const char * TGeoHelix::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 73 of file TGeoHelix.h. ◆ GetCurrentDirection(). const Double_t * TGeoHelix::GetCurrentDirection ; (; ); const. inline . Definition at line 51 of file TGeoHelix.h. ◆ GetCurrentPoint(). const Double_t * TGeoHelix::GetCurrentPoint ; (; ); const. inline . Definition at line 50 of file TGeoHelix.h. ◆ GetStep(). Double_t TGeoHelix::GetStep ; (; ); const. inline . Definition at line 53 of file TGeoHelix.h. ◆ GetTotalCurvature(). Double_t TGeoHelix::GetTotalCurvature ; (; ); const. Compute helix total curvature. ; Definition at line 169 of file TGeoHelix.cxx. ◆ GetXYcurvature(). Double_t TGeoHelix::GetXYcurvature ; (; ); const. inline . Definition at line 52 of file TGeoHelix.h. ◆ InitDirection() [1/2]. void TGeoHelix::InitDire",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:18358,Safety,safe,safety,18358," means left-handed helix. ; Definition at line 195 of file TGeoHelix.cxx. ◆ SetField(). void TGeoHelix::SetField ; (; Double_t ; bx, . Double_t ; by, . Double_t ; bz, . Bool_t ; is_normalized = kTRUE . ). Initialize particle direction (tangent on the helix in initial point) ; Definition at line 211 of file TGeoHelix.cxx. ◆ SetHelixStep(). void TGeoHelix::SetHelixStep ; (; Double_t ; hstep). Set Z step of the helix on a complete turn. Positive or null. ; Definition at line 227 of file TGeoHelix.cxx. ◆ SetXYcurvature(). void TGeoHelix::SetXYcurvature ; (; Double_t ; curvature). Set XY curvature: c = 1/Rxy. ; Definition at line 178 of file TGeoHelix.cxx. ◆ Step(). void TGeoHelix::Step ; (; Double_t ; step). Make a step from current point along the helix and compute new point, direction and angle To reach a plane/ shape boundary, one has to: . Compute the safety to the plane/boundary; Define / update a helix according local field and particle state (position, direction, charge); Compute the magnetic safety (maximum distance for which the field can be considered constant); Call TGeoHelix::Step() having as argument the minimum between 1. and 3.; Repeat from 1. until the step to be made is small enough.; Add to the total step the distance along a straight line from the last point to the plane/shape boundary . Definition at line 260 of file TGeoHelix.cxx. ◆ StepToPlane(). Double_t TGeoHelix::StepToPlane ; (; Double_t * ; point, . Double_t * ; norm . ). Propagate initial point up to a given Z position in MARS. ; Definition at line 293 of file TGeoHelix.cxx. ◆ Streamer(). void TGeoHelix::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGeoHelix::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 73 of file TGeoHelix.h. ◆ UpdateHelix(). void TGeoHelix::UpdateHelix ; (; ). Update the local helix matrix. ; Definition at line 352 of file TGeoHeli",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:18505,Safety,safe,safety,18505," means left-handed helix. ; Definition at line 195 of file TGeoHelix.cxx. ◆ SetField(). void TGeoHelix::SetField ; (; Double_t ; bx, . Double_t ; by, . Double_t ; bz, . Bool_t ; is_normalized = kTRUE . ). Initialize particle direction (tangent on the helix in initial point) ; Definition at line 211 of file TGeoHelix.cxx. ◆ SetHelixStep(). void TGeoHelix::SetHelixStep ; (; Double_t ; hstep). Set Z step of the helix on a complete turn. Positive or null. ; Definition at line 227 of file TGeoHelix.cxx. ◆ SetXYcurvature(). void TGeoHelix::SetXYcurvature ; (; Double_t ; curvature). Set XY curvature: c = 1/Rxy. ; Definition at line 178 of file TGeoHelix.cxx. ◆ Step(). void TGeoHelix::Step ; (; Double_t ; step). Make a step from current point along the helix and compute new point, direction and angle To reach a plane/ shape boundary, one has to: . Compute the safety to the plane/boundary; Define / update a helix according local field and particle state (position, direction, charge); Compute the magnetic safety (maximum distance for which the field can be considered constant); Call TGeoHelix::Step() having as argument the minimum between 1. and 3.; Repeat from 1. until the step to be made is small enough.; Add to the total step the distance along a straight line from the last point to the plane/shape boundary . Definition at line 260 of file TGeoHelix.cxx. ◆ StepToPlane(). Double_t TGeoHelix::StepToPlane ; (; Double_t * ; point, . Double_t * ; norm . ). Propagate initial point up to a given Z position in MARS. ; Definition at line 293 of file TGeoHelix.cxx. ◆ Streamer(). void TGeoHelix::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGeoHelix::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 73 of file TGeoHelix.h. ◆ UpdateHelix(). void TGeoHelix::UpdateHelix ; (; ). Update the local helix matrix. ; Definition at line 352 of file TGeoHeli",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHelix.html:7916,Security,hash,hash,7916," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoHelix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html
https://root.cern/doc/master/classTGeoHMatrix.html:533,Availability,down,down,533,". ROOT: TGeoHMatrix Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TGeoHMatrix Class ReferenceThe Geometry Package » Geometry classes. ; Matrix class used for computing global transformations Should NOT be used for node definition. ; An instance of this class is generally used to pile-up local transformations starting from the top level physical node, down to the current node. ; Definition at line 458 of file TGeoMatrix.h. Public Member Functions;  TGeoHMatrix ();  dummy ctor ;  ;  TGeoHMatrix (const char *name);  constructor ;  ;  TGeoHMatrix (const TGeoHMatrix &other);  ;  TGeoHMatrix (const TGeoMatrix &matrix);  assignment ;  ;  ~TGeoHMatrix () override;  destructor ;  ; void Clear (Option_t *option="""") override;  clear the data for this matrix ;  ; void CopyFrom (const TGeoMatrix *other);  Fast copy method. ;  ; Double_t Determinant () const;  computes determinant of the rotation matrix ;  ; void FastRotZ (const Double_t *sincos);  Perform a rotation about Z having the sine/cosine of the rotation angle. ;  ; virtual Double_t * GetRotationMatrix ();  ; const Double_t * GetRotationMatrix () const override;  ; virtual Double_t * GetScale ();  ; const Double_t * GetScale () const override;  ; virtual Double_t * GetTranslation ();  ; const Double_t * GetTranslation () const override;  ; TGeoHMatrix Inverse () const override;  Return a temporary inverse of this. ;  ; TClass * IsA () const override;  ; TGeoMatrix * MakeClone () const override;  Make a clone of this matrix. ;  ; void Multiply (const TGeoMatrix &right);  ; void Multiply (const TGeoMatrix *right);  multiply to the right with an other transformation if right is identity matrix, just return ;  ; void MultiplyLeft (const TGeoMatrix &left);  ; void MultiplyLeft (const TGeoMatrix *left);  multiply to the left with an other transformati",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:9216,Availability,error,error,9216,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:9305,Availability,error,error,9305,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:9460,Availability,error,error,9460,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:9757,Availability,error,error,9757,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:13703,Availability,error,error,13703,"rtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versi",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:9222,Integrability,message,message,9222,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:9763,Integrability,message,message,9763,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:10753,Integrability,message,message,10753,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:13709,Integrability,message,message,13709,"rtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versi",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:14082,Integrability,message,message,14082,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions i",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:3631,Modifiability,inherit,inherited,3631,"flection respect to ZX. ;  ; void ReflectZ (Bool_t leftside, Bool_t rotonly=kFALSE) override;  Multiply by a reflection respect to XY. ;  ; void RotateX (Double_t angle) override;  Rotate about X axis with angle expressed in degrees. ;  ; void RotateY (Double_t angle) override;  Rotate about Y axis with angle expressed in degrees. ;  ; void RotateZ (Double_t angle) override;  Rotate about Z axis with angle expressed in degrees. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDx (Double_t dx) override;  ; void SetDy (Double_t dy) override;  ; void SetDz (Double_t dz) override;  ; void SetRotation (const Double_t *matrix);  ; void SetScale (const Double_t *scale);  ; void SetTranslation (const Double_t *vect);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoMatrix;  TGeoMatrix ();  dummy constructor ;  ;  TGeoMatrix (const char *name);  Constructor. ;  ;  ~TGeoMatrix () override;  Destructor. ;  ; virtual Int_t GetByteCount () const;  Get total size in bytes of this. ;  ; void GetHomogenousMatrix (Double_t *hmat) const;  The homogenous matrix associated with the transformation is used for piling up's and visualization. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; TClass * IsA () const override;  ; Bool_t IsCombi () const;  ; Bool_t IsGeneral () const;  ; Bool_t IsIdentity () const;  ; Bool_t IsOwned () const;  ; Bool_t IsReflection () const;  ; Bool_t IsRegistered () const;  ; Bool_t IsRotAboutZ () const;  Returns true if no rotation or the rotation is about Z axis. ;  ; Bool_t IsRotation () const;  ; Bool_t IsScale () const;  ; Bool_t IsShared () const;  ; Bool_t IsTranslation () const;  ; virtual void LocalToMaster (const Double_t *local, Double_t *master) const;  convert a point by ",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:6019,Modifiability,inherit,inherited,6019,"irtual void MasterToLocal (const Double_t *master, Double_t *local) const;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; virtual void MasterToLocalBomb (const Double_t *master, Double_t *local) const;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; virtual void MasterToLocalVect (const Double_t *master, Double_t *local) const;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; void Print (Option_t *option="""") const override;  print the matrix in 4x4 format ;  ; virtual void RegisterYourself ();  Register the matrix in the current manager, which will become the owner. ;  ; void SetDefaultName ();  If no name was supplied in the ctor, the type of transformation is checked. ;  ; void SetShared (Bool_t flag=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:7759,Modifiability,inherit,inherited,7759,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:8852,Modifiability,inherit,inheritance,8852,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:10851,Modifiability,inherit,inherits,10851,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:10968,Modifiability,inherit,inherits,10968,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:14583,Modifiability,inherit,inherited,14583,"eamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fRotat",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:14863,Modifiability,inherit,inherited,14863,"ssue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fRotationMatrix [9];  ; Double_t fScale [3];  ; Double_t fTranslation [3];  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL <",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:15073,Modifiability,inherit,inherited,15073,"ssue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fRotationMatrix [9];  ; Double_t fScale [3];  ; Double_t fTranslation [3];  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL <",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:15710,Modifiability,inherit,inherited,15710,"ersion ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fRotationMatrix [9];  ; Double_t fScale [3];  ; Double_t fTranslation [3];  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from T",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:16331,Modifiability,inherit,inherited,16331,"DtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fRotationMatrix [9];  ; Double_t fScale [3];  ; Double_t fTranslation [3];  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited fro",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:16972,Modifiability,inherit,inherited,16972,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoHMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoHMatrix() [1/4]. TGeoHMatrix::TGeoHMatrix ; (; ). dummy ctor ; Definition at line 2384 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [2/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoHMatrix & ; other). inline . Definition at line 466 of file TGeoMatrix.h. ◆ TGeoHMatrix() [3/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoMatrix & ; matrix). assignment ; Definition at line 2404 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [4/4]. TGeoHMatrix::TGeoHMatrix ; (; const char * ; name). constructor ; Defini",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:17071,Modifiability,inherit,inherited,17071,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoHMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoHMatrix() [1/4]. TGeoHMatrix::TGeoHMatrix ; (; ). dummy ctor ; Definition at line 2384 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [2/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoHMatrix & ; other). inline . Definition at line 466 of file TGeoMatrix.h. ◆ TGeoHMatrix() [3/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoMatrix & ; matrix). assignment ; Definition at line 2404 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [4/4]. TGeoHMatrix::TGeoHMatrix ; (; const char * ; name). constructor ; Defini",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:17188,Modifiability,inherit,inherited,17188,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoHMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoHMatrix() [1/4]. TGeoHMatrix::TGeoHMatrix ; (; ). dummy ctor ; Definition at line 2384 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [2/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoHMatrix & ; other). inline . Definition at line 466 of file TGeoMatrix.h. ◆ TGeoHMatrix() [3/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoMatrix & ; matrix). assignment ; Definition at line 2404 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [4/4]. TGeoHMatrix::TGeoHMatrix ; (; const char * ; name). constructor ; Defini",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:17393,Modifiability,inherit,inherited,17393,"Deleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoHMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoHMatrix() [1/4]. TGeoHMatrix::TGeoHMatrix ; (; ). dummy ctor ; Definition at line 2384 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [2/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoHMatrix & ; other). inline . Definition at line 466 of file TGeoMatrix.h. ◆ TGeoHMatrix() [3/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoMatrix & ; matrix). assignment ; Definition at line 2404 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [4/4]. TGeoHMatrix::TGeoHMatrix ; (; const char * ; name). constructor ; Definition at line 2394 of file TGeoMatrix.cxx. ◆ ~TGeoHMatrix(). TGeoHMatrix::~TGeoHMatrix ; (; ). override . destructor ; Definition at line 2422 of file TGeoMatrix.cxx. Member Function Documentation. ◆ Class(). static TClass * TGeoHMatrix::Class ; (; ). s",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:6887,Security,hash,hash,6887," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:906,Usability,clear,clear,906,". ROOT: TGeoHMatrix Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TGeoHMatrix Class ReferenceThe Geometry Package » Geometry classes. ; Matrix class used for computing global transformations Should NOT be used for node definition. ; An instance of this class is generally used to pile-up local transformations starting from the top level physical node, down to the current node. ; Definition at line 458 of file TGeoMatrix.h. Public Member Functions;  TGeoHMatrix ();  dummy ctor ;  ;  TGeoHMatrix (const char *name);  constructor ;  ;  TGeoHMatrix (const TGeoHMatrix &other);  ;  TGeoHMatrix (const TGeoMatrix &matrix);  assignment ;  ;  ~TGeoHMatrix () override;  destructor ;  ; void Clear (Option_t *option="""") override;  clear the data for this matrix ;  ; void CopyFrom (const TGeoMatrix *other);  Fast copy method. ;  ; Double_t Determinant () const;  computes determinant of the rotation matrix ;  ; void FastRotZ (const Double_t *sincos);  Perform a rotation about Z having the sine/cosine of the rotation angle. ;  ; virtual Double_t * GetRotationMatrix ();  ; const Double_t * GetRotationMatrix () const override;  ; virtual Double_t * GetScale ();  ; const Double_t * GetScale () const override;  ; virtual Double_t * GetTranslation ();  ; const Double_t * GetTranslation () const override;  ; TGeoHMatrix Inverse () const override;  Return a temporary inverse of this. ;  ; TClass * IsA () const override;  ; TGeoMatrix * MakeClone () const override;  Make a clone of this matrix. ;  ; void Multiply (const TGeoMatrix &right);  ; void Multiply (const TGeoMatrix *right);  multiply to the right with an other transformation if right is identity matrix, just return ;  ; void MultiplyLeft (const TGeoMatrix &left);  ; void MultiplyLeft (const TGeoMatrix *left);  multiply to the left with an other transformati",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHMatrix.html:18814,Usability,clear,clear,18814," other). inline . Definition at line 466 of file TGeoMatrix.h. ◆ TGeoHMatrix() [3/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoMatrix & ; matrix). assignment ; Definition at line 2404 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [4/4]. TGeoHMatrix::TGeoHMatrix ; (; const char * ; name). constructor ; Definition at line 2394 of file TGeoMatrix.cxx. ◆ ~TGeoHMatrix(). TGeoHMatrix::~TGeoHMatrix ; (; ). override . destructor ; Definition at line 2422 of file TGeoMatrix.cxx. Member Function Documentation. ◆ Class(). static TClass * TGeoHMatrix::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoHMatrix::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoHMatrix::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 534 of file TGeoMatrix.h. ◆ Clear(). void TGeoHMatrix::Clear ; (; Option_t * ; option = """"). overridevirtual . clear the data for this matrix ; Reimplemented from TObject.; Definition at line 2512 of file TGeoMatrix.cxx. ◆ CopyFrom(). void TGeoHMatrix::CopyFrom ; (; const TGeoMatrix * ; other). Fast copy method. ; Definition at line 2500 of file TGeoMatrix.cxx. ◆ DeclFileName(). static const char * TGeoHMatrix::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 534 of file TGeoMatrix.h. ◆ Determinant(). Double_t TGeoHMatrix::Determinant ; (; ); const. computes determinant of the rotation matrix ; Definition at line 2590 of file TGeoMatrix.cxx. ◆ FastRotZ(). void TGeoHMatrix::FastRotZ ; (; const Double_t * ; sincos). Perform a rotation about Z having the sine/cosine of the rotation angle. ; Definition at line 2537 of file TGeoMatrix.cxx. ◆ GetRotationMatrix() [1/2]. virtual Double_t * TGeoHMatrix::GetRotationMatrix ; (; ). inlinevirtual . Definition at line 532 of file TGeoMatrix.h. ◆ GetRotationMatrix() [2/2]. const Double_t * TGeoHMatrix::GetRotationMatrix ; (;",MatchSource.WIKI,doc/master/classTGeoHMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html
https://root.cern/doc/master/classTGeoHype.html:12933,Availability,error,error,12933,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:13022,Availability,error,error,13022,"t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:13177,Availability,error,error,13177,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:13354,Availability,error,error,13354,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:17187,Availability,error,error,17187,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoTube; static Double_t Capacity (Double_t rmin, Double_t rmax, Double_t dz);  ; static TClass * Cl",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:20047,Availability,error,error,20047,"atic Double_t Capacity (Double_t rmin, Double_t rmax, Double_t dz);  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void ComputeNormalS (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t rmin, Double_t rmax, Double_t dz);  ; static const char * DeclFileName ();  ; static Double_t DistFromInsideS (const Double_t *point, const Double_t *dir, Double_t rmin, Double_t rmax, Double_t dz);  ; static Double_t DistFromOutsideS (const Double_t *point, const Double_t *dir, Double_t rmin, Double_t rmax, Double_t dz);  ; static void DistToTube (Double_t rsq, Double_t nsq, Double_t rdotn, Double_t radius, Double_t &b, Double_t &delta);  ; static Double_t SafetyS (const Double_t *point, Bool_t in, Double_t rmin, Double_t rmax, Double_t dz, Int_t skipz=0);  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:20494,Availability,error,error,20494,"_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static Double_t EpsMch ();  static function returning the machine round-off error ;  ; static TGeoMatrix * GetTransform ();  Returns current transformation matrix that applies to shape. ;  ; static Bool_t IsCloseToPhi (Double_t epsil, const Double_t *point, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  True if point is closer than epsil to one of the phi planes defined by c1,s1 or c2,s2. ;  ; static Bool_t IsCrossingSemiplane (const Double_t *point, const Double_t *dir, Double_t cphi, Double_t sphi, Double_t &snext, Double_t &rxy);  Compute distance from POINT to semiplane defined by PHI angle along DIR. ;  ; static Bool_t IsInPhiRange (const Double_t *point, Double_t phi1, Double_t phi2);  Static method to check if a point is in the phi range (phi1, phi2) [degrees]. ;  ; static Bool_t IsSameWithinTolerance (Double_t a, Double_t b);  Check if two numbers differ with less than a tolerance. ;  ; static Bool_t IsSegCrossing (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t x3, Double_t y3, Double_t x4, Double_t y4);  Check if segments (A,B) and (C,D) are cr",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:21317,Availability,toler,tolerance,21317,"Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static Double_t EpsMch ();  static function returning the machine round-off error ;  ; static TGeoMatrix * GetTransform ();  Returns current transformation matrix that applies to shape. ;  ; static Bool_t IsCloseToPhi (Double_t epsil, const Double_t *point, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  True if point is closer than epsil to one of the phi planes defined by c1,s1 or c2,s2. ;  ; static Bool_t IsCrossingSemiplane (const Double_t *point, const Double_t *dir, Double_t cphi, Double_t sphi, Double_t &snext, Double_t &rxy);  Compute distance from POINT to semiplane defined by PHI angle along DIR. ;  ; static Bool_t IsInPhiRange (const Double_t *point, Double_t phi1, Double_t phi2);  Static method to check if a point is in the phi range (phi1, phi2) [degrees]. ;  ; static Bool_t IsSameWithinTolerance (Double_t a, Double_t b);  Check if two numbers differ with less than a tolerance. ;  ; static Bool_t IsSegCrossing (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t x3, Double_t y3, Double_t x4, Double_t y4);  Check if segments (A,B) and (C,D) are crossing, where: A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ;",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:474,Integrability,rout,rout,474,". ROOT: TGeoHype Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TGeoHype Class Reference. . Definition at line 17 of file TGeoHype.h. Public Member Functions;  TGeoHype ();  ;  TGeoHype (const char *name, Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz);  ;  TGeoHype (Double_t *params);  ;  TGeoHype (Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz);  ;  ~TGeoHype () override;  ; Double_t Capacity () const override;  ; void ComputeBBox () override;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Int_t DistToHype (const Double_t *point, const Double_t *dir, Double_t *s, Bool_t inner, Bool_t in) const;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:595,Integrability,rout,rout,595,". ROOT: TGeoHype Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TGeoHype Class Reference. . Definition at line 17 of file TGeoHype.h. Public Member Functions;  TGeoHype ();  ;  TGeoHype (const char *name, Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz);  ;  TGeoHype (Double_t *params);  ;  TGeoHype (Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz);  ;  ~TGeoHype () override;  ; Double_t Capacity () const override;  ; void ComputeBBox () override;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Int_t DistToHype (const Double_t *point, const Double_t *dir, Double_t *s, Bool_t inner, Bool_t in) const;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:3492,Integrability,rout,rout,3492,"rride;  ; Bool_t GetPointsOnSegments (Int_t, Double_t *) const override;  ; Double_t GetStIn () const;  ; Double_t GetStOut () const;  ; Bool_t HasInner () const;  ; void InspectShape () const override;  ; TClass * IsA () const override;  ; Bool_t IsCylType () const override;  ; TBuffer3D * MakeBuffer3D () const override;  ; Double_t RadiusHypeSq (Double_t z, Bool_t inner) const;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  ; void Safety_v (const Double_t *points, const Bool_t *inside, Double_t *safe, Int_t vecsize) const override;  ; Double_t SafetyToHype (const Double_t *point, Bool_t inner, Bool_t in) const;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDimensions (Double_t *param) override;  ; void SetHypeDimensions (Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz);  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buff) const override;  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t ZHypeSq (Double_t r, Bool_t inner) const;  ;  Public Member Functions inherited from TGeoTube;  TGeoTube ();  ;  TGeoTube (const char *name, Double_t rmin, Double_t rmax, Double_t dz);  ;  TGeoTube (Double_t *params);  ;  TGeoTube (Double_t rmin, Double_t rmax, Double_t dz);  ;  ~TGeoTube () override;  ; Double_t Capacity () const override;  ; void ComputeBBox () override;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:12939,Integrability,message,message,12939,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:13360,Integrability,message,message,13360,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:14350,Integrability,message,message,14350,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:17193,Integrability,message,message,17193,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoTube; static Double_t Capacity (Double_t rmin, Double_t rmax, Double_t dz);  ; static TClass * Cl",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:17566,Integrability,message,message,17566,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoTube; static Double_t Capacity (Double_t rmin, Double_t rmax, Double_t dz);  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void ComputeNormalS (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t rmin, Double_t rmax, Double_t dz);  ; static const char * DeclFileName ();  ; static Double_t DistFromInsideS (const Double_t *point, const Double_t *dir, Double_t rmin, Double_t rm",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:27173,Integrability,rout,rout,27173,"rame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHype.h>. Inheritance diagram for TGeoHype:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoHype() [1/5]. TGeoHype::TGeoHype ; (; const TGeoHype & ; ). privatedelete . ◆ TGeoHype() [2/5]. TGeoHype::TGeoHype ; (; ). ◆ TGeoHype() [3/5]. TGeoHype::TGeoHype ; (; Double_t ; rin, . Double_t ; stin, . Double_t ; rout, . Double_t ; stout, . Double_t ; dz . ). ◆ TGeoHype() [4/5]. TGeoHype::TGeoHype ; (; const char * ; name, . Double_t ; rin, . Double_t ; stin, . Double_t ; rout, . Double_t ; stout, . Double_t ; dz . ). ◆ TGeoHype() [5/5]. TGeoHype::TGeoHype ; (; Double_t * ; params). ◆ ~TGeoHype(). TGeoHype::~TGeoHype ; (; ). override . Member Function Documentation. ◆ Capacity(). Double_t TGeoHype::Capacity ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Class(). static TClass * TGeoHype::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoHype::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoHype::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 92 of file TGeoHype.h. ◆ ComputeBBox(). void TGeoHype::ComputeBBox ; (; ). overridevirtual . Reimplemented from TGeoBBox. ◆ ComputeNormal(). void TGeoHype::ComputeNormal ; (; const D",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:27335,Integrability,rout,rout,27335,"eoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHype.h>. Inheritance diagram for TGeoHype:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoHype() [1/5]. TGeoHype::TGeoHype ; (; const TGeoHype & ; ). privatedelete . ◆ TGeoHype() [2/5]. TGeoHype::TGeoHype ; (; ). ◆ TGeoHype() [3/5]. TGeoHype::TGeoHype ; (; Double_t ; rin, . Double_t ; stin, . Double_t ; rout, . Double_t ; stout, . Double_t ; dz . ). ◆ TGeoHype() [4/5]. TGeoHype::TGeoHype ; (; const char * ; name, . Double_t ; rin, . Double_t ; stin, . Double_t ; rout, . Double_t ; stout, . Double_t ; dz . ). ◆ TGeoHype() [5/5]. TGeoHype::TGeoHype ; (; Double_t * ; params). ◆ ~TGeoHype(). TGeoHype::~TGeoHype ; (; ). override . Member Function Documentation. ◆ Capacity(). Double_t TGeoHype::Capacity ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Class(). static TClass * TGeoHype::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoHype::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoHype::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 92 of file TGeoHype.h. ◆ ComputeBBox(). void TGeoHype::ComputeBBox ; (; ). overridevirtual . Reimplemented from TGeoBBox. ◆ ComputeNormal(). void TGeoHype::ComputeNormal ; (; const Double_t * ; point, . const Double_t * ; dir, . Double_t * ; norm . ). overridevirtual . Reimplemented from TGeoBBox. ◆ ComputeNormal_v(). void TGeoHype::ComputeNo",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:34009,Integrability,rout,rout,34009,"(). Double_t TGeoHype::RadiusHypeSq ; (; Double_t ; z, . Bool_t ; inner . ); const. ◆ Safety(). Double_t TGeoHype::Safety ; (; const Double_t * ; point, . Bool_t ; in = kTRUE . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Safety_v(). void TGeoHype::Safety_v ; (; const Double_t * ; points, . const Bool_t * ; inside, . Double_t * ; safe, . Int_t ; vecsize . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SafetyToHype(). Double_t TGeoHype::SafetyToHype ; (; const Double_t * ; point, . Bool_t ; inner, . Bool_t ; in . ); const. ◆ SavePrimitive(). void TGeoHype::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented from TGeoBBox. ◆ SetDimensions(). void TGeoHype::SetDimensions ; (; Double_t * ; param). overridevirtual . Reimplemented from TGeoBBox. ◆ SetHypeDimensions(). void TGeoHype::SetHypeDimensions ; (; Double_t ; rin, . Double_t ; stin, . Double_t ; rout, . Double_t ; stout, . Double_t ; dz . ). ◆ SetPoints() [1/2]. void TGeoHype::SetPoints ; (; Double_t * ; points); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SetPoints() [2/2]. void TGeoHype::SetPoints ; (; Float_t * ; points); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SetSegsAndPols(). void TGeoHype::SetSegsAndPols ; (; TBuffer3D & ; buff); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Sizeof3D(). void TGeoHype::Sizeof3D ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Streamer(). void TGeoHype::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGeoBBox. ◆ StreamerNVirtual(). void TGeoHype::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 92 of file TGeoHype.h. ◆ ZHypeSq(). Double_t TGeoHype::ZHypeSq ; (; Double_t ; r, . Bool_t ; inner . ); const. Member Data Documentation. ◆ fStIn. Double_t TGeoHype::fStIn. protected . Definiti",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:3950,Modifiability,inherit,inherited,3950,"td::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDimensions (Double_t *param) override;  ; void SetHypeDimensions (Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz);  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buff) const override;  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t ZHypeSq (Double_t r, Bool_t inner) const;  ;  Public Member Functions inherited from TGeoTube;  TGeoTube ();  ;  TGeoTube (const char *name, Double_t rmin, Double_t rmax, Double_t dz);  ;  TGeoTube (Double_t *params);  ;  TGeoTube (Double_t rmin, Double_t rmax, Double_t dz);  ;  ~TGeoTube () override;  ; Double_t Capacity () const override;  ; void ComputeBBox () override;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:7262,Modifiability,inherit,inherited,7262,"s (Double_t *param) override;  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buff) const override;  ; void SetTubeDimensions (Double_t rmin, Double_t rmax, Double_t dz);  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  TGeoBBox (Double_t *param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThreadData () const;  ; virtual void CreateThreadData (Int_t);  ; void Draw (Option_t *option="""") ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:8359,Modifiability,inherit,inherited,8359,"s (Double_t *param) override;  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buff) const override;  ; void SetTubeDimensions (Double_t rmin, Double_t rmax, Double_t dz);  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  TGeoBBox (Double_t *param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThreadData () const;  ; virtual void CreateThreadData (Int_t);  ; void Draw (Option_t *option="""") ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:9934,Modifiability,inherit,inherited,9934,"n this shape. ;  ; Int_t GetId () const;  ; const char * GetName () const override;  Get the shape name. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; void InvertShapeBit (UInt_t f);  ; virtual Bool_t IsAssembly () const;  ; virtual Bool_t IsComposite () const;  ; virtual Bool_t IsReflected () const;  ; Bool_t IsRunTimeShape () const;  ; Bool_t IsValid () const;  ; virtual Bool_t IsVecGeom () const;  ; void Paint (Option_t *option="""") override;  Paint this shape. ;  ; void ResetShapeBit (UInt_t f);  ; void SetId (Int_t id);  ; void SetRuntime (Bool_t flag=kTRUE);  ; void SetShapeBit (UInt_t f);  ; void SetShapeBit (UInt_t f, Bool_t set);  Equivalent of TObject::SetBit. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numpoints, Int_t px, Int_t py) const;  Returns distance to shape primitive mesh. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestShapeBit (UInt_t f) const;  ; Int_t TestShapeBits (UInt_t f) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:11674,Modifiability,inherit,inherited,11674,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * Dra",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:12569,Modifiability,inherit,inheritance,12569,"ject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:14448,Modifiability,inherit,inherits,14448,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:14565,Modifiability,inherit,inherits,14565,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:18067,Modifiability,inherit,inherited,18067,,MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:18976,Modifiability,inherit,inherited,18976,"ersion ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoTube; static Double_t Capacity (Double_t rmin, Double_t rmax, Double_t dz);  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void ComputeNormalS (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t rmin, Double_t rmax, Double_t dz);  ; static const char * DeclFileName ();  ; static Double_t DistFromInsideS (const Double_t *point, const Double_t *dir, Double_t rmin, Double_t rmax, Double_t dz);  ; static Double_t DistFromOutsideS (const Double_t *point, const Double_t *dir, Double_t rmin, Double_t rmax, Double_t dz);  ; static void DistToTube (Double_t rsq, Double_t nsq, Double_t rdotn, Double_t radius, Double_t &b, Double_t &delta);  ; static Double_t SafetyS (const Double_t *point, Bool_t in, Double_t rmin, Double_t rmax, Double_t dz, Int_t skipz=0);  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Doubl",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:19801,Modifiability,inherit,inherited,19801,"atic Double_t Capacity (Double_t rmin, Double_t rmax, Double_t dz);  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void ComputeNormalS (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t rmin, Double_t rmax, Double_t dz);  ; static const char * DeclFileName ();  ; static Double_t DistFromInsideS (const Double_t *point, const Double_t *dir, Double_t rmin, Double_t rmax, Double_t dz);  ; static Double_t DistFromOutsideS (const Double_t *point, const Double_t *dir, Double_t rmin, Double_t rmax, Double_t dz);  ; static void DistToTube (Double_t rsq, Double_t nsq, Double_t rdotn, Double_t radius, Double_t &b, Double_t &delta);  ; static Double_t SafetyS (const Double_t *point, Bool_t in, Double_t rmin, Double_t rmax, Double_t dz, Int_t skipz=0);  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:22331,Modifiability,inherit,inherited,22331,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fStIn;  ; Double_t fStOut;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoHype (",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:22541,Modifiability,inherit,inherited,22541,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fStIn;  ; Double_t fStOut;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoHype (",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:23110,Modifiability,inherit,inherited,23110,"shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fStIn;  ; Double_t fStOut;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoHype (const TGeoHype &)=delete;  ; TGeoHype & operator= (const TGeoHype &)=delete;  . Private Attributes; Double_t fTin;  ; Double_t fTinsq;  ; Double_t fTout;  ; Double_t fToutsq;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 1",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:23212,Modifiability,inherit,inherited,23212,"shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fStIn;  ; Double_t fStOut;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoHype (const TGeoHype &)=delete;  ; TGeoHype & operator= (const TGeoHype &)=delete;  . Private Attributes; Double_t fTin;  ; Double_t fTinsq;  ; Double_t fTout;  ; Double_t fToutsq;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 1",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:23335,Modifiability,inherit,inherited,23335,"shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fStIn;  ; Double_t fStOut;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoHype (const TGeoHype &)=delete;  ; TGeoHype & operator= (const TGeoHype &)=delete;  . Private Attributes; Double_t fTin;  ; Double_t fTinsq;  ; Double_t fTout;  ; Double_t fToutsq;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 1",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:23424,Modifiability,inherit,inherited,23424,"shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fStIn;  ; Double_t fStOut;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoHype (const TGeoHype &)=delete;  ; TGeoHype & operator= (const TGeoHype &)=delete;  . Private Attributes; Double_t fTin;  ; Double_t fTinsq;  ; Double_t fTout;  ; Double_t fToutsq;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 1",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:23743,Modifiability,inherit,inherited,23743,"igin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoHype (const TGeoHype &)=delete;  ; TGeoHype & operator= (const TGeoHype &)=delete;  . Private Attributes; Double_t fTin;  ; Double_t fTinsq;  ; Double_t fTout;  ; Double_t fToutsq;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:24923,Modifiability,inherit,inherited,24923,"kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (co",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:25566,Modifiability,inherit,inherited,25566," kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHype.h>. Inheritance diagram for TGeoHype:. This browser is not able to show SVG: try Firefox",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:25717,Modifiability,inherit,inherited,25717," kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHype.h>. Inheritance diagram for TGeoHype:. This browser is not able to show SVG: try Firefox",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:25816,Modifiability,inherit,inherited,25816," kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHype.h>. Inheritance diagram for TGeoHype:. This browser is not able to show SVG: try Firefox",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:25960,Modifiability,inherit,inherited,25960," kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHype.h>. Inheritance diagram for TGeoHype:. This browser is not able to show SVG: try Firefox",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:26315,Modifiability,inherit,inherited,26315," (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHype.h>. Inheritance diagram for TGeoHype:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoHype() [1/5]. TGeoHype::TGeoHype ; (; const TGeoHype & ; ). privatedelete . ◆ TGeoHype() [2/5]. TGeoHype::TGeoHype ; (; ). ◆ TGeoHype() [3/5]. TGeoHype::TGeoHype ; (; Double_t ; rin, . Double_t ; stin, . Double_t ; rout, . Double_t ; stout, . Double_t ; dz . ). ◆ TGeoHype() [4/5]. TGeoHype::TGeoHype ; (; const char * ; name, . Double_t ; rin, . Double_t ",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:26575,Modifiability,inherit,inherited,26575,"es inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHype.h>. Inheritance diagram for TGeoHype:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoHype() [1/5]. TGeoHype::TGeoHype ; (; const TGeoHype & ; ). privatedelete . ◆ TGeoHype() [2/5]. TGeoHype::TGeoHype ; (; ). ◆ TGeoHype() [3/5]. TGeoHype::TGeoHype ; (; Double_t ; rin, . Double_t ; stin, . Double_t ; rout, . Double_t ; stout, . Double_t ; dz . ). ◆ TGeoHype() [4/5]. TGeoHype::TGeoHype ; (; const char * ; name, . Double_t ; rin, . Double_t ; stin, . Double_t ; rout, . Double_t ; stout, . Double_t ; dz . ). ◆ TGeoHype() [5/5]. TGeoHype::TGeoHype ; (; Double_t * ; params). ◆ ~TGeoHype(). TGeoHype::~TGeoHype ; (; ). override . Member Function Documentation. ◆ Capacity(). Double_t TGeoHype",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:1330,Safety,safe,safe,1330,"t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Int_t DistToHype (const Double_t *point, const Double_t *dir, Double_t *s, Bool_t inner, Bool_t in) const;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Int_t GetByteCount () const override;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t, Double_t *) const override;  ; Double_t GetStIn () const;  ; Double_t GetStOut () const;  ; Bool_t HasInner () const;  ; void InspectSh",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:1625,Safety,safe,safe,1625,"t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Int_t DistToHype (const Double_t *point, const Double_t *dir, Double_t *s, Bool_t inner, Bool_t in) const;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Int_t GetByteCount () const override;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t, Double_t *) const override;  ; Double_t GetStIn () const;  ; Double_t GetStOut () const;  ; Bool_t HasInner () const;  ; void InspectSh",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:2292,Safety,avoid,avoid,2292,"t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Int_t DistToHype (const Double_t *point, const Double_t *dir, Double_t *s, Bool_t inner, Bool_t in) const;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Int_t GetByteCount () const override;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t, Double_t *) const override;  ; Double_t GetStIn () const;  ; Double_t GetStOut () const;  ; Bool_t HasInner () const;  ; void InspectSh",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:3120,Safety,safe,safe,3120,"r, Double_t *s, Bool_t inner, Bool_t in) const;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Int_t GetByteCount () const override;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t, Double_t *) const override;  ; Double_t GetStIn () const;  ; Double_t GetStOut () const;  ; Bool_t HasInner () const;  ; void InspectShape () const override;  ; TClass * IsA () const override;  ; Bool_t IsCylType () const override;  ; TBuffer3D * MakeBuffer3D () const override;  ; Double_t RadiusHypeSq (Double_t z, Bool_t inner) const;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  ; void Safety_v (const Double_t *points, const Bool_t *inside, Double_t *safe, Int_t vecsize) const override;  ; Double_t SafetyToHype (const Double_t *point, Bool_t inner, Bool_t in) const;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDimensions (Double_t *param) override;  ; void SetHypeDimensions (Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz);  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buff) const override;  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_Streamer",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:4855,Safety,safe,safe,4855,"mputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; const char * GetAxisName (Int_t iaxis) const override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Int_t GetByteCount () const override;  ; virtual Double_t GetDz () const;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t npoints, Double_t *array) const override;  ; virtual Double_t GetRmax () const;  ; virtual Double_t GetRmin () const;  ; Bool_",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:5150,Safety,safe,safe,5150,"mputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; const char * GetAxisName (Int_t iaxis) const override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Int_t GetByteCount () const override;  ; virtual Double_t GetDz () const;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t npoints, Double_t *array) const override;  ; virtual Double_t GetRmax () const;  ; virtual Double_t GetRmin () const;  ; Bool_",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:5765,Safety,avoid,avoid,5765,"mputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; const char * GetAxisName (Int_t iaxis) const override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Int_t GetByteCount () const override;  ; virtual Double_t GetDz () const;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t npoints, Double_t *array) const override;  ; virtual Double_t GetRmax () const;  ; virtual Double_t GetRmin () const;  ; Bool_",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:6597,Safety,safe,safe,6597,"le_t *step) const override;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; const char * GetAxisName (Int_t iaxis) const override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Int_t GetByteCount () const override;  ; virtual Double_t GetDz () const;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t npoints, Double_t *array) const override;  ; virtual Double_t GetRmax () const;  ; virtual Double_t GetRmin () const;  ; Bool_t HasRmin () const;  ; void InspectShape () const override;  ; TClass * IsA () const override;  ; Bool_t IsCylType () const override;  ; TBuffer3D * MakeBuffer3D () const override;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  ; void Safety_v (const Double_t *points, const Bool_t *inside, Double_t *safe, Int_t vecsize) const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDimensions (Double_t *param) override;  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buff) const override;  ; void SetTubeDimensions (Double_t rmin, Double_t rmax, Double_t dz);  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  T",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:21874,Safety,safe,safety,21874," ;  ; static Bool_t IsCrossingSemiplane (const Double_t *point, const Double_t *dir, Double_t cphi, Double_t sphi, Double_t &snext, Double_t &rxy);  Compute distance from POINT to semiplane defined by PHI angle along DIR. ;  ; static Bool_t IsInPhiRange (const Double_t *point, Double_t phi1, Double_t phi2);  Static method to check if a point is in the phi range (phi1, phi2) [degrees]. ;  ; static Bool_t IsSameWithinTolerance (Double_t a, Double_t b);  Check if two numbers differ with less than a tolerance. ;  ; static Bool_t IsSegCrossing (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t x3, Double_t y3, Double_t x4, Double_t y4);  Check if segments (A,B) and (C,D) are crossing, where: A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat (",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:25629,Safety,detect,detection,25629," kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoHype.h>. Inheritance diagram for TGeoHype:. This browser is not able to show SVG: try Firefox",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:29480,Safety,safe,safe,29480,"TGeoBBox. ◆ Contains(). Bool_t TGeoHype::Contains ; (; const Double_t * ; point); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Contains_v(). void TGeoHype::Contains_v ; (; const Double_t * ; points, . Bool_t * ; inside, . Int_t ; vecsize . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DeclFileName(). static const char * TGeoHype::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 92 of file TGeoHype.h. ◆ DistancetoPrimitive(). Int_t TGeoHype::DistancetoPrimitive ; (; Int_t ; px, . Int_t ; py . ). overridevirtual . Computes distance from point (px,py) to the object. ; This member function must be implemented for each graphics primitive. This default function returns a big number (999999). ; Reimplemented from TGeoBBox. ◆ DistFromInside(). Double_t TGeoHype::DistFromInside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromInside_v(). void TGeoHype::DistFromInside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside(). Double_t TGeoHype::DistFromOutside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside_v(). void TGeoHype::DistFromOutside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistToHype(). Int_t TGeoHype::DistToHype ; (; const Double_t * ; point, . const Double_t * ; dir, . Double_t * ; s, . Bool_t ; inner, . Bool_t ; in . ); const. ◆ Divide(). TGeoVolume * TGeoHype::Di",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:29973,Safety,safe,safe,29973,"◆ DistancetoPrimitive(). Int_t TGeoHype::DistancetoPrimitive ; (; Int_t ; px, . Int_t ; py . ). overridevirtual . Computes distance from point (px,py) to the object. ; This member function must be implemented for each graphics primitive. This default function returns a big number (999999). ; Reimplemented from TGeoBBox. ◆ DistFromInside(). Double_t TGeoHype::DistFromInside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromInside_v(). void TGeoHype::DistFromInside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside(). Double_t TGeoHype::DistFromOutside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside_v(). void TGeoHype::DistFromOutside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistToHype(). Int_t TGeoHype::DistToHype ; (; const Double_t * ; point, . const Double_t * ; dir, . Double_t * ; s, . Bool_t ; inner, . Bool_t ; in . ); const. ◆ Divide(). TGeoVolume * TGeoHype::Divide ; (; TGeoVolume * ; voldiv, . const char * ; divname, . Int_t ; iaxis, . Int_t ; ndiv, . Double_t ; start, . Double_t ; step . ). overridevirtual . Reimplemented from TGeoBBox. ◆ GetAxisRange(). Double_t TGeoHype::GetAxisRange ; (; Int_t ; iaxis, . Double_t & ; xlo, . Double_t & ; xhi . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetBoundingCylinder(). void TGeoHype::GetBoundingCylinder ; (; Double_t * ; param); const. overridevirtual . Reimplemented from TGeoBBox. ◆ G",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:31129,Safety,avoid,avoid,31129,"onst Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistToHype(). Int_t TGeoHype::DistToHype ; (; const Double_t * ; point, . const Double_t * ; dir, . Double_t * ; s, . Bool_t ; inner, . Bool_t ; in . ); const. ◆ Divide(). TGeoVolume * TGeoHype::Divide ; (; TGeoVolume * ; voldiv, . const char * ; divname, . Int_t ; iaxis, . Int_t ; ndiv, . Double_t ; start, . Double_t ; step . ). overridevirtual . Reimplemented from TGeoBBox. ◆ GetAxisRange(). Double_t TGeoHype::GetAxisRange ; (; Int_t ; iaxis, . Double_t & ; xlo, . Double_t & ; xhi . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetBoundingCylinder(). void TGeoHype::GetBoundingCylinder ; (; Double_t * ; param); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetBuffer3D(). const TBuffer3D & TGeoHype::GetBuffer3D ; (; Int_t ; reqSections, . Bool_t ; localFrame . ); const. overridevirtual . Stub implementation to avoid forcing implementation at this stage. ; Reimplemented from TGeoBBox. ◆ GetByteCount(). Int_t TGeoHype::GetByteCount ; (; ); const. inlineoverridevirtual . Reimplemented from TGeoBBox.; Definition at line 67 of file TGeoHype.h. ◆ GetMakeRuntimeShape(). TGeoShape * TGeoHype::GetMakeRuntimeShape ; (; TGeoShape * ; mother, . TGeoMatrix * ; mat . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetMeshNumbers(). void TGeoHype::GetMeshNumbers ; (; Int_t & ; nvert, . Int_t & ; nsegs, . Int_t & ; npols . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetNmeshVertices(). Int_t TGeoHype::GetNmeshVertices ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetPointsOnSegments(). Bool_t TGeoHype::GetPointsOnSegments ; (; Int_t ; , . Double_t * ;  . ); const. inlineoverridevirtual . Reimplemented from TGeoBBox.; Definition at line 68 of file TGeoHype.h. ◆ GetStIn(). Double_t TGeoHype::GetStIn ; (; ); const. inline . Definition at line 72 of file TGeoHype.h. ◆ GetStOut(",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:33352,Safety,safe,safe,33352,"ectShape(). void TGeoHype::InspectShape ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ IsA(). TClass * TGeoHype::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGeoBBox.; Definition at line 92 of file TGeoHype.h. ◆ IsCylType(). Bool_t TGeoHype::IsCylType ; (; ); const. inlineoverridevirtual . Reimplemented from TGeoBBox.; Definition at line 78 of file TGeoHype.h. ◆ MakeBuffer3D(). TBuffer3D * TGeoHype::MakeBuffer3D ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ operator=(). TGeoHype & TGeoHype::operator= ; (; const TGeoHype & ; ). privatedelete . ◆ RadiusHypeSq(). Double_t TGeoHype::RadiusHypeSq ; (; Double_t ; z, . Bool_t ; inner . ); const. ◆ Safety(). Double_t TGeoHype::Safety ; (; const Double_t * ; point, . Bool_t ; in = kTRUE . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Safety_v(). void TGeoHype::Safety_v ; (; const Double_t * ; points, . const Bool_t * ; inside, . Double_t * ; safe, . Int_t ; vecsize . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SafetyToHype(). Double_t TGeoHype::SafetyToHype ; (; const Double_t * ; point, . Bool_t ; inner, . Bool_t ; in . ); const. ◆ SavePrimitive(). void TGeoHype::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented from TGeoBBox. ◆ SetDimensions(). void TGeoHype::SetDimensions ; (; Double_t * ; param). overridevirtual . Reimplemented from TGeoBBox. ◆ SetHypeDimensions(). void TGeoHype::SetHypeDimensions ; (; Double_t ; rin, . Double_t ; stin, . Double_t ; rout, . Double_t ; stout, . Double_t ; dz . ). ◆ SetPoints() [1/2]. void TGeoHype::SetPoints ; (; Double_t * ; points); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SetPoints() [2/2]. void TGeoHype::SetPoints ; (; Float_t * ; points); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SetSegsAndPols(). void TGeoHype::SetSe",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:10802,Security,hash,hash,10802," &ClassDef_StreamerNVirtual_b);  ; Bool_t TestShapeBit (UInt_t f) const;  ; Int_t TestShapeBits (UInt_t f) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoHype.html:8585,Testability,test,testNo,8585,"le_t *dir) const override;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThreadData () const;  ; virtual void CreateThreadData (Int_t);  ; void Draw (Option_t *option="""") override;  Draw this shape. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute mouse actions on this shape. ;  ; Int_t GetId () const;  ; const char * GetName () const override;  Get the shape name. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; void InvertShapeBit (UInt_t f);  ; virtual Bool_t IsAssembly () const;  ; virtual Bool_t IsComposite () const;  ; virtual Bool_t IsReflected () const;  ; Bool_t IsRunTimeShape () const;  ; Bool_t IsValid () const;  ; virtual Bool_t IsVecGeom () const;  ; void Paint (Option_t *option="""") override;  Paint this shape. ;  ; void ResetShapeBit (UInt_t f);  ; void SetId (Int_t id);  ; void SetRuntime (Bool_t flag=kTRUE);  ; void SetShapeBit (UInt_t f);  ; void SetShapeBit (UInt_t f, Bool_t se",MatchSource.WIKI,doc/master/classTGeoHype.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoHype.html
https://root.cern/doc/master/classTGeoIdentity.html:7388,Availability,error,error,7388,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:7477,Availability,error,error,7477,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:7632,Availability,error,error,7632,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:7929,Availability,error,error,7929,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:11875,Availability,error,error,11875,"rtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versi",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:7394,Integrability,message,message,7394,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:7935,Integrability,message,message,7935,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:8925,Integrability,message,message,8925,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:11881,Integrability,message,message,11881,"rtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versi",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:12254,Integrability,message,message,12254,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions i",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:2228,Modifiability,inherit,inherited,2228,"rse ;  ; void LocalToMasterVect (const Double_t *local, Double_t *master) const override;  convert a vector by multiplying its column vector (x, y, z, 1) to matrix inverse ;  ; TGeoMatrix * MakeClone () const override;  ; void MasterToLocal (const Double_t *master, Double_t *local) const override;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; void MasterToLocalBomb (const Double_t *master, Double_t *local) const override;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; void MasterToLocalVect (const Double_t *master, Double_t *local) const override;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; void SavePrimitive (std::ostream &, Option_t *="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoMatrix;  TGeoMatrix ();  dummy constructor ;  ;  TGeoMatrix (const char *name);  Constructor. ;  ;  ~TGeoMatrix () override;  Destructor. ;  ; virtual Int_t GetByteCount () const;  Get total size in bytes of this. ;  ; void GetHomogenousMatrix (Double_t *hmat) const;  The homogenous matrix associated with the transformation is used for piling up's and visualization. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; TClass * IsA () const override;  ; Bool_t IsCombi () const;  ; Bool_t IsGeneral () const;  ; Bool_t IsIdentity () const;  ; Bool_t IsOwned () const;  ; Bool_t IsReflection () const;  ; Bool_t IsRegistered () const;  ; Bool_t IsRotAboutZ () const;  Returns true if no rotation or the rotation is about Z axis. ;  ; Bool_t IsRotation () const;  ; Bool_t IsScale () const;  ; Bool_t IsShared () const;  ; Bool_t IsTranslation () const;  ; void Print (Option_t *option="""") const override;  print the matrix in 4x4 format ;  ; virtual vo",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:4191,Modifiability,inherit,inherited,4191,"x4 format ;  ; virtual void ReflectX (Bool_t leftside, Bool_t rotonly=kFALSE);  Multiply by a reflection respect to YZ. ;  ; virtual void ReflectY (Bool_t leftside, Bool_t rotonly=kFALSE);  Multiply by a reflection respect to ZX. ;  ; virtual void ReflectZ (Bool_t leftside, Bool_t rotonly=kFALSE);  Multiply by a reflection respect to XY. ;  ; virtual void RegisterYourself ();  Register the matrix in the current manager, which will become the owner. ;  ; virtual void RotateX (Double_t);  ; virtual void RotateY (Double_t);  ; virtual void RotateZ (Double_t);  ; void SetDefaultName ();  If no name was supplied in the ctor, the type of transformation is checked. ;  ; virtual void SetDx (Double_t);  ; virtual void SetDy (Double_t);  ; virtual void SetDz (Double_t);  ; void SetShared (Bool_t flag=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:5931,Modifiability,inherit,inherited,5931,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:7024,Modifiability,inherit,inheritance,7024,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:9023,Modifiability,inherit,inherits,9023,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:9140,Modifiability,inherit,inherits,9140,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:12755,Modifiability,inherit,inherited,12755,"eamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Publ",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:13035,Modifiability,inherit,inherited,13035,"ssue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotati",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:13245,Modifiability,inherit,inherited,13245,"ssue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotati",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:13775,Modifiability,inherit,inherited,13775,"amed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from T",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:14396,Modifiability,inherit,inherited,14396,"uctor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited fro",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:15037,Modifiability,inherit,inherited,15037,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoIdentity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIdentity() [1/2]. TGeoIdentity::TGeoIdentity ; (; ). dummy ctor ; Definition at line 2344 of file TGeoMatrix.cxx. ◆ TGeoIdentity() [2/2]. TGeoIdentity::TGeoIdentity ; (; const char * ; name). constructor ; Definition at line 2354 of file TGeoMatrix.cxx. ◆ ~TGeoIdentity(). TGeoIdentity::~TGeoIdentity ; (; ). inlineoverride . Definition at line 412 of file TGeoMatrix.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIdentity::Class ; (; ). static . ReturnsTClass descri",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:15136,Modifiability,inherit,inherited,15136,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoIdentity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIdentity() [1/2]. TGeoIdentity::TGeoIdentity ; (; ). dummy ctor ; Definition at line 2344 of file TGeoMatrix.cxx. ◆ TGeoIdentity() [2/2]. TGeoIdentity::TGeoIdentity ; (; const char * ; name). constructor ; Definition at line 2354 of file TGeoMatrix.cxx. ◆ ~TGeoIdentity(). TGeoIdentity::~TGeoIdentity ; (; ). inlineoverride . Definition at line 412 of file TGeoMatrix.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIdentity::Class ; (; ). static . ReturnsTClass descri",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:15253,Modifiability,inherit,inherited,15253,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoIdentity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIdentity() [1/2]. TGeoIdentity::TGeoIdentity ; (; ). dummy ctor ; Definition at line 2344 of file TGeoMatrix.cxx. ◆ TGeoIdentity() [2/2]. TGeoIdentity::TGeoIdentity ; (; const char * ; name). constructor ; Definition at line 2354 of file TGeoMatrix.cxx. ◆ ~TGeoIdentity(). TGeoIdentity::~TGeoIdentity ; (; ). inlineoverride . Definition at line 412 of file TGeoMatrix.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIdentity::Class ; (; ). static . ReturnsTClass descri",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:15458,Modifiability,inherit,inherited,15458,"Deleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoIdentity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIdentity() [1/2]. TGeoIdentity::TGeoIdentity ; (; ). dummy ctor ; Definition at line 2344 of file TGeoMatrix.cxx. ◆ TGeoIdentity() [2/2]. TGeoIdentity::TGeoIdentity ; (; const char * ; name). constructor ; Definition at line 2354 of file TGeoMatrix.cxx. ◆ ~TGeoIdentity(). TGeoIdentity::~TGeoIdentity ; (; ). inlineoverride . Definition at line 412 of file TGeoMatrix.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIdentity::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoIdentity::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoIdentity::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIdentity.html:5059,Security,hash,hash,5059," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoIdentity.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html
https://root.cern/doc/master/classTGeoIntersection.html:5626,Availability,error,error,5626,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:5715,Availability,error,error,5715,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:5870,Availability,error,error,5870,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:6167,Availability,error,error,6167,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:10480,Availability,error,error,10480,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBoolNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:5632,Integrability,message,message,5632,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:6173,Integrability,message,message,6173,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:7375,Integrability,message,message,7375,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:10486,Integrability,message,message,10486,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBoolNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:10859,Integrability,message,message,10859,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBoolNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:2573,Modifiability,inherit,inherited,2573," Double_t *dir, Int_t iact=1, Double_t step=0, Double_t *safe=nullptr) const override;  Compute distance from a given point outside to the shape. ;  ; EGeoBoolType GetBooleanOperator () const override;  ; Int_t GetNpoints () override;  Returns number of vertices for the composite shape described by this intersection. ;  ; TClass * IsA () const override;  ; TGeoBoolNode * MakeClone () const override;  Make a clone of this. Pointers are preserved. ;  ; void Paint (Option_t *option) override;  Paint method. ;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  Compute safety distance for a union node;. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Sizeof3D () const override;  Register 3D size of this shape. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBoolNode;  TGeoBoolNode ();  Default constructor. ;  ;  TGeoBoolNode (const char *expr1, const char *expr2);  Constructor called by TGeoCompositeShape providing 2 subexpressions for the 2 branches. ;  ;  TGeoBoolNode (TGeoShape *left, TGeoShape *right, TGeoMatrix *lmat=nullptr, TGeoMatrix *rmat=nullptr);  Constructor providing left and right shapes and matrices (in the Boolean operation). ;  ;  ~TGeoBoolNode () override;  Destructor. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; TGeoMatrix * GetLeftMatrix () const;  ; TGeoShape * GetLeftShape () const;  ; TGeoMatrix * GetRightMatrix () const;  ; TGeoShape * GetRightShape () const;  ; ThreadData_t & GetThreadData () const;  ; void RegisterMatrices ();  Register all matrices of the boolean node and descendents. ;  ; Bool_t ReplaceMatrix (TGeoMatrix *mat, TGeoMatrix *newmat);  Replace one of the matrices. ;  ; virtual void SetPoin",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:3865,Modifiability,inherit,inherited,3865,"GeoMatrix *lmat=nullptr, TGeoMatrix *rmat=nullptr);  Constructor providing left and right shapes and matrices (in the Boolean operation). ;  ;  ~TGeoBoolNode () override;  Destructor. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; TGeoMatrix * GetLeftMatrix () const;  ; TGeoShape * GetLeftShape () const;  ; TGeoMatrix * GetRightMatrix () const;  ; TGeoShape * GetRightShape () const;  ; ThreadData_t & GetThreadData () const;  ; void RegisterMatrices ();  Register all matrices of the boolean node and descendents. ;  ; Bool_t ReplaceMatrix (TGeoMatrix *mat, TGeoMatrix *newmat);  Replace one of the matrices. ;  ; virtual void SetPoints (Double_t *points) const;  Fill buffer with shape vertices. ;  ; virtual void SetPoints (Float_t *points) const;  Fill buffer with shape vertices. ;  ; void SetSelected (Int_t sel);  Set the selected branch. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:5262,Modifiability,inherit,inheritance,5262,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:7473,Modifiability,inherit,inherits,7473,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:7590,Modifiability,inherit,inherits,7590,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:11360,Modifiability,inherit,inherited,11360,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBoolNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWri",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:11576,Modifiability,inherit,inherited,11576,"m error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBoolNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWri",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:12106,Modifiability,inherit,inherited,12106,"Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBoolNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoEr",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:12226,Modifiability,inherit,inherited,12226,"Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBoolNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoEr",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:12867,Modifiability,inherit,inherited,12867,". ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoIntersection:. This browser is not able to show SVG: try Firefox",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:12966,Modifiability,inherit,inherited,12966,". ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoIntersection:. This browser is not able to show SVG: try Firefox",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:13188,Modifiability,inherit,inherited,13188,"; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoIntersection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIntersection() [1/3]. TGeoIntersection::TGeoIntersection ; (; ). Default constructor. ; Definition at line 1255 of file TGeoBoolNode.cxx. ◆ TGeoIntersection() [2/3]. TGeoIntersection::TGeoIntersection",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:13393,Modifiability,inherit,inherited,13393,"kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoIntersection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIntersection() [1/3]. TGeoIntersection::TGeoIntersection ; (; ). Default constructor. ; Definition at line 1255 of file TGeoBoolNode.cxx. ◆ TGeoIntersection() [2/3]. TGeoIntersection::TGeoIntersection ; (; const char * ; expr1, . const char * ; expr2 . ). Constructor. ; Definition at line 1260 of file TGeoBoolNode.cxx. ◆ TGeoIntersection() [3/3]. TGeoIntersection::TGeoIntersection ; (; TGeoSha",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:1403,Safety,safe,safe,1403,"tersection (const char *expr1, const char *expr2);  Constructor. ;  ;  TGeoIntersection (TGeoShape *left, TGeoShape *right, TGeoMatrix *lmat=nullptr, TGeoMatrix *rmat=nullptr);  Constructor providing pointers to components. ;  ;  ~TGeoIntersection () override;  Destructor — deletion of components handled by TGeoManager class. ;  ; void ComputeBBox (Double_t &dx, Double_t &dy, Double_t &dz, Double_t *origin) override;  Compute bounding box corresponding to a intersection of two shapes. ;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  Normal computation in POINT. The orientation is chosen so that DIR.dot.NORM>0. ;  ; Bool_t Contains (const Double_t *point) const override;  Find if a intersection of two shapes contains a given point. ;  ; Int_t DistanceToPrimitive (Int_t px, Int_t py) override;  Compute minimum distance to shape vertices. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=0, Double_t *safe=nullptr) const override;  Compute distance from a given point inside to the shape boundary. ;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=0, Double_t *safe=nullptr) const override;  Compute distance from a given point outside to the shape. ;  ; EGeoBoolType GetBooleanOperator () const override;  ; Int_t GetNpoints () override;  Returns number of vertices for the composite shape described by this intersection. ;  ; TClass * IsA () const override;  ; TGeoBoolNode * MakeClone () const override;  Make a clone of this. Pointers are preserved. ;  ; void Paint (Option_t *option) override;  Paint method. ;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  Compute safety distance for a union node;. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Sizeof3D () const override;  Register 3D size of this",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:1616,Safety,safe,safe,1616," to components. ;  ;  ~TGeoIntersection () override;  Destructor — deletion of components handled by TGeoManager class. ;  ; void ComputeBBox (Double_t &dx, Double_t &dy, Double_t &dz, Double_t *origin) override;  Compute bounding box corresponding to a intersection of two shapes. ;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  Normal computation in POINT. The orientation is chosen so that DIR.dot.NORM>0. ;  ; Bool_t Contains (const Double_t *point) const override;  Find if a intersection of two shapes contains a given point. ;  ; Int_t DistanceToPrimitive (Int_t px, Int_t py) override;  Compute minimum distance to shape vertices. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=0, Double_t *safe=nullptr) const override;  Compute distance from a given point inside to the shape boundary. ;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=0, Double_t *safe=nullptr) const override;  Compute distance from a given point outside to the shape. ;  ; EGeoBoolType GetBooleanOperator () const override;  ; Int_t GetNpoints () override;  Returns number of vertices for the composite shape described by this intersection. ;  ; TClass * IsA () const override;  ; TGeoBoolNode * MakeClone () const override;  Make a clone of this. Pointers are preserved. ;  ; void Paint (Option_t *option) override;  Paint method. ;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  Compute safety distance for a union node;. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Sizeof3D () const override;  Register 3D size of this shape. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBoolNode; ",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:2156,Safety,safe,safety,2156," intersection of two shapes contains a given point. ;  ; Int_t DistanceToPrimitive (Int_t px, Int_t py) override;  Compute minimum distance to shape vertices. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=0, Double_t *safe=nullptr) const override;  Compute distance from a given point inside to the shape boundary. ;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=0, Double_t *safe=nullptr) const override;  Compute distance from a given point outside to the shape. ;  ; EGeoBoolType GetBooleanOperator () const override;  ; Int_t GetNpoints () override;  Returns number of vertices for the composite shape described by this intersection. ;  ; TClass * IsA () const override;  ; TGeoBoolNode * MakeClone () const override;  Make a clone of this. Pointers are preserved. ;  ; void Paint (Option_t *option) override;  Paint method. ;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  Compute safety distance for a union node;. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Sizeof3D () const override;  Register 3D size of this shape. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBoolNode;  TGeoBoolNode ();  Default constructor. ;  ;  TGeoBoolNode (const char *expr1, const char *expr2);  Constructor called by TGeoCompositeShape providing 2 subexpressions for the 2 branches. ;  ;  TGeoBoolNode (TGeoShape *left, TGeoShape *right, TGeoMatrix *lmat=nullptr, TGeoMatrix *rmat=nullptr);  Constructor providing left and right shapes and matrices (in the Boolean operation). ;  ;  ~TGeoBoolNode () override;  Destructor. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data ",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:16758,Safety,safe,safe,16758," POINT. The orientation is chosen so that DIR.dot.NORM>0. ; Implements TGeoBoolNode.; Definition at line 1398 of file TGeoBoolNode.cxx. ◆ Contains(). Bool_t TGeoIntersection::Contains ; (; const Double_t * ; point); const. overridevirtual . Find if a intersection of two shapes contains a given point. ; Implements TGeoBoolNode.; Definition at line 1449 of file TGeoBoolNode.cxx. ◆ DeclFileName(). static const char * TGeoIntersection::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 166 of file TGeoBoolNode.h. ◆ DistanceToPrimitive(). Int_t TGeoIntersection::DistanceToPrimitive ; (; Int_t ; px, . Int_t ; py . ). overridevirtual . Compute minimum distance to shape vertices. ; Implements TGeoBoolNode.; Definition at line 1464 of file TGeoBoolNode.cxx. ◆ DistFromInside(). Double_t TGeoIntersection::DistFromInside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = 0, . Double_t * ; safe = nullptr . ); const. overridevirtual . Compute distance from a given point inside to the shape boundary. ; Implements TGeoBoolNode.; Definition at line 1472 of file TGeoBoolNode.cxx. ◆ DistFromOutside(). Double_t TGeoIntersection::DistFromOutside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = 0, . Double_t * ; safe = nullptr . ); const. overridevirtual . Compute distance from a given point outside to the shape. ; Implements TGeoBoolNode.; Definition at line 1505 of file TGeoBoolNode.cxx. ◆ GetBooleanOperator(). EGeoBoolType TGeoIntersection::GetBooleanOperator ; (; ); const. inlineoverridevirtual . Implements TGeoBoolNode.; Definition at line 156 of file TGeoBoolNode.h. ◆ GetNpoints(). Int_t TGeoIntersection::GetNpoints ; (; ). overridevirtual . Returns number of vertices for the composite shape described by this intersection. ; Implements TGeoBoolNode.; Definition at line 1599 of file TGeoBoolNode.cxx. ◆ IsA(). TClass * TGeoInters",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:17126,Safety,safe,safe,17126,"olNode.cxx. ◆ DeclFileName(). static const char * TGeoIntersection::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 166 of file TGeoBoolNode.h. ◆ DistanceToPrimitive(). Int_t TGeoIntersection::DistanceToPrimitive ; (; Int_t ; px, . Int_t ; py . ). overridevirtual . Compute minimum distance to shape vertices. ; Implements TGeoBoolNode.; Definition at line 1464 of file TGeoBoolNode.cxx. ◆ DistFromInside(). Double_t TGeoIntersection::DistFromInside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = 0, . Double_t * ; safe = nullptr . ); const. overridevirtual . Compute distance from a given point inside to the shape boundary. ; Implements TGeoBoolNode.; Definition at line 1472 of file TGeoBoolNode.cxx. ◆ DistFromOutside(). Double_t TGeoIntersection::DistFromOutside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = 0, . Double_t * ; safe = nullptr . ); const. overridevirtual . Compute distance from a given point outside to the shape. ; Implements TGeoBoolNode.; Definition at line 1505 of file TGeoBoolNode.cxx. ◆ GetBooleanOperator(). EGeoBoolType TGeoIntersection::GetBooleanOperator ; (; ); const. inlineoverridevirtual . Implements TGeoBoolNode.; Definition at line 156 of file TGeoBoolNode.h. ◆ GetNpoints(). Int_t TGeoIntersection::GetNpoints ; (; ). overridevirtual . Returns number of vertices for the composite shape described by this intersection. ; Implements TGeoBoolNode.; Definition at line 1599 of file TGeoBoolNode.cxx. ◆ IsA(). TClass * TGeoIntersection::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGeoBoolNode.; Definition at line 166 of file TGeoBoolNode.h. ◆ MakeClone(). TGeoBoolNode * TGeoIntersection::MakeClone ; (; ); const. overridevirtual . Make a clone of this. Pointers are preserved. ; Implements TGeoBoolNode.; Definition at line 1230 of fi",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:18470,Safety,safe,safety,18470,"oolNode.h. ◆ GetNpoints(). Int_t TGeoIntersection::GetNpoints ; (; ). overridevirtual . Returns number of vertices for the composite shape described by this intersection. ; Implements TGeoBoolNode.; Definition at line 1599 of file TGeoBoolNode.cxx. ◆ IsA(). TClass * TGeoIntersection::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGeoBoolNode.; Definition at line 166 of file TGeoBoolNode.h. ◆ MakeClone(). TGeoBoolNode * TGeoIntersection::MakeClone ; (; ); const. overridevirtual . Make a clone of this. Pointers are preserved. ; Implements TGeoBoolNode.; Definition at line 1230 of file TGeoBoolNode.cxx. ◆ Paint(). void TGeoIntersection::Paint ; (; Option_t * ; option). overridevirtual . Paint method. ; Reimplemented from TGeoBoolNode.; Definition at line 1238 of file TGeoBoolNode.cxx. ◆ Safety(). Double_t TGeoIntersection::Safety ; (; const Double_t * ; point, . Bool_t ; in = kTRUE . ); const. overridevirtual . Compute safety distance for a union node;. ; Implements TGeoBoolNode.; Definition at line 1641 of file TGeoBoolNode.cxx. ◆ SavePrimitive(). void TGeoIntersection::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented from TGeoBoolNode.; Definition at line 1665 of file TGeoBoolNode.cxx. ◆ Sizeof3D(). void TGeoIntersection::Sizeof3D ; (; ); const. overridevirtual . Register 3D size of this shape. ; Reimplemented from TGeoBoolNode.; Definition at line 1684 of file TGeoBoolNode.cxx. ◆ Streamer(). void TGeoIntersection::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGeoBoolNode. ◆ StreamerNVirtual(). void TGeoIntersection::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 166 of file TGeoBoolNode.h. Libraries for TGeoIntersection:. [legend]; The documentation for this class was generated from the",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:7104,Security,hash,hash,7104," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIntersection.html:13147,Security,access,access,13147,"rited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoIntersection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIntersection() [1/3]. TGeoIntersection::TGeoIntersection ; (; )",MatchSource.WIKI,doc/master/classTGeoIntersection.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html
https://root.cern/doc/master/classTGeoIsotope.html:4057,Availability,error,error,4057,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:4146,Availability,error,error,4146,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:4301,Availability,error,error,4301,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:4598,Availability,error,error,4598,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:8682,Availability,error,error,8682,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoIsotope * FindIsotope (const char *name);  Find existing isotope by name. ;  ;  Static Public Member Functions inherited from TNamed; sta",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:4063,Integrability,message,message,4063,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:4604,Integrability,message,message,4604,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:5594,Integrability,message,message,5594,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:8688,Integrability,message,message,8688,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoIsotope * FindIsotope (const char *name);  Find existing isotope by name. ;  ;  Static Public Member Functions inherited from TNamed; sta",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:9061,Integrability,message,message,9061," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoIsotope * FindIsotope (const char *name);  Find existing isotope by name. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longp",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:860,Modifiability,inherit,inherited,860,". ROOT: TGeoIsotope Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TGeoIsotope Class Reference. . Definition at line 103 of file TGeoElement.h. Public Member Functions;  TGeoIsotope ();  Dummy I/O constructor. ;  ;  TGeoIsotope (const char *name, Int_t z, Int_t n, Double_t a);  Constructor. ;  ;  ~TGeoIsotope () override;  ; Double_t GetA () const;  ; Int_t GetN () const;  ; Int_t GetZ () const;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print this isotope. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print ",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:2600,Modifiability,inherit,inherited,2600,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:3693,Modifiability,inherit,inheritance,3693,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:5692,Modifiability,inherit,inherits,5692,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:5809,Modifiability,inherit,inherits,5809,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:9652,Modifiability,inherit,inherited,9652,"s object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoIsotope * FindIsotope (const char *name);  Find existing isotope by name. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fA;  ; Int_t fN;  ; Int_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObj",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:9862,Modifiability,inherit,inherited,9862,"s object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoIsotope * FindIsotope (const char *name);  Find existing isotope by name. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fA;  ; Int_t fN;  ; Int_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObj",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:10434,Modifiability,inherit,inherited,10434,"r * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoIsotope * FindIsotope (const char *name);  Find existing isotope by name. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fA;  ; Int_t fN;  ; Int_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler ",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:10538,Modifiability,inherit,inherited,10538,"otope by name. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fA;  ; Int_t fN;  ; Int_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoElement.h>. Inheritance diagram for TGeoIsotope:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:11179,Modifiability,inherit,inherited,11179,"n on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fA;  ; Int_t fN;  ; Int_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoElement.h>. Inheritance diagram for TGeoIsotope:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIsotope() [1/2]. TGeoIsotope::TGeoIsotope ; (; ). Dummy I/O constructor. ; Definition at line 336 of file TGeoElement.cxx. ◆ TGeoIsotope() [2/2]. TGeoIsotope::TGeoIsotope ; (; const char * ; name, . Int_t ; z, . Int_t ; n, . Double_t ; a . ). Constructor. ; Definition at line 341 of file TGeoElement.cxx. ◆ ~TGeoIsotope(). TGeoIsotope::~TGeoIsotope ; (; ). inlineoverride . Definition at line 112 of file TGeoElement.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIsotope::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoIsotope::Class_Name ; (; ). static",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:11278,Modifiability,inherit,inherited,11278,"n on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fA;  ; Int_t fN;  ; Int_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoElement.h>. Inheritance diagram for TGeoIsotope:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIsotope() [1/2]. TGeoIsotope::TGeoIsotope ; (; ). Dummy I/O constructor. ; Definition at line 336 of file TGeoElement.cxx. ◆ TGeoIsotope() [2/2]. TGeoIsotope::TGeoIsotope ; (; const char * ; name, . Int_t ; z, . Int_t ; n, . Double_t ; a . ). Constructor. ; Definition at line 341 of file TGeoElement.cxx. ◆ ~TGeoIsotope(). TGeoIsotope::~TGeoIsotope ; (; ). inlineoverride . Definition at line 112 of file TGeoElement.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIsotope::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoIsotope::Class_Name ; (; ). static",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIsotope.html:1728,Security,hash,hash,1728," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoIsotope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:2545,Availability,error,error,2545,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:2634,Availability,error,error,2634,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:2789,Availability,error,error,2789,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:3086,Availability,error,error,3086,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:7650,Availability,error,error,7650," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:2551,Integrability,message,message,2551,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:3092,Integrability,message,message,3092,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:4294,Integrability,message,message,4294,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:7656,Integrability,message,message,7656," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:8029,Integrability,message,message,8029," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:784,Modifiability,inherit,inherited,784,". ROOT: TGeoIteratorPlugin Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGeoIteratorPlugin Class ReferenceabstractThe Geometry Package » Geometry classes. . Definition at line 224 of file TGeoNode.h. Public Member Functions;  TGeoIteratorPlugin ();  ;  ~TGeoIteratorPlugin () override;  ; TClass * IsA () const override;  ; virtual void ProcessNode ()=0;  ; void SetIterator (const TGeoIterator *iter);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Comput",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:2181,Modifiability,inherit,inheritance,2181,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:4392,Modifiability,inherit,inherits,4392,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:4509,Modifiability,inherit,inherits,4509,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:8530,Modifiability,inherit,inherited,8530,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; const TGeoIterator * fIterator = nullptr;  . Private Member Functions;  TGeoIteratorPlugin (const TGeoIteratorPlugin &);  ; TGeoIteratorPlugin & operator= (const TGeoIteratorPlugin &);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL <",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:9270,Modifiability,inherit,inherited,9270,"Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; const TGeoIterator * fIterator = nullptr;  . Private Member Functions;  TGeoIteratorPlugin (const TGeoIteratorPlugin &);  ; TGeoIteratorPlugin & operator= (const TGeoIteratorPlugin &);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoNode.h>. Inheritance diagram for TGeoIteratorPlugin:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Op",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:9911,Modifiability,inherit,inherited,9911," Attributes; const TGeoIterator * fIterator = nullptr;  . Private Member Functions;  TGeoIteratorPlugin (const TGeoIteratorPlugin &);  ; TGeoIteratorPlugin & operator= (const TGeoIteratorPlugin &);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoNode.h>. Inheritance diagram for TGeoIteratorPlugin:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIteratorPlugin() [1/2]. TGeoIteratorPlugin::TGeoIteratorPlugin ; (; const TGeoIteratorPlugin & ; ). private . ◆ TGeoIteratorPlugin() [2/2]. TGeoIteratorPlugin::TGeoIteratorPlugin ; (; ). inline . Definition at line 233 of file TGeoNode.h. ◆ ~TGeoIteratorPlugin(). TGeoIteratorPlugin::~TGeoIteratorPlugin ; (; ). inlineoverride . Definition at line 234 of file TGeoNode.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIteratorPlugin::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoIteratorPlugin::Class_Name ; (; ). static . ReturnsName of this class . ",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:10010,Modifiability,inherit,inherited,10010," Attributes; const TGeoIterator * fIterator = nullptr;  . Private Member Functions;  TGeoIteratorPlugin (const TGeoIteratorPlugin &);  ; TGeoIteratorPlugin & operator= (const TGeoIteratorPlugin &);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoNode.h>. Inheritance diagram for TGeoIteratorPlugin:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIteratorPlugin() [1/2]. TGeoIteratorPlugin::TGeoIteratorPlugin ; (; const TGeoIteratorPlugin & ; ). private . ◆ TGeoIteratorPlugin() [2/2]. TGeoIteratorPlugin::TGeoIteratorPlugin ; (; ). inline . Definition at line 233 of file TGeoNode.h. ◆ ~TGeoIteratorPlugin(). TGeoIteratorPlugin::~TGeoIteratorPlugin ; (; ). inlineoverride . Definition at line 234 of file TGeoNode.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIteratorPlugin::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoIteratorPlugin::Class_Name ; (; ). static . ReturnsName of this class . ",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoIteratorPlugin.html:4023,Security,hash,hash,4023," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoIteratorPlugin.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html
https://root.cern/doc/master/classTGeoManager-members.html:3139,Availability,down,downwards,3139,"_Name()TGeoManagerstatic; Class_Version()TGeoManagerinlinestatic; ClassName() constTObjectvirtual; CleanGarbage()TGeoManager; Clear(Option_t *option="""") overrideTNamedvirtual; ClearAttributes()TGeoManager; ClearNavigators()TGeoManager; ClearOverlaps()TGeoManager; ClearPhysicalNodes(Bool_t mustdelete=kFALSE)TGeoManager; ClearShape(const TGeoShape *shape)TGeoManager; ClearThreadData() constTGeoManager; ClearThreadsMap()TGeoManagerstatic; ClearTracks()TGeoManagerinline; Clone(const char *newname="""") const overrideTNamedvirtual; CloseGeometry(Option_t *option=""d"")TGeoManager; Compare(const TObject *obj) const overrideTNamedvirtual; ConstPropMap_t typedefTGeoManagerprivate; ConvertReflections()TGeoManager; Copy(TObject &named) const overrideTNamedvirtual; CountLevels()TGeoManager; CountNodes(const TGeoVolume *vol=nullptr, Int_t nlevels=10000, Int_t option=0)TGeoManager; CreateParallelWorld(const char *name)TGeoManager; CreateThreadData() constTGeoManager; CrossBoundaryAndLocate(Bool_t downwards, TGeoNode *skipnode)TGeoManager; DeclFileName()TGeoManagerinlinestatic; DefaultAngles()TGeoManager; DefaultColors()TGeoManager; Delete(Option_t *option="""")TObjectvirtual; DisableInactiveVolumes()TGeoManagerinline; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; Division(const char *name, const char *mother, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step, Int_t numed=0, Option_t *option="""")TGeoManager; DoBackupState()TGeoManager; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; DoRestoreState()TGeoManager; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawCurrentPoint(Int_t color=2)TGeoManager; DrawPath(const char *path, Option_t *option="""")TGeoManager; DrawTracks(Option_t *option="""")TGeoManager; Dump() constTObjectvirtual; EDefaultUnits enum nameTGeoManager; EDeprecatedStatusBits enum nameTObject; Edit(Option_t *option="""")TGeoManagervirt",MatchSource.WIKI,doc/master/classTGeoManager-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html
https://root.cern/doc/master/classTGeoManager-members.html:4347,Availability,error,error,4347,"v, Double_t start, Double_t step, Int_t numed=0, Option_t *option="""")TGeoManager; DoBackupState()TGeoManager; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; DoRestoreState()TGeoManager; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawCurrentPoint(Int_t color=2)TGeoManager; DrawPath(const char *path, Option_t *option="""")TGeoManager; DrawTracks(Option_t *option="""")TGeoManager; Dump() constTObjectvirtual; EDefaultUnits enum nameTGeoManager; EDeprecatedStatusBits enum nameTObject; Edit(Option_t *option="""")TGeoManagervirtual; EnableInactiveVolumes()TGeoManagerinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTGeoManagervirtual; Export(const char *filename, const char *name="""", Option_t *option=""vg"")TGeoManagervirtual; fActivityTGeoManagerprivate; fArrayPNETGeoManagermutableprivate; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTGeoManagerprivate; fBorderSurfacesTGeoManagerprivate; fClippingShapeTGeoManagerprivate; fClosedTGeoManagerprivate; fCurrentNavigatorTGeoManagerprivate; fCurrentTrackTGeoManagerprivate; fCurrentVolumeTGeoManagerprivate; fDrawExtraTGeoManagerprivate; fElementTableTGeoManagerprivate; fExplodedViewTGeoManagerprivate; fgDefaultUnitsTGeoManagerprotectedstatic; fGDMLMatricesTGeoManagerprivate; fgDtorOnlyTObjectprivatestatic; fgExportPrecisionTGeoManagerprotectedstatic; fGLMatrixTGeoManagerprivate; fgLockTGeoManagerprotectedstatic; fgLockNavigatorsTGeoManagerprivatestatic; fgMaxDaughtersTGeoManagerprotectedstatic; fgMaxLevelTGeoManagerprotectedstatic; fgMaxXtruVertTGeoManagerprotectedstatic; fgMutexTGeoManagerprotecteds",MatchSource.WIKI,doc/master/classTGeoManager-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html
https://root.cern/doc/master/classTGeoManager-members.html:4428,Availability,error,error,4428,"v, Double_t start, Double_t step, Int_t numed=0, Option_t *option="""")TGeoManager; DoBackupState()TGeoManager; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; DoRestoreState()TGeoManager; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawCurrentPoint(Int_t color=2)TGeoManager; DrawPath(const char *path, Option_t *option="""")TGeoManager; DrawTracks(Option_t *option="""")TGeoManager; Dump() constTObjectvirtual; EDefaultUnits enum nameTGeoManager; EDeprecatedStatusBits enum nameTObject; Edit(Option_t *option="""")TGeoManagervirtual; EnableInactiveVolumes()TGeoManagerinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTGeoManagervirtual; Export(const char *filename, const char *name="""", Option_t *option=""vg"")TGeoManagervirtual; fActivityTGeoManagerprivate; fArrayPNETGeoManagermutableprivate; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTGeoManagerprivate; fBorderSurfacesTGeoManagerprivate; fClippingShapeTGeoManagerprivate; fClosedTGeoManagerprivate; fCurrentNavigatorTGeoManagerprivate; fCurrentTrackTGeoManagerprivate; fCurrentVolumeTGeoManagerprivate; fDrawExtraTGeoManagerprivate; fElementTableTGeoManagerprivate; fExplodedViewTGeoManagerprivate; fgDefaultUnitsTGeoManagerprotectedstatic; fGDMLMatricesTGeoManagerprivate; fgDtorOnlyTObjectprivatestatic; fgExportPrecisionTGeoManagerprotectedstatic; fGLMatrixTGeoManagerprivate; fgLockTGeoManagerprotectedstatic; fgLockNavigatorsTGeoManagerprivatestatic; fgMaxDaughtersTGeoManagerprotectedstatic; fgMaxLevelTGeoManagerprotectedstatic; fgMaxXtruVertTGeoManagerprotectedstatic; fgMutexTGeoManagerprotecteds",MatchSource.WIKI,doc/master/classTGeoManager-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html
https://root.cern/doc/master/classTGeoManager-members.html:12373,Availability,error,error,12373,"ager; GetName() const overrideTNamedinlinevirtual; GetNextNode() constTGeoManagerinline; GetNmany() constTGeoManagerinline; GetNNodes()TGeoManagerinline; GetNode(Int_t level) constTGeoManagerinline; GetNodeId() constTGeoManagerinline; GetNormal() constTGeoManagerinline; GetNproperties() constTGeoManagerinline; GetNregions() constTGeoManagerinline; GetNsegments() constTGeoManager; GetNtracks() constTGeoManagerinline; GetNumThreads()TGeoManagerstatic; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOpticalSurface(const char *name) constTGeoManager; GetOption() constTObjectinlinevirtual; GetPainter() constTGeoManagerinline; GetPaintVolume() constTGeoManagerinline; GetParallelWorld() constTGeoManagerinline; GetParentTrackOfId(Int_t id) constTGeoManager; GetParticleName() constTGeoManagerinline; GetPath() constTGeoManager; GetPdgName(Int_t pdg) constTGeoManager; GetPhysicalNode(Int_t i) constTGeoManagerinline; GetProperty(const char *name, Bool_t *error=nullptr) constTGeoManager; GetProperty(size_t i, TString &name, Bool_t *error=nullptr) constTGeoManager; GetRegion(int i)TGeoManagerinline; GetRTmode() constTGeoManagerinline; GetSafeDistance() constTGeoManagerinline; GetSafeLevel() constTGeoManager; GetSkinSurface(const char *name) constTGeoManager; GetStackLevel() constTGeoManagerinline; GetStep() constTGeoManagerinline; GetTitle() const overrideTNamedinlinevirtual; GetTmax() constTGeoManagerinline; GetTminTmax(Double_t &tmin, Double_t &tmax) constTGeoManager; GetTopNode() constTGeoManagerinline; GetTopVolume() constTGeoManagerinline; GetTrack(Int_t index)TGeoManagerinline; GetTrackIndex(Int_t id) constTGeoManager; GetTrackOfId(Int_t id) constTGeoManager; GetUID(const char *volname) constTGeoManager; GetUniqueID() constTObjectvirtual; GetUserPaintVolume() constTGeoManagerinline; GetVerboseLevel()TGeoManagerstatic; GetVirtualLevel()TGeoManager; GetVisDensity() constTGeoManagerinline; GetVisLevel() constTGeoManager; GetVisOption() c",MatchSource.WIKI,doc/master/classTGeoManager-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html
https://root.cern/doc/master/classTGeoManager-members.html:12451,Availability,error,error,12451,"gerinline; GetNmany() constTGeoManagerinline; GetNNodes()TGeoManagerinline; GetNode(Int_t level) constTGeoManagerinline; GetNodeId() constTGeoManagerinline; GetNormal() constTGeoManagerinline; GetNproperties() constTGeoManagerinline; GetNregions() constTGeoManagerinline; GetNsegments() constTGeoManager; GetNtracks() constTGeoManagerinline; GetNumThreads()TGeoManagerstatic; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOpticalSurface(const char *name) constTGeoManager; GetOption() constTObjectinlinevirtual; GetPainter() constTGeoManagerinline; GetPaintVolume() constTGeoManagerinline; GetParallelWorld() constTGeoManagerinline; GetParentTrackOfId(Int_t id) constTGeoManager; GetParticleName() constTGeoManagerinline; GetPath() constTGeoManager; GetPdgName(Int_t pdg) constTGeoManager; GetPhysicalNode(Int_t i) constTGeoManagerinline; GetProperty(const char *name, Bool_t *error=nullptr) constTGeoManager; GetProperty(size_t i, TString &name, Bool_t *error=nullptr) constTGeoManager; GetRegion(int i)TGeoManagerinline; GetRTmode() constTGeoManagerinline; GetSafeDistance() constTGeoManagerinline; GetSafeLevel() constTGeoManager; GetSkinSurface(const char *name) constTGeoManager; GetStackLevel() constTGeoManagerinline; GetStep() constTGeoManagerinline; GetTitle() const overrideTNamedinlinevirtual; GetTmax() constTGeoManagerinline; GetTminTmax(Double_t &tmin, Double_t &tmax) constTGeoManager; GetTopNode() constTGeoManagerinline; GetTopVolume() constTGeoManagerinline; GetTrack(Int_t index)TGeoManagerinline; GetTrackIndex(Int_t id) constTGeoManager; GetTrackOfId(Int_t id) constTGeoManager; GetUID(const char *volname) constTGeoManager; GetUniqueID() constTObjectvirtual; GetUserPaintVolume() constTGeoManagerinline; GetVerboseLevel()TGeoManagerstatic; GetVirtualLevel()TGeoManager; GetVisDensity() constTGeoManagerinline; GetVisLevel() constTGeoManager; GetVisOption() constTGeoManager; GetVolume(const char *name) constTGeoManager; GetVolume(Int_t",MatchSource.WIKI,doc/master/classTGeoManager-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html
https://root.cern/doc/master/classTGeoManager-members.html:23573,Availability,down,downwards,23573,"r, Bool_t check_norm=kFALSE)TGeoManager; Read(const char *name)TObjectvirtual; RecursiveRemove(TObject *obj)TObjectvirtual; RefreshPhysicalNodes(Bool_t lock=kTRUE)TGeoManager; RegisterMatrix(const TGeoMatrix *matrix)TGeoManager; RemoveMaterial(Int_t index)TGeoManager; RemoveNavigator(const TGeoNavigator *nav)TGeoManager; ReplaceVolume(TGeoVolume *vorig, TGeoVolume *vnew)TGeoManager; ResetBit(UInt_t f)TObjectinline; ResetState()TGeoManager; ResetUserData()TGeoManager; RestoreMasterVolume()TGeoManager; Safety(Bool_t inside=kFALSE)TGeoManager; SamplePoints(Int_t npoints, Double_t &dist, Double_t epsil=1E-5, const char *g3path="""")TGeoManager; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SaveAttributes(const char *filename=""tgeoatt.C"")TGeoManager; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SearchNode(Bool_t downwards=kFALSE, const TGeoNode *skipnode=nullptr)TGeoManager; SelectTrackingMedia()TGeoManager; SetAlignableEntry(const char *unique_name, const char *path, Int_t uid=-1)TGeoManager; SetAllIndex()TGeoManager; SetAnimateTracks(Bool_t flag=kTRUE)TGeoManagerinline; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetBombFactors(Double_t bombx=1.3, Double_t bomby=1.3, Double_t bombz=1.3, Double_t bombr=1.3)TGeoManager; SetCheckedNode(TGeoNode *node)TGeoManager; SetCheckingOverlaps(Bool_t flag=kTRUE)TGeoManagerinline; SetCldirChecked(Double_t *dir)TGeoManagerinline; SetClipping(Bool_t flag=kTRUE)TGeoManagerinline; SetClippingShape(TGeoShape *clip)TGeoManager; SetCurrentDirection(Double_t *dir)TGeoManagerinline; SetCurrentDirection(Double_t nx, Double_t ny, Double_t nz)TGeoManagerinline; SetCurrentNavigator(Int_t index)TGeoManager; SetCurrentPoint(Double_t *point)TGeoManagerinline; SetCurrentPoint(Double_t x, Double_t y, Double_t z)TGeoManagerinline; SetCurrentTrack(Int_t i)TGeoManagerinline; SetCurrentTrack(TVirtualGeoTrack *track)TGeoManagerinline; SetDefaultUnits(EDefaultUnits new_value)TGeoManag",MatchSource.WIKI,doc/master/classTGeoManager-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html
https://root.cern/doc/master/classTGeoManager-members.html:17984,Integrability,rout,rout,17984,"TGeoMedium *medium, Double_t dx, Double_t dy, Double_t dz)TGeoManager; MakeCone(const char *name, TGeoMedium *medium, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2)TGeoManager; MakeCons(const char *name, TGeoMedium *medium, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2, Double_t phi1, Double_t phi2)TGeoManager; MakeCtub(const char *name, TGeoMedium *medium, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz)TGeoManager; MakeEltu(const char *name, TGeoMedium *medium, Double_t a, Double_t b, Double_t dz)TGeoManager; MakeGtra(const char *name, TGeoMedium *medium, Double_t dz, Double_t theta, Double_t phi, Double_t twist, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2)TGeoManager; MakeHype(const char *name, TGeoMedium *medium, Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz)TGeoManager; MakePara(const char *name, TGeoMedium *medium, Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi)TGeoManager; MakeParaboloid(const char *name, TGeoMedium *medium, Double_t rlo, Double_t rhi, Double_t dz)TGeoManager; MakePcon(const char *name, TGeoMedium *medium, Double_t phi, Double_t dphi, Int_t nz)TGeoManager; MakePgon(const char *name, TGeoMedium *medium, Double_t phi, Double_t dphi, Int_t nedges, Int_t nz)TGeoManager; MakePhysicalNode(const char *path=nullptr)TGeoManager; MakeSphere(const char *name, TGeoMedium *medium, Double_t rmin, Double_t rmax, Double_t themin=0, Double_t themax=180, Double_t phimin=0, Double_t phimax=360)TGeoManager; MakeTorus(const char *name, TGeoMedium *medium, Double_t r, Double_t rmin, Double_t rmax, Double_t phi1=0, Double_t dphi=360)TGeoManager; MakeTrack(Int_t id, Int_t pdgcode, TObject *particle)TGeoManager; MakeTrap(const char *name, TGeoMedium *medium, Double_t dz, Double",MatchSource.WIKI,doc/master/classTGeoManager-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html
https://root.cern/doc/master/classTGeoManager-members.html:195,Modifiability,inherit,inherited,195,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoManager Member List. This is the complete list of members for TGeoManager, including all inherited members. AbstractMethod(const char *method) constTObject; AddBorderSurface(TGeoBorderSurface *surf)TGeoManager; AddGDMLMatrix(TGDMLMatrix *mat)TGeoManager; AddMaterial(const TGeoMaterial *material)TGeoManager; AddNavigator()TGeoManager; AddOpticalSurface(TGeoOpticalSurface *optsurf)TGeoManager; AddOverlap(const TNamed *ovlp)TGeoManager; AddProperty(const char *property, Double_t value)TGeoManager; AddRegion(TGeoRegion *region)TGeoManager; AddShape(const TGeoShape *shape)TGeoManager; AddSkinSurface(TGeoSkinSurface *surf)TGeoManager; AddToTObjectTable(TObject *)TObjectprivatestatic; AddTrack(Int_t id, Int_t pdgcode, TObject *particle=nullptr)TGeoManager; AddTrack(TVirtualGeoTrack *track)TGeoManager; AddTransformation(const TGeoMatrix *matrix)TGeoManager; AddVolume(TGeoVolume *volume)TGeoManager; AnimateTracks(Double_t tmin=0, Double_t tmax=5E-8, Int_t nframes=200, Option_t *option=""/*"")TGeoManager; AppendPad(Option_t *option="""")TObjectvirtual; BombTranslation(const Double_t *tr, Double_t *bombtr)TGeoManager; Browse(TBrowser *b) overrideTGeoManagervirtual; BuildDefaultMaterials()TGeoManager; cd(const char *path="""")TGeoManagervirtual; CdDown(Int_t index)TGeoManager; CdNext()TGeoManager; CdNode(Int_t nodeid)TGeoManager; CdTop()TGeoManager; CdUp()TGeoManager; CheckBoundaryErrors(Int_t ntracks=1000000, Double_t radius=-1.)TGeoManager; CheckBoundaryReference(Int_t icheck=-1)TGeoManager; CheckedHash()TObjectinline; CheckGeometry(Option_t *option="""")TGeoManager; CheckGeometryFull(Int_t ntracks=1000000, Double_t vx=0., Double_t vy=0., Double_t vz=0., Option_t *option=""ob"")TGeoManager; CheckOverlaps(Double_t ovlp=0.1, Option_t *option="""")TGeoManager; CheckPath(const char *path) constTGeoManager; CheckPoint(Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t ",MatchSource.WIKI,doc/master/classTGeoManager-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html
https://root.cern/doc/master/classTGeoManager-members.html:2001,Safety,safe,safety,2001,"mation(const TGeoMatrix *matrix)TGeoManager; AddVolume(TGeoVolume *volume)TGeoManager; AnimateTracks(Double_t tmin=0, Double_t tmax=5E-8, Int_t nframes=200, Option_t *option=""/*"")TGeoManager; AppendPad(Option_t *option="""")TObjectvirtual; BombTranslation(const Double_t *tr, Double_t *bombtr)TGeoManager; Browse(TBrowser *b) overrideTGeoManagervirtual; BuildDefaultMaterials()TGeoManager; cd(const char *path="""")TGeoManagervirtual; CdDown(Int_t index)TGeoManager; CdNext()TGeoManager; CdNode(Int_t nodeid)TGeoManager; CdTop()TGeoManager; CdUp()TGeoManager; CheckBoundaryErrors(Int_t ntracks=1000000, Double_t radius=-1.)TGeoManager; CheckBoundaryReference(Int_t icheck=-1)TGeoManager; CheckedHash()TObjectinline; CheckGeometry(Option_t *option="""")TGeoManager; CheckGeometryFull(Int_t ntracks=1000000, Double_t vx=0., Double_t vy=0., Double_t vz=0., Option_t *option=""ob"")TGeoManager; CheckOverlaps(Double_t ovlp=0.1, Option_t *option="""")TGeoManager; CheckPath(const char *path) constTGeoManager; CheckPoint(Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.)TGeoManager; CheckShape(TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option)TGeoManager; Class()TGeoManagerstatic; Class_Name()TGeoManagerstatic; Class_Version()TGeoManagerinlinestatic; ClassName() constTObjectvirtual; CleanGarbage()TGeoManager; Clear(Option_t *option="""") overrideTNamedvirtual; ClearAttributes()TGeoManager; ClearNavigators()TGeoManager; ClearOverlaps()TGeoManager; ClearPhysicalNodes(Bool_t mustdelete=kFALSE)TGeoManager; ClearShape(const TGeoShape *shape)TGeoManager; ClearThreadData() constTGeoManager; ClearThreadsMap()TGeoManagerstatic; ClearTracks()TGeoManagerinline; Clone(const char *newname="""") const overrideTNamedvirtual; CloseGeometry(Option_t *option=""d"")TGeoManager; Compare(const TObject *obj) const overrideTNamedvirtual; ConstPropMap_t typedefTGeoManagerprivate; ConvertReflections()TGeoManager; Copy(TObject &named) const overrideTNamedvirtual; CountLevels()TGeoM",MatchSource.WIKI,doc/master/classTGeoManager-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html
https://root.cern/doc/master/classTGeoManager-members.html:2059,Testability,test,testNo,2059,,MatchSource.WIKI,doc/master/classTGeoManager-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html
https://root.cern/doc/master/classTGeoManager.html:10816,Availability,down,down,10816,"system.rootrc,; //it will appear in the GL viewer; //#Viewer3D.DefaultDrawOption: ogl; ; geom->SetVisLevel(4);; if (vis) top->Draw(""ogle"");; }; ; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; kYellow@ kYellowDefinition Rtypes.h:66; gGeoIdentityR__EXTERN TGeoIdentity * gGeoIdentityDefinition TGeoMatrix.h:537; R; TGeoArb8Definition TGeoArb8.h:17; TGeoArb8::SetVertexvirtual void SetVertex(Int_t vnum, Double_t x, Double_t y); TGeoCombiTransClass describing rotation + translation.Definition TGeoMatrix.h:317; TGeoManagerThe manager class for any TGeo geometry.Definition TGeoManager.h:44; TGeoManager::TGeoManagerTGeoManager()Default constructor.Definition TGeoManager.cxx:311; TGeoManager::MakeArb8TGeoVolume * MakeArb8(const char *name, TGeoMedium *medium, Double_t dz, Double_t *vertices=nullptr)Make an TGeoArb8 volume.Definition TGeoManager.cxx:3161; TGeoManager::SetVisLevelvoid SetVisLevel(Int_t level=3)set default level down to which visualization is performedDefinition TGeoManager.cxx:2459; TGeoManager::CloseGeometryvoid CloseGeometry(Option_t *option=""d"")Closing geometry implies checking the geometry validity, fixing shapes with negative parameters (run-...Definition TGeoManager.cxx:1480; TGeoManager::MakeBoxTGeoVolume * MakeBox(const char *name, TGeoMedium *medium, Double_t dx, Double_t dy, Double_t dz)Make in one step a volume pointing to a box shape with given medium.Definition TGeoManager.cxx:3169; TGeoManager::SetTopVolumevoid SetTopVolume(TGeoVolume *vol)Set the top volume and corresponding node as starting point of the geometry.Definition TGeoManager.cxx:3655; TGeoManager::MakeTubsTGeoVolume * MakeTubs(const char *name, TGeoMedium *medium, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2)Make in one step a volume pointing to a tube segment shape with given medium.Definition TGeoManager.cxx:3213; TGeoMaterialBase class describing materials.Definition TGeoMateri",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:16359,Availability,down,down,16359," scheme of the manager class. An interactive session; Provided that a geometry was successfully built and closed (for instance the previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register itself to ROOT and the logical/physical structures will become immediately browsable. The ROOT browser will display starting from the geometry folder : the list of transformations and media, the top volume and the top logical node. These last two can be fully expanded, any intermediate volume/node in the browser being subject of direct access context menu operations (right mouse button click). All user utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the context menu. Drawing the geometry; Any logical volume can be drawn via TGeoVolume::Draw() member function. This can be directly accessed from the context menu of the volume object directly from the browser. There are several drawing options that can be set with TGeoManager::SetVisOption(Int_t opt) method :; opt=0; only the content of the volume is drawn, N levels down (default N=3). This is the default behavior. The number of levels to be drawn can be changed via TGeoManager::SetVisLevel(Int_t level) method. opt=1; the final leaves (e.g. daughters with no containment) of the branch starting from volume are drawn down to the current number of levels. WARNING : This mode is memory consuming depending of the size of geometry, so drawing from top level within this mode should be handled with care for expensive geometries. In future there will be a limitation on the maximum number of nodes to be visualized. opt=2; only the clicked volume is visualized. This is automatically set by TGeoVolume::DrawOnly() method; opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method; The current view can be exploded in cartesian, cylindrical or spherical coordinates : TGeoManager::SetExplodedView(Int_t opt). Options may be :; 0 - default",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:16613,Availability,down,down,16613,"he ROOT browser will display starting from the geometry folder : the list of transformations and media, the top volume and the top logical node. These last two can be fully expanded, any intermediate volume/node in the browser being subject of direct access context menu operations (right mouse button click). All user utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the context menu. Drawing the geometry; Any logical volume can be drawn via TGeoVolume::Draw() member function. This can be directly accessed from the context menu of the volume object directly from the browser. There are several drawing options that can be set with TGeoManager::SetVisOption(Int_t opt) method :; opt=0; only the content of the volume is drawn, N levels down (default N=3). This is the default behavior. The number of levels to be drawn can be changed via TGeoManager::SetVisLevel(Int_t level) method. opt=1; the final leaves (e.g. daughters with no containment) of the branch starting from volume are drawn down to the current number of levels. WARNING : This mode is memory consuming depending of the size of geometry, so drawing from top level within this mode should be handled with care for expensive geometries. In future there will be a limitation on the maximum number of nodes to be visualized. opt=2; only the clicked volume is visualized. This is automatically set by TGeoVolume::DrawOnly() method; opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method; The current view can be exploded in cartesian, cylindrical or spherical coordinates : TGeoManager::SetExplodedView(Int_t opt). Options may be :; 0 - default (no bombing); 1 - cartesian coordinates. The bomb factor on each axis can be set with TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R are considered . 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR()",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:18302,Availability,down,down,18302,"mbing); 1 - cartesian coordinates. The bomb factor on each axis can be set with TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R are considered . 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; TGeoVolume::SetVisibility() : set volume visibility.; TGeoVolume::VisibleDaughters() : set daughters visibility. All these actions automatically updates the current view if any. Checking the geometry; Several checking methods are accessible from the volume context menu. They generally apply only to the visible parts of the drawn geometry in order to ease geometry checking, and their implementation is in the TGeoChecker class from the painting package.; Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z). This method is drawing the daughters of the volume containing the point one level down, printing the path to the deepest physical node holding this point. It also computes the closest distance to any boundary. The point will be drawn in red, as well as a sphere having this closest distance as radius. In case a non-zero distance is given by the user as fifth argument of CheckPoint, this distance will be used as radius of the safety sphere. Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and it will draw this volume with current visualization settings. Random points are generated in the bounding box of the top drawn volume. The points are classified and drawn with the color of their deepest container. Only points in visible nodes will be drawn. Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and will shoot rays from a given point in the local reference frame with random directions. The intersections with displayed nodes will appear as segments having the color of the touched node. D",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:22787,Availability,error,errors,22787,"tion (const Double_t *tr, Double_t *bombtr);  Get the new 'bombed' translation vector according current exploded view mode. ;  ; void Browse (TBrowser *b) override;  Describe how to browse this object. ;  ; void BuildDefaultMaterials ();  Now just a shortcut for GetElementTable. ;  ; virtual Bool_t cd (const char *path="""");  Browse the tree of nodes starting from fTopNode according to pathname. ;  ; void CdDown (Int_t index);  Make a daughter of current node current. ;  ; void CdNext ();  Do a cd to the node found next by FindNextBoundary. ;  ; void CdNode (Int_t nodeid);  Change current path to point to the node having this id. ;  ; void CdTop ();  Make top level node the current node. ;  ; void CdUp ();  Go one level up in geometry. ;  ; void CheckBoundaryErrors (Int_t ntracks=1000000, Double_t radius=-1.);  Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ;  ; void CheckBoundaryReference (Int_t icheck=-1);  Check the boundary errors reference file created by CheckBoundaryErrors method. ;  ; void CheckGeometry (Option_t *option="""");  Perform last checks on the geometry. ;  ; void CheckGeometryFull (Int_t ntracks=1000000, Double_t vx=0., Double_t vy=0., Double_t vz=0., Option_t *option=""ob"");  Geometry checking. ;  ; void CheckOverlaps (Double_t ovlp=0.1, Option_t *option="""");  Check all geometry for illegal overlaps within a limit OVLP. ;  ; Bool_t CheckPath (const char *path) const;  Check if a geometry path is valid without changing the state of the current navigator. ;  ; void CheckPoint (Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.);  Classify a given point. See TGeoChecker::CheckPoint(). ;  ; void CheckShape (TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option);  Test for shape navigation methods. ;  ; void CleanGarbage ();  Clean temporary volumes and shapes from garbage collection. ;  ; void ClearAttributes ();  Reset all attributes to default on",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:24879,Availability,down,down,24879,"vigators ();  Clear all navigators. ;  ; void ClearOverlaps ();  Clear the list of overlaps. ;  ; void ClearPhysicalNodes (Bool_t mustdelete=kFALSE);  Clear the current list of physical nodes, so that we can start over with a new list. ;  ; void ClearShape (const TGeoShape *shape);  Remove a shape from the list of shapes. ;  ; void ClearThreadData () const;  ; void ClearTracks ();  ; void CloseGeometry (Option_t *option=""d"");  Closing geometry implies checking the geometry validity, fixing shapes with negative parameters (run-time shapes)building the cache manager, voxelizing all volumes, counting the total number of physical nodes and registering the manager class to the browser. ;  ; void ConvertReflections ();  Convert all reflections in geometry to normal rotations + reflected shapes. ;  ; void CountLevels ();  Count maximum number of nodes per volume, maximum depth and maximum number of xtru vertices. ;  ; Int_t CountNodes (const TGeoVolume *vol=nullptr, Int_t nlevels=10000, Int_t option=0);  Count the total number of nodes starting from a volume, nlevels down. ;  ; TGeoParallelWorld * CreateParallelWorld (const char *name);  Create a parallel world for prioritised navigation. ;  ; void CreateThreadData () const;  Create thread private data for all geometry objects. ;  ; TGeoNode * CrossBoundaryAndLocate (Bool_t downwards, TGeoNode *skipnode);  Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ;  ; void DefaultAngles ();  Set default angles for a given view. ;  ; void DefaultColors ();  Set default volume colors according to A of material. ;  ; void DisableInactiveVolumes ();  ; TGeoVolume * Division (const char *name, const char *mother, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step, Int_t numed=0, Option_t *option="""");  Create a new volume by dividing an existing one (GEANT3 like) ;  ; void DoBackupState ();  Backup the current state without affecting the cache stack. ;  ; void DoRestoreState",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:25141,Availability,down,downwards,25141," void CloseGeometry (Option_t *option=""d"");  Closing geometry implies checking the geometry validity, fixing shapes with negative parameters (run-time shapes)building the cache manager, voxelizing all volumes, counting the total number of physical nodes and registering the manager class to the browser. ;  ; void ConvertReflections ();  Convert all reflections in geometry to normal rotations + reflected shapes. ;  ; void CountLevels ();  Count maximum number of nodes per volume, maximum depth and maximum number of xtru vertices. ;  ; Int_t CountNodes (const TGeoVolume *vol=nullptr, Int_t nlevels=10000, Int_t option=0);  Count the total number of nodes starting from a volume, nlevels down. ;  ; TGeoParallelWorld * CreateParallelWorld (const char *name);  Create a parallel world for prioritised navigation. ;  ; void CreateThreadData () const;  Create thread private data for all geometry objects. ;  ; TGeoNode * CrossBoundaryAndLocate (Bool_t downwards, TGeoNode *skipnode);  Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ;  ; void DefaultAngles ();  Set default angles for a given view. ;  ; void DefaultColors ();  Set default volume colors according to A of material. ;  ; void DisableInactiveVolumes ();  ; TGeoVolume * Division (const char *name, const char *mother, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step, Int_t numed=0, Option_t *option="""");  Create a new volume by dividing an existing one (GEANT3 like) ;  ; void DoBackupState ();  Backup the current state without affecting the cache stack. ;  ; void DoRestoreState ();  Restore a backed-up state without affecting the cache stack. ;  ; void DrawCurrentPoint (Int_t color=2);  Draw current point in the same view. ;  ; void DrawPath (const char *path, Option_t *option="""");  Draw current path. ;  ; void DrawTracks (Option_t *option="""");  Draw tracks over the geometry, according to option. ;  ; virtual void Edit (Option_t *option="""");  Append a pad",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:32946,Availability,error,error,32946,"de * GetNextNode () const;  ; Int_t GetNmany () const;  ; Int_t GetNNodes ();  ; TGeoNode * GetNode (Int_t level) const;  ; Int_t GetNodeId () const;  ; const Double_t * GetNormal () const;  ; Int_t GetNproperties () const;  ; int GetNregions () const;  ; Int_t GetNsegments () const;  Get number of segments approximating circles. ;  ; Int_t GetNtracks () const;  ; TGeoOpticalSurface * GetOpticalSurface (const char *name) const;  Get optical surface with a given name;. ;  ; TVirtualGeoPainter * GetPainter () const;  ; TGeoVolume * GetPaintVolume () const;  ; TGeoParallelWorld * GetParallelWorld () const;  ; TVirtualGeoTrack * GetParentTrackOfId (Int_t id) const;  Get parent track with a given ID. ;  ; const char * GetParticleName () const;  ; const char * GetPath () const;  Get path to the current node in the form /node0/node1/... ;  ; const char * GetPdgName (Int_t pdg) const;  Get name for given pdg code;. ;  ; TGeoPhysicalNode * GetPhysicalNode (Int_t i) const;  ; Double_t GetProperty (const char *name, Bool_t *error=nullptr) const;  Get a user-defined property. ;  ; Double_t GetProperty (size_t i, TString &name, Bool_t *error=nullptr) const;  Get a user-defined property from a given index. ;  ; TGeoRegion * GetRegion (int i);  ; Int_t GetRTmode () const;  ; Double_t GetSafeDistance () const;  ; Int_t GetSafeLevel () const;  Go upwards the tree until a non-overlapping node. ;  ; TGeoSkinSurface * GetSkinSurface (const char *name) const;  Get skin surface with a given name;. ;  ; Int_t GetStackLevel () const;  ; Double_t GetStep () const;  ; Double_t GetTmax () const;  ; Bool_t GetTminTmax (Double_t &tmin, Double_t &tmax) const;  Get time cut for drawing tracks. ;  ; TGeoNode * GetTopNode () const;  ; TGeoVolume * GetTopVolume () const;  ; TVirtualGeoTrack * GetTrack (Int_t index);  ; Int_t GetTrackIndex (Int_t id) const;  Get index for track id, -1 if not found. ;  ; TVirtualGeoTrack * GetTrackOfId (Int_t id) const;  Get track with a given ID. ;  ; Int_t GetUID (c",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:33058,Availability,error,error,33058,"nst;  ; const Double_t * GetNormal () const;  ; Int_t GetNproperties () const;  ; int GetNregions () const;  ; Int_t GetNsegments () const;  Get number of segments approximating circles. ;  ; Int_t GetNtracks () const;  ; TGeoOpticalSurface * GetOpticalSurface (const char *name) const;  Get optical surface with a given name;. ;  ; TVirtualGeoPainter * GetPainter () const;  ; TGeoVolume * GetPaintVolume () const;  ; TGeoParallelWorld * GetParallelWorld () const;  ; TVirtualGeoTrack * GetParentTrackOfId (Int_t id) const;  Get parent track with a given ID. ;  ; const char * GetParticleName () const;  ; const char * GetPath () const;  Get path to the current node in the form /node0/node1/... ;  ; const char * GetPdgName (Int_t pdg) const;  Get name for given pdg code;. ;  ; TGeoPhysicalNode * GetPhysicalNode (Int_t i) const;  ; Double_t GetProperty (const char *name, Bool_t *error=nullptr) const;  Get a user-defined property. ;  ; Double_t GetProperty (size_t i, TString &name, Bool_t *error=nullptr) const;  Get a user-defined property from a given index. ;  ; TGeoRegion * GetRegion (int i);  ; Int_t GetRTmode () const;  ; Double_t GetSafeDistance () const;  ; Int_t GetSafeLevel () const;  Go upwards the tree until a non-overlapping node. ;  ; TGeoSkinSurface * GetSkinSurface (const char *name) const;  Get skin surface with a given name;. ;  ; Int_t GetStackLevel () const;  ; Double_t GetStep () const;  ; Double_t GetTmax () const;  ; Bool_t GetTminTmax (Double_t &tmin, Double_t &tmax) const;  Get time cut for drawing tracks. ;  ; TGeoNode * GetTopNode () const;  ; TGeoVolume * GetTopVolume () const;  ; TVirtualGeoTrack * GetTrack (Int_t index);  ; Int_t GetTrackIndex (Int_t id) const;  Get index for track id, -1 if not found. ;  ; TVirtualGeoTrack * GetTrackOfId (Int_t id) const;  Get track with a given ID. ;  ; Int_t GetUID (const char *volname) const;  Retrieve unique id for a volume name. Return -1 if name not found. ;  ; TGeoVolume * GetUserPaintVolume () const;  ; I",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:45683,Availability,down,downwards,45683,"const TGeoMatrix *matrix);  Register a matrix to the list of matrices. ;  ; void RemoveMaterial (Int_t index);  Remove material at given index. ;  ; void RemoveNavigator (const TGeoNavigator *nav);  Clear a single navigator. ;  ; Int_t ReplaceVolume (TGeoVolume *vorig, TGeoVolume *vnew);  Replaces all occurrences of VORIG with VNEW in the geometry tree. ;  ; void ResetState ();  Reset current state flags. ;  ; void ResetUserData ();  Sets all pointers TGeoVolume::fField to NULL. ;  ; void RestoreMasterVolume ();  Restore the master volume of the geometry. ;  ; Double_t Safety (Bool_t inside=kFALSE);  Compute safe distance from the current point. ;  ; TGeoNode * SamplePoints (Int_t npoints, Double_t &dist, Double_t epsil=1E-5, const char *g3path="""");  shoot npoints randomly in a box of 1E-5 around current point. ;  ; void SaveAttributes (const char *filename=""tgeoatt.C"");  Save current attributes in a macro. ;  ; TGeoNode * SearchNode (Bool_t downwards=kFALSE, const TGeoNode *skipnode=nullptr);  Returns the deepest node containing fPoint, which must be set a priori. ;  ; void SelectTrackingMedia ();  Define different tracking media. ;  ; TGeoPNEntry * SetAlignableEntry (const char *unique_name, const char *path, Int_t uid=-1);  Creates an alignable object with unique name corresponding to a path and adds it to the list of alignables. ;  ; void SetAllIndex ();  Assigns uid's for all materials,media and matrices. ;  ; void SetAnimateTracks (Bool_t flag=kTRUE);  ; void SetBombFactors (Double_t bombx=1.3, Double_t bomby=1.3, Double_t bombz=1.3, Double_t bombr=1.3);  Set factors that will ""bomb"" all translations in cartesian and cylindrical coordinates. ;  ; void SetCheckedNode (TGeoNode *node);  Assign a given node to be checked for overlaps. Any other overlaps will be ignored. ;  ; void SetCheckingOverlaps (Bool_t flag=kTRUE);  ; void SetCldirChecked (Double_t *dir);  ; void SetClipping (Bool_t flag=kTRUE);  ; void SetClippingShape (TGeoShape *clip);  Set a user-defined ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:49058,Availability,down,down,49058,"name for a particle having a given pdg. ;  ; void SetPhiRange (Double_t phimin=0., Double_t phimax=360.);  Set cut phi range. ;  ; void SetRTmode (Int_t mode);  Change raytracing mode. ;  ; void SetStartSafe (Bool_t flag=kTRUE);  ; void SetStep (Double_t step);  ; void SetTminTmax (Double_t tmin=0, Double_t tmax=999);  Set time cut interval for drawing tracks. ;  ; void SetTopVisible (Bool_t vis=kTRUE);  make top volume visible on screen ;  ; void SetTopVolume (TGeoVolume *vol);  Set the top volume and corresponding node as starting point of the geometry. ;  ; void SetUseParallelWorldNav (Bool_t flag);  Activate/deactivate usage of parallel world navigation. ;  ; void SetUserPaintVolume (TGeoVolume *vol);  ; void SetVisDensity (Double_t dens=0.01);  Set density threshold. ;  ; void SetVisibility (TObject *obj, Bool_t vis);  Set visibility for a volume. ;  ; void SetVisLevel (Int_t level=3);  set default level down to which visualization is performed ;  ; void SetVisOption (Int_t option=0);  set drawing mode : ;  ; void SetVolumeAttribute (const char *name, const char *att, Int_t val);  Set volume attributes in G3 style. ;  ; virtual ULong_t SizeOf (const TGeoNode *node, Option_t *option);  computes the total size in bytes of the branch starting with node. ;  ; void SortOverlaps ();  Sort overlaps by decreasing overlap distance. Extrusions comes first. ;  ; TGeoNode * Step (Bool_t is_geom=kTRUE, Bool_t cross=kTRUE);  Make a rectilinear step of length fStep from current point (fPoint) on current direction (fDirection). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TGeoManager. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Test (Int_t npoints=1000000, Option_t *option="""");  Check time of finding ""Where am I"" for n points. ;  ; void TestOverlaps (const char *path="""");  Geometry overlap checker based on sampling. ;  ; void TopToMaster (const Double_t *top, Double_t *master) const;  Convert coordinates from top volume fram",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:54089,Availability,error,error,54089,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:54178,Availability,error,error,54178,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:54333,Availability,error,error,54333,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:54510,Availability,error,error,54510,"Primitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:58453,Availability,error,error,58453,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void ClearThreadsMap ();  Clear the current map of threads. ;  ; static const char * DeclFileName ();  ; static EDefaultUnits GetDefaultUnits ();  ; static UInt_t GetExportPrecision",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:74088,Availability,error,errors,74088,"Nodes-1 (no check for performance reasons) ; Definition at line 1655 of file TGeoManager.cxx. ◆ CdTop(). void TGeoManager::CdTop ; (; ). Make top level node the current node. ; Updates the cache accordingly. Determine the overlapping state of current node. ; Definition at line 1672 of file TGeoManager.cxx. ◆ CdUp(). void TGeoManager::CdUp ; (; ). Go one level up in geometry. ; Updates cache accordingly. Determine the overlapping state of current node. ; Definition at line 1681 of file TGeoManager.cxx. ◆ CheckBoundaryErrors(). void TGeoManager::CheckBoundaryErrors ; (; Int_t ; ntracks = 1000000, . Double_t ; radius = -1. . ). Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ; If radius is not mentioned the full bounding box will be sampled. ; Definition at line 3752 of file TGeoManager.cxx. ◆ CheckBoundaryReference(). void TGeoManager::CheckBoundaryReference ; (; Int_t ; icheck = -1). Check the boundary errors reference file created by CheckBoundaryErrors method. ; The shape for which the crossing failed is drawn with the starting point in red and the extrapolated point to boundary (+/- failing push/pull) in yellow. ; Definition at line 3762 of file TGeoManager.cxx. ◆ CheckGeometry(). void TGeoManager::CheckGeometry ; (; Option_t * ; option = """"). Perform last checks on the geometry. ; Definition at line 3831 of file TGeoManager.cxx. ◆ CheckGeometryFull(). void TGeoManager::CheckGeometryFull ; (; Int_t ; ntracks = 1000000, . Double_t ; vx = 0., . Double_t ; vy = 0., . Double_t ; vz = 0., . Option_t * ; option = ""ob"" . ). Geometry checking. . if option contains 'o': Optional overlap checkings (by sampling and by mesh).; if option contains 'b': Optional boundary crossing check + timing per volume. STAGE 1: extensive overlap checking by sampling per volume. Stdout need to be checked by user to get report, then TGeoVolume::CheckOverlaps(0.01, ""s"") can be called for the suspicious volumes.; STAGE 2: normal ov",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:79991,Availability,down,down,79991,"n at line 415 of file TGeoManager.h. ◆ CloseGeometry(). void TGeoManager::CloseGeometry ; (; Option_t * ; option = ""d""). Closing geometry implies checking the geometry validity, fixing shapes with negative parameters (run-time shapes)building the cache manager, voxelizing all volumes, counting the total number of physical nodes and registering the manager class to the browser. ; Definition at line 1480 of file TGeoManager.cxx. ◆ ConvertReflections(). void TGeoManager::ConvertReflections ; (; ). Convert all reflections in geometry to normal rotations + reflected shapes. ; Definition at line 1723 of file TGeoManager.cxx. ◆ CountLevels(). void TGeoManager::CountLevels ; (; ). Count maximum number of nodes per volume, maximum depth and maximum number of xtru vertices. ; Definition at line 1759 of file TGeoManager.cxx. ◆ CountNodes(). Int_t TGeoManager::CountNodes ; (; const TGeoVolume * ; vol = nullptr, . Int_t ; nlevels = 10000, . Int_t ; option = 0 . ). Count the total number of nodes starting from a volume, nlevels down. ; Definition at line 1803 of file TGeoManager.cxx. ◆ CreateParallelWorld(). TGeoParallelWorld * TGeoManager::CreateParallelWorld ; (; const char * ; name). Create a parallel world for prioritised navigation. ; This can be populated with physical nodes and can be navigated independently using its API. In case the flag SetUseParallelWorldNav is set, any navigation query in the main geometry is checked against the parallel geometry, which gets priority in case of overlaps with the main geometry volumes. ; Definition at line 4277 of file TGeoManager.cxx. ◆ CreateThreadData(). void TGeoManager::CreateThreadData ; (; ); const. Create thread private data for all geometry objects. ; Definition at line 968 of file TGeoManager.cxx. ◆ CrossBoundaryAndLocate(). TGeoNode * TGeoManager::CrossBoundaryAndLocate ; (; Bool_t ; downwards, . TGeoNode * ; skipnode . ). Cross next boundary and locate within current node The current point must be on the boundary of fCurren",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:80818,Availability,down,downwards,80818,"tNodes(). Int_t TGeoManager::CountNodes ; (; const TGeoVolume * ; vol = nullptr, . Int_t ; nlevels = 10000, . Int_t ; option = 0 . ). Count the total number of nodes starting from a volume, nlevels down. ; Definition at line 1803 of file TGeoManager.cxx. ◆ CreateParallelWorld(). TGeoParallelWorld * TGeoManager::CreateParallelWorld ; (; const char * ; name). Create a parallel world for prioritised navigation. ; This can be populated with physical nodes and can be navigated independently using its API. In case the flag SetUseParallelWorldNav is set, any navigation query in the main geometry is checked against the parallel geometry, which gets priority in case of overlaps with the main geometry volumes. ; Definition at line 4277 of file TGeoManager.cxx. ◆ CreateThreadData(). void TGeoManager::CreateThreadData ; (; ); const. Create thread private data for all geometry objects. ; Definition at line 968 of file TGeoManager.cxx. ◆ CrossBoundaryAndLocate(). TGeoNode * TGeoManager::CrossBoundaryAndLocate ; (; Bool_t ; downwards, . TGeoNode * ; skipnode . ). Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ; Definition at line 2725 of file TGeoManager.cxx. ◆ DeclFileName(). static const char * TGeoManager::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 605 of file TGeoManager.h. ◆ DefaultAngles(). void TGeoManager::DefaultAngles ; (; ). Set default angles for a given view. ; Definition at line 1818 of file TGeoManager.cxx. ◆ DefaultColors(). void TGeoManager::DefaultColors ; (; ). Set default volume colors according to A of material. ; Definition at line 2259 of file TGeoManager.cxx. ◆ DisableInactiveVolumes(). void TGeoManager::DisableInactiveVolumes ; (; ). inline . Definition at line 362 of file TGeoManager.h. ◆ Division(). TGeoVolume * TGeoManager::Division ; (; const char * ; name, . const char * ; mother, . Int_t ; iaxis, . Int_t ; ndiv, . Doub",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:101937,Availability,error,error,101937,"ld * TGeoManager::GetParallelWorld ; (; ); const. inline . Definition at line 601 of file TGeoManager.h. ◆ GetParentTrackOfId(). TVirtualGeoTrack * TGeoManager::GetParentTrackOfId ; (; Int_t ; id); const. Get parent track with a given ID. ; Definition at line 2215 of file TGeoManager.cxx. ◆ GetParticleName(). const char * TGeoManager::GetParticleName ; (; ); const. inline . Definition at line 261 of file TGeoManager.h. ◆ GetPath(). const char * TGeoManager::GetPath ; (; ); const. Get path to the current node in the form /node0/node1/... ; Definition at line 2881 of file TGeoManager.cxx. ◆ GetPdgName(). const char * TGeoManager::GetPdgName ; (; Int_t ; pdg); const. Get name for given pdg code;. ; Definition at line 1966 of file TGeoManager.cxx. ◆ GetPhysicalNode(). TGeoPhysicalNode * TGeoManager::GetPhysicalNode ; (; Int_t ; i); const. inline . Definition at line 514 of file TGeoManager.h. ◆ GetProperty() [1/2]. Double_t TGeoManager::GetProperty ; (; const char * ; name, . Bool_t * ; error = nullptr . ); const. Get a user-defined property. ; Definition at line 656 of file TGeoManager.cxx. ◆ GetProperty() [2/2]. Double_t TGeoManager::GetProperty ; (; size_t ; i, . TString & ; name, . Bool_t * ; error = nullptr . ); const. Get a user-defined property from a given index. ; Definition at line 672 of file TGeoManager.cxx. ◆ GetRegion(). TGeoRegion * TGeoManager::GetRegion ; (; int ; i). inline . Definition at line 576 of file TGeoManager.h. ◆ GetRTmode(). Int_t TGeoManager::GetRTmode ; (; ); const. inline . Definition at line 440 of file TGeoManager.h. ◆ GetSafeDistance(). Double_t TGeoManager::GetSafeDistance ; (; ); const. inline . Definition at line 384 of file TGeoManager.h. ◆ GetSafeLevel(). Int_t TGeoManager::GetSafeLevel ; (; ); const. Go upwards the tree until a non-overlapping node. ; Definition at line 2251 of file TGeoManager.cxx. ◆ GetSkinSurface(). TGeoSkinSurface * TGeoManager::GetSkinSurface ; (; const char * ; name); const. Get skin surface with a given nam",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:102151,Availability,error,error,102151,"t track with a given ID. ; Definition at line 2215 of file TGeoManager.cxx. ◆ GetParticleName(). const char * TGeoManager::GetParticleName ; (; ); const. inline . Definition at line 261 of file TGeoManager.h. ◆ GetPath(). const char * TGeoManager::GetPath ; (; ); const. Get path to the current node in the form /node0/node1/... ; Definition at line 2881 of file TGeoManager.cxx. ◆ GetPdgName(). const char * TGeoManager::GetPdgName ; (; Int_t ; pdg); const. Get name for given pdg code;. ; Definition at line 1966 of file TGeoManager.cxx. ◆ GetPhysicalNode(). TGeoPhysicalNode * TGeoManager::GetPhysicalNode ; (; Int_t ; i); const. inline . Definition at line 514 of file TGeoManager.h. ◆ GetProperty() [1/2]. Double_t TGeoManager::GetProperty ; (; const char * ; name, . Bool_t * ; error = nullptr . ); const. Get a user-defined property. ; Definition at line 656 of file TGeoManager.cxx. ◆ GetProperty() [2/2]. Double_t TGeoManager::GetProperty ; (; size_t ; i, . TString & ; name, . Bool_t * ; error = nullptr . ); const. Get a user-defined property from a given index. ; Definition at line 672 of file TGeoManager.cxx. ◆ GetRegion(). TGeoRegion * TGeoManager::GetRegion ; (; int ; i). inline . Definition at line 576 of file TGeoManager.h. ◆ GetRTmode(). Int_t TGeoManager::GetRTmode ; (; ); const. inline . Definition at line 440 of file TGeoManager.h. ◆ GetSafeDistance(). Double_t TGeoManager::GetSafeDistance ; (; ); const. inline . Definition at line 384 of file TGeoManager.h. ◆ GetSafeLevel(). Int_t TGeoManager::GetSafeLevel ; (; ); const. Go upwards the tree until a non-overlapping node. ; Definition at line 2251 of file TGeoManager.cxx. ◆ GetSkinSurface(). TGeoSkinSurface * TGeoManager::GetSkinSurface ; (; const char * ; name); const. Get skin surface with a given name;. ; Definition at line 2041 of file TGeoManager.cxx. ◆ GetStackLevel(). Int_t TGeoManager::GetStackLevel ; (; ); const. inline . Definition at line 510 of file TGeoManager.h. ◆ GetStep(). Double_t TGeoManager::Ge",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:127017,Availability,error,error,127017,". of the volume in mother ref. sys.; Y Y coord. of the volume in mother ref. sys.; Z Z coord. of the volume in mother ref. sys.; IROT Rotation matrix number w.r.t. mother ref. sys.; ISONLY ONLY/MANY flag . Definition at line 1353 of file TGeoManager.cxx. ◆ operator=(). TGeoManager & TGeoManager::operator= ; (; const TGeoManager & ; ). protecteddelete . ◆ OptimizeVoxels(). void TGeoManager::OptimizeVoxels ; (; const char * ; filename = ""tgeovox.C""). Optimize voxelization type for all volumes. Save best choice in a macro. ; Definition at line 2484 of file TGeoManager.cxx. ◆ Parse(). Int_t TGeoManager::Parse ; (; const char * ; expr, . TString & ; expr1, . TString & ; expr2, . TString & ; expr3 . ). static . Parse a string boolean expression and do a syntax check. ; Find top level boolean operator and returns its type. Fill the two substrings to which this operator applies. The returned integer is :; -1 : parse error; 0 : no boolean operator; 1 : union - represented as '+' in expression; 2 : difference (subtraction) - represented as '-' in expression; 3 : intersection - represented as '*' in expression. Parentheses should be used to avoid ambiguities. For instance :; A+B-C will be interpreted as (A+B)-C which is not the same as A+(B-C) eliminate not needed parentheses . Definition at line 2540 of file TGeoManager.cxx. ◆ PopDummy(). void TGeoManager::PopDummy ; (; Int_t ; ipop = 9999). inline . Definition at line 597 of file TGeoManager.h. ◆ PopPath() [1/2]. Bool_t TGeoManager::PopPath ; (; ). inline . Definition at line 592 of file TGeoManager.h. ◆ PopPath() [2/2]. Bool_t TGeoManager::PopPath ; (; Int_t ; index). inline . Definition at line 593 of file TGeoManager.h. ◆ PopPoint() [1/2]. Bool_t TGeoManager::PopPoint ; (; ). inline . Definition at line 595 of file TGeoManager.h. ◆ PopPoint() [2/2]. Bool_t TGeoManager::PopPoint ; (; Int_t ; index). inline . Definition at line 596 of file TGeoManager.h. ◆ PrintOverlaps(). void TGeoManager::PrintOverlaps ; (; ); const. Prin",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:131586,Availability,down,downwards,131586,"efinition at line 3097 of file TGeoManager.cxx. ◆ RestoreMasterVolume(). void TGeoManager::RestoreMasterVolume ; (; ). Restore the master volume of the geometry. ; Definition at line 3118 of file TGeoManager.cxx. ◆ Safety(). Double_t TGeoManager::Safety ; (; Bool_t ; inside = kFALSE). Compute safe distance from the current point. ; This represent the distance from POINT to the closest boundary. ; Definition at line 2300 of file TGeoManager.cxx. ◆ SamplePoints(). TGeoNode * TGeoManager::SamplePoints ; (; Int_t ; npoints, . Double_t & ; dist, . Double_t ; epsil = 1E-5, . const char * ; g3path = """" . ). shoot npoints randomly in a box of 1E-5 around current point. ; return minimum distance to points outside ; Definition at line 3647 of file TGeoManager.cxx. ◆ SaveAttributes(). void TGeoManager::SaveAttributes ; (; const char * ; filename = ""tgeoatt.C""). Save current attributes in a macro. ; Definition at line 2658 of file TGeoManager.cxx. ◆ SearchNode(). TGeoNode * TGeoManager::SearchNode ; (; Bool_t ; downwards = kFALSE, . const TGeoNode * ; skipnode = nullptr . ). Returns the deepest node containing fPoint, which must be set a priori. ; Definition at line 2716 of file TGeoManager.cxx. ◆ SelectTrackingMedia(). void TGeoManager::SelectTrackingMedia ; (; ). Define different tracking media. ; Definition at line 3708 of file TGeoManager.cxx. ◆ SetAlignableEntry(). TGeoPNEntry * TGeoManager::SetAlignableEntry ; (; const char * ; unique_name, . const char * ; path, . Int_t ; uid = -1 . ). Creates an alignable object with unique name corresponding to a path and adds it to the list of alignables. ; An optional unique ID can be provided, in which case PN entries can be searched fast by uid. ; Definition at line 3342 of file TGeoManager.cxx. ◆ SetAllIndex(). void TGeoManager::SetAllIndex ; (; ). Assigns uid's for all materials,media and matrices. ; Definition at line 1409 of file TGeoManager.cxx. ◆ SetAnimateTracks(). void TGeoManager::SetAnimateTracks ; (; Bool_t ; flag = kTRUE",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:140046,Availability,down,down,140046,"be done if there is a parallel world. Activating navigation will automatically close the parallel geometry. ; Definition at line 4288 of file TGeoManager.cxx. ◆ SetUserPaintVolume(). void TGeoManager::SetUserPaintVolume ; (; TGeoVolume * ; vol). inline . Definition at line 235 of file TGeoManager.h. ◆ SetVerboseLevel(). void TGeoManager::SetVerboseLevel ; (; Int_t ; vl). static . Return current verbosity level (static function). ; Definition at line 4074 of file TGeoManager.cxx. ◆ SetVisDensity(). void TGeoManager::SetVisDensity ; (; Double_t ; density = 0.01). Set density threshold. ; Volumes with densities lower than this become transparent. ; Definition at line 2449 of file TGeoManager.cxx. ◆ SetVisibility(). void TGeoManager::SetVisibility ; (; TObject * ; obj, . Bool_t ; vis . ). Set visibility for a volume. ; Definition at line 1060 of file TGeoManager.cxx. ◆ SetVisLevel(). void TGeoManager::SetVisLevel ; (; Int_t ; level = 3). set default level down to which visualization is performed ; Definition at line 2459 of file TGeoManager.cxx. ◆ SetVisOption(). void TGeoManager::SetVisOption ; (; Int_t ; option = 0). set drawing mode : . option=0 (default) all nodes drawn down to vislevel; option=1 leaves and nodes at vislevel drawn; option=2 path is drawn; option=4 visibility changed . Definition at line 2426 of file TGeoManager.cxx. ◆ SetVolumeAttribute(). void TGeoManager::SetVolumeAttribute ; (; const char * ; name, . const char * ; att, . Int_t ; val . ). Set volume attributes in G3 style. ; Definition at line 2308 of file TGeoManager.cxx. ◆ SizeOf(). ULong_t TGeoManager::SizeOf ; (; const TGeoNode * ; node, . Option_t * ; option . ). virtual . computes the total size in bytes of the branch starting with node. ; The option can specify if all the branch has to be parsed or only the node ; Definition at line 3926 of file TGeoManager.cxx. ◆ SortOverlaps(). void TGeoManager::SortOverlaps ; (; ). Sort overlaps by decreasing overlap distance. Extrusions comes first. ; ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:140269,Availability,down,down,140269,"Volume * ; vol). inline . Definition at line 235 of file TGeoManager.h. ◆ SetVerboseLevel(). void TGeoManager::SetVerboseLevel ; (; Int_t ; vl). static . Return current verbosity level (static function). ; Definition at line 4074 of file TGeoManager.cxx. ◆ SetVisDensity(). void TGeoManager::SetVisDensity ; (; Double_t ; density = 0.01). Set density threshold. ; Volumes with densities lower than this become transparent. ; Definition at line 2449 of file TGeoManager.cxx. ◆ SetVisibility(). void TGeoManager::SetVisibility ; (; TObject * ; obj, . Bool_t ; vis . ). Set visibility for a volume. ; Definition at line 1060 of file TGeoManager.cxx. ◆ SetVisLevel(). void TGeoManager::SetVisLevel ; (; Int_t ; level = 3). set default level down to which visualization is performed ; Definition at line 2459 of file TGeoManager.cxx. ◆ SetVisOption(). void TGeoManager::SetVisOption ; (; Int_t ; option = 0). set drawing mode : . option=0 (default) all nodes drawn down to vislevel; option=1 leaves and nodes at vislevel drawn; option=2 path is drawn; option=4 visibility changed . Definition at line 2426 of file TGeoManager.cxx. ◆ SetVolumeAttribute(). void TGeoManager::SetVolumeAttribute ; (; const char * ; name, . const char * ; att, . Int_t ; val . ). Set volume attributes in G3 style. ; Definition at line 2308 of file TGeoManager.cxx. ◆ SizeOf(). ULong_t TGeoManager::SizeOf ; (; const TGeoNode * ; node, . Option_t * ; option . ). virtual . computes the total size in bytes of the branch starting with node. ; The option can specify if all the branch has to be parsed or only the node ; Definition at line 3926 of file TGeoManager.cxx. ◆ SortOverlaps(). void TGeoManager::SortOverlaps ; (; ). Sort overlaps by decreasing overlap distance. Extrusions comes first. ; Definition at line 2476 of file TGeoManager.cxx. ◆ Step(). TGeoNode * TGeoManager::Step ; (; Bool_t ; is_geom = kTRUE, . Bool_t ; cross = kTRUE . ). Make a rectilinear step of length fStep from current point (fPoint) on current d",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:17803,Deployability,update,updates,17803,"xpensive geometries. In future there will be a limitation on the maximum number of nodes to be visualized. opt=2; only the clicked volume is visualized. This is automatically set by TGeoVolume::DrawOnly() method; opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method; The current view can be exploded in cartesian, cylindrical or spherical coordinates : TGeoManager::SetExplodedView(Int_t opt). Options may be :; 0 - default (no bombing); 1 - cartesian coordinates. The bomb factor on each axis can be set with TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R are considered . 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; TGeoVolume::SetVisibility() : set volume visibility.; TGeoVolume::VisibleDaughters() : set daughters visibility. All these actions automatically updates the current view if any. Checking the geometry; Several checking methods are accessible from the volume context menu. They generally apply only to the visible parts of the drawn geometry in order to ease geometry checking, and their implementation is in the TGeoChecker class from the painting package.; Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z). This method is drawing the daughters of the volume containing the point one level down, printing the path to the deepest physical node holding this point. It also computes the closest distance to any boundary. The point will be drawn in red, as well as a sphere having this closest distance as radius. In case a non-zero distance is given by the user as fifth argument of CheckPoint, this distance will be used as radius of the safety sphere. Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and it will draw this volume with current vis",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:123383,Deployability,continuous,continuous,123383,"er; theta1 polar angle for axis X; phi1 azimuthal angle for axis X; theta2 polar angle for axis Y; phi2 azimuthal angle for axis Y; theta3 polar angle for axis Z; phi3 azimuthal angle for axis Z . Definition at line 1276 of file TGeoManager.cxx. ◆ Medium(). TGeoMedium * TGeoManager::Medium ; (; const char * ; name, . Int_t ; numed, . Int_t ; nmat, . Int_t ; isvol, . Int_t ; ifield, . Double_t ; fieldm, . Double_t ; tmaxfd, . Double_t ; stemax, . Double_t ; deemax, . Double_t ; epsil, . Double_t ; stmin . ). Create tracking medium. . numed tracking medium number assigned; name tracking medium name; nmat material number; isvol sensitive volume flag; ifield magnetic field; fieldm max. field value (kilogauss); tmaxfd max. angle due to field (deg/step); stemax max. step allowed; deemax max. fraction of energy lost in a step; epsil tracking precision (cm); stmin min. step due to continuous processes (cm); ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking performed with g3helix; ifield = 3 if tracking performed with g3helx3. . Definition at line 1331 of file TGeoManager.cxx. ◆ Mixture() [1/2]. TGeoMaterial * TGeoManager::Mixture ; (; const char * ; name, . Double_t * ; a, . Double_t * ; z, . Double_t ; dens, . Int_t ; nelem, . Double_t * ; wmat, . Int_t ; uid . ). Create mixture OR COMPOUND IMAT as composed by THE BASIC nelem materials defined by arrays A,Z and WMAT, having an unique id. ; Definition at line 1306 of file TGeoManager.cxx. ◆ Mixture() [2/2]. TGeoMaterial * TGeoManager::Mixture ; (; const char * ; name, . Float_t * ; a, . Float_t * ; z, . Double_t ; dens, . Int_t ; nelem, . Float_t * ; wmat, . Int_t ; uid . ). Create mixture OR COMPOUND IMAT as composed by THE BASIC nelem materials defined by arrays A,Z and WMAT, having an unique id. ; Definition at line 1296 of file TGeoManager.cxx. ◆ ModifiedPad(). void TGeoManager::ModifiedPad ; (; ); const. Send ""Modified"" signal",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:123306,Energy Efficiency,energy,energy,123306,"_t ; phi1, . Double_t ; theta2, . Double_t ; phi2, . Double_t ; theta3, . Double_t ; phi3 . ). Create rotation matrix named 'mat<index>'. . index rotation matrix number; theta1 polar angle for axis X; phi1 azimuthal angle for axis X; theta2 polar angle for axis Y; phi2 azimuthal angle for axis Y; theta3 polar angle for axis Z; phi3 azimuthal angle for axis Z . Definition at line 1276 of file TGeoManager.cxx. ◆ Medium(). TGeoMedium * TGeoManager::Medium ; (; const char * ; name, . Int_t ; numed, . Int_t ; nmat, . Int_t ; isvol, . Int_t ; ifield, . Double_t ; fieldm, . Double_t ; tmaxfd, . Double_t ; stemax, . Double_t ; deemax, . Double_t ; epsil, . Double_t ; stmin . ). Create tracking medium. . numed tracking medium number assigned; name tracking medium name; nmat material number; isvol sensitive volume flag; ifield magnetic field; fieldm max. field value (kilogauss); tmaxfd max. angle due to field (deg/step); stemax max. step allowed; deemax max. fraction of energy lost in a step; epsil tracking precision (cm); stmin min. step due to continuous processes (cm); ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking performed with g3helix; ifield = 3 if tracking performed with g3helx3. . Definition at line 1331 of file TGeoManager.cxx. ◆ Mixture() [1/2]. TGeoMaterial * TGeoManager::Mixture ; (; const char * ; name, . Double_t * ; a, . Double_t * ; z, . Double_t ; dens, . Int_t ; nelem, . Double_t * ; wmat, . Int_t ; uid . ). Create mixture OR COMPOUND IMAT as composed by THE BASIC nelem materials defined by arrays A,Z and WMAT, having an unique id. ; Definition at line 1306 of file TGeoManager.cxx. ◆ Mixture() [2/2]. TGeoMaterial * TGeoManager::Mixture ; (; const char * ; name, . Float_t * ; a, . Float_t * ; z, . Double_t ; dens, . Int_t ; nelem, . Float_t * ; wmat, . Int_t ; uid . ). Create mixture OR COMPOUND IMAT as composed by THE BASIC nelem materials defined by arrays A,Z a",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:524,Integrability,interface,interface,524,". ROOT: TGeoManager Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Attributes |; Private Types |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TGeoManager Class ReferenceThe Geometry Package » Geometry classes. ; The manager class for any TGeo geometry. ; Provides user interface for geometry creation, navigation, state querying, visualization, IO, geometry checking and other utilities. General architecture; The ROOT geometry package is a tool designed for building, browsing, tracking and visualizing a detector geometry. The code is independent from other external MC for simulation, therefore it does not contain any constraints related to physics. However, the package defines a number of hooks for tracking, such as media, materials, magnetic field or track state flags, in order to allow interfacing to tracking MC's. The final goal is to be able to use the same geometry for several purposes, such as tracking, reconstruction or visualization, taking advantage of the ROOT features related to bookkeeping, I/O, histogramming, browsing and GUI's.; The geometrical modeler is the most important component of the package and it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"".; The architecture of the modeler is a combination between a GEANT-like containment scheme and a normal CSG binary tree at the level of shapes. An important common feature of all detector geometry descriptions is the mother-daughter concept. This is the most natural approach when tracking is concerned and imposes a set of constraints to the way geometry is defined. Constructive solid geom",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:16691,Integrability,depend,depending,16691,". These last two can be fully expanded, any intermediate volume/node in the browser being subject of direct access context menu operations (right mouse button click). All user utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the context menu. Drawing the geometry; Any logical volume can be drawn via TGeoVolume::Draw() member function. This can be directly accessed from the context menu of the volume object directly from the browser. There are several drawing options that can be set with TGeoManager::SetVisOption(Int_t opt) method :; opt=0; only the content of the volume is drawn, N levels down (default N=3). This is the default behavior. The number of levels to be drawn can be changed via TGeoManager::SetVisLevel(Int_t level) method. opt=1; the final leaves (e.g. daughters with no containment) of the branch starting from volume are drawn down to the current number of levels. WARNING : This mode is memory consuming depending of the size of geometry, so drawing from top level within this mode should be handled with care for expensive geometries. In future there will be a limitation on the maximum number of nodes to be visualized. opt=2; only the clicked volume is visualized. This is automatically set by TGeoVolume::DrawOnly() method; opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method; The current view can be exploded in cartesian, cylindrical or spherical coordinates : TGeoManager::SetExplodedView(Int_t opt). Options may be :; 0 - default (no bombing); 1 - cartesian coordinates. The bomb factor on each axis can be set with TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R are considered . 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; TGeoVolume::SetVisibility() : set volume visibility.; TGeoVolume::VisibleDaugh",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:38575,Integrability,rout,rout,38575,"1, Double_t phi2);  Make in one step a volume pointing to a cone segment shape with given medium. ;  ; TGeoVolume * MakeCtub (const char *name, TGeoMedium *medium, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz);  Make in one step a volume pointing to a tube segment shape with given medium. ;  ; TGeoVolume * MakeEltu (const char *name, TGeoMedium *medium, Double_t a, Double_t b, Double_t dz);  Make in one step a volume pointing to a tube shape with given medium. ;  ; TGeoVolume * MakeGtra (const char *name, TGeoMedium *medium, Double_t dz, Double_t theta, Double_t phi, Double_t twist, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2);  Make in one step a volume pointing to a twisted trapezoid shape with given medium. ;  ; TGeoVolume * MakeHype (const char *name, TGeoMedium *medium, Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz);  Make in one step a volume pointing to a tube shape with given medium. ;  ; TGeoVolume * MakePara (const char *name, TGeoMedium *medium, Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi);  Make in one step a volume pointing to a parallelepiped shape with given medium. ;  ; TGeoVolume * MakeParaboloid (const char *name, TGeoMedium *medium, Double_t rlo, Double_t rhi, Double_t dz);  Make in one step a volume pointing to a tube shape with given medium. ;  ; TGeoVolume * MakePcon (const char *name, TGeoMedium *medium, Double_t phi, Double_t dphi, Int_t nz);  Make in one step a volume pointing to a polycone shape with given medium. ;  ; TGeoVolume * MakePgon (const char *name, TGeoMedium *medium, Double_t phi, Double_t dphi, Int_t nedges, Int_t nz);  Make in one step a volume pointing to a polygone shape with given medium. ;  ; TGeoPhysicalNode * MakePhysicalNode (const char *path=nullptr);  Makes a physical node correspo",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:54095,Integrability,message,message,54095,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:54516,Integrability,message,message,54516,"Primitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:55506,Integrability,message,message,55506,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:58459,Integrability,message,message,58459,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void ClearThreadsMap ();  Clear the current map of threads. ;  ; static const char * DeclFileName ();  ; static EDefaultUnits GetDefaultUnits ();  ; static UInt_t GetExportPrecision",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:58832,Integrability,message,message,58832," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void ClearThreadsMap ();  Clear the current map of threads. ;  ; static const char * DeclFileName ();  ; static EDefaultUnits GetDefaultUnits ();  ; static UInt_t GetExportPrecision ();  ; static Int_t GetMaxDaughters ();  Return maximum number of daughters of a volume used in the geometry. ;  ; static Int_t GetMaxLevels ();  Return maximum number of levels used in the geometry. ;  ; static Int_t GetMaxXtruVert ();  Return maximum number of vertices for an xtru shape used. ;  ; static Int_t GetNumThreads ();  Returns number of threads that were set t",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:62405,Integrability,message,messages,62405,"at ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoManager (const TGeoManager &)=delete;  Default units in GDML if not explicit in some tags. ;  ; TGeoManager & operator= (const TGeoManager &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Attributes; static EDefaultUnits fgDefaultUnits = TGeoManager::kRootUnits;  Precision to be used in ASCII exports. ;  ; static UInt_t fgExportPrecision = 17;  Maximum number of Xtru vertices. ;  ; static Bool_t fgLock = kFALSE;  mutex for navigator booking in MT mode ;  ; static Int_t fgMaxDaughters = 1;  Maximum level in geometry. ;  ; static Int_t fgMaxLevel = 1;  Verbosity level for Info messages (no IO). ;  ; static Int_t fgMaxXtruVert = 1;  Maximum number of daughters. ;  ; static std::mutex fgMutex;  ; static Int_t fgVerboseLevel = 1;  Lock preventing a second geometry to be loaded. ;  . Private Types; typedef std::map< std::string, Double_t > ConstPropMap_t;  ; typedef std::map< std::thread::id, TGeoNavigatorArray * > NavigatorsMap_t;  bits used for voxelization ;  ; typedef NavigatorsMap_t::iterator NavigatorsMapIt_t;  ; typedef std::map< std::thread::id, Int_t > ThreadsMap_t;  ; typedef ThreadsMap_t::const_iterator ThreadsMapIt_t;  . Private Member Functions; void Init ();  Initialize manager class. ;  ; Bool_t InitArrayPNE () const;  Initialize PNE array for fast access via index and unique-id. ;  ; Bool_t InsertPNEId (Int_t uid, Int_t ientry);  Insert a PN entry in the sorted array of indexes. ;  ; Bool_t IsLoopingVolumes () const;  ; void SetLoopVolumes (Bool_t flag=kTRUE);  ; void UpdateElements ();  Update element flags when geometry is",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:104705,Integrability,message,messages,104705," Definition at line 512 of file TGeoManager.h. ◆ GetTrack(). TVirtualGeoTrack * TGeoManager::GetTrack ; (; Int_t ; index). inline . Definition at line 373 of file TGeoManager.h. ◆ GetTrackIndex(). Int_t TGeoManager::GetTrackIndex ; (; Int_t ; id); const. Get index for track id, -1 if not found. ; Definition at line 2228 of file TGeoManager.cxx. ◆ GetTrackOfId(). TVirtualGeoTrack * TGeoManager::GetTrackOfId ; (; Int_t ; id); const. Get track with a given ID. ; Definition at line 2200 of file TGeoManager.cxx. ◆ GetUID(). Int_t TGeoManager::GetUID ; (; const char * ; volname); const. Retrieve unique id for a volume name. Return -1 if name not found. ; Definition at line 2978 of file TGeoManager.cxx. ◆ GetUserPaintVolume(). TGeoVolume * TGeoManager::GetUserPaintVolume ; (; ); const. inline . Definition at line 216 of file TGeoManager.h. ◆ GetVerboseLevel(). Int_t TGeoManager::GetVerboseLevel ; (; ). static . Set verbosity level (static function). . 0 - suppress messages related to geom-painter visibility level; 1 - default value . Definition at line 4066 of file TGeoManager.cxx. ◆ GetVirtualLevel(). Int_t TGeoManager::GetVirtualLevel ; (; ). Find level of virtuality of current overlapping node (number of levels up having the same tracking media. ; Definition at line 2166 of file TGeoManager.cxx. ◆ GetVisDensity(). Double_t TGeoManager::GetVisDensity ; (; ); const. inline . Definition at line 217 of file TGeoManager.h. ◆ GetVisLevel(). Int_t TGeoManager::GetVisLevel ; (; ); const. Returns current depth to which geometry is drawn. ; Definition at line 2149 of file TGeoManager.cxx. ◆ GetVisOption(). Int_t TGeoManager::GetVisOption ; (; ); const. Returns current depth to which geometry is drawn. ; Definition at line 2157 of file TGeoManager.cxx. ◆ GetVolume() [1/2]. TGeoVolume * TGeoManager::GetVolume ; (; const char * ; name); const. Search for a named volume. All trailing blanks stripped. ; Definition at line 2942 of file TGeoManager.cxx. ◆ GetVolume() [2/2]. TGeoVolume *",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:116126,Integrability,rout,rout,116126," step a volume pointing to a tube segment shape with given medium. ; Definition at line 3247 of file TGeoManager.cxx. ◆ MakeEltu(). TGeoVolume * TGeoManager::MakeEltu ; (; const char * ; name, . TGeoMedium * ; medium, . Double_t ; a, . Double_t ; b, . Double_t ; dz . ). Make in one step a volume pointing to a tube shape with given medium. ; Definition at line 3222 of file TGeoManager.cxx. ◆ MakeGtra(). TGeoVolume * TGeoManager::MakeGtra ; (; const char * ; name, . TGeoMedium * ; medium, . Double_t ; dz, . Double_t ; theta, . Double_t ; phi, . Double_t ; twist, . Double_t ; h1, . Double_t ; bl1, . Double_t ; tl1, . Double_t ; alpha1, . Double_t ; h2, . Double_t ; bl2, . Double_t ; tl2, . Double_t ; alpha2 . ). Make in one step a volume pointing to a twisted trapezoid shape with given medium. ; Definition at line 3321 of file TGeoManager.cxx. ◆ MakeHype(). TGeoVolume * TGeoManager::MakeHype ; (; const char * ; name, . TGeoMedium * ; medium, . Double_t ; rin, . Double_t ; stin, . Double_t ; rout, . Double_t ; stout, . Double_t ; dz . ). Make in one step a volume pointing to a tube shape with given medium. ; Definition at line 3230 of file TGeoManager.cxx. ◆ MakePara(). TGeoVolume * TGeoManager::MakePara ; (; const char * ; name, . TGeoMedium * ; medium, . Double_t ; dx, . Double_t ; dy, . Double_t ; dz, . Double_t ; alpha, . Double_t ; theta, . Double_t ; phi . ). Make in one step a volume pointing to a parallelepiped shape with given medium. ; Definition at line 3177 of file TGeoManager.cxx. ◆ MakeParaboloid(). TGeoVolume * TGeoManager::MakeParaboloid ; (; const char * ; name, . TGeoMedium * ; medium, . Double_t ; rlo, . Double_t ; rhi, . Double_t ; dz . ). Make in one step a volume pointing to a tube shape with given medium. ; Definition at line 3239 of file TGeoManager.cxx. ◆ MakePcon(). TGeoVolume * TGeoManager::MakePcon ; (; const char * ; name, . TGeoMedium * ; medium, . Double_t ; phi, . Double_t ; dphi, . Int_t ; nz . ). Make in one step a volume pointing to a p",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:147598,Integrability,message,messages,147598, used in ASCII exports. ; Definition at line 56 of file TGeoManager.h. ◆ fGDMLMatrices. TObjArray* TGeoManager::fGDMLMatrices. private . Definition at line 101 of file TGeoManager.h. ◆ fgExportPrecision. UInt_t TGeoManager::fgExportPrecision = 17. staticprotected . Maximum number of Xtru vertices. ; Definition at line 55 of file TGeoManager.h. ◆ fGLMatrix. TGeoHMatrix* TGeoManager::fGLMatrix. private . Definition at line 128 of file TGeoManager.h. ◆ fgLock. Bool_t TGeoManager::fgLock = kFALSE. staticprotected . mutex for navigator booking in MT mode ; Definition at line 50 of file TGeoManager.h. ◆ fgLockNavigators. Bool_t TGeoManager::fgLockNavigators = kFALSE. staticprivate . Number of registered threads. ; Definition at line 122 of file TGeoManager.h. ◆ fgMaxDaughters. Int_t TGeoManager::fgMaxDaughters = 1. staticprotected . Maximum level in geometry. ; Definition at line 53 of file TGeoManager.h. ◆ fgMaxLevel. Int_t TGeoManager::fgMaxLevel = 1. staticprotected . Verbosity level for Info messages (no IO). ; Definition at line 52 of file TGeoManager.h. ◆ fgMaxXtruVert. Int_t TGeoManager::fgMaxXtruVert = 1. staticprotected . Maximum number of daughters. ; Definition at line 54 of file TGeoManager.h. ◆ fgMutex. std::mutex TGeoManager::fgMutex. staticprotected . Definition at line 49 of file TGeoManager.h. ◆ fgNumThreads. Int_t TGeoManager::fgNumThreads = 0. staticprivate . Thread id's map. ; Definition at line 121 of file TGeoManager.h. ◆ fGShapes. TObjArray* TGeoManager::fGShapes. private . Definition at line 97 of file TGeoManager.h. ◆ fgThreadId. TGeoManager::ThreadsMap_t * TGeoManager::fgThreadId = nullptr. staticprivate . Map between thread id's and navigator arrays. ; Definition at line 120 of file TGeoManager.h. ◆ fgVerboseLevel. Int_t TGeoManager::fgVerboseLevel = 1. staticprotected . Lock preventing a second geometry to be loaded. ; Definition at line 51 of file TGeoManager.h. ◆ fGVolumes. TObjArray* TGeoManager::fGVolumes. private . list of runtime shapes ; ,MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:4289,Modifiability,inherit,inherits,4289,"e daughter node of several other volumes), every volume becoming a branch in this graph. Any volume in the logical graph can become the actual top volume at run time (see TGeoManager::SetTopVolume()). All functionalities of the modeler will behave in this case as if only the corresponding branch starting from this volume is the registered geometry. A given volume can be positioned several times in the geometry. A volume can be divided according default or user-defined patterns, creating automatically the list of division nodes inside. The elementary volumes created during the dividing process follow the same scheme as usual volumes, therefore it is possible to position further geometrical structures inside or to divide them further more (see TGeoVolume::Divide()).; The primitive shapes supported by the package are basically the GEANT3 shapes (see class TGeoShape), arbitrary wedges with eight vertices on two parallel planes. All basic primitives inherits from class TGeoBBox since the bounding box of a solid is essential for the tracking algorithms. They also implement the virtual methods defined in the virtual class TGeoShape (point and segment classification). User-defined primitives can be directly plugged into the modeler provided that they override these methods. Composite shapes will be soon supported by the modeler. In order to build a TGeoCompositeShape, one will have to define first the primitive components. The object that handle boolean operations among components is called TGeoBoolCombinator and it has to be constructed providing a string boolean expression between the components names. Example for building a simple geometry; ; void rootgeom(bool vis = true); {; // gStyle->SetCanvasPreferGL(true);; ; TGeoManager *geom = new TGeoManager(""simple1"", ""Simple geometry"");; ; //--- define some materials; TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; // //--- define some media; TGeoMedium",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:19351,Modifiability,enhance,enhance,19351,"the deepest physical node holding this point. It also computes the closest distance to any boundary. The point will be drawn in red, as well as a sphere having this closest distance as radius. In case a non-zero distance is given by the user as fifth argument of CheckPoint, this distance will be used as radius of the safety sphere. Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and it will draw this volume with current visualization settings. Random points are generated in the bounding box of the top drawn volume. The points are classified and drawn with the color of their deepest container. Only points in visible nodes will be drawn. Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and will shoot rays from a given point in the local reference frame with random directions. The intersections with displayed nodes will appear as segments having the color of the touched node. Drawn geometry will be then made invisible in order to enhance rays. Definition at line 44 of file TGeoManager.h. Public Types; enum  EDefaultUnits { kG4Units = 0; , kRootUnits = 1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoManager ();  Default constructor. ;  ;  TGeoManager (const char *name, const char *title);  Constructor. ;  ;  ~TGeoManager () override;  Destructor. ;  ; void AddBorderSurface (",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:19498,Modifiability,inherit,inherited,19498,"ro distance is given by the user as fifth argument of CheckPoint, this distance will be used as radius of the safety sphere. Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and it will draw this volume with current visualization settings. Random points are generated in the bounding box of the top drawn volume. The points are classified and drawn with the color of their deepest container. Only points in visible nodes will be drawn. Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and will shoot rays from a given point in the local reference frame with random directions. The intersections with displayed nodes will appear as segments having the color of the touched node. Drawn geometry will be then made invisible in order to enhance rays. Definition at line 44 of file TGeoManager.h. Public Types; enum  EDefaultUnits { kG4Units = 0; , kRootUnits = 1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoManager ();  Default constructor. ;  ;  TGeoManager (const char *name, const char *title);  Constructor. ;  ;  ~TGeoManager () override;  Destructor. ;  ; void AddBorderSurface (TGeoBorderSurface *surf);  Add border surface;. ;  ; void AddGDMLMatrix (TGDMLMatrix *mat);  Add GDML matrix;. ;  ; Int_t AddMaterial (const TGeoMaterial *material);  Add a material to the list. Returns index ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:50994,Modifiability,inherit,inherited,50994," (const Double_t *top, Double_t *master) const;  Convert coordinates from top volume frame to master. ;  ; Int_t TransformVolumeToAssembly (const char *vname);  Transform all volumes named VNAME to assemblies. The volumes must be virtual. ;  ; void UnbombTranslation (const Double_t *tr, Double_t *bombtr);  Get the new 'unbombed' translation vector according current exploded view mode. ;  ; void ViewLeaves (Bool_t flag=kTRUE);  Set visualization option (leaves only OR all volumes) ;  ; TGeoVolume * Volume (const char *name, const char *shape, Int_t nmed, Double_t *upar, Int_t npar=0);  Create a volume in GEANT3 style. ;  ; TGeoVolume * Volume (const char *name, const char *shape, Int_t nmed, Float_t *upar, Int_t npar=0);  Create a volume in GEANT3 style. ;  ; Double_t Weight (Double_t precision=0.01, Option_t *option=""va"");  Estimate weight of volume VOL with a precision SIGMA(W)/W better than PRECISION. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:52734,Modifiability,inherit,inherited,52734,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  D",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:53725,Modifiability,inherit,inheritance,53725,"ions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:55604,Modifiability,inherit,inherits,55604,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:55721,Modifiability,inherit,inherits,55721,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:60901,Modifiability,inherit,inherited,60901,";  Check lock state. ;  ; static Bool_t LockDefaultUnits (Bool_t new_value);  ; static void LockGeometry ();  Lock current geometry so that no other geometry can be imported. ;  ; static Int_t Parse (const char *expr, TString &expr1, TString &expr2, TString &expr3);  Parse a string boolean expression and do a syntax check. ;  ; static void SetDefaultUnits (EDefaultUnits new_value);  ; static void SetExportPrecision (UInt_t prec);  ; static void SetNavigatorsLock (Bool_t flag);  Set the lock for navigators. ;  ; static void SetVerboseLevel (Int_t vl);  Return current verbosity level (static function). ;  ; static Int_t ThreadId ();  Translates the current thread id to an ordinal number. ;  ; static void UnlockGeometry ();  Unlock current geometry. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoManager (const TGeoManager &)=delete;  Default units in GDML if not explicit in some tags. ;  ; TGeoManager & operator= (const TGeoManager &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Attributes; static EDefaultUnits fgDefaultUnits = TGeoManager::kRootUnits;  Precision to be used ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:61111,Modifiability,inherit,inherited,61111,";  Check lock state. ;  ; static Bool_t LockDefaultUnits (Bool_t new_value);  ; static void LockGeometry ();  Lock current geometry so that no other geometry can be imported. ;  ; static Int_t Parse (const char *expr, TString &expr1, TString &expr2, TString &expr3);  Parse a string boolean expression and do a syntax check. ;  ; static void SetDefaultUnits (EDefaultUnits new_value);  ; static void SetExportPrecision (UInt_t prec);  ; static void SetNavigatorsLock (Bool_t flag);  Set the lock for navigators. ;  ; static void SetVerboseLevel (Int_t vl);  Return current verbosity level (static function). ;  ; static Int_t ThreadId ();  Translates the current thread id to an ordinal number. ;  ; static void UnlockGeometry ();  Unlock current geometry. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoManager (const TGeoManager &)=delete;  Default units in GDML if not explicit in some tags. ;  ; TGeoManager & operator= (const TGeoManager &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Attributes; static EDefaultUnits fgDefaultUnits = TGeoManager::kRootUnits;  Precision to be used ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:61811,Modifiability,inherit,inherited,61811,"ock current geometry. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoManager (const TGeoManager &)=delete;  Default units in GDML if not explicit in some tags. ;  ; TGeoManager & operator= (const TGeoManager &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Attributes; static EDefaultUnits fgDefaultUnits = TGeoManager::kRootUnits;  Precision to be used in ASCII exports. ;  ; static UInt_t fgExportPrecision = 17;  Maximum number of Xtru vertices. ;  ; static Bool_t fgLock = kFALSE;  mutex for navigator booking in MT mode ;  ; static Int_t fgMaxDaughters = 1;  Maximum level in geometry. ;  ; static Int_t fgMaxLevel = 1;  Verbosity level for Info messages (no IO). ;  ; static Int_t fgMaxXtruVert = 1;  Maximum number of daughters. ;  ; static std::mutex fgMutex;  ; static Int_t fgVerboseLevel = 1;  Lock preventing a second geometry to be loaded. ;  . Private Types; typedef std::map< std::string, Double_t > ConstPropMap_t;  ; typedef std::map< std::thread::id, TGeoNavigatorArray * > NavigatorsMap_t;  bits used for voxelization ;  ; typedef NavigatorsMap_t::iterator NavigatorsMap",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:66845,Modifiability,inherit,inherited,66845,"  ; Bool_t fStreamVoxels;  flag volume lists loop ;  ; Bool_t fTimeCut;  ; Double_t fTmax;  lower time limit for tracks drawing ;  ; Double_t fTmin;  highest range for phi cut ;  ; TGeoNode * fTopNode;  top level volume in geometry ;  ; TGeoVolume * fTopVolume;  current volume ;  ; TObjArray * fTracks;  list of runtime volumes ;  ; TObjArray * fUniqueVolumes;  ; Bool_t fUsePWNav;  Raytrace mode: 0=normal, 1=pass through, 2=transparent. ;  ; TGeoVolume * fUserPaintVolume;  volume currently painted ;  ; Int_t * fValuePNEId;  ; Double_t fVisDensity;  particles to be drawn ;  ; Int_t fVisLevel;  ; Int_t fVisOption;  ; TObjArray * fVolumes;  . Static Private Attributes; static Bool_t fgLockNavigators = kFALSE;  Number of registered threads. ;  ; static Int_t fgNumThreads = 0;  Thread id's map. ;  ; static ThreadsMap_t * fgThreadId = nullptr;  Map between thread id's and navigator arrays. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoManager.h>. Inheritance diagram for TGeoManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ConstPropMap_t. typedef std::map<std::string, Double_t> TGeoManager::ConstPropMap_t. private . Definition at line 117 of file TGeoManager.h. ◆ NavigatorsMap_t. typedef std::map<std::thread::id, TGeoNavigatorArray *> TGeoManager::NavigatorsMap_t. private . bits used for voxelization ; Definition at line 112 of file TGeoManager.h. ◆ NavigatorsMapIt_t. typedef NavigatorsMap_t::iterator TGeoManager::NavigatorsMapIt_t. private . Definition at line 113 of file TGeoManager.h. ◆ ThreadsMap_t. typedef std::map<std::thread::id, Int_t> TGeoManager::ThreadsMap_t. private . Definition at line 114 of file TGeoManager.h. ◆ ThreadsMapIt_t. typedef ThreadsMap_t::const_iterator TGeoManager::ThreadsMapIt_t. private .",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:66938,Modifiability,inherit,inherited,66938,"  ; Bool_t fStreamVoxels;  flag volume lists loop ;  ; Bool_t fTimeCut;  ; Double_t fTmax;  lower time limit for tracks drawing ;  ; Double_t fTmin;  highest range for phi cut ;  ; TGeoNode * fTopNode;  top level volume in geometry ;  ; TGeoVolume * fTopVolume;  current volume ;  ; TObjArray * fTracks;  list of runtime volumes ;  ; TObjArray * fUniqueVolumes;  ; Bool_t fUsePWNav;  Raytrace mode: 0=normal, 1=pass through, 2=transparent. ;  ; TGeoVolume * fUserPaintVolume;  volume currently painted ;  ; Int_t * fValuePNEId;  ; Double_t fVisDensity;  particles to be drawn ;  ; Int_t fVisLevel;  ; Int_t fVisOption;  ; TObjArray * fVolumes;  . Static Private Attributes; static Bool_t fgLockNavigators = kFALSE;  Number of registered threads. ;  ; static Int_t fgNumThreads = 0;  Thread id's map. ;  ; static ThreadsMap_t * fgThreadId = nullptr;  Map between thread id's and navigator arrays. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoManager.h>. Inheritance diagram for TGeoManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ConstPropMap_t. typedef std::map<std::string, Double_t> TGeoManager::ConstPropMap_t. private . Definition at line 117 of file TGeoManager.h. ◆ NavigatorsMap_t. typedef std::map<std::thread::id, TGeoNavigatorArray *> TGeoManager::NavigatorsMap_t. private . bits used for voxelization ; Definition at line 112 of file TGeoManager.h. ◆ NavigatorsMapIt_t. typedef NavigatorsMap_t::iterator TGeoManager::NavigatorsMapIt_t. private . Definition at line 113 of file TGeoManager.h. ◆ ThreadsMap_t. typedef std::map<std::thread::id, Int_t> TGeoManager::ThreadsMap_t. private . Definition at line 114 of file TGeoManager.h. ◆ ThreadsMapIt_t. typedef ThreadsMap_t::const_iterator TGeoManager::ThreadsMapIt_t. private .",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:10847,Performance,perform,performedDefinition,10847,"system.rootrc,; //it will appear in the GL viewer; //#Viewer3D.DefaultDrawOption: ogl; ; geom->SetVisLevel(4);; if (vis) top->Draw(""ogle"");; }; ; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; kYellow@ kYellowDefinition Rtypes.h:66; gGeoIdentityR__EXTERN TGeoIdentity * gGeoIdentityDefinition TGeoMatrix.h:537; R; TGeoArb8Definition TGeoArb8.h:17; TGeoArb8::SetVertexvirtual void SetVertex(Int_t vnum, Double_t x, Double_t y); TGeoCombiTransClass describing rotation + translation.Definition TGeoMatrix.h:317; TGeoManagerThe manager class for any TGeo geometry.Definition TGeoManager.h:44; TGeoManager::TGeoManagerTGeoManager()Default constructor.Definition TGeoManager.cxx:311; TGeoManager::MakeArb8TGeoVolume * MakeArb8(const char *name, TGeoMedium *medium, Double_t dz, Double_t *vertices=nullptr)Make an TGeoArb8 volume.Definition TGeoManager.cxx:3161; TGeoManager::SetVisLevelvoid SetVisLevel(Int_t level=3)set default level down to which visualization is performedDefinition TGeoManager.cxx:2459; TGeoManager::CloseGeometryvoid CloseGeometry(Option_t *option=""d"")Closing geometry implies checking the geometry validity, fixing shapes with negative parameters (run-...Definition TGeoManager.cxx:1480; TGeoManager::MakeBoxTGeoVolume * MakeBox(const char *name, TGeoMedium *medium, Double_t dx, Double_t dy, Double_t dz)Make in one step a volume pointing to a box shape with given medium.Definition TGeoManager.cxx:3169; TGeoManager::SetTopVolumevoid SetTopVolume(TGeoVolume *vol)Set the top volume and corresponding node as starting point of the geometry.Definition TGeoManager.cxx:3655; TGeoManager::MakeTubsTGeoVolume * MakeTubs(const char *name, TGeoMedium *medium, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2)Make in one step a volume pointing to a tube segment shape with given medium.Definition TGeoManager.cxx:3213; TGeoMaterialBase class describing materials.Definition TGeoMateri",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:13805,Performance,cache,cache,13805,"e::GetShapeTGeoShape * GetShape() constDefinition TGeoVolume.h:190; double; rootgeomTGeoNode * rootgeom()Definition eveGeoBrowser.C:47; End_Macro. TGeoManager - the manager class for the geometry package.; TGeoManager class is embedding all the API needed for building and tracking a geometry. It defines a global pointer (gGeoManager) in order to be fully accessible from external code. The mechanism of handling multiple geometries at the same time will be soon implemented.; TGeoManager is the owner of all geometry objects defined in a session, therefore users must not try to control their deletion. It contains lists of media, materials, transformations, shapes and volumes. Logical nodes (positioned volumes) are created and destroyed by the TGeoVolume class. Physical nodes and their global transformations are subjected to a caching mechanism due to the sometimes very large memory requirements of logical graph expansion. The caching mechanism is triggered by the total number of physical instances of volumes and the cache manager is a client of TGeoManager. The manager class also controls the painter client. This is linked with ROOT graphical libraries loaded on demand in order to control visualization actions. Rules for building a valid geometry; A given geometry can be built in various ways, but there are mandatory steps that have to be followed in order to be validated by the modeler. There are general rules : volumes needs media and shapes in order to be created, both container and containee volumes must be created before linking them together, and the relative transformation matrix must be provided. All branches must have an upper link point otherwise they will not be considered as part of the geometry. Visibility or tracking properties of volumes can be provided both at build time or after geometry is closed, but global visualization settings (see TGeoPainter class) should not be provided at build time, otherwise the drawing package will be loaded. There is also a",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:13944,Performance,load,loaded,13944,"class for the geometry package.; TGeoManager class is embedding all the API needed for building and tracking a geometry. It defines a global pointer (gGeoManager) in order to be fully accessible from external code. The mechanism of handling multiple geometries at the same time will be soon implemented.; TGeoManager is the owner of all geometry objects defined in a session, therefore users must not try to control their deletion. It contains lists of media, materials, transformations, shapes and volumes. Logical nodes (positioned volumes) are created and destroyed by the TGeoVolume class. Physical nodes and their global transformations are subjected to a caching mechanism due to the sometimes very large memory requirements of logical graph expansion. The caching mechanism is triggered by the total number of physical instances of volumes and the cache manager is a client of TGeoManager. The manager class also controls the painter client. This is linked with ROOT graphical libraries loaded on demand in order to control visualization actions. Rules for building a valid geometry; A given geometry can be built in various ways, but there are mandatory steps that have to be followed in order to be validated by the modeler. There are general rules : volumes needs media and shapes in order to be created, both container and containee volumes must be created before linking them together, and the relative transformation matrix must be provided. All branches must have an upper link point otherwise they will not be considered as part of the geometry. Visibility or tracking properties of volumes can be provided both at build time or after geometry is closed, but global visualization settings (see TGeoPainter class) should not be provided at build time, otherwise the drawing package will be loaded. There is also a list of specific rules : positioned daughters should not extrude their mother or intersect with sisters unless this is specified (see TGeoVolume::AddNodeOverlap()), the top ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:14754,Performance,load,loaded,14754," the sometimes very large memory requirements of logical graph expansion. The caching mechanism is triggered by the total number of physical instances of volumes and the cache manager is a client of TGeoManager. The manager class also controls the painter client. This is linked with ROOT graphical libraries loaded on demand in order to control visualization actions. Rules for building a valid geometry; A given geometry can be built in various ways, but there are mandatory steps that have to be followed in order to be validated by the modeler. There are general rules : volumes needs media and shapes in order to be created, both container and containee volumes must be created before linking them together, and the relative transformation matrix must be provided. All branches must have an upper link point otherwise they will not be considered as part of the geometry. Visibility or tracking properties of volumes can be provided both at build time or after geometry is closed, but global visualization settings (see TGeoPainter class) should not be provided at build time, otherwise the drawing package will be loaded. There is also a list of specific rules : positioned daughters should not extrude their mother or intersect with sisters unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume (containing all geometry tree) must be specified before closing the geometry and must not be positioned - it represents the global reference frame. After building the full geometry tree, the geometry must be closed (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after this process.; Below is the general scheme of the manager class. An interactive session; Provided that a geometry was successfully built and closed (for instance the previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register itself to ROOT and the logical/physical structures will become immediately browsable. The ROOT browser will display starting from ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:24359,Performance,cache,cache,24359," state of the current navigator. ;  ; void CheckPoint (Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.);  Classify a given point. See TGeoChecker::CheckPoint(). ;  ; void CheckShape (TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option);  Test for shape navigation methods. ;  ; void CleanGarbage ();  Clean temporary volumes and shapes from garbage collection. ;  ; void ClearAttributes ();  Reset all attributes to default ones. ;  ; void ClearNavigators ();  Clear all navigators. ;  ; void ClearOverlaps ();  Clear the list of overlaps. ;  ; void ClearPhysicalNodes (Bool_t mustdelete=kFALSE);  Clear the current list of physical nodes, so that we can start over with a new list. ;  ; void ClearShape (const TGeoShape *shape);  Remove a shape from the list of shapes. ;  ; void ClearThreadData () const;  ; void ClearTracks ();  ; void CloseGeometry (Option_t *option=""d"");  Closing geometry implies checking the geometry validity, fixing shapes with negative parameters (run-time shapes)building the cache manager, voxelizing all volumes, counting the total number of physical nodes and registering the manager class to the browser. ;  ; void ConvertReflections ();  Convert all reflections in geometry to normal rotations + reflected shapes. ;  ; void CountLevels ();  Count maximum number of nodes per volume, maximum depth and maximum number of xtru vertices. ;  ; Int_t CountNodes (const TGeoVolume *vol=nullptr, Int_t nlevels=10000, Int_t option=0);  Count the total number of nodes starting from a volume, nlevels down. ;  ; TGeoParallelWorld * CreateParallelWorld (const char *name);  Create a parallel world for prioritised navigation. ;  ; void CreateThreadData () const;  Create thread private data for all geometry objects. ;  ; TGeoNode * CrossBoundaryAndLocate (Bool_t downwards, TGeoNode *skipnode);  Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ;  ; void DefaultAngles ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:25766,Performance,cache,cache,25766,"; void CountLevels ();  Count maximum number of nodes per volume, maximum depth and maximum number of xtru vertices. ;  ; Int_t CountNodes (const TGeoVolume *vol=nullptr, Int_t nlevels=10000, Int_t option=0);  Count the total number of nodes starting from a volume, nlevels down. ;  ; TGeoParallelWorld * CreateParallelWorld (const char *name);  Create a parallel world for prioritised navigation. ;  ; void CreateThreadData () const;  Create thread private data for all geometry objects. ;  ; TGeoNode * CrossBoundaryAndLocate (Bool_t downwards, TGeoNode *skipnode);  Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ;  ; void DefaultAngles ();  Set default angles for a given view. ;  ; void DefaultColors ();  Set default volume colors according to A of material. ;  ; void DisableInactiveVolumes ();  ; TGeoVolume * Division (const char *name, const char *mother, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step, Int_t numed=0, Option_t *option="""");  Create a new volume by dividing an existing one (GEANT3 like) ;  ; void DoBackupState ();  Backup the current state without affecting the cache stack. ;  ; void DoRestoreState ();  Restore a backed-up state without affecting the cache stack. ;  ; void DrawCurrentPoint (Int_t color=2);  Draw current point in the same view. ;  ; void DrawPath (const char *path, Option_t *option="""");  Draw current path. ;  ; void DrawTracks (Option_t *option="""");  Draw tracks over the geometry, according to option. ;  ; virtual void Edit (Option_t *option="""");  Append a pad for this geometry. ;  ; void EnableInactiveVolumes ();  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute mouse actions on this manager. ;  ; virtual Int_t Export (const char *filename, const char *name="""", Option_t *option=""vg"");  Export this geometry to a file. ;  ; TGeoMaterial * FindDuplicateMaterial (const TGeoMaterial *mat) const;  Find if a given material duplicates an existing one. ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:25857,Performance,cache,cache,25857,"e total number of nodes starting from a volume, nlevels down. ;  ; TGeoParallelWorld * CreateParallelWorld (const char *name);  Create a parallel world for prioritised navigation. ;  ; void CreateThreadData () const;  Create thread private data for all geometry objects. ;  ; TGeoNode * CrossBoundaryAndLocate (Bool_t downwards, TGeoNode *skipnode);  Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ;  ; void DefaultAngles ();  Set default angles for a given view. ;  ; void DefaultColors ();  Set default volume colors according to A of material. ;  ; void DisableInactiveVolumes ();  ; TGeoVolume * Division (const char *name, const char *mother, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step, Int_t numed=0, Option_t *option="""");  Create a new volume by dividing an existing one (GEANT3 like) ;  ; void DoBackupState ();  Backup the current state without affecting the cache stack. ;  ; void DoRestoreState ();  Restore a backed-up state without affecting the cache stack. ;  ; void DrawCurrentPoint (Int_t color=2);  Draw current point in the same view. ;  ; void DrawPath (const char *path, Option_t *option="""");  Draw current path. ;  ; void DrawTracks (Option_t *option="""");  Draw tracks over the geometry, according to option. ;  ; virtual void Edit (Option_t *option="""");  Append a pad for this geometry. ;  ; void EnableInactiveVolumes ();  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute mouse actions on this manager. ;  ; virtual Int_t Export (const char *filename, const char *name="""", Option_t *option=""vg"");  Export this geometry to a file. ;  ; TGeoMaterial * FindDuplicateMaterial (const TGeoMaterial *mat) const;  Find if a given material duplicates an existing one. ;  ; TGeoNode * FindNextBoundary (Double_t stepmax=TGeoShape::Big(), const char *path="""", Bool_t frombdr=kFALSE);  Find distance to next boundary and store it in fStep. ;  ; TGeoNode * FindNextBoundaryAndStep (Double_t ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:49089,Performance,perform,performed,49089,"name for a particle having a given pdg. ;  ; void SetPhiRange (Double_t phimin=0., Double_t phimax=360.);  Set cut phi range. ;  ; void SetRTmode (Int_t mode);  Change raytracing mode. ;  ; void SetStartSafe (Bool_t flag=kTRUE);  ; void SetStep (Double_t step);  ; void SetTminTmax (Double_t tmin=0, Double_t tmax=999);  Set time cut interval for drawing tracks. ;  ; void SetTopVisible (Bool_t vis=kTRUE);  make top volume visible on screen ;  ; void SetTopVolume (TGeoVolume *vol);  Set the top volume and corresponding node as starting point of the geometry. ;  ; void SetUseParallelWorldNav (Bool_t flag);  Activate/deactivate usage of parallel world navigation. ;  ; void SetUserPaintVolume (TGeoVolume *vol);  ; void SetVisDensity (Double_t dens=0.01);  Set density threshold. ;  ; void SetVisibility (TObject *obj, Bool_t vis);  Set visibility for a volume. ;  ; void SetVisLevel (Int_t level=3);  set default level down to which visualization is performed ;  ; void SetVisOption (Int_t option=0);  set drawing mode : ;  ; void SetVolumeAttribute (const char *name, const char *att, Int_t val);  Set volume attributes in G3 style. ;  ; virtual ULong_t SizeOf (const TGeoNode *node, Option_t *option);  computes the total size in bytes of the branch starting with node. ;  ; void SortOverlaps ();  Sort overlaps by decreasing overlap distance. Extrusions comes first. ;  ; TGeoNode * Step (Bool_t is_geom=kTRUE, Bool_t cross=kTRUE);  Make a rectilinear step of length fStep from current point (fPoint) on current direction (fDirection). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TGeoManager. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Test (Int_t npoints=1000000, Option_t *option="""");  Check time of finding ""Where am I"" for n points. ;  ; void TestOverlaps (const char *path="""");  Geometry overlap checker based on sampling. ;  ; void TopToMaster (const Double_t *top, Double_t *master) const;  Convert coordinates from top volume fram",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:62599,Performance,load,loaded,62599,"off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoManager (const TGeoManager &)=delete;  Default units in GDML if not explicit in some tags. ;  ; TGeoManager & operator= (const TGeoManager &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Attributes; static EDefaultUnits fgDefaultUnits = TGeoManager::kRootUnits;  Precision to be used in ASCII exports. ;  ; static UInt_t fgExportPrecision = 17;  Maximum number of Xtru vertices. ;  ; static Bool_t fgLock = kFALSE;  mutex for navigator booking in MT mode ;  ; static Int_t fgMaxDaughters = 1;  Maximum level in geometry. ;  ; static Int_t fgMaxLevel = 1;  Verbosity level for Info messages (no IO). ;  ; static Int_t fgMaxXtruVert = 1;  Maximum number of daughters. ;  ; static std::mutex fgMutex;  ; static Int_t fgVerboseLevel = 1;  Lock preventing a second geometry to be loaded. ;  . Private Types; typedef std::map< std::string, Double_t > ConstPropMap_t;  ; typedef std::map< std::thread::id, TGeoNavigatorArray * > NavigatorsMap_t;  bits used for voxelization ;  ; typedef NavigatorsMap_t::iterator NavigatorsMapIt_t;  ; typedef std::map< std::thread::id, Int_t > ThreadsMap_t;  ; typedef ThreadsMap_t::const_iterator ThreadsMapIt_t;  . Private Member Functions; void Init ();  Initialize manager class. ;  ; Bool_t InitArrayPNE () const;  Initialize PNE array for fast access via index and unique-id. ;  ; Bool_t InsertPNEId (Int_t uid, Int_t ientry);  Insert a PN entry in the sorted array of indexes. ;  ; Bool_t IsLoopingVolumes () const;  ; void SetLoopVolumes (Bool_t flag=kTRUE);  ; void UpdateElements ();  Update element flags when geometry is loaded from a file. ;  ; void Voxelize (Option_t *option=nullptr);  Voxelize all non-divided volumes. ;  . Private Attributes; Bool_t fActivity;  flag for GL reflec",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:63384,Performance,load,loaded,63384,"Maximum level in geometry. ;  ; static Int_t fgMaxLevel = 1;  Verbosity level for Info messages (no IO). ;  ; static Int_t fgMaxXtruVert = 1;  Maximum number of daughters. ;  ; static std::mutex fgMutex;  ; static Int_t fgVerboseLevel = 1;  Lock preventing a second geometry to be loaded. ;  . Private Types; typedef std::map< std::string, Double_t > ConstPropMap_t;  ; typedef std::map< std::thread::id, TGeoNavigatorArray * > NavigatorsMap_t;  bits used for voxelization ;  ; typedef NavigatorsMap_t::iterator NavigatorsMapIt_t;  ; typedef std::map< std::thread::id, Int_t > ThreadsMap_t;  ; typedef ThreadsMap_t::const_iterator ThreadsMapIt_t;  . Private Member Functions; void Init ();  Initialize manager class. ;  ; Bool_t InitArrayPNE () const;  Initialize PNE array for fast access via index and unique-id. ;  ; Bool_t InsertPNEId (Int_t uid, Int_t ientry);  Insert a PN entry in the sorted array of indexes. ;  ; Bool_t IsLoopingVolumes () const;  ; void SetLoopVolumes (Bool_t flag=kTRUE);  ; void UpdateElements ();  Update element flags when geometry is loaded from a file. ;  ; void Voxelize (Option_t *option=nullptr);  Voxelize all non-divided volumes. ;  . Private Attributes; Bool_t fActivity;  flag for GL reflections ;  ; TObjArray * fArrayPNE;  ; UChar_t * fBits;  ; TObjArray * fBorderSurfaces;  ; TGeoShape * fClippingShape;  ; Bool_t fClosed;  ; TGeoNavigator * fCurrentNavigator;  Lock existing navigators. ;  ; TVirtualGeoTrack * fCurrentTrack;  ; TGeoVolume * fCurrentVolume;  current navigator ;  ; Bool_t fDrawExtra;  ; TGeoElementTable * fElementTable;  clipping shape for raytracing ;  ; Int_t fExplodedView;  ; TObjArray * fGDMLMatrices;  ; TGeoHMatrix * fGLMatrix;  ; TObjArray * fGShapes;  ; TObjArray * fGVolumes;  list of runtime shapes ;  ; THashList * fHashGVolumes;  hash list of volumes providing fast search ;  ; THashList * fHashPNE;  hash list of group volumes providing fast search ;  ; THashList * fHashVolumes;  ; Bool_t fIsGeomCleaning;  flag set when rea",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:65745,Performance,multi-thread,multi-threading,65745," ; Bool_t fIsGeomReading;  ; Bool_t fIsNodeSelectable;  switch ON/OFF volume activity (default OFF - all volumes active)) ;  ; Int_t * fKeyPNEId;  ; Bool_t fLoopVolumes;  flag that geometry is closed ;  ; TGeoVolume * fMasterVolume;  top physical node ;  ; TList * fMaterials;  ; TObjArray * fMatrices;  current painter ;  ; Bool_t fMatrixReflection;  flag for using GL matrix ;  ; Bool_t fMatrixTransform;  flag that the list of physical nodes has to be drawn ;  ; Int_t fMaxThreads;  ; Int_t fMaxVisNodes;  ; TList * fMedia;  ; Bool_t fMultiThread;  Max number of threads. ;  ; NavigatorsMap_t fNavigators;  ; Int_t fNLevel;  table of elements ;  ; Int_t fNNodes;  upper time limit for tracks drawing ;  ; TObjArray * fNodes;  ; Int_t fNpdg;  current track ;  ; Int_t fNPNEId;  ; Int_t fNsegments;  ; Int_t fNtracks;  ; TObjArray * fOpticalSurfaces;  ; TObjArray * fOverlaps;  ; TVirtualGeoPainter * fPainter;  flag that nodes are the selected objects in pad rather than volumes ;  ; TGeoVolume * fPaintVolume;  ; TGeoParallelWorld * fParallelWorld;  ; TString fParticleName;  path to current node ;  ; TString fPath;  ; Int_t fPdgId [1024];  ; TObjArray * fPdgNames;  ; Bool_t fPhiCut;  flag to notify that the manager is being destructed ;  ; Double_t fPhimax;  lowest range for phi cut ;  ; Double_t fPhimin;  ; TObjArray * fPhysicalNodes;  ; ConstPropMap_t fProperties;  ; Int_t fRaytraceMode;  Flag for multi-threading. ;  ; TObjArray * fRegions;  ; TObjArray * fShapes;  ; Int_t fSizePNEId;  array of physical node entries ;  ; TObjArray * fSkinSurfaces;  ; Bool_t fStreamVoxels;  flag volume lists loop ;  ; Bool_t fTimeCut;  ; Double_t fTmax;  lower time limit for tracks drawing ;  ; Double_t fTmin;  highest range for phi cut ;  ; TGeoNode * fTopNode;  top level volume in geometry ;  ; TGeoVolume * fTopVolume;  current volume ;  ; TObjArray * fTracks;  list of runtime volumes ;  ; TObjArray * fUniqueVolumes;  ; Bool_t fUsePWNav;  Raytrace mode: 0=normal, 1=pass through, 2=transparent",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:72736,Performance,cache,cache,72736,". ◆ BombTranslation(). void TGeoManager::BombTranslation ; (; const Double_t * ; tr, . Double_t * ; bombtr . ). Get the new 'bombed' translation vector according current exploded view mode. ; Definition at line 1078 of file TGeoManager.cxx. ◆ Browse(). void TGeoManager::Browse ; (; TBrowser * ; b). overridevirtual . Describe how to browse this object. ; Reimplemented from TObject.; Definition at line 1023 of file TGeoManager.cxx. ◆ BuildDefaultMaterials(). void TGeoManager::BuildDefaultMaterials ; (; ). Now just a shortcut for GetElementTable. ; Definition at line 3615 of file TGeoManager.cxx. ◆ cd(). Bool_t TGeoManager::cd ; (; const char * ; path = """"). virtual . Browse the tree of nodes starting from fTopNode according to pathname. ; Changes the path accordingly. ; Definition at line 1707 of file TGeoManager.cxx. ◆ CdDown(). void TGeoManager::CdDown ; (; Int_t ; index). Make a daughter of current node current. ; Can be called only with a valid daughter index (no check). Updates cache accordingly. ; Definition at line 1690 of file TGeoManager.cxx. ◆ CdNext(). void TGeoManager::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 1698 of file TGeoManager.cxx. ◆ CdNode(). void TGeoManager::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 1655 of file TGeoManager.cxx. ◆ CdTop(). void TGeoManager::CdTop ; (; ). Make top level node the current node. ; Updates the cache accordingly. Determine the overlapping state of current node. ; Definition at line 1672 of file TGeoManager.cxx. ◆ CdUp(). void TGeoManager::CdUp ; (; ). Go one level up in geometry. ; Updates cache accordingly. Determine the overlapping state of current node. ; Definition at line 1681 of file TGeoManager.cxx. ◆ CheckBoundaryErrors(). void TGeoManager::CheckBoundaryErrors ; (; Int_t ; ntracks = 1000000, . Double_t ; radius = -1. . ). ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:73130,Performance,perform,performance,73130,"on at line 1023 of file TGeoManager.cxx. ◆ BuildDefaultMaterials(). void TGeoManager::BuildDefaultMaterials ; (; ). Now just a shortcut for GetElementTable. ; Definition at line 3615 of file TGeoManager.cxx. ◆ cd(). Bool_t TGeoManager::cd ; (; const char * ; path = """"). virtual . Browse the tree of nodes starting from fTopNode according to pathname. ; Changes the path accordingly. ; Definition at line 1707 of file TGeoManager.cxx. ◆ CdDown(). void TGeoManager::CdDown ; (; Int_t ; index). Make a daughter of current node current. ; Can be called only with a valid daughter index (no check). Updates cache accordingly. ; Definition at line 1690 of file TGeoManager.cxx. ◆ CdNext(). void TGeoManager::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 1698 of file TGeoManager.cxx. ◆ CdNode(). void TGeoManager::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 1655 of file TGeoManager.cxx. ◆ CdTop(). void TGeoManager::CdTop ; (; ). Make top level node the current node. ; Updates the cache accordingly. Determine the overlapping state of current node. ; Definition at line 1672 of file TGeoManager.cxx. ◆ CdUp(). void TGeoManager::CdUp ; (; ). Go one level up in geometry. ; Updates cache accordingly. Determine the overlapping state of current node. ; Definition at line 1681 of file TGeoManager.cxx. ◆ CheckBoundaryErrors(). void TGeoManager::CheckBoundaryErrors ; (; Int_t ; ntracks = 1000000, . Double_t ; radius = -1. . ). Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ; If radius is not mentioned the full bounding box will be sampled. ; Definition at line 3752 of file TGeoManager.cxx. ◆ CheckBoundaryReference(). void TGeoManager::CheckBoundaryReference ; (; Int_t ; icheck = -1). Check the boundary errors reference file created by CheckBoundar",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:73297,Performance,cache,cache,73297,"tion at line 3615 of file TGeoManager.cxx. ◆ cd(). Bool_t TGeoManager::cd ; (; const char * ; path = """"). virtual . Browse the tree of nodes starting from fTopNode according to pathname. ; Changes the path accordingly. ; Definition at line 1707 of file TGeoManager.cxx. ◆ CdDown(). void TGeoManager::CdDown ; (; Int_t ; index). Make a daughter of current node current. ; Can be called only with a valid daughter index (no check). Updates cache accordingly. ; Definition at line 1690 of file TGeoManager.cxx. ◆ CdNext(). void TGeoManager::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 1698 of file TGeoManager.cxx. ◆ CdNode(). void TGeoManager::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 1655 of file TGeoManager.cxx. ◆ CdTop(). void TGeoManager::CdTop ; (; ). Make top level node the current node. ; Updates the cache accordingly. Determine the overlapping state of current node. ; Definition at line 1672 of file TGeoManager.cxx. ◆ CdUp(). void TGeoManager::CdUp ; (; ). Go one level up in geometry. ; Updates cache accordingly. Determine the overlapping state of current node. ; Definition at line 1681 of file TGeoManager.cxx. ◆ CheckBoundaryErrors(). void TGeoManager::CheckBoundaryErrors ; (; Int_t ; ntracks = 1000000, . Double_t ; radius = -1. . ). Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ; If radius is not mentioned the full bounding box will be sampled. ; Definition at line 3752 of file TGeoManager.cxx. ◆ CheckBoundaryReference(). void TGeoManager::CheckBoundaryReference ; (; Int_t ; icheck = -1). Check the boundary errors reference file created by CheckBoundaryErrors method. ; The shape for which the crossing failed is drawn with the starting point in red and the extrapolated point to boundary (+/- failing push/pull) in ye",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:73496,Performance,cache,cache,73496,"path accordingly. ; Definition at line 1707 of file TGeoManager.cxx. ◆ CdDown(). void TGeoManager::CdDown ; (; Int_t ; index). Make a daughter of current node current. ; Can be called only with a valid daughter index (no check). Updates cache accordingly. ; Definition at line 1690 of file TGeoManager.cxx. ◆ CdNext(). void TGeoManager::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 1698 of file TGeoManager.cxx. ◆ CdNode(). void TGeoManager::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 1655 of file TGeoManager.cxx. ◆ CdTop(). void TGeoManager::CdTop ; (; ). Make top level node the current node. ; Updates the cache accordingly. Determine the overlapping state of current node. ; Definition at line 1672 of file TGeoManager.cxx. ◆ CdUp(). void TGeoManager::CdUp ; (; ). Go one level up in geometry. ; Updates cache accordingly. Determine the overlapping state of current node. ; Definition at line 1681 of file TGeoManager.cxx. ◆ CheckBoundaryErrors(). void TGeoManager::CheckBoundaryErrors ; (; Int_t ; ntracks = 1000000, . Double_t ; radius = -1. . ). Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ; If radius is not mentioned the full bounding box will be sampled. ; Definition at line 3752 of file TGeoManager.cxx. ◆ CheckBoundaryReference(). void TGeoManager::CheckBoundaryReference ; (; Int_t ; icheck = -1). Check the boundary errors reference file created by CheckBoundaryErrors method. ; The shape for which the crossing failed is drawn with the starting point in red and the extrapolated point to boundary (+/- failing push/pull) in yellow. ; Definition at line 3762 of file TGeoManager.cxx. ◆ CheckGeometry(). void TGeoManager::CheckGeometry ; (; Option_t * ; option = """"). Perform last checks on the geometry. ; Definition at line 383",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:79208,Performance,cache,cache,79208,"st of physical nodes, so that we can start over with a new list. ; If MUSTDELETE is true, delete previous nodes. ; Definition at line 3542 of file TGeoManager.cxx. ◆ ClearShape(). void TGeoManager::ClearShape ; (; const TGeoShape * ; shape). Remove a shape from the list of shapes. ; Definition at line 1617 of file TGeoManager.cxx. ◆ ClearThreadData(). void TGeoManager::ClearThreadData ; (; ); const. Definition at line 953 of file TGeoManager.cxx. ◆ ClearThreadsMap(). void TGeoManager::ClearThreadsMap ; (; ). static . Clear the current map of threads. ; This will be filled again by the calling threads via ThreadId calls. ; Definition at line 984 of file TGeoManager.cxx. ◆ ClearTracks(). void TGeoManager::ClearTracks ; (; ). inline . Definition at line 415 of file TGeoManager.h. ◆ CloseGeometry(). void TGeoManager::CloseGeometry ; (; Option_t * ; option = ""d""). Closing geometry implies checking the geometry validity, fixing shapes with negative parameters (run-time shapes)building the cache manager, voxelizing all volumes, counting the total number of physical nodes and registering the manager class to the browser. ; Definition at line 1480 of file TGeoManager.cxx. ◆ ConvertReflections(). void TGeoManager::ConvertReflections ; (; ). Convert all reflections in geometry to normal rotations + reflected shapes. ; Definition at line 1723 of file TGeoManager.cxx. ◆ CountLevels(). void TGeoManager::CountLevels ; (; ). Count maximum number of nodes per volume, maximum depth and maximum number of xtru vertices. ; Definition at line 1759 of file TGeoManager.cxx. ◆ CountNodes(). Int_t TGeoManager::CountNodes ; (; const TGeoVolume * ; vol = nullptr, . Int_t ; nlevels = 10000, . Int_t ; option = 0 . ). Count the total number of nodes starting from a volume, nlevels down. ; Definition at line 1803 of file TGeoManager.cxx. ◆ CreateParallelWorld(). TGeoParallelWorld * TGeoManager::CreateParallelWorld ; (; const char * ; name). Create a parallel world for prioritised navigation. ; This",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:82769,Performance,cache,cache,82769,"r, . Int_t ; iaxis, . Int_t ; ndiv, . Double_t ; start, . Double_t ; step, . Int_t ; numed = 0, . Option_t * ; option = """" . ). Create a new volume by dividing an existing one (GEANT3 like) ; Divides MOTHER into NDIV divisions called NAME along axis IAXIS starting at coordinate value START and having size STEP. The created volumes will have tracking media ID=NUMED (if NUMED=0 -> same media as MOTHER) The behavior of the division operation can be triggered using OPTION :; OPTION (case insensitive) :; N - divide all range in NDIV cells (same effect as STEP<=0) (GSDVN in G3); NX - divide range starting with START in NDIV cells (GSDVN2 in G3); S - divide all range with given STEP. NDIV is computed and divisions will be centered in full range (same effect as NDIV<=0) (GSDVS, GSDVT in G3); SX - same as DVS, but from START position. (GSDVS2, GSDVT2 in G3) . Definition at line 1258 of file TGeoManager.cxx. ◆ DoBackupState(). void TGeoManager::DoBackupState ; (; ). Backup the current state without affecting the cache stack. ; Definition at line 1098 of file TGeoManager.cxx. ◆ DoRestoreState(). void TGeoManager::DoRestoreState ; (; ). Restore a backed-up state without affecting the cache stack. ; Definition at line 1106 of file TGeoManager.cxx. ◆ DrawCurrentPoint(). void TGeoManager::DrawCurrentPoint ; (; Int_t ; color = 2). Draw current point in the same view. ; Definition at line 1827 of file TGeoManager.cxx. ◆ DrawPath(). void TGeoManager::DrawPath ; (; const char * ; path, . Option_t * ; option = """" . ). Draw current path. ; Definition at line 1923 of file TGeoManager.cxx. ◆ DrawTracks(). void TGeoManager::DrawTracks ; (; Option_t * ; option = """"). Draw tracks over the geometry, according to option. ; By default, only primaries are drawn. See TGeoTrack::Draw() for additional options. ; Definition at line 1905 of file TGeoManager.cxx. ◆ Edit(). void TGeoManager::Edit ; (; Option_t * ; option = """"). virtual . Append a pad for this geometry. ; Definition at line 1051 of file",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:82942,Performance,cache,cache,82942,"one (GEANT3 like) ; Divides MOTHER into NDIV divisions called NAME along axis IAXIS starting at coordinate value START and having size STEP. The created volumes will have tracking media ID=NUMED (if NUMED=0 -> same media as MOTHER) The behavior of the division operation can be triggered using OPTION :; OPTION (case insensitive) :; N - divide all range in NDIV cells (same effect as STEP<=0) (GSDVN in G3); NX - divide range starting with START in NDIV cells (GSDVN2 in G3); S - divide all range with given STEP. NDIV is computed and divisions will be centered in full range (same effect as NDIV<=0) (GSDVS, GSDVT in G3); SX - same as DVS, but from START position. (GSDVS2, GSDVT2 in G3) . Definition at line 1258 of file TGeoManager.cxx. ◆ DoBackupState(). void TGeoManager::DoBackupState ; (; ). Backup the current state without affecting the cache stack. ; Definition at line 1098 of file TGeoManager.cxx. ◆ DoRestoreState(). void TGeoManager::DoRestoreState ; (; ). Restore a backed-up state without affecting the cache stack. ; Definition at line 1106 of file TGeoManager.cxx. ◆ DrawCurrentPoint(). void TGeoManager::DrawCurrentPoint ; (; Int_t ; color = 2). Draw current point in the same view. ; Definition at line 1827 of file TGeoManager.cxx. ◆ DrawPath(). void TGeoManager::DrawPath ; (; const char * ; path, . Option_t * ; option = """" . ). Draw current path. ; Definition at line 1923 of file TGeoManager.cxx. ◆ DrawTracks(). void TGeoManager::DrawTracks ; (; Option_t * ; option = """"). Draw tracks over the geometry, according to option. ; By default, only primaries are drawn. See TGeoTrack::Draw() for additional options. ; Definition at line 1905 of file TGeoManager.cxx. ◆ Edit(). void TGeoManager::Edit ; (; Option_t * ; option = """"). virtual . Append a pad for this geometry. ; Definition at line 1051 of file TGeoManager.cxx. ◆ EnableInactiveVolumes(). void TGeoManager::EnableInactiveVolumes ; (; ). inline . Definition at line 363 of file TGeoManager.h. ◆ ExecuteEvent(). void TG",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:123507,Performance,perform,performed,123507,"er; theta1 polar angle for axis X; phi1 azimuthal angle for axis X; theta2 polar angle for axis Y; phi2 azimuthal angle for axis Y; theta3 polar angle for axis Z; phi3 azimuthal angle for axis Z . Definition at line 1276 of file TGeoManager.cxx. ◆ Medium(). TGeoMedium * TGeoManager::Medium ; (; const char * ; name, . Int_t ; numed, . Int_t ; nmat, . Int_t ; isvol, . Int_t ; ifield, . Double_t ; fieldm, . Double_t ; tmaxfd, . Double_t ; stemax, . Double_t ; deemax, . Double_t ; epsil, . Double_t ; stmin . ). Create tracking medium. . numed tracking medium number assigned; name tracking medium name; nmat material number; isvol sensitive volume flag; ifield magnetic field; fieldm max. field value (kilogauss); tmaxfd max. angle due to field (deg/step); stemax max. step allowed; deemax max. fraction of energy lost in a step; epsil tracking precision (cm); stmin min. step due to continuous processes (cm); ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking performed with g3helix; ifield = 3 if tracking performed with g3helx3. . Definition at line 1331 of file TGeoManager.cxx. ◆ Mixture() [1/2]. TGeoMaterial * TGeoManager::Mixture ; (; const char * ; name, . Double_t * ; a, . Double_t * ; z, . Double_t ; dens, . Int_t ; nelem, . Double_t * ; wmat, . Int_t ; uid . ). Create mixture OR COMPOUND IMAT as composed by THE BASIC nelem materials defined by arrays A,Z and WMAT, having an unique id. ; Definition at line 1306 of file TGeoManager.cxx. ◆ Mixture() [2/2]. TGeoMaterial * TGeoManager::Mixture ; (; const char * ; name, . Float_t * ; a, . Float_t * ; z, . Double_t ; dens, . Int_t ; nelem, . Float_t * ; wmat, . Int_t ; uid . ). Create mixture OR COMPOUND IMAT as composed by THE BASIC nelem materials defined by arrays A,Z and WMAT, having an unique id. ; Definition at line 1296 of file TGeoManager.cxx. ◆ ModifiedPad(). void TGeoManager::ModifiedPad ; (; ); const. Send ""Modified"" signal",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:123554,Performance,perform,performed,123554,"er; theta1 polar angle for axis X; phi1 azimuthal angle for axis X; theta2 polar angle for axis Y; phi2 azimuthal angle for axis Y; theta3 polar angle for axis Z; phi3 azimuthal angle for axis Z . Definition at line 1276 of file TGeoManager.cxx. ◆ Medium(). TGeoMedium * TGeoManager::Medium ; (; const char * ; name, . Int_t ; numed, . Int_t ; nmat, . Int_t ; isvol, . Int_t ; ifield, . Double_t ; fieldm, . Double_t ; tmaxfd, . Double_t ; stemax, . Double_t ; deemax, . Double_t ; epsil, . Double_t ; stmin . ). Create tracking medium. . numed tracking medium number assigned; name tracking medium name; nmat material number; isvol sensitive volume flag; ifield magnetic field; fieldm max. field value (kilogauss); tmaxfd max. angle due to field (deg/step); stemax max. step allowed; deemax max. fraction of energy lost in a step; epsil tracking precision (cm); stmin min. step due to continuous processes (cm); ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking performed with g3helix; ifield = 3 if tracking performed with g3helx3. . Definition at line 1331 of file TGeoManager.cxx. ◆ Mixture() [1/2]. TGeoMaterial * TGeoManager::Mixture ; (; const char * ; name, . Double_t * ; a, . Double_t * ; z, . Double_t ; dens, . Int_t ; nelem, . Double_t * ; wmat, . Int_t ; uid . ). Create mixture OR COMPOUND IMAT as composed by THE BASIC nelem materials defined by arrays A,Z and WMAT, having an unique id. ; Definition at line 1306 of file TGeoManager.cxx. ◆ Mixture() [2/2]. TGeoMaterial * TGeoManager::Mixture ; (; const char * ; name, . Float_t * ; a, . Float_t * ; z, . Double_t ; dens, . Int_t ; nelem, . Float_t * ; wmat, . Int_t ; uid . ). Create mixture OR COMPOUND IMAT as composed by THE BASIC nelem materials defined by arrays A,Z and WMAT, having an unique id. ; Definition at line 1296 of file TGeoManager.cxx. ◆ ModifiedPad(). void TGeoManager::ModifiedPad ; (; ); const. Send ""Modified"" signal",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:123601,Performance,perform,performed,123601,"er; theta1 polar angle for axis X; phi1 azimuthal angle for axis X; theta2 polar angle for axis Y; phi2 azimuthal angle for axis Y; theta3 polar angle for axis Z; phi3 azimuthal angle for axis Z . Definition at line 1276 of file TGeoManager.cxx. ◆ Medium(). TGeoMedium * TGeoManager::Medium ; (; const char * ; name, . Int_t ; numed, . Int_t ; nmat, . Int_t ; isvol, . Int_t ; ifield, . Double_t ; fieldm, . Double_t ; tmaxfd, . Double_t ; stemax, . Double_t ; deemax, . Double_t ; epsil, . Double_t ; stmin . ). Create tracking medium. . numed tracking medium number assigned; name tracking medium name; nmat material number; isvol sensitive volume flag; ifield magnetic field; fieldm max. field value (kilogauss); tmaxfd max. angle due to field (deg/step); stemax max. step allowed; deemax max. fraction of energy lost in a step; epsil tracking precision (cm); stmin min. step due to continuous processes (cm); ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking performed with g3helix; ifield = 3 if tracking performed with g3helx3. . Definition at line 1331 of file TGeoManager.cxx. ◆ Mixture() [1/2]. TGeoMaterial * TGeoManager::Mixture ; (; const char * ; name, . Double_t * ; a, . Double_t * ; z, . Double_t ; dens, . Int_t ; nelem, . Double_t * ; wmat, . Int_t ; uid . ). Create mixture OR COMPOUND IMAT as composed by THE BASIC nelem materials defined by arrays A,Z and WMAT, having an unique id. ; Definition at line 1306 of file TGeoManager.cxx. ◆ Mixture() [2/2]. TGeoMaterial * TGeoManager::Mixture ; (; const char * ; name, . Float_t * ; a, . Float_t * ; z, . Double_t ; dens, . Int_t ; nelem, . Float_t * ; wmat, . Int_t ; uid . ). Create mixture OR COMPOUND IMAT as composed by THE BASIC nelem materials defined by arrays A,Z and WMAT, having an unique id. ; Definition at line 1296 of file TGeoManager.cxx. ◆ ModifiedPad(). void TGeoManager::ModifiedPad ; (; ); const. Send ""Modified"" signal",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:140077,Performance,perform,performed,140077,"be done if there is a parallel world. Activating navigation will automatically close the parallel geometry. ; Definition at line 4288 of file TGeoManager.cxx. ◆ SetUserPaintVolume(). void TGeoManager::SetUserPaintVolume ; (; TGeoVolume * ; vol). inline . Definition at line 235 of file TGeoManager.h. ◆ SetVerboseLevel(). void TGeoManager::SetVerboseLevel ; (; Int_t ; vl). static . Return current verbosity level (static function). ; Definition at line 4074 of file TGeoManager.cxx. ◆ SetVisDensity(). void TGeoManager::SetVisDensity ; (; Double_t ; density = 0.01). Set density threshold. ; Volumes with densities lower than this become transparent. ; Definition at line 2449 of file TGeoManager.cxx. ◆ SetVisibility(). void TGeoManager::SetVisibility ; (; TObject * ; obj, . Bool_t ; vis . ). Set visibility for a volume. ; Definition at line 1060 of file TGeoManager.cxx. ◆ SetVisLevel(). void TGeoManager::SetVisLevel ; (; Int_t ; level = 3). set default level down to which visualization is performed ; Definition at line 2459 of file TGeoManager.cxx. ◆ SetVisOption(). void TGeoManager::SetVisOption ; (; Int_t ; option = 0). set drawing mode : . option=0 (default) all nodes drawn down to vislevel; option=1 leaves and nodes at vislevel drawn; option=2 path is drawn; option=4 visibility changed . Definition at line 2426 of file TGeoManager.cxx. ◆ SetVolumeAttribute(). void TGeoManager::SetVolumeAttribute ; (; const char * ; name, . const char * ; att, . Int_t ; val . ). Set volume attributes in G3 style. ; Definition at line 2308 of file TGeoManager.cxx. ◆ SizeOf(). ULong_t TGeoManager::SizeOf ; (; const TGeoNode * ; node, . Option_t * ; option . ). virtual . computes the total size in bytes of the branch starting with node. ; The option can specify if all the branch has to be parsed or only the node ; Definition at line 3926 of file TGeoManager.cxx. ◆ SortOverlaps(). void TGeoManager::SortOverlaps ; (; ). Sort overlaps by decreasing overlap distance. Extrusions comes first. ; ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:143538,Performance,load,loaded,143538,"iven thread. ; Definition at line 999 of file TGeoManager.cxx. ◆ TopToMaster(). void TGeoManager::TopToMaster ; (; const Double_t * ; top, . Double_t * ; master . ); const. Convert coordinates from top volume frame to master. ; Definition at line 4265 of file TGeoManager.cxx. ◆ TransformVolumeToAssembly(). Int_t TGeoManager::TransformVolumeToAssembly ; (; const char * ; vname). Transform all volumes named VNAME to assemblies. The volumes must be virtual. ; Definition at line 1203 of file TGeoManager.cxx. ◆ UnbombTranslation(). void TGeoManager::UnbombTranslation ; (; const Double_t * ; tr, . Double_t * ; bombtr . ). Get the new 'unbombed' translation vector according current exploded view mode. ; Definition at line 1088 of file TGeoManager.cxx. ◆ UnlockGeometry(). void TGeoManager::UnlockGeometry ; (; ). static . Unlock current geometry. ; Definition at line 4048 of file TGeoManager.cxx. ◆ UpdateElements(). void TGeoManager::UpdateElements ; (; ). private . Update element flags when geometry is loaded from a file. ; Definition at line 4167 of file TGeoManager.cxx. ◆ ViewLeaves(). void TGeoManager::ViewLeaves ; (; Bool_t ; flag = kTRUE). Set visualization option (leaves only OR all volumes) ; Definition at line 2437 of file TGeoManager.cxx. ◆ Volume() [1/2]. TGeoVolume * TGeoManager::Volume ; (; const char * ; name, . const char * ; shape, . Int_t ; nmed, . Double_t * ; upar, . Int_t ; npar = 0 . ). Create a volume in GEANT3 style. . NAME Volume name; SHAPE Volume type; NMED Tracking medium number; NPAR Number of shape parameters; UPAR Vector containing shape parameters . Definition at line 1401 of file TGeoManager.cxx. ◆ Volume() [2/2]. TGeoVolume * TGeoManager::Volume ; (; const char * ; name, . const char * ; shape, . Int_t ; nmed, . Float_t * ; upar, . Int_t ; npar = 0 . ). Create a volume in GEANT3 style. . NAME Volume name; SHAPE Volume type; NMED Tracking medium number; NPAR Number of shape parameters; UPAR Vector containing shape parameters . Definition at li",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:148456,Performance,load,loaded,148456, level in geometry. ; Definition at line 53 of file TGeoManager.h. ◆ fgMaxLevel. Int_t TGeoManager::fgMaxLevel = 1. staticprotected . Verbosity level for Info messages (no IO). ; Definition at line 52 of file TGeoManager.h. ◆ fgMaxXtruVert. Int_t TGeoManager::fgMaxXtruVert = 1. staticprotected . Maximum number of daughters. ; Definition at line 54 of file TGeoManager.h. ◆ fgMutex. std::mutex TGeoManager::fgMutex. staticprotected . Definition at line 49 of file TGeoManager.h. ◆ fgNumThreads. Int_t TGeoManager::fgNumThreads = 0. staticprivate . Thread id's map. ; Definition at line 121 of file TGeoManager.h. ◆ fGShapes. TObjArray* TGeoManager::fGShapes. private . Definition at line 97 of file TGeoManager.h. ◆ fgThreadId. TGeoManager::ThreadsMap_t * TGeoManager::fgThreadId = nullptr. staticprivate . Map between thread id's and navigator arrays. ; Definition at line 120 of file TGeoManager.h. ◆ fgVerboseLevel. Int_t TGeoManager::fgVerboseLevel = 1. staticprotected . Lock preventing a second geometry to be loaded. ; Definition at line 51 of file TGeoManager.h. ◆ fGVolumes. TObjArray* TGeoManager::fGVolumes. private . list of runtime shapes ; Definition at line 98 of file TGeoManager.h. ◆ fHashGVolumes. THashList* TGeoManager::fHashGVolumes. private . hash list of volumes providing fast search ; Definition at line 137 of file TGeoManager.h. ◆ fHashPNE. THashList* TGeoManager::fHashPNE. private . hash list of group volumes providing fast search ; Definition at line 138 of file TGeoManager.h. ◆ fHashVolumes. THashList* TGeoManager::fHashVolumes. private . Definition at line 136 of file TGeoManager.h. ◆ fIsGeomCleaning. Bool_t TGeoManager::fIsGeomCleaning. private . flag set when reading geometry ; Definition at line 83 of file TGeoManager.h. ◆ fIsGeomReading. Bool_t TGeoManager::fIsGeomReading. private . Definition at line 82 of file TGeoManager.h. ◆ fIsNodeSelectable. Bool_t TGeoManager::fIsNodeSelectable. private . switch ON/OFF volume activity (default OFF - all volumes ,MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:153409,Performance,multi-thread,multi-threading,153409,ion at line 68 of file TGeoManager.h. ◆ fPath. TString TGeoManager::fPath. private . Definition at line 67 of file TGeoManager.h. ◆ fPdgId. Int_t TGeoManager::fPdgId[1024]. private . Definition at line 78 of file TGeoManager.h. ◆ fPdgNames. TObjArray* TGeoManager::fPdgNames. private . Definition at line 100 of file TGeoManager.h. ◆ fPhiCut. Bool_t TGeoManager::fPhiCut. private . flag to notify that the manager is being destructed ; Definition at line 84 of file TGeoManager.h. ◆ fPhimax. Double_t TGeoManager::fPhimax. private . lowest range for phi cut ; Definition at line 63 of file TGeoManager.h. ◆ fPhimin. Double_t TGeoManager::fPhimin. private . Definition at line 62 of file TGeoManager.h. ◆ fPhysicalNodes. TObjArray* TGeoManager::fPhysicalNodes. private . Definition at line 96 of file TGeoManager.h. ◆ fProperties. ConstPropMap_t TGeoManager::fProperties. private . Definition at line 149 of file TGeoManager.h. ◆ fRaytraceMode. Int_t TGeoManager::fRaytraceMode. private . Flag for multi-threading. ; Definition at line 146 of file TGeoManager.h. ◆ fRegions. TObjArray* TGeoManager::fRegions. private . Definition at line 109 of file TGeoManager.h. ◆ fShapes. TObjArray* TGeoManager::fShapes. private . Definition at line 94 of file TGeoManager.h. ◆ fSizePNEId. Int_t TGeoManager::fSizePNEId. private . array of physical node entries ; Definition at line 140 of file TGeoManager.h. ◆ fSkinSurfaces. TObjArray* TGeoManager::fSkinSurfaces. private . Definition at line 103 of file TGeoManager.h. ◆ fStreamVoxels. Bool_t TGeoManager::fStreamVoxels. private . flag volume lists loop ; Definition at line 81 of file TGeoManager.h. ◆ fTimeCut. Bool_t TGeoManager::fTimeCut. private . Definition at line 85 of file TGeoManager.h. ◆ fTmax. Double_t TGeoManager::fTmax. private . lower time limit for tracks drawing ; Definition at line 65 of file TGeoManager.h. ◆ fTmin. Double_t TGeoManager::fTmin. private . highest range for phi cut ; Definition at line 64 of file TGeoManager.h. ◆ fTopNode,MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:761,Safety,detect,detector,761,". ROOT: TGeoManager Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Attributes |; Private Types |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TGeoManager Class ReferenceThe Geometry Package » Geometry classes. ; The manager class for any TGeo geometry. ; Provides user interface for geometry creation, navigation, state querying, visualization, IO, geometry checking and other utilities. General architecture; The ROOT geometry package is a tool designed for building, browsing, tracking and visualizing a detector geometry. The code is independent from other external MC for simulation, therefore it does not contain any constraints related to physics. However, the package defines a number of hooks for tracking, such as media, materials, magnetic field or track state flags, in order to allow interfacing to tracking MC's. The final goal is to be able to use the same geometry for several purposes, such as tracking, reconstruction or visualization, taking advantage of the ROOT features related to bookkeeping, I/O, histogramming, browsing and GUI's.; The geometrical modeler is the most important component of the package and it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"".; The architecture of the modeler is a combination between a GEANT-like containment scheme and a normal CSG binary tree at the level of shapes. An important common feature of all detector geometry descriptions is the mother-daughter concept. This is the most natural approach when tracking is concerned and imposes a set of constraints to the way geometry is defined. Constructive solid geom",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:1789,Safety,detect,detector,1789,"t from other external MC for simulation, therefore it does not contain any constraints related to physics. However, the package defines a number of hooks for tracking, such as media, materials, magnetic field or track state flags, in order to allow interfacing to tracking MC's. The final goal is to be able to use the same geometry for several purposes, such as tracking, reconstruction or visualization, taking advantage of the ROOT features related to bookkeeping, I/O, histogramming, browsing and GUI's.; The geometrical modeler is the most important component of the package and it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"".; The architecture of the modeler is a combination between a GEANT-like containment scheme and a normal CSG binary tree at the level of shapes. An important common feature of all detector geometry descriptions is the mother-daughter concept. This is the most natural approach when tracking is concerned and imposes a set of constraints to the way geometry is defined. Constructive solid geometry composition is used only in order to create more complex shapes from an existing set of primitives through boolean operations. This feature is not implemented yet but in future full definition of boolean expressions will be supported.; Practically every geometry defined in GEANT style can be mapped by the modeler. The basic components used for building the logical hierarchy of the geometry are called ""volumes"" and ""nodes"". Volumes (sometimes called ""solids"") are fully defined geometrical objects having a given shape and medium and possibly containing a list of nodes. Nodes represent just positioned instances of volumes inside a container volume and they are not directly defined by user. They are automatically created as a result of adding one volume inside other or dividing a volume. T",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:18648,Safety,safe,safety,18648,"(). Volumes themselves support different visualization settings :; TGeoVolume::SetVisibility() : set volume visibility.; TGeoVolume::VisibleDaughters() : set daughters visibility. All these actions automatically updates the current view if any. Checking the geometry; Several checking methods are accessible from the volume context menu. They generally apply only to the visible parts of the drawn geometry in order to ease geometry checking, and their implementation is in the TGeoChecker class from the painting package.; Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z). This method is drawing the daughters of the volume containing the point one level down, printing the path to the deepest physical node holding this point. It also computes the closest distance to any boundary. The point will be drawn in red, as well as a sphere having this closest distance as radius. In case a non-zero distance is given by the user as fifth argument of CheckPoint, this distance will be used as radius of the safety sphere. Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and it will draw this volume with current visualization settings. Random points are generated in the bounding box of the top drawn volume. The points are classified and drawn with the color of their deepest container. Only points in visible nodes will be drawn. Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and will shoot rays from a given point in the local reference frame with random directions. The intersections with displayed nodes will appear as segments having the color of the touched node. Drawn geometry will be then made invisible in order to enhance rays. Definition at line 44 of file TGeoManager.h. Public Types; enum  EDefaultUnits { kG4Units = 0; , kRootUnits = 1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZom",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:23435,Safety,safe,safety,23435,"the node having this id. ;  ; void CdTop ();  Make top level node the current node. ;  ; void CdUp ();  Go one level up in geometry. ;  ; void CheckBoundaryErrors (Int_t ntracks=1000000, Double_t radius=-1.);  Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ;  ; void CheckBoundaryReference (Int_t icheck=-1);  Check the boundary errors reference file created by CheckBoundaryErrors method. ;  ; void CheckGeometry (Option_t *option="""");  Perform last checks on the geometry. ;  ; void CheckGeometryFull (Int_t ntracks=1000000, Double_t vx=0., Double_t vy=0., Double_t vz=0., Option_t *option=""ob"");  Geometry checking. ;  ; void CheckOverlaps (Double_t ovlp=0.1, Option_t *option="""");  Check all geometry for illegal overlaps within a limit OVLP. ;  ; Bool_t CheckPath (const char *path) const;  Check if a geometry path is valid without changing the state of the current navigator. ;  ; void CheckPoint (Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.);  Classify a given point. See TGeoChecker::CheckPoint(). ;  ; void CheckShape (TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option);  Test for shape navigation methods. ;  ; void CleanGarbage ();  Clean temporary volumes and shapes from garbage collection. ;  ; void ClearAttributes ();  Reset all attributes to default ones. ;  ; void ClearNavigators ();  Clear all navigators. ;  ; void ClearOverlaps ();  Clear the list of overlaps. ;  ; void ClearPhysicalNodes (Bool_t mustdelete=kFALSE);  Clear the current list of physical nodes, so that we can start over with a new list. ;  ; void ClearShape (const TGeoShape *shape);  Remove a shape from the list of shapes. ;  ; void ClearThreadData () const;  ; void ClearTracks ();  ; void CloseGeometry (Option_t *option=""d"");  Closing geometry implies checking the geometry validity, fixing shapes with negative parameters (run-time shapes)building the cache manager, voxelizing all vol",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:45343,Safety,safe,safe,45343,"ndomRays (Int_t nrays=1000, Double_t startx=0, Double_t starty=0, Double_t startz=0, const char *target_vol=nullptr, Bool_t check_norm=kFALSE);  Randomly shoot nrays and plot intersections with surfaces for current top node. ;  ; void RefreshPhysicalNodes (Bool_t lock=kTRUE);  Refresh physical nodes to reflect the actual geometry paths after alignment was applied. ;  ; void RegisterMatrix (const TGeoMatrix *matrix);  Register a matrix to the list of matrices. ;  ; void RemoveMaterial (Int_t index);  Remove material at given index. ;  ; void RemoveNavigator (const TGeoNavigator *nav);  Clear a single navigator. ;  ; Int_t ReplaceVolume (TGeoVolume *vorig, TGeoVolume *vnew);  Replaces all occurrences of VORIG with VNEW in the geometry tree. ;  ; void ResetState ();  Reset current state flags. ;  ; void ResetUserData ();  Sets all pointers TGeoVolume::fField to NULL. ;  ; void RestoreMasterVolume ();  Restore the master volume of the geometry. ;  ; Double_t Safety (Bool_t inside=kFALSE);  Compute safe distance from the current point. ;  ; TGeoNode * SamplePoints (Int_t npoints, Double_t &dist, Double_t epsil=1E-5, const char *g3path="""");  shoot npoints randomly in a box of 1E-5 around current point. ;  ; void SaveAttributes (const char *filename=""tgeoatt.C"");  Save current attributes in a macro. ;  ; TGeoNode * SearchNode (Bool_t downwards=kFALSE, const TGeoNode *skipnode=nullptr);  Returns the deepest node containing fPoint, which must be set a priori. ;  ; void SelectTrackingMedia ();  Define different tracking media. ;  ; TGeoPNEntry * SetAlignableEntry (const char *unique_name, const char *path, Int_t uid=-1);  Creates an alignable object with unique name corresponding to a path and adds it to the list of alignables. ;  ; void SetAllIndex ();  Assigns uid's for all materials,media and matrices. ;  ; void SetAnimateTracks (Bool_t flag=kTRUE);  ; void SetBombFactors (Double_t bombx=1.3, Double_t bomby=1.3, Double_t bombz=1.3, Double_t bombr=1.3);  Set factors that wi",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:76425,Safety,safe,safety,76425,"ide EACH volume and calling FindNextBoundary() + Safety() for each call. The timing is normalized by the number of crossings computed at stage 2 and presented as percentage. One can get a picture on which are the most ""burned"" volumes during transportation from geometry point of view. Another plot of the timing per volume vs. number of daughters is produced. ; Definition at line 3811 of file TGeoManager.cxx. ◆ CheckOverlaps(). void TGeoManager::CheckOverlaps ; (; Double_t ; ovlp = 0.1, . Option_t * ; option = """" . ). Check all geometry for illegal overlaps within a limit OVLP. ; Definition at line 3869 of file TGeoManager.cxx. ◆ CheckPath(). Bool_t TGeoManager::CheckPath ; (; const char * ; path); const. Check if a geometry path is valid without changing the state of the current navigator. ; Definition at line 1715 of file TGeoManager.cxx. ◆ CheckPoint(). void TGeoManager::CheckPoint ; (; Double_t ; x = 0, . Double_t ; y = 0, . Double_t ; z = 0, . Option_t * ; option = """", . Double_t ; safety = 0. . ). Classify a given point. See TGeoChecker::CheckPoint(). ; Definition at line 3770 of file TGeoManager.cxx. ◆ CheckShape(). void TGeoManager::CheckShape ; (; TGeoShape * ; shape, . Int_t ; testNo, . Int_t ; nsamples, . Option_t * ; option . ). Test for shape navigation methods. ; Summary for test numbers:; 1: DistFromInside/Outside. Sample points inside the shape. Generate directions randomly in cos(theta). Compute DistFromInside and move the point with bigger distance. Compute DistFromOutside back from new point. Plot d-(d1+d2) . Definition at line 3783 of file TGeoManager.cxx. ◆ Class(). static TClass * TGeoManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 605 of file TGeoManager.h. ◆ CleanGarb",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:85690,Safety,safe,safe,85690,"o use this option, the PYTHONPATH must be defined like export PYTHONPATH=$ROOTSYS/lib:$ROOTSYS/geom/gdml . Definition at line 3975 of file TGeoManager.cxx. ◆ FindDuplicateMaterial(). TGeoMaterial * TGeoManager::FindDuplicateMaterial ; (; const TGeoMaterial * ; mat); const. Find if a given material duplicates an existing one. ; Definition at line 2992 of file TGeoManager.cxx. ◆ FindNextBoundary(). TGeoNode * TGeoManager::FindNextBoundary ; (; Double_t ; stepmax = TGeoShape::Big(), . const char * ; path = """", . Bool_t ; frombdr = kFALSE . ). Find distance to next boundary and store it in fStep. ; Returns node to which this boundary belongs. If PATH is specified, compute only distance to the node to which PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller than this value. STEPMAX represent the step to be made imposed by other reasons than geometry (usually physics processes). Therefore in this case this method provides the answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling fStep with a big number. In case frombdr=kTRUE, the isotropic safety is set to zero.; Note : safety distance for the current point is computed ONLY in case STEPMAX is specified, otherwise users have to call explicitly TGeoManager::Safety() if they want this computed for the current point. ; Definition at line 2755 of file TGeoManager.cxx. ◆ FindNextBoundaryAndStep(). TGeoNode * TGeoManager::FindNextBoundaryAndStep ; (; Double_t ; stepmax = TGeoShape::Big(), . Bool_t ; compsafe = kFALSE . ). Compute distance to next boundary within STEPMAX. ; If no boundary is found, propagate current point along current direction with fStep=STEPMAX. Otherwise propagate with fStep=SNEXT (distance to boundary) and locate/return the next node. ; Definition at line 2736 of file TGeoManager.cxx. ◆ FindNextDaughterBoundary(). TGeoNode * TGeoManager::FindNextDaughterBoundary ; (; Double_t * ; point, . Double_t * ; dir, . Int_t & ; idaughter, . Bool_t ; co",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:85799,Safety,safe,safety,85799,"inition at line 3975 of file TGeoManager.cxx. ◆ FindDuplicateMaterial(). TGeoMaterial * TGeoManager::FindDuplicateMaterial ; (; const TGeoMaterial * ; mat); const. Find if a given material duplicates an existing one. ; Definition at line 2992 of file TGeoManager.cxx. ◆ FindNextBoundary(). TGeoNode * TGeoManager::FindNextBoundary ; (; Double_t ; stepmax = TGeoShape::Big(), . const char * ; path = """", . Bool_t ; frombdr = kFALSE . ). Find distance to next boundary and store it in fStep. ; Returns node to which this boundary belongs. If PATH is specified, compute only distance to the node to which PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller than this value. STEPMAX represent the step to be made imposed by other reasons than geometry (usually physics processes). Therefore in this case this method provides the answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling fStep with a big number. In case frombdr=kTRUE, the isotropic safety is set to zero.; Note : safety distance for the current point is computed ONLY in case STEPMAX is specified, otherwise users have to call explicitly TGeoManager::Safety() if they want this computed for the current point. ; Definition at line 2755 of file TGeoManager.cxx. ◆ FindNextBoundaryAndStep(). TGeoNode * TGeoManager::FindNextBoundaryAndStep ; (; Double_t ; stepmax = TGeoShape::Big(), . Bool_t ; compsafe = kFALSE . ). Compute distance to next boundary within STEPMAX. ; If no boundary is found, propagate current point along current direction with fStep=STEPMAX. Otherwise propagate with fStep=SNEXT (distance to boundary) and locate/return the next node. ; Definition at line 2736 of file TGeoManager.cxx. ◆ FindNextDaughterBoundary(). TGeoNode * TGeoManager::FindNextDaughterBoundary ; (; Double_t * ; point, . Double_t * ; dir, . Int_t & ; idaughter, . Bool_t ; compmatrix = kFALSE . ). Computes as fStep the distance to next daughter of the current volume. ; The point and",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:85830,Safety,safe,safety,85830,"t TGeoMaterial * ; mat); const. Find if a given material duplicates an existing one. ; Definition at line 2992 of file TGeoManager.cxx. ◆ FindNextBoundary(). TGeoNode * TGeoManager::FindNextBoundary ; (; Double_t ; stepmax = TGeoShape::Big(), . const char * ; path = """", . Bool_t ; frombdr = kFALSE . ). Find distance to next boundary and store it in fStep. ; Returns node to which this boundary belongs. If PATH is specified, compute only distance to the node to which PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller than this value. STEPMAX represent the step to be made imposed by other reasons than geometry (usually physics processes). Therefore in this case this method provides the answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling fStep with a big number. In case frombdr=kTRUE, the isotropic safety is set to zero.; Note : safety distance for the current point is computed ONLY in case STEPMAX is specified, otherwise users have to call explicitly TGeoManager::Safety() if they want this computed for the current point. ; Definition at line 2755 of file TGeoManager.cxx. ◆ FindNextBoundaryAndStep(). TGeoNode * TGeoManager::FindNextBoundaryAndStep ; (; Double_t ; stepmax = TGeoShape::Big(), . Bool_t ; compsafe = kFALSE . ). Compute distance to next boundary within STEPMAX. ; If no boundary is found, propagate current point along current direction with fStep=STEPMAX. Otherwise propagate with fStep=SNEXT (distance to boundary) and locate/return the next node. ; Definition at line 2736 of file TGeoManager.cxx. ◆ FindNextDaughterBoundary(). TGeoNode * TGeoManager::FindNextDaughterBoundary ; (; Double_t * ; point, . Double_t * ; dir, . Int_t & ; idaughter, . Bool_t ; compmatrix = kFALSE . ). Computes as fStep the distance to next daughter of the current volume. ; The point and direction must be converted in the coordinate system of the current volume. The proposed step limit is fStep. ; Definition at line 2",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:127243,Safety,avoid,avoid,127243,"n matrix number w.r.t. mother ref. sys.; ISONLY ONLY/MANY flag . Definition at line 1353 of file TGeoManager.cxx. ◆ operator=(). TGeoManager & TGeoManager::operator= ; (; const TGeoManager & ; ). protecteddelete . ◆ OptimizeVoxels(). void TGeoManager::OptimizeVoxels ; (; const char * ; filename = ""tgeovox.C""). Optimize voxelization type for all volumes. Save best choice in a macro. ; Definition at line 2484 of file TGeoManager.cxx. ◆ Parse(). Int_t TGeoManager::Parse ; (; const char * ; expr, . TString & ; expr1, . TString & ; expr2, . TString & ; expr3 . ). static . Parse a string boolean expression and do a syntax check. ; Find top level boolean operator and returns its type. Fill the two substrings to which this operator applies. The returned integer is :; -1 : parse error; 0 : no boolean operator; 1 : union - represented as '+' in expression; 2 : difference (subtraction) - represented as '-' in expression; 3 : intersection - represented as '*' in expression. Parentheses should be used to avoid ambiguities. For instance :; A+B-C will be interpreted as (A+B)-C which is not the same as A+(B-C) eliminate not needed parentheses . Definition at line 2540 of file TGeoManager.cxx. ◆ PopDummy(). void TGeoManager::PopDummy ; (; Int_t ; ipop = 9999). inline . Definition at line 597 of file TGeoManager.h. ◆ PopPath() [1/2]. Bool_t TGeoManager::PopPath ; (; ). inline . Definition at line 592 of file TGeoManager.h. ◆ PopPath() [2/2]. Bool_t TGeoManager::PopPath ; (; Int_t ; index). inline . Definition at line 593 of file TGeoManager.h. ◆ PopPoint() [1/2]. Bool_t TGeoManager::PopPoint ; (; ). inline . Definition at line 595 of file TGeoManager.h. ◆ PopPoint() [2/2]. Bool_t TGeoManager::PopPoint ; (; Int_t ; index). inline . Definition at line 596 of file TGeoManager.h. ◆ PrintOverlaps(). void TGeoManager::PrintOverlaps ; (; ); const. Prints the current list of overlaps. ; Definition at line 3881 of file TGeoManager.cxx. ◆ PushPath(). Int_t TGeoManager::PushPath ; (; Int_t ; sta",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:130865,Safety,safe,safe,130865,"Volume(). Int_t TGeoManager::ReplaceVolume ; (; TGeoVolume * ; vorig, . TGeoVolume * ; vnew . ). Replaces all occurrences of VORIG with VNEW in the geometry tree. ; The volume VORIG is not replaced from the list of volumes, but all node referencing it will reference VNEW instead. Returns number of occurrences changed. ; Definition at line 1125 of file TGeoManager.cxx. ◆ ResetState(). void TGeoManager::ResetState ; (; ). Reset current state flags. ; Definition at line 2774 of file TGeoManager.cxx. ◆ ResetUserData(). void TGeoManager::ResetUserData ; (; ). Sets all pointers TGeoVolume::fField to NULL. ; User data becomes decoupled from geometry. Deletion has to be managed by users. ; Definition at line 3097 of file TGeoManager.cxx. ◆ RestoreMasterVolume(). void TGeoManager::RestoreMasterVolume ; (; ). Restore the master volume of the geometry. ; Definition at line 3118 of file TGeoManager.cxx. ◆ Safety(). Double_t TGeoManager::Safety ; (; Bool_t ; inside = kFALSE). Compute safe distance from the current point. ; This represent the distance from POINT to the closest boundary. ; Definition at line 2300 of file TGeoManager.cxx. ◆ SamplePoints(). TGeoNode * TGeoManager::SamplePoints ; (; Int_t ; npoints, . Double_t & ; dist, . Double_t ; epsil = 1E-5, . const char * ; g3path = """" . ). shoot npoints randomly in a box of 1E-5 around current point. ; return minimum distance to points outside ; Definition at line 3647 of file TGeoManager.cxx. ◆ SaveAttributes(). void TGeoManager::SaveAttributes ; (; const char * ; filename = ""tgeoatt.C""). Save current attributes in a macro. ; Definition at line 2658 of file TGeoManager.cxx. ◆ SearchNode(). TGeoNode * TGeoManager::SearchNode ; (; Bool_t ; downwards = kFALSE, . const TGeoNode * ; skipnode = nullptr . ). Returns the deepest node containing fPoint, which must be set a priori. ; Definition at line 2716 of file TGeoManager.cxx. ◆ SelectTrackingMedia(). void TGeoManager::SelectTrackingMedia ; (; ). Define different tracking media. ;",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:13134,Security,access,accessible,13134,"me, TGeoVolumeMulti, TGeoVolumeAssembly are the volume classes.Definition TGeoVolume.h:43; TGeoVolume::SetVisibilityvoid SetVisibility(Bool_t vis=kTRUE) overrideset visibility of this volumeDefinition TGeoVolume.cxx:2347; TGeoVolume::AddNodevirtual TGeoNode * AddNode(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")Add a TGeoNode to the list of nodes.Definition TGeoVolume.cxx:975; TGeoVolume::Drawvoid Draw(Option_t *option="""") overridedraw top volume according to optionDefinition TGeoVolume.cxx:1206; TGeoVolume::SetLineColorvoid SetLineColor(Color_t lcolor) overrideSet the line color.Definition TGeoVolume.cxx:2169; TGeoVolume::GetShapeTGeoShape * GetShape() constDefinition TGeoVolume.h:190; double; rootgeomTGeoNode * rootgeom()Definition eveGeoBrowser.C:47; End_Macro. TGeoManager - the manager class for the geometry package.; TGeoManager class is embedding all the API needed for building and tracking a geometry. It defines a global pointer (gGeoManager) in order to be fully accessible from external code. The mechanism of handling multiple geometries at the same time will be soon implemented.; TGeoManager is the owner of all geometry objects defined in a session, therefore users must not try to control their deletion. It contains lists of media, materials, transformations, shapes and volumes. Logical nodes (positioned volumes) are created and destroyed by the TGeoVolume class. Physical nodes and their global transformations are subjected to a caching mechanism due to the sometimes very large memory requirements of logical graph expansion. The caching mechanism is triggered by the total number of physical instances of volumes and the cache manager is a client of TGeoManager. The manager class also controls the painter client. This is linked with ROOT graphical libraries loaded on demand in order to control visualization actions. Rules for building a valid geometry; A given geometry can be built in various ways, but there are mandatory steps",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:14158,Security,validat,validated,14158,"inter (gGeoManager) in order to be fully accessible from external code. The mechanism of handling multiple geometries at the same time will be soon implemented.; TGeoManager is the owner of all geometry objects defined in a session, therefore users must not try to control their deletion. It contains lists of media, materials, transformations, shapes and volumes. Logical nodes (positioned volumes) are created and destroyed by the TGeoVolume class. Physical nodes and their global transformations are subjected to a caching mechanism due to the sometimes very large memory requirements of logical graph expansion. The caching mechanism is triggered by the total number of physical instances of volumes and the cache manager is a client of TGeoManager. The manager class also controls the painter client. This is linked with ROOT graphical libraries loaded on demand in order to control visualization actions. Rules for building a valid geometry; A given geometry can be built in various ways, but there are mandatory steps that have to be followed in order to be validated by the modeler. There are general rules : volumes needs media and shapes in order to be created, both container and containee volumes must be created before linking them together, and the relative transformation matrix must be provided. All branches must have an upper link point otherwise they will not be considered as part of the geometry. Visibility or tracking properties of volumes can be provided both at build time or after geometry is closed, but global visualization settings (see TGeoPainter class) should not be provided at build time, otherwise the drawing package will be loaded. There is also a list of specific rules : positioned daughters should not extrude their mother or intersect with sisters unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume (containing all geometry tree) must be specified before closing the geometry and must not be positioned - it represents the global refe",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:15844,Security,access,access,15844,"ters should not extrude their mother or intersect with sisters unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume (containing all geometry tree) must be specified before closing the geometry and must not be positioned - it represents the global reference frame. After building the full geometry tree, the geometry must be closed (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after this process.; Below is the general scheme of the manager class. An interactive session; Provided that a geometry was successfully built and closed (for instance the previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register itself to ROOT and the logical/physical structures will become immediately browsable. The ROOT browser will display starting from the geometry folder : the list of transformations and media, the top volume and the top logical node. These last two can be fully expanded, any intermediate volume/node in the browser being subject of direct access context menu operations (right mouse button click). All user utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the context menu. Drawing the geometry; Any logical volume can be drawn via TGeoVolume::Draw() member function. This can be directly accessed from the context menu of the volume object directly from the browser. There are several drawing options that can be set with TGeoManager::SetVisOption(Int_t opt) method :; opt=0; only the content of the volume is drawn, N levels down (default N=3). This is the default behavior. The number of levels to be drawn can be changed via TGeoManager::SetVisLevel(Int_t level) method. opt=1; the final leaves (e.g. daughters with no containment) of the branch starting from volume are drawn down to the current number of levels. WARNING : This mode is memory consuming depending of the size of geometry, so drawing from top level within this mode should be handled with care for expensive geometrie",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:16121,Security,access,accessed,16121,"geometry must be closed (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after this process.; Below is the general scheme of the manager class. An interactive session; Provided that a geometry was successfully built and closed (for instance the previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register itself to ROOT and the logical/physical structures will become immediately browsable. The ROOT browser will display starting from the geometry folder : the list of transformations and media, the top volume and the top logical node. These last two can be fully expanded, any intermediate volume/node in the browser being subject of direct access context menu operations (right mouse button click). All user utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the context menu. Drawing the geometry; Any logical volume can be drawn via TGeoVolume::Draw() member function. This can be directly accessed from the context menu of the volume object directly from the browser. There are several drawing options that can be set with TGeoManager::SetVisOption(Int_t opt) method :; opt=0; only the content of the volume is drawn, N levels down (default N=3). This is the default behavior. The number of levels to be drawn can be changed via TGeoManager::SetVisLevel(Int_t level) method. opt=1; the final leaves (e.g. daughters with no containment) of the branch starting from volume are drawn down to the current number of levels. WARNING : This mode is memory consuming depending of the size of geometry, so drawing from top level within this mode should be handled with care for expensive geometries. In future there will be a limitation on the maximum number of nodes to be visualized. opt=2; only the clicked volume is visualized. This is automatically set by TGeoVolume::DrawOnly() method; opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method; The current view",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:17888,Security,access,accessible,17888," of nodes to be visualized. opt=2; only the clicked volume is visualized. This is automatically set by TGeoVolume::DrawOnly() method; opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method; The current view can be exploded in cartesian, cylindrical or spherical coordinates : TGeoManager::SetExplodedView(Int_t opt). Options may be :; 0 - default (no bombing); 1 - cartesian coordinates. The bomb factor on each axis can be set with TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R are considered . 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; TGeoVolume::SetVisibility() : set volume visibility.; TGeoVolume::VisibleDaughters() : set daughters visibility. All these actions automatically updates the current view if any. Checking the geometry; Several checking methods are accessible from the volume context menu. They generally apply only to the visible parts of the drawn geometry in order to ease geometry checking, and their implementation is in the TGeoChecker class from the painting package.; Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z). This method is drawing the daughters of the volume containing the point one level down, printing the path to the deepest physical node holding this point. It also computes the closest distance to any boundary. The point will be drawn in red, as well as a sphere having this closest distance as radius. In case a non-zero distance is given by the user as fifth argument of CheckPoint, this distance will be used as radius of the safety sphere. Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and it will draw this volume with current visualization settings. Random points are generated in the bounding box of the top",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:51862,Security,hash,hash,51862,"0.01, Option_t *option=""va"");  Estimate weight of volume VOL with a precision SIGMA(W)/W better than PRECISION. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:63101,Security,access,access,63101,"s;  Precision to be used in ASCII exports. ;  ; static UInt_t fgExportPrecision = 17;  Maximum number of Xtru vertices. ;  ; static Bool_t fgLock = kFALSE;  mutex for navigator booking in MT mode ;  ; static Int_t fgMaxDaughters = 1;  Maximum level in geometry. ;  ; static Int_t fgMaxLevel = 1;  Verbosity level for Info messages (no IO). ;  ; static Int_t fgMaxXtruVert = 1;  Maximum number of daughters. ;  ; static std::mutex fgMutex;  ; static Int_t fgVerboseLevel = 1;  Lock preventing a second geometry to be loaded. ;  . Private Types; typedef std::map< std::string, Double_t > ConstPropMap_t;  ; typedef std::map< std::thread::id, TGeoNavigatorArray * > NavigatorsMap_t;  bits used for voxelization ;  ; typedef NavigatorsMap_t::iterator NavigatorsMapIt_t;  ; typedef std::map< std::thread::id, Int_t > ThreadsMap_t;  ; typedef ThreadsMap_t::const_iterator ThreadsMapIt_t;  . Private Member Functions; void Init ();  Initialize manager class. ;  ; Bool_t InitArrayPNE () const;  Initialize PNE array for fast access via index and unique-id. ;  ; Bool_t InsertPNEId (Int_t uid, Int_t ientry);  Insert a PN entry in the sorted array of indexes. ;  ; Bool_t IsLoopingVolumes () const;  ; void SetLoopVolumes (Bool_t flag=kTRUE);  ; void UpdateElements ();  Update element flags when geometry is loaded from a file. ;  ; void Voxelize (Option_t *option=nullptr);  Voxelize all non-divided volumes. ;  . Private Attributes; Bool_t fActivity;  flag for GL reflections ;  ; TObjArray * fArrayPNE;  ; UChar_t * fBits;  ; TObjArray * fBorderSurfaces;  ; TGeoShape * fClippingShape;  ; Bool_t fClosed;  ; TGeoNavigator * fCurrentNavigator;  Lock existing navigators. ;  ; TVirtualGeoTrack * fCurrentTrack;  ; TGeoVolume * fCurrentVolume;  current navigator ;  ; Bool_t fDrawExtra;  ; TGeoElementTable * fElementTable;  clipping shape for raytracing ;  ; Int_t fExplodedView;  ; TObjArray * fGDMLMatrices;  ; TGeoHMatrix * fGLMatrix;  ; TObjArray * fGShapes;  ; TObjArray * fGVolumes;  list of runtime ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:64123,Security,hash,hash,64123,dateElements ();  Update element flags when geometry is loaded from a file. ;  ; void Voxelize (Option_t *option=nullptr);  Voxelize all non-divided volumes. ;  . Private Attributes; Bool_t fActivity;  flag for GL reflections ;  ; TObjArray * fArrayPNE;  ; UChar_t * fBits;  ; TObjArray * fBorderSurfaces;  ; TGeoShape * fClippingShape;  ; Bool_t fClosed;  ; TGeoNavigator * fCurrentNavigator;  Lock existing navigators. ;  ; TVirtualGeoTrack * fCurrentTrack;  ; TGeoVolume * fCurrentVolume;  current navigator ;  ; Bool_t fDrawExtra;  ; TGeoElementTable * fElementTable;  clipping shape for raytracing ;  ; Int_t fExplodedView;  ; TObjArray * fGDMLMatrices;  ; TGeoHMatrix * fGLMatrix;  ; TObjArray * fGShapes;  ; TObjArray * fGVolumes;  list of runtime shapes ;  ; THashList * fHashGVolumes;  hash list of volumes providing fast search ;  ; THashList * fHashPNE;  hash list of group volumes providing fast search ;  ; THashList * fHashVolumes;  ; Bool_t fIsGeomCleaning;  flag set when reading geometry ;  ; Bool_t fIsGeomReading;  ; Bool_t fIsNodeSelectable;  switch ON/OFF volume activity (default OFF - all volumes active)) ;  ; Int_t * fKeyPNEId;  ; Bool_t fLoopVolumes;  flag that geometry is closed ;  ; TGeoVolume * fMasterVolume;  top physical node ;  ; TList * fMaterials;  ; TObjArray * fMatrices;  current painter ;  ; Bool_t fMatrixReflection;  flag for using GL matrix ;  ; Bool_t fMatrixTransform;  flag that the list of physical nodes has to be drawn ;  ; Int_t fMaxThreads;  ; Int_t fMaxVisNodes;  ; TList * fMedia;  ; Bool_t fMultiThread;  Max number of threads. ;  ; NavigatorsMap_t fNavigators;  ; Int_t fNLevel;  table of elements ;  ; Int_t fNNodes;  upper time limit for tracks drawing ;  ; TObjArray * fNodes;  ; Int_t fNpdg;  current track ;  ; Int_t fNPNEId;  ; Int_t fNsegments;  ; Int_t fNtracks;  ; TObjArray * fOpticalSurfaces;  ; TObjArray * fOverlaps;  ; TVirtualGeoPainter * fPainter;  flag that nodes are the selected objects in pad rather than volumes ;  ; TGeoVolu,MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:64194,Security,hash,hash,64194,dateElements ();  Update element flags when geometry is loaded from a file. ;  ; void Voxelize (Option_t *option=nullptr);  Voxelize all non-divided volumes. ;  . Private Attributes; Bool_t fActivity;  flag for GL reflections ;  ; TObjArray * fArrayPNE;  ; UChar_t * fBits;  ; TObjArray * fBorderSurfaces;  ; TGeoShape * fClippingShape;  ; Bool_t fClosed;  ; TGeoNavigator * fCurrentNavigator;  Lock existing navigators. ;  ; TVirtualGeoTrack * fCurrentTrack;  ; TGeoVolume * fCurrentVolume;  current navigator ;  ; Bool_t fDrawExtra;  ; TGeoElementTable * fElementTable;  clipping shape for raytracing ;  ; Int_t fExplodedView;  ; TObjArray * fGDMLMatrices;  ; TGeoHMatrix * fGLMatrix;  ; TObjArray * fGShapes;  ; TObjArray * fGVolumes;  list of runtime shapes ;  ; THashList * fHashGVolumes;  hash list of volumes providing fast search ;  ; THashList * fHashPNE;  hash list of group volumes providing fast search ;  ; THashList * fHashVolumes;  ; Bool_t fIsGeomCleaning;  flag set when reading geometry ;  ; Bool_t fIsGeomReading;  ; Bool_t fIsNodeSelectable;  switch ON/OFF volume activity (default OFF - all volumes active)) ;  ; Int_t * fKeyPNEId;  ; Bool_t fLoopVolumes;  flag that geometry is closed ;  ; TGeoVolume * fMasterVolume;  top physical node ;  ; TList * fMaterials;  ; TObjArray * fMatrices;  current painter ;  ; Bool_t fMatrixReflection;  flag for using GL matrix ;  ; Bool_t fMatrixTransform;  flag that the list of physical nodes has to be drawn ;  ; Int_t fMaxThreads;  ; Int_t fMaxVisNodes;  ; TList * fMedia;  ; Bool_t fMultiThread;  Max number of threads. ;  ; NavigatorsMap_t fNavigators;  ; Int_t fNLevel;  table of elements ;  ; Int_t fNNodes;  upper time limit for tracks drawing ;  ; TObjArray * fNodes;  ; Int_t fNpdg;  current track ;  ; Int_t fNPNEId;  ; Int_t fNsegments;  ; Int_t fNtracks;  ; TObjArray * fOpticalSurfaces;  ; TObjArray * fOverlaps;  ; TVirtualGeoPainter * fPainter;  flag that nodes are the selected objects in pad rather than volumes ;  ; TGeoVolu,MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:107029,Security,access,access,107029,"oManager::Import ; (; const char * ; filename, . const char * ; name = """", . Option_t * ; option = """" . ). static . static function Import a geometry from a gdml or ROOT file . Case 1: gdml if filename ends with "".gdml"" the foreign geometry described with gdml is imported executing some python scripts in $ROOTSYS/gdml. NOTE that to use this option, the PYTHONPATH must be defined like export PYTHONPATH=$ROOTSYS/lib:$ROOTSYS/gdml; Case 2: root file (.root) or root/xml file (.xml) Import in memory from filename the geometry with key=name. if name="""" (default), the first TGeoManager object in the file is returned. Note that this function deletes the current gGeoManager (if one) before importing the new object. ; Definition at line 4096 of file TGeoManager.cxx. ◆ Init(). void TGeoManager::Init ; (; ). private . Initialize manager class. ; Definition at line 416 of file TGeoManager.cxx. ◆ InitArrayPNE(). Bool_t TGeoManager::InitArrayPNE ; (; ); const. private . Initialize PNE array for fast access via index and unique-id. ; Definition at line 4214 of file TGeoManager.cxx. ◆ InitTrack() [1/2]. TGeoNode * TGeoManager::InitTrack ; (; const Double_t * ; point, . const Double_t * ; dir . ). Initialize current point and current direction vector (normalized) in MARS. ; Return corresponding node. ; Definition at line 2856 of file TGeoManager.cxx. ◆ InitTrack() [2/2]. TGeoNode * TGeoManager::InitTrack ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Double_t ; nx, . Double_t ; ny, . Double_t ; nz . ). Initialize current point and current direction vector (normalized) in MARS. ; Return corresponding node. ; Definition at line 2865 of file TGeoManager.cxx. ◆ InsertPNEId(). Bool_t TGeoManager::InsertPNEId ; (; Int_t ; uid, . Int_t ; ientry . ). private . Insert a PN entry in the sorted array of indexes. ; Definition at line 3415 of file TGeoManager.cxx. ◆ InspectState(). void TGeoManager::InspectState ; (; ); const. Inspects path and all flags for the current state. ; Definition ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:148705,Security,hash,hash,148705,er of daughters. ; Definition at line 54 of file TGeoManager.h. ◆ fgMutex. std::mutex TGeoManager::fgMutex. staticprotected . Definition at line 49 of file TGeoManager.h. ◆ fgNumThreads. Int_t TGeoManager::fgNumThreads = 0. staticprivate . Thread id's map. ; Definition at line 121 of file TGeoManager.h. ◆ fGShapes. TObjArray* TGeoManager::fGShapes. private . Definition at line 97 of file TGeoManager.h. ◆ fgThreadId. TGeoManager::ThreadsMap_t * TGeoManager::fgThreadId = nullptr. staticprivate . Map between thread id's and navigator arrays. ; Definition at line 120 of file TGeoManager.h. ◆ fgVerboseLevel. Int_t TGeoManager::fgVerboseLevel = 1. staticprotected . Lock preventing a second geometry to be loaded. ; Definition at line 51 of file TGeoManager.h. ◆ fGVolumes. TObjArray* TGeoManager::fGVolumes. private . list of runtime shapes ; Definition at line 98 of file TGeoManager.h. ◆ fHashGVolumes. THashList* TGeoManager::fHashGVolumes. private . hash list of volumes providing fast search ; Definition at line 137 of file TGeoManager.h. ◆ fHashPNE. THashList* TGeoManager::fHashPNE. private . hash list of group volumes providing fast search ; Definition at line 138 of file TGeoManager.h. ◆ fHashVolumes. THashList* TGeoManager::fHashVolumes. private . Definition at line 136 of file TGeoManager.h. ◆ fIsGeomCleaning. Bool_t TGeoManager::fIsGeomCleaning. private . flag set when reading geometry ; Definition at line 83 of file TGeoManager.h. ◆ fIsGeomReading. Bool_t TGeoManager::fIsGeomReading. private . Definition at line 82 of file TGeoManager.h. ◆ fIsNodeSelectable. Bool_t TGeoManager::fIsNodeSelectable. private . switch ON/OFF volume activity (default OFF - all volumes active)) ; Definition at line 90 of file TGeoManager.h. ◆ fKeyPNEId. Int_t* TGeoManager::fKeyPNEId. private . Definition at line 142 of file TGeoManager.h. ◆ fLoopVolumes. Bool_t TGeoManager::fLoopVolumes. private . flag that geometry is closed ; Definition at line 80 of file TGeoManager.h. ◆ fMasterVolume. T,MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:148852,Security,hash,hash,148852, file TGeoManager.h. ◆ fgNumThreads. Int_t TGeoManager::fgNumThreads = 0. staticprivate . Thread id's map. ; Definition at line 121 of file TGeoManager.h. ◆ fGShapes. TObjArray* TGeoManager::fGShapes. private . Definition at line 97 of file TGeoManager.h. ◆ fgThreadId. TGeoManager::ThreadsMap_t * TGeoManager::fgThreadId = nullptr. staticprivate . Map between thread id's and navigator arrays. ; Definition at line 120 of file TGeoManager.h. ◆ fgVerboseLevel. Int_t TGeoManager::fgVerboseLevel = 1. staticprotected . Lock preventing a second geometry to be loaded. ; Definition at line 51 of file TGeoManager.h. ◆ fGVolumes. TObjArray* TGeoManager::fGVolumes. private . list of runtime shapes ; Definition at line 98 of file TGeoManager.h. ◆ fHashGVolumes. THashList* TGeoManager::fHashGVolumes. private . hash list of volumes providing fast search ; Definition at line 137 of file TGeoManager.h. ◆ fHashPNE. THashList* TGeoManager::fHashPNE. private . hash list of group volumes providing fast search ; Definition at line 138 of file TGeoManager.h. ◆ fHashVolumes. THashList* TGeoManager::fHashVolumes. private . Definition at line 136 of file TGeoManager.h. ◆ fIsGeomCleaning. Bool_t TGeoManager::fIsGeomCleaning. private . flag set when reading geometry ; Definition at line 83 of file TGeoManager.h. ◆ fIsGeomReading. Bool_t TGeoManager::fIsGeomReading. private . Definition at line 82 of file TGeoManager.h. ◆ fIsNodeSelectable. Bool_t TGeoManager::fIsNodeSelectable. private . switch ON/OFF volume activity (default OFF - all volumes active)) ; Definition at line 90 of file TGeoManager.h. ◆ fKeyPNEId. Int_t* TGeoManager::fKeyPNEId. private . Definition at line 142 of file TGeoManager.h. ◆ fLoopVolumes. Bool_t TGeoManager::fLoopVolumes. private . flag that geometry is closed ; Definition at line 80 of file TGeoManager.h. ◆ fMasterVolume. TGeoVolume* TGeoManager::fMasterVolume. private . top physical node ; Definition at line 127 of file TGeoManager.h. ◆ fMaterials. TList* TGeoManager::f,MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:2365,Testability,log,logical,2365,"ckage and it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"".; The architecture of the modeler is a combination between a GEANT-like containment scheme and a normal CSG binary tree at the level of shapes. An important common feature of all detector geometry descriptions is the mother-daughter concept. This is the most natural approach when tracking is concerned and imposes a set of constraints to the way geometry is defined. Constructive solid geometry composition is used only in order to create more complex shapes from an existing set of primitives through boolean operations. This feature is not implemented yet but in future full definition of boolean expressions will be supported.; Practically every geometry defined in GEANT style can be mapped by the modeler. The basic components used for building the logical hierarchy of the geometry are called ""volumes"" and ""nodes"". Volumes (sometimes called ""solids"") are fully defined geometrical objects having a given shape and medium and possibly containing a list of nodes. Nodes represent just positioned instances of volumes inside a container volume and they are not directly defined by user. They are automatically created as a result of adding one volume inside other or dividing a volume. The geometrical transformation hold by nodes is always defined with respect to their mother (relative positioning). Reflection matrices are allowed. All volumes have to be fully aware of their containees when the geometry is closed. They will build additional structures (voxels) in order to fasten-up the search algorithms. Finally, nodes can be regarded as bidirectional links between containers and containees objects.; The structure defined in this way is a graph structure since volumes are replicable (same volume can become daughter node of several other volumes), ever",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:3437,Testability,log,logical,3437,"ully defined geometrical objects having a given shape and medium and possibly containing a list of nodes. Nodes represent just positioned instances of volumes inside a container volume and they are not directly defined by user. They are automatically created as a result of adding one volume inside other or dividing a volume. The geometrical transformation hold by nodes is always defined with respect to their mother (relative positioning). Reflection matrices are allowed. All volumes have to be fully aware of their containees when the geometry is closed. They will build additional structures (voxels) in order to fasten-up the search algorithms. Finally, nodes can be regarded as bidirectional links between containers and containees objects.; The structure defined in this way is a graph structure since volumes are replicable (same volume can become daughter node of several other volumes), every volume becoming a branch in this graph. Any volume in the logical graph can become the actual top volume at run time (see TGeoManager::SetTopVolume()). All functionalities of the modeler will behave in this case as if only the corresponding branch starting from this volume is the registered geometry. A given volume can be positioned several times in the geometry. A volume can be divided according default or user-defined patterns, creating automatically the list of division nodes inside. The elementary volumes created during the dividing process follow the same scheme as usual volumes, therefore it is possible to position further geometrical structures inside or to divide them further more (see TGeoVolume::Divide()).; The primitive shapes supported by the package are basically the GEANT3 shapes (see class TGeoShape), arbitrary wedges with eight vertices on two parallel planes. All basic primitives inherits from class TGeoBBox since the bounding box of a solid is essential for the tracking algorithms. They also implement the virtual methods defined in the virtual class TGeoShape (",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:13684,Testability,log,logical,13684,"tion TGeoVolume.cxx:1206; TGeoVolume::SetLineColorvoid SetLineColor(Color_t lcolor) overrideSet the line color.Definition TGeoVolume.cxx:2169; TGeoVolume::GetShapeTGeoShape * GetShape() constDefinition TGeoVolume.h:190; double; rootgeomTGeoNode * rootgeom()Definition eveGeoBrowser.C:47; End_Macro. TGeoManager - the manager class for the geometry package.; TGeoManager class is embedding all the API needed for building and tracking a geometry. It defines a global pointer (gGeoManager) in order to be fully accessible from external code. The mechanism of handling multiple geometries at the same time will be soon implemented.; TGeoManager is the owner of all geometry objects defined in a session, therefore users must not try to control their deletion. It contains lists of media, materials, transformations, shapes and volumes. Logical nodes (positioned volumes) are created and destroyed by the TGeoVolume class. Physical nodes and their global transformations are subjected to a caching mechanism due to the sometimes very large memory requirements of logical graph expansion. The caching mechanism is triggered by the total number of physical instances of volumes and the cache manager is a client of TGeoManager. The manager class also controls the painter client. This is linked with ROOT graphical libraries loaded on demand in order to control visualization actions. Rules for building a valid geometry; A given geometry can be built in various ways, but there are mandatory steps that have to be followed in order to be validated by the modeler. There are general rules : volumes needs media and shapes in order to be created, both container and containee volumes must be created before linking them together, and the relative transformation matrix must be provided. All branches must have an upper link point otherwise they will not be considered as part of the geometry. Visibility or tracking properties of volumes can be provided both at build time or after geometry is closed, but gl",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:15529,Testability,log,logical,15529,"ing properties of volumes can be provided both at build time or after geometry is closed, but global visualization settings (see TGeoPainter class) should not be provided at build time, otherwise the drawing package will be loaded. There is also a list of specific rules : positioned daughters should not extrude their mother or intersect with sisters unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume (containing all geometry tree) must be specified before closing the geometry and must not be positioned - it represents the global reference frame. After building the full geometry tree, the geometry must be closed (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after this process.; Below is the general scheme of the manager class. An interactive session; Provided that a geometry was successfully built and closed (for instance the previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register itself to ROOT and the logical/physical structures will become immediately browsable. The ROOT browser will display starting from the geometry folder : the list of transformations and media, the top volume and the top logical node. These last two can be fully expanded, any intermediate volume/node in the browser being subject of direct access context menu operations (right mouse button click). All user utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the context menu. Drawing the geometry; Any logical volume can be drawn via TGeoVolume::Draw() member function. This can be directly accessed from the context menu of the volume object directly from the browser. There are several drawing options that can be set with TGeoManager::SetVisOption(Int_t opt) method :; opt=0; only the content of the volume is drawn, N levels down (default N=3). This is the default behavior. The number of levels to be drawn can be changed via TGeoManager::SetVisLevel(Int_t level) method. opt=1; the final leaves",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:15724,Testability,log,logical,15724,"ainter class) should not be provided at build time, otherwise the drawing package will be loaded. There is also a list of specific rules : positioned daughters should not extrude their mother or intersect with sisters unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume (containing all geometry tree) must be specified before closing the geometry and must not be positioned - it represents the global reference frame. After building the full geometry tree, the geometry must be closed (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after this process.; Below is the general scheme of the manager class. An interactive session; Provided that a geometry was successfully built and closed (for instance the previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register itself to ROOT and the logical/physical structures will become immediately browsable. The ROOT browser will display starting from the geometry folder : the list of transformations and media, the top volume and the top logical node. These last two can be fully expanded, any intermediate volume/node in the browser being subject of direct access context menu operations (right mouse button click). All user utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the context menu. Drawing the geometry; Any logical volume can be drawn via TGeoVolume::Draw() member function. This can be directly accessed from the context menu of the volume object directly from the browser. There are several drawing options that can be set with TGeoManager::SetVisOption(Int_t opt) method :; opt=0; only the content of the volume is drawn, N levels down (default N=3). This is the default behavior. The number of levels to be drawn can be changed via TGeoManager::SetVisLevel(Int_t level) method. opt=1; the final leaves (e.g. daughters with no containment) of the branch starting from volume are drawn down to the current number of levels. WARNING : Thi",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:16032,Testability,log,logical,16032,"ositioned - it represents the global reference frame. After building the full geometry tree, the geometry must be closed (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after this process.; Below is the general scheme of the manager class. An interactive session; Provided that a geometry was successfully built and closed (for instance the previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register itself to ROOT and the logical/physical structures will become immediately browsable. The ROOT browser will display starting from the geometry folder : the list of transformations and media, the top volume and the top logical node. These last two can be fully expanded, any intermediate volume/node in the browser being subject of direct access context menu operations (right mouse button click). All user utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the context menu. Drawing the geometry; Any logical volume can be drawn via TGeoVolume::Draw() member function. This can be directly accessed from the context menu of the volume object directly from the browser. There are several drawing options that can be set with TGeoManager::SetVisOption(Int_t opt) method :; opt=0; only the content of the volume is drawn, N levels down (default N=3). This is the default behavior. The number of levels to be drawn can be changed via TGeoManager::SetVisLevel(Int_t level) method. opt=1; the final leaves (e.g. daughters with no containment) of the branch starting from volume are drawn down to the current number of levels. WARNING : This mode is memory consuming depending of the size of geometry, so drawing from top level within this mode should be handled with care for expensive geometries. In future there will be a limitation on the maximum number of nodes to be visualized. opt=2; only the clicked volume is visualized. This is automatically set by TGeoVolume::DrawOnly() method; opt=3 - only a given path is visualiz",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:23549,Testability,test,testNo,23549,"racks=1000000, Double_t radius=-1.);  Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ;  ; void CheckBoundaryReference (Int_t icheck=-1);  Check the boundary errors reference file created by CheckBoundaryErrors method. ;  ; void CheckGeometry (Option_t *option="""");  Perform last checks on the geometry. ;  ; void CheckGeometryFull (Int_t ntracks=1000000, Double_t vx=0., Double_t vy=0., Double_t vz=0., Option_t *option=""ob"");  Geometry checking. ;  ; void CheckOverlaps (Double_t ovlp=0.1, Option_t *option="""");  Check all geometry for illegal overlaps within a limit OVLP. ;  ; Bool_t CheckPath (const char *path) const;  Check if a geometry path is valid without changing the state of the current navigator. ;  ; void CheckPoint (Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.);  Classify a given point. See TGeoChecker::CheckPoint(). ;  ; void CheckShape (TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option);  Test for shape navigation methods. ;  ; void CleanGarbage ();  Clean temporary volumes and shapes from garbage collection. ;  ; void ClearAttributes ();  Reset all attributes to default ones. ;  ; void ClearNavigators ();  Clear all navigators. ;  ; void ClearOverlaps ();  Clear the list of overlaps. ;  ; void ClearPhysicalNodes (Bool_t mustdelete=kFALSE);  Clear the current list of physical nodes, so that we can start over with a new list. ;  ; void ClearShape (const TGeoShape *shape);  Remove a shape from the list of shapes. ;  ; void ClearThreadData () const;  ; void ClearTracks ();  ; void CloseGeometry (Option_t *option=""d"");  Closing geometry implies checking the geometry validity, fixing shapes with negative parameters (run-time shapes)building the cache manager, voxelizing all volumes, counting the total number of physical nodes and registering the manager class to the browser. ;  ; void ConvertReflections ();  Convert all reflections in geometry to ",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:76629,Testability,test,testNo,76629,"are the most ""burned"" volumes during transportation from geometry point of view. Another plot of the timing per volume vs. number of daughters is produced. ; Definition at line 3811 of file TGeoManager.cxx. ◆ CheckOverlaps(). void TGeoManager::CheckOverlaps ; (; Double_t ; ovlp = 0.1, . Option_t * ; option = """" . ). Check all geometry for illegal overlaps within a limit OVLP. ; Definition at line 3869 of file TGeoManager.cxx. ◆ CheckPath(). Bool_t TGeoManager::CheckPath ; (; const char * ; path); const. Check if a geometry path is valid without changing the state of the current navigator. ; Definition at line 1715 of file TGeoManager.cxx. ◆ CheckPoint(). void TGeoManager::CheckPoint ; (; Double_t ; x = 0, . Double_t ; y = 0, . Double_t ; z = 0, . Option_t * ; option = """", . Double_t ; safety = 0. . ). Classify a given point. See TGeoChecker::CheckPoint(). ; Definition at line 3770 of file TGeoManager.cxx. ◆ CheckShape(). void TGeoManager::CheckShape ; (; TGeoShape * ; shape, . Int_t ; testNo, . Int_t ; nsamples, . Option_t * ; option . ). Test for shape navigation methods. ; Summary for test numbers:; 1: DistFromInside/Outside. Sample points inside the shape. Generate directions randomly in cos(theta). Compute DistFromInside and move the point with bigger distance. Compute DistFromOutside back from new point. Plot d-(d1+d2) . Definition at line 3783 of file TGeoManager.cxx. ◆ Class(). static TClass * TGeoManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 605 of file TGeoManager.h. ◆ CleanGarbage(). void TGeoManager::CleanGarbage ; (; ). Clean temporary volumes and shapes from garbage collection. ; Definition at line 1627 of file TGeoManager.cxx. ◆ ClearAttributes(). void TGeoManager::ClearAtt",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:76733,Testability,test,test,76733,"e vs. number of daughters is produced. ; Definition at line 3811 of file TGeoManager.cxx. ◆ CheckOverlaps(). void TGeoManager::CheckOverlaps ; (; Double_t ; ovlp = 0.1, . Option_t * ; option = """" . ). Check all geometry for illegal overlaps within a limit OVLP. ; Definition at line 3869 of file TGeoManager.cxx. ◆ CheckPath(). Bool_t TGeoManager::CheckPath ; (; const char * ; path); const. Check if a geometry path is valid without changing the state of the current navigator. ; Definition at line 1715 of file TGeoManager.cxx. ◆ CheckPoint(). void TGeoManager::CheckPoint ; (; Double_t ; x = 0, . Double_t ; y = 0, . Double_t ; z = 0, . Option_t * ; option = """", . Double_t ; safety = 0. . ). Classify a given point. See TGeoChecker::CheckPoint(). ; Definition at line 3770 of file TGeoManager.cxx. ◆ CheckShape(). void TGeoManager::CheckShape ; (; TGeoShape * ; shape, . Int_t ; testNo, . Int_t ; nsamples, . Option_t * ; option . ). Test for shape navigation methods. ; Summary for test numbers:; 1: DistFromInside/Outside. Sample points inside the shape. Generate directions randomly in cos(theta). Compute DistFromInside and move the point with bigger distance. Compute DistFromOutside back from new point. Plot d-(d1+d2) . Definition at line 3783 of file TGeoManager.cxx. ◆ Class(). static TClass * TGeoManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 605 of file TGeoManager.h. ◆ CleanGarbage(). void TGeoManager::CleanGarbage ; (; ). Clean temporary volumes and shapes from garbage collection. ; Definition at line 1627 of file TGeoManager.cxx. ◆ ClearAttributes(). void TGeoManager::ClearAttributes ; (; ). Reset all attributes to default ones. ; Default attributes for visualization are those defined before",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManager.html:4977,Usability,simpl,simple,4977,"ive shapes supported by the package are basically the GEANT3 shapes (see class TGeoShape), arbitrary wedges with eight vertices on two parallel planes. All basic primitives inherits from class TGeoBBox since the bounding box of a solid is essential for the tracking algorithms. They also implement the virtual methods defined in the virtual class TGeoShape (point and segment classification). User-defined primitives can be directly plugged into the modeler provided that they override these methods. Composite shapes will be soon supported by the modeler. In order to build a TGeoCompositeShape, one will have to define first the primitive components. The object that handle boolean operations among components is called TGeoBoolCombinator and it has to be constructed providing a string boolean expression between the components names. Example for building a simple geometry; ; void rootgeom(bool vis = true); {; // gStyle->SetCanvasPreferGL(true);; ; TGeoManager *geom = new TGeoManager(""simple1"", ""Simple geometry"");; ; //--- define some materials; TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; // //--- define some media; TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);; TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);; ; //--- define the transformations; TGeoTranslation *tr1 = new TGeoTranslation(20., 0, 0.);; TGeoTranslation *tr2 = new TGeoTranslation(10., 0., 0.);; TGeoTranslation *tr3 = new TGeoTranslation(10., 20., 0.);; TGeoTranslation *tr4 = new TGeoTranslation(5., 10., 0.);; TGeoTranslation *tr5 = new TGeoTranslation(20., 0., 0.);; TGeoTranslation *tr6 = new TGeoTranslation(-5., 0., 0.);; TGeoTranslation *tr7 = new TGeoTranslation(7.5, 7.5, 0.);; TGeoRotation *rot1 = new TGeoRotation(""rot1"", 90., 0., 90., 270., 0., 0.);; TGeoCombiTrans *combi1 = new TGeoCombiTrans(7.5, -7.5, 0., rot1);; TGeoTranslation *tr8 = new TGeoTranslation(7.5, -5., 0.);; TGeoTranslation *tr9 = new TGe",MatchSource.WIKI,doc/master/classTGeoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManager.html
https://root.cern/doc/master/classTGeoManagerEditor.html:20349,Availability,error,error,20349,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetO",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:20438,Availability,error,error,20438," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virt",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:20593,Availability,error,error,20593,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to ha",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:20890,Availability,error,error,20890,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; vi",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:24395,Availability,error,error,24395,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:35093,Availability,mask,mask,35093,"ng signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEd",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:1285,Integrability,depend,depending,1285,"enceThe Geometry Package » Geometry builder. ; Editor for TGeoManager class. ; Provides also builder functionality for the main TGeo objects: TGeoVolume, TGeoShape - derived classes, TGeoMaterial, TGeoMatrix - derived transformations and TGeoMedium. The GUI represents the main entry point for editing geometry classes. It can be started either by:. TGeoManager::Edit(). The method must be used when starting from a new geometry.; Left-click on the 40x40 pixels top-right corner of a pad containing a drawn volume. The region is always accesible when drawing geometry elements and allows also restoring the manager editor in the ""Style"" tab of the GED editor anytime. The TGeoManager editor is vertically split by a TGShutter widget into the following categories:. General. This allows changing the name/title of the geometry, setting the top volume, closing the geometry and saving the geometry in a file. The name of the geometry file is formed by geometry_name.C/.root depending if the geometry need to be saved as a C macro or a .root file.; Shapes. The category provide buttons for creation of all supported shapes. The new shape name is chosen by the interface, but can be changed from the shape editor GUI. Existing shapes can be browsed and edited from the same category.; Volumes. The category allows the creation of a new volume having a given name, shape and medium. For creating a volume assembly only the name is relevant. Existing volumes can be browsed or edited from this category.; Materials. Allows creation of new materials/mixtures or editing existing ones.; Media. The same for creation/editing of tracking media (materials having a set of properties related to tracking); Matrices. Allows creation of translations, rotations or combined transformations. Existing matrices can also be browser/edited. . Definition at line 36 of file TGeoManagerEditor.h. Public Member Functions;  TGeoManagerEditor (const TGWindow *p=nullptr, Int_t width=140, Int_t height=30, UInt_t options=kChil",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:1470,Integrability,interface,interface,1470,"derived classes, TGeoMaterial, TGeoMatrix - derived transformations and TGeoMedium. The GUI represents the main entry point for editing geometry classes. It can be started either by:. TGeoManager::Edit(). The method must be used when starting from a new geometry.; Left-click on the 40x40 pixels top-right corner of a pad containing a drawn volume. The region is always accesible when drawing geometry elements and allows also restoring the manager editor in the ""Style"" tab of the GED editor anytime. The TGeoManager editor is vertically split by a TGShutter widget into the following categories:. General. This allows changing the name/title of the geometry, setting the top volume, closing the geometry and saving the geometry in a file. The name of the geometry file is formed by geometry_name.C/.root depending if the geometry need to be saved as a C macro or a .root file.; Shapes. The category provide buttons for creation of all supported shapes. The new shape name is chosen by the interface, but can be changed from the shape editor GUI. Existing shapes can be browsed and edited from the same category.; Volumes. The category allows the creation of a new volume having a given name, shape and medium. For creating a volume assembly only the name is relevant. Existing volumes can be browsed or edited from this category.; Materials. Allows creation of new materials/mixtures or editing existing ones.; Media. The same for creation/editing of tracking media (materials having a set of properties related to tracking); Matrices. Allows creation of translations, rotations or combined transformations. Existing matrices can also be browser/edited. . Definition at line 36 of file TGeoManagerEditor.h. Public Member Functions;  TGeoManagerEditor (const TGWindow *p=nullptr, Int_t width=140, Int_t height=30, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  Constructor for manager editor. ;  ;  ~TGeoManagerEditor () override;  Destructor. ;  ; void ConnectSelected (TCan",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:13204,Integrability,message,message,13204,"d DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; Bool_t HandleEvent (Event_t *event) override;  Handle all frame events. ;  ; virtual Bool_t HandleSelectionClear (Event_t *);  ; virtual Bool_t HandleSelectionRequest (Event_t *);  ; void Inspect () const override;  Dump contents of this object in a graphics canvas. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsActive () const;  ; Bool_t IsDNDSource () con",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:15371,Integrability,message,message,15371,"t_t h=0) override;  Move and/or resize the frame. ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a frame widget as a C++ statement(s) on output stream out. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObje",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:20355,Integrability,message,message,20355,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetO",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:20896,Integrability,message,message,20896,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; vi",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:21748,Integrability,message,message,21748," py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:24401,Integrability,message,message,24401,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:24774,Integrability,message,message,24774," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:30605,Integrability,interface,interface,30605,"e ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual void ConnectSignals2Slots ();  Connect signals to slots. ;  ; void ShowSelectMaterial (Bool_t show=kTRUE);  Show/hide interface for material selection. ;  ; void ShowSelectMatrix (Bool_t show=kTRUE);  Show/hide interface for matrix selection. ;  ; void ShowSelectMedium (Bool_t show=kTRUE);  Show/hide interface for medium selection. ;  ; void ShowSelectShape (Bool_t show=kTRUE);  Show/hide interface for shape selection. ;  ; void ShowSelectVolume (Bool_t show=kTRUE);  Show/hide interface for volume selection. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t o",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:30698,Integrability,interface,interface,30698,"ender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual void ConnectSignals2Slots ();  Connect signals to slots. ;  ; void ShowSelectMaterial (Bool_t show=kTRUE);  Show/hide interface for material selection. ;  ; void ShowSelectMatrix (Bool_t show=kTRUE);  Show/hide interface for matrix selection. ;  ; void ShowSelectMedium (Bool_t show=kTRUE);  Show/hide interface for medium selection. ;  ; void ShowSelectShape (Bool_t show=kTRUE);  Show/hide interface for shape selection. ;  ; void ShowSelectVolume (Bool_t show=kTRUE);  Show/hide interface for volume selection. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindo",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:30789,Integrability,interface,interface,30789,"ot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual void ConnectSignals2Slots ();  Connect signals to slots. ;  ; void ShowSelectMaterial (Bool_t show=kTRUE);  Show/hide interface for material selection. ;  ; void ShowSelectMatrix (Bool_t show=kTRUE);  Show/hide interface for matrix selection. ;  ; void ShowSelectMedium (Bool_t show=kTRUE);  Show/hide interface for medium selection. ;  ; void ShowSelectShape (Bool_t show=kTRUE);  Show/hide interface for shape selection. ;  ; void ShowSelectVolume (Bool_t show=kTRUE);  Show/hide interface for volume selection. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (co",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:30879,Integrability,interface,interface,30879,"e slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual void ConnectSignals2Slots ();  Connect signals to slots. ;  ; void ShowSelectMaterial (Bool_t show=kTRUE);  Show/hide interface for material selection. ;  ; void ShowSelectMatrix (Bool_t show=kTRUE);  Show/hide interface for matrix selection. ;  ; void ShowSelectMedium (Bool_t show=kTRUE);  Show/hide interface for medium selection. ;  ; void ShowSelectShape (Bool_t show=kTRUE);  Show/hide interface for shape selection. ;  ; void ShowSelectVolume (Bool_t show=kTRUE);  Show/hide interface for volume selection. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & ope",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:30969,Integrability,interface,interface,30969,"iver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual void ConnectSignals2Slots ();  Connect signals to slots. ;  ; void ShowSelectMaterial (Bool_t show=kTRUE);  Show/hide interface for material selection. ;  ; void ShowSelectMatrix (Bool_t show=kTRUE);  Show/hide interface for matrix selection. ;  ; void ShowSelectMedium (Bool_t show=kTRUE);  Show/hide interface for medium selection. ;  ; void ShowSelectShape (Bool_t show=kTRUE);  Show/hide interface for shape selection. ;  ; void ShowSelectVolume (Bool_t show=kTRUE);  Show/hide interface for volume selection. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtu",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:48688,Integrability,interface,interface,48688,"e TGeoManagerEditor.cxx. ◆ DoSetTopVolume(). void TGeoManagerEditor::DoSetTopVolume ; (; ). Set top volume for the geometry. ; Definition at line 1256 of file TGeoManagerEditor.cxx. ◆ LoadLib(). void TGeoManagerEditor::LoadLib ; (; ). static . Dummy static function, used to load plugin. ; Definition at line 1527 of file TGeoManagerEditor.cxx. ◆ SelectedSlot(). void TGeoManagerEditor::SelectedSlot ; (; TVirtualPad * ; pad, . TObject * ; obj, . Int_t ; event . ). virtual . Connected to TCanvas::Selected. ; TGeoManagerEditor takes this function from TGedEditor and only uses it if obj is a TGeoVolume. ; Definition at line 708 of file TGeoManagerEditor.cxx. ◆ SetModel(). void TGeoManagerEditor::SetModel ; (; TObject * ; obj). overridevirtual . Refresh editor according the selected obj. ; Implements TGedFrame.; Definition at line 795 of file TGeoManagerEditor.cxx. ◆ ShowSelectMaterial(). void TGeoManagerEditor::ShowSelectMaterial ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for material selection. ; Definition at line 1491 of file TGeoManagerEditor.cxx. ◆ ShowSelectMatrix(). void TGeoManagerEditor::ShowSelectMatrix ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for matrix selection. ; Definition at line 1515 of file TGeoManagerEditor.cxx. ◆ ShowSelectMedium(). void TGeoManagerEditor::ShowSelectMedium ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for medium selection. ; Definition at line 1503 of file TGeoManagerEditor.cxx. ◆ ShowSelectShape(). void TGeoManagerEditor::ShowSelectShape ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for shape selection. ; Definition at line 1462 of file TGeoManagerEditor.cxx. ◆ ShowSelectVolume(). void TGeoManagerEditor::ShowSelectVolume ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for volume selection. ; Definition at line 1474 of file TGeoManagerEditor.cxx. Member Data Documentation. ◆ f2. TGCompositeFrame* TGeoManagerEditor::f2. protected . Definition at line 94 of ",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:48893,Integrability,interface,interface,48893,"ManagerEditor::LoadLib ; (; ). static . Dummy static function, used to load plugin. ; Definition at line 1527 of file TGeoManagerEditor.cxx. ◆ SelectedSlot(). void TGeoManagerEditor::SelectedSlot ; (; TVirtualPad * ; pad, . TObject * ; obj, . Int_t ; event . ). virtual . Connected to TCanvas::Selected. ; TGeoManagerEditor takes this function from TGedEditor and only uses it if obj is a TGeoVolume. ; Definition at line 708 of file TGeoManagerEditor.cxx. ◆ SetModel(). void TGeoManagerEditor::SetModel ; (; TObject * ; obj). overridevirtual . Refresh editor according the selected obj. ; Implements TGedFrame.; Definition at line 795 of file TGeoManagerEditor.cxx. ◆ ShowSelectMaterial(). void TGeoManagerEditor::ShowSelectMaterial ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for material selection. ; Definition at line 1491 of file TGeoManagerEditor.cxx. ◆ ShowSelectMatrix(). void TGeoManagerEditor::ShowSelectMatrix ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for matrix selection. ; Definition at line 1515 of file TGeoManagerEditor.cxx. ◆ ShowSelectMedium(). void TGeoManagerEditor::ShowSelectMedium ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for medium selection. ; Definition at line 1503 of file TGeoManagerEditor.cxx. ◆ ShowSelectShape(). void TGeoManagerEditor::ShowSelectShape ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for shape selection. ; Definition at line 1462 of file TGeoManagerEditor.cxx. ◆ ShowSelectVolume(). void TGeoManagerEditor::ShowSelectVolume ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for volume selection. ; Definition at line 1474 of file TGeoManagerEditor.cxx. Member Data Documentation. ◆ f2. TGCompositeFrame* TGeoManagerEditor::f2. protected . Definition at line 94 of file TGeoManagerEditor.h. ◆ f3. TGCompositeFrame* TGeoManagerEditor::f3. protected . Definition at line 95 of file TGeoManagerEditor.h. ◆ f4. TGCompositeFrame* TGeoManagerEditor::f4. protected . Definitio",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:49096,Integrability,interface,interface,49096,"irtualPad * ; pad, . TObject * ; obj, . Int_t ; event . ). virtual . Connected to TCanvas::Selected. ; TGeoManagerEditor takes this function from TGedEditor and only uses it if obj is a TGeoVolume. ; Definition at line 708 of file TGeoManagerEditor.cxx. ◆ SetModel(). void TGeoManagerEditor::SetModel ; (; TObject * ; obj). overridevirtual . Refresh editor according the selected obj. ; Implements TGedFrame.; Definition at line 795 of file TGeoManagerEditor.cxx. ◆ ShowSelectMaterial(). void TGeoManagerEditor::ShowSelectMaterial ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for material selection. ; Definition at line 1491 of file TGeoManagerEditor.cxx. ◆ ShowSelectMatrix(). void TGeoManagerEditor::ShowSelectMatrix ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for matrix selection. ; Definition at line 1515 of file TGeoManagerEditor.cxx. ◆ ShowSelectMedium(). void TGeoManagerEditor::ShowSelectMedium ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for medium selection. ; Definition at line 1503 of file TGeoManagerEditor.cxx. ◆ ShowSelectShape(). void TGeoManagerEditor::ShowSelectShape ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for shape selection. ; Definition at line 1462 of file TGeoManagerEditor.cxx. ◆ ShowSelectVolume(). void TGeoManagerEditor::ShowSelectVolume ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for volume selection. ; Definition at line 1474 of file TGeoManagerEditor.cxx. Member Data Documentation. ◆ f2. TGCompositeFrame* TGeoManagerEditor::f2. protected . Definition at line 94 of file TGeoManagerEditor.h. ◆ f3. TGCompositeFrame* TGeoManagerEditor::f3. protected . Definition at line 95 of file TGeoManagerEditor.h. ◆ f4. TGCompositeFrame* TGeoManagerEditor::f4. protected . Definition at line 96 of file TGeoManagerEditor.h. ◆ f5. TGCompositeFrame* TGeoManagerEditor::f5. protected . Definition at line 97 of file TGeoManagerEditor.h. ◆ f6. TGCompositeFrame* TGeoManagerEditor::f6. prot",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:49297,Integrability,interface,interface,49297,Definition at line 708 of file TGeoManagerEditor.cxx. ◆ SetModel(). void TGeoManagerEditor::SetModel ; (; TObject * ; obj). overridevirtual . Refresh editor according the selected obj. ; Implements TGedFrame.; Definition at line 795 of file TGeoManagerEditor.cxx. ◆ ShowSelectMaterial(). void TGeoManagerEditor::ShowSelectMaterial ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for material selection. ; Definition at line 1491 of file TGeoManagerEditor.cxx. ◆ ShowSelectMatrix(). void TGeoManagerEditor::ShowSelectMatrix ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for matrix selection. ; Definition at line 1515 of file TGeoManagerEditor.cxx. ◆ ShowSelectMedium(). void TGeoManagerEditor::ShowSelectMedium ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for medium selection. ; Definition at line 1503 of file TGeoManagerEditor.cxx. ◆ ShowSelectShape(). void TGeoManagerEditor::ShowSelectShape ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for shape selection. ; Definition at line 1462 of file TGeoManagerEditor.cxx. ◆ ShowSelectVolume(). void TGeoManagerEditor::ShowSelectVolume ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for volume selection. ; Definition at line 1474 of file TGeoManagerEditor.cxx. Member Data Documentation. ◆ f2. TGCompositeFrame* TGeoManagerEditor::f2. protected . Definition at line 94 of file TGeoManagerEditor.h. ◆ f3. TGCompositeFrame* TGeoManagerEditor::f3. protected . Definition at line 95 of file TGeoManagerEditor.h. ◆ f4. TGCompositeFrame* TGeoManagerEditor::f4. protected . Definition at line 96 of file TGeoManagerEditor.h. ◆ f5. TGCompositeFrame* TGeoManagerEditor::f5. protected . Definition at line 97 of file TGeoManagerEditor.h. ◆ f6. TGCompositeFrame* TGeoManagerEditor::f6. protected . Definition at line 98 of file TGeoManagerEditor.h. ◆ f7. TGCompositeFrame* TGeoManagerEditor::f7. protected . Definition at line 99 of file TGeoManagerEditor.h. ◆ fBSelMaterial. TGPictureButton,MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:49499,Integrability,interface,interface,49499,rame.; Definition at line 795 of file TGeoManagerEditor.cxx. ◆ ShowSelectMaterial(). void TGeoManagerEditor::ShowSelectMaterial ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for material selection. ; Definition at line 1491 of file TGeoManagerEditor.cxx. ◆ ShowSelectMatrix(). void TGeoManagerEditor::ShowSelectMatrix ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for matrix selection. ; Definition at line 1515 of file TGeoManagerEditor.cxx. ◆ ShowSelectMedium(). void TGeoManagerEditor::ShowSelectMedium ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for medium selection. ; Definition at line 1503 of file TGeoManagerEditor.cxx. ◆ ShowSelectShape(). void TGeoManagerEditor::ShowSelectShape ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for shape selection. ; Definition at line 1462 of file TGeoManagerEditor.cxx. ◆ ShowSelectVolume(). void TGeoManagerEditor::ShowSelectVolume ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for volume selection. ; Definition at line 1474 of file TGeoManagerEditor.cxx. Member Data Documentation. ◆ f2. TGCompositeFrame* TGeoManagerEditor::f2. protected . Definition at line 94 of file TGeoManagerEditor.h. ◆ f3. TGCompositeFrame* TGeoManagerEditor::f3. protected . Definition at line 95 of file TGeoManagerEditor.h. ◆ f4. TGCompositeFrame* TGeoManagerEditor::f4. protected . Definition at line 96 of file TGeoManagerEditor.h. ◆ f5. TGCompositeFrame* TGeoManagerEditor::f5. protected . Definition at line 97 of file TGeoManagerEditor.h. ◆ f6. TGCompositeFrame* TGeoManagerEditor::f6. protected . Definition at line 98 of file TGeoManagerEditor.h. ◆ f7. TGCompositeFrame* TGeoManagerEditor::f7. protected . Definition at line 99 of file TGeoManagerEditor.h. ◆ fBSelMaterial. TGPictureButton* TGeoManagerEditor::fBSelMaterial. protected . Definition at line 55 of file TGeoManagerEditor.h. ◆ fBSelMaterial2. TGPictureButton* TGeoManagerEditor::fBSelMaterial2. protected . Definition at line 56,MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:5555,Modifiability,inherit,inherited,5555,"aterial. ;  ; void DoSelectMaterial2 ();  Slot for selecting an existing material and making a medium. ;  ; void DoSelectMatrix ();  Slot for selecting an existing matrix. ;  ; void DoSelectMedium ();  Slot for selecting an existing medium. ;  ; void DoSelectMedium2 ();  Slot for selecting an existing medium for making a volume. ;  ; void DoSelectShape ();  Slot for selecting an existing shape. ;  ; void DoSelectShape2 ();  Slot for selecting a shape for making a volume. ;  ; void DoSelectTopVolume ();  Slot for setting top geometry volume. ;  ; void DoSelectVolume ();  Slot for selecting an existing volume. ;  ; void DoSetTopVolume ();  Set top volume for the geometry. ;  ; virtual void SelectedSlot (TVirtualPad *pad, TObject *obj, Int_t event);  Connected to TCanvas::Selected. ;  ; void SetModel (TObject *obj) override;  Refresh editor according the selected obj. ;  ;  Public Member Functions inherited from TGedFrame;  TGedFrame (const TGWindow *p=nullptr, Int_t width=140, Int_t height=30, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  Constructor of the base GUI attribute frame. ;  ;  ~TGedFrame () override;  Destructor of the base GUI attribute frame. ;  ; virtual Bool_t AcceptModel (TObject *);  ; virtual void ActivateBaseClassEditors (TClass *cl);  Provide list of editors for base-classes. ;  ; virtual void AddExtraTab (TGedSubFrame *sf);  Adds tab container to list of extra tabs. ;  ;  ClassDefOverride (TGedFrame, 0);  ; virtual TGVerticalFrame * CreateEditorTabSubFrame (const char *name);  Create a vertical frame to be used by 'owner' in extra tab 'name'. ;  ; Option_t * GetDrawOption () const override;  Get draw options of the selected object. ;  ; TList * GetExtraTabs ();  ; TGedEditor * GetGedEditor ();  ; TClass * GetModelClass ();  ; Int_t GetPriority ();  ; virtual void Refresh (TObject *model);  Refresh the GUI info about the object attributes. ;  ; void SetDrawOption (Option_t *option="""") override;  Set drawing option for obj",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:6857,Modifiability,inherit,inherited,6857,"ass *cl);  Provide list of editors for base-classes. ;  ; virtual void AddExtraTab (TGedSubFrame *sf);  Adds tab container to list of extra tabs. ;  ;  ClassDefOverride (TGedFrame, 0);  ; virtual TGVerticalFrame * CreateEditorTabSubFrame (const char *name);  Create a vertical frame to be used by 'owner' in extra tab 'name'. ;  ; Option_t * GetDrawOption () const override;  Get draw options of the selected object. ;  ; TList * GetExtraTabs ();  ; TGedEditor * GetGedEditor ();  ; TClass * GetModelClass ();  ; Int_t GetPriority ();  ; virtual void Refresh (TObject *model);  Refresh the GUI info about the object attributes. ;  ; void SetDrawOption (Option_t *option="""") override;  Set drawing option for object. ;  ; virtual void SetGedEditor (TGedEditor *ed);  ; void SetModelClass (TClass *mcl);  ; virtual void Update ();  Update the current pad when an attribute is changed via GUI. ;  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () const override;  std::cout << fWi",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:11213,Modifiability,inherit,inherited,11213," save subframes. ;  ; void SetCleanup (Int_t mode=kLocalCleanup) override;  Turn on automatic cleanup of child frames in dtor. ;  ; void SetEditable (Bool_t on=kTRUE) override;  Switch ON/OFF edit mode. ;  ; void SetEditDisabled (UInt_t on=1) override;  Set edit disable flag for this frame and subframes. ;  ; void SetLayoutBroken (Bool_t on=kTRUE) override;  Set broken layout. No Layout method is called. ;  ; virtual void SetLayoutManager (TGLayoutManager *l);  Set the layout manager for the composite frame. ;  ; void SetMapSubwindows (Bool_t on) override;  ; virtual void ShowFrame (TGFrame *f);  Show sub frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:12080,Modifiability,inherit,inheritance,12080,"es (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:16471,Modifiability,inherit,inherited,16471,"l_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify win",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:18253,Modifiability,inherit,inherited,18253,"rent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:18988,Modifiability,inherit,inherited,18988,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:21846,Modifiability,inherit,inherits,21846,"d Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:21963,Modifiability,inherit,inherits,21963,"Object (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:25081,Modifiability,inherit,inherited,25081,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:27117,Modifiability,plugin,plugin,27117,"nal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void LoadLib ();  Dummy static function, used to load plugin. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shado",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:27162,Modifiability,inherit,inherited,27162,") const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void LoadLib ();  Dummy static function, used to load plugin. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:27382,Modifiability,inherit,inherited,27382,") const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void LoadLib ();  Dummy static function, used to load plugin. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:28268,Modifiability,inherit,inherited,28268,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:28578,Modifiability,inherit,inherited,28578,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:28790,Modifiability,inherit,inherited,28790,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:29308,Modifiability,inherit,inherited,29308," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:31034,Modifiability,inherit,inherited,31034,"char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual void ConnectSignals2Slots ();  Connect signals to slots. ;  ; void ShowSelectMaterial (Bool_t show=kTRUE);  Show/hide interface for material selection. ;  ; void ShowSelectMatrix (Bool_t show=kTRUE);  Show/hide interface for matrix selection. ;  ; void ShowSelectMedium (Bool_t show=kTRUE);  Show/hide interface for medium selection. ;  ; void ShowSelectShape (Bool_t show=kTRUE);  Show/hide interface for shape selection. ;  ; void ShowSelectVolume (Bool_t show=kTRUE);  Show/hide interface for volume selection. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:31168,Modifiability,inherit,inherited,31168,"r, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual void ConnectSignals2Slots ();  Connect signals to slots. ;  ; void ShowSelectMaterial (Bool_t show=kTRUE);  Show/hide interface for material selection. ;  ; void ShowSelectMatrix (Bool_t show=kTRUE);  Show/hide interface for matrix selection. ;  ; void ShowSelectMedium (Bool_t show=kTRUE);  Show/hide interface for medium selection. ;  ; void ShowSelectShape (Bool_t show=kTRUE);  Show/hide interface for shape selection. ;  ; void ShowSelectVolume (Bool_t show=kTRUE);  Show/hide interface for volume selection. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * Get",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:31662,Modifiability,inherit,inherited,31662," show=kTRUE);  Show/hide interface for shape selection. ;  ; void ShowSelectVolume (Bool_t show=kTRUE);  Show/hide interface for volume selection. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGCompositeFrame * f2;  ; TGCompositeFrame * f3;  ; TGCompositeFrame * f4;  ; TGCompositeFrame * f5;  ; TGCompositeFrame * f6;  ; TGCompositeFrame * f7;  ; TGPictureButton * fBSelMaterial;  ; TGPictureButton * fBSelMaterial2;  ; TGPictureButton * fBSelMatrix;  ; TGPictureButton * fBSelMedium;  ; TGPictureButton * fBSelMedium2;  ; TGPictureButton * fBSelShape;  ; TGPictureButton * fBSelShape2;  ; TGPictureButton * fBSelTop;  ; TGPictureButton * fBSelVolume;  ; TGShutter * fCategories;  ; TGTextButton * fCloseGeometry;  ; TCanvas * fConnectedCanvas;  ; TGTextButton * fEditMaterial;  ; TGTextButton * fEditMatrix;",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:31826,Modifiability,inherit,inherited,31826," show=kTRUE);  Show/hide interface for shape selection. ;  ; void ShowSelectVolume (Bool_t show=kTRUE);  Show/hide interface for volume selection. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGCompositeFrame * f2;  ; TGCompositeFrame * f3;  ; TGCompositeFrame * f4;  ; TGCompositeFrame * f5;  ; TGCompositeFrame * f6;  ; TGCompositeFrame * f7;  ; TGPictureButton * fBSelMaterial;  ; TGPictureButton * fBSelMaterial2;  ; TGPictureButton * fBSelMatrix;  ; TGPictureButton * fBSelMedium;  ; TGPictureButton * fBSelMedium2;  ; TGPictureButton * fBSelShape;  ; TGPictureButton * fBSelShape2;  ; TGPictureButton * fBSelTop;  ; TGPictureButton * fBSelVolume;  ; TGShutter * fCategories;  ; TGTextButton * fCloseGeometry;  ; TCanvas * fConnectedCanvas;  ; TGTextButton * fEditMaterial;  ; TGTextButton * fEditMatrix;",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:31926,Modifiability,inherit,inherited,31926," show=kTRUE);  Show/hide interface for shape selection. ;  ; void ShowSelectVolume (Bool_t show=kTRUE);  Show/hide interface for volume selection. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGCompositeFrame * f2;  ; TGCompositeFrame * f3;  ; TGCompositeFrame * f4;  ; TGCompositeFrame * f5;  ; TGCompositeFrame * f6;  ; TGCompositeFrame * f7;  ; TGPictureButton * fBSelMaterial;  ; TGPictureButton * fBSelMaterial2;  ; TGPictureButton * fBSelMatrix;  ; TGPictureButton * fBSelMedium;  ; TGPictureButton * fBSelMedium2;  ; TGPictureButton * fBSelShape;  ; TGPictureButton * fBSelShape2;  ; TGPictureButton * fBSelTop;  ; TGPictureButton * fBSelVolume;  ; TGShutter * fCategories;  ; TGTextButton * fCloseGeometry;  ; TCanvas * fConnectedCanvas;  ; TGTextButton * fEditMaterial;  ; TGTextButton * fEditMatrix;",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:32137,Modifiability,inherit,inherited,32137,"ted Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGCompositeFrame * f2;  ; TGCompositeFrame * f3;  ; TGCompositeFrame * f4;  ; TGCompositeFrame * f5;  ; TGCompositeFrame * f6;  ; TGCompositeFrame * f7;  ; TGPictureButton * fBSelMaterial;  ; TGPictureButton * fBSelMaterial2;  ; TGPictureButton * fBSelMatrix;  ; TGPictureButton * fBSelMedium;  ; TGPictureButton * fBSelMedium2;  ; TGPictureButton * fBSelShape;  ; TGPictureButton * fBSelShape2;  ; TGPictureButton * fBSelTop;  ; TGPictureButton * fBSelVolume;  ; TGShutter * fCategories;  ; TGTextButton * fCloseGeometry;  ; TCanvas * fConnectedCanvas;  ; TGTextButton * fEditMaterial;  ; TGTextButton * fEditMatrix;  ; TGTextButton * fEditMedium;  ; TGTextButton * fEditShape;  ; TGTextButton * fEditVolume;  ; TGComboBox * fElementList;  ; TGNumberEntry * fEntryDensity;  ; TGTextButton * fExportButton;  ; TGRadioButton * fExportOption [2];  ; TGeoManager * fGeometry;  ; Bool_t fIsModified;  ; TGLabel * f",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:34191,Modifiability,inherit,inherited,34191,  ; TGRadioButton * fExportOption [2];  ; TGeoManager * fGeometry;  ; Bool_t fIsModified;  ; TGLabel * fLSelMaterial;  ; TGLabel * fLSelMaterial2;  ; TGLabel * fLSelMatrix;  ; TGLabel * fLSelMedium;  ; TGLabel * fLSelMedium2;  ; TGLabel * fLSelShape;  ; TGLabel * fLSelShape2;  ; TGLabel * fLSelTop;  ; TGLabel * fLSelVolume;  ; TGTextEntry * fManagerName;  ; TGTextEntry * fManagerTitle;  ; TGPictureButton * fMaterialButton [2];  ; TGTextEntry * fMaterialName;  ; TGPictureButton * fMatrixButton [3];  ; TGTextEntry * fMatrixName;  ; TGPictureButton * fMediumButton;  ; TGNumberEntry * fMediumId;  ; TGTextEntry * fMediumName;  ; TGeoMaterial * fSelectedMaterial;  ; TGeoMaterial * fSelectedMaterial2;  ; TGeoMatrix * fSelectedMatrix;  ; TGeoMedium * fSelectedMedium;  ; TGeoMedium * fSelectedMedium2;  ; TGeoShape * fSelectedShape;  ; TGeoShape * fSelectedShape2;  ; TGeoVolume * fSelectedVolume;  ; TGTextButton * fSetTopVolume;  ; TGPictureButton * fShapeButton [21];  ; TGTab * fTab;  ; TGeoTabManager * fTabMgr;  ; TGPictureButton * fVolumeButton [2];  ; TGTextEntry * fVolumeName;  ; TGCompositeFrame * fVolumeTab;  ;  Protected Attributes inherited from TGedFrame; Bool_t fAvoidSignal;  flag for executing slots ;  ; TList * fExtraTabs;  addtional tabs in ged editor ;  ; TGedEditor * fGedEditor;  manager of this frame ;  ; Bool_t fInit;  init flag for setting signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags.,MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:34573,Modifiability,inherit,inherited,34573,  ; TGRadioButton * fExportOption [2];  ; TGeoManager * fGeometry;  ; Bool_t fIsModified;  ; TGLabel * fLSelMaterial;  ; TGLabel * fLSelMaterial2;  ; TGLabel * fLSelMatrix;  ; TGLabel * fLSelMedium;  ; TGLabel * fLSelMedium2;  ; TGLabel * fLSelShape;  ; TGLabel * fLSelShape2;  ; TGLabel * fLSelTop;  ; TGLabel * fLSelVolume;  ; TGTextEntry * fManagerName;  ; TGTextEntry * fManagerTitle;  ; TGPictureButton * fMaterialButton [2];  ; TGTextEntry * fMaterialName;  ; TGPictureButton * fMatrixButton [3];  ; TGTextEntry * fMatrixName;  ; TGPictureButton * fMediumButton;  ; TGNumberEntry * fMediumId;  ; TGTextEntry * fMediumName;  ; TGeoMaterial * fSelectedMaterial;  ; TGeoMaterial * fSelectedMaterial2;  ; TGeoMatrix * fSelectedMatrix;  ; TGeoMedium * fSelectedMedium;  ; TGeoMedium * fSelectedMedium2;  ; TGeoShape * fSelectedShape;  ; TGeoShape * fSelectedShape2;  ; TGeoVolume * fSelectedVolume;  ; TGTextButton * fSetTopVolume;  ; TGPictureButton * fShapeButton [21];  ; TGTab * fTab;  ; TGeoTabManager * fTabMgr;  ; TGPictureButton * fVolumeButton [2];  ; TGTextEntry * fVolumeName;  ; TGCompositeFrame * fVolumeTab;  ;  Protected Attributes inherited from TGedFrame; Bool_t fAvoidSignal;  flag for executing slots ;  ; TList * fExtraTabs;  addtional tabs in ged editor ;  ; TGedEditor * fGedEditor;  manager of this frame ;  ; Bool_t fInit;  init flag for setting signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags.,MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:34897,Modifiability,inherit,inherited,34897,  ; TGRadioButton * fExportOption [2];  ; TGeoManager * fGeometry;  ; Bool_t fIsModified;  ; TGLabel * fLSelMaterial;  ; TGLabel * fLSelMaterial2;  ; TGLabel * fLSelMatrix;  ; TGLabel * fLSelMedium;  ; TGLabel * fLSelMedium2;  ; TGLabel * fLSelShape;  ; TGLabel * fLSelShape2;  ; TGLabel * fLSelTop;  ; TGLabel * fLSelVolume;  ; TGTextEntry * fManagerName;  ; TGTextEntry * fManagerTitle;  ; TGPictureButton * fMaterialButton [2];  ; TGTextEntry * fMaterialName;  ; TGPictureButton * fMatrixButton [3];  ; TGTextEntry * fMatrixName;  ; TGPictureButton * fMediumButton;  ; TGNumberEntry * fMediumId;  ; TGTextEntry * fMediumName;  ; TGeoMaterial * fSelectedMaterial;  ; TGeoMaterial * fSelectedMaterial2;  ; TGeoMatrix * fSelectedMatrix;  ; TGeoMedium * fSelectedMedium;  ; TGeoMedium * fSelectedMedium2;  ; TGeoShape * fSelectedShape;  ; TGeoShape * fSelectedShape2;  ; TGeoVolume * fSelectedVolume;  ; TGTextButton * fSetTopVolume;  ; TGPictureButton * fShapeButton [21];  ; TGTab * fTab;  ; TGeoTabManager * fTabMgr;  ; TGPictureButton * fVolumeButton [2];  ; TGTextEntry * fVolumeName;  ; TGCompositeFrame * fVolumeTab;  ;  Protected Attributes inherited from TGedFrame; Bool_t fAvoidSignal;  flag for executing slots ;  ; TList * fExtraTabs;  addtional tabs in ged editor ;  ; TGedEditor * fGedEditor;  manager of this frame ;  ; Bool_t fInit;  init flag for setting signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags.,MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:35529,Modifiability,inherit,inherited,35529,"ng signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEd",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:35806,Modifiability,inherit,inherited,35806,"eanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:35958,Modifiability,inherit,inherited,35958,"DNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( ",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:36186,Modifiability,inherit,inherited,36186," fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:36693,Modifiability,inherit,inherited,36693,"onst TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:37334,Modifiability,inherit,inherited,37334,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:37429,Modifiability,inherit,inherited,37429,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:37535,Modifiability,inherit,inherited,37535,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:37661,Modifiability,inherit,inherited,37661,"; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static ",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:38517,Modifiability,inherit,inherited,38517,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGeoManagerEditor.h>. Inheritance diagram for TGeoManagerEditor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoManagerEditor(). TGeoManagerEditor::TGeoManagerEditor ; (; const TGWindow * ; p = nullptr, . Int_t ; width = 140, . Int_t ; height = 30, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Constructor for manager edit",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:38631,Modifiability,inherit,inherited,38631,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGeoManagerEditor.h>. Inheritance diagram for TGeoManagerEditor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoManagerEditor(). TGeoManagerEditor::TGeoManagerEditor ; (; const TGWindow * ; p = nullptr, . Int_t ; width = 140, . Int_t ; height = 30, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Constructor for manager edit",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:39300,Modifiability,inherit,inherited,39300,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGeoManagerEditor.h>. Inheritance diagram for TGeoManagerEditor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoManagerEditor(). TGeoManagerEditor::TGeoManagerEditor ; (; const TGWindow * ; p = nullptr, . Int_t ; width = 140, . Int_t ; height = 30, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Constructor for manager edit",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:39432,Modifiability,inherit,inherited,39432,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGeoManagerEditor.h>. Inheritance diagram for TGeoManagerEditor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoManagerEditor(). TGeoManagerEditor::TGeoManagerEditor ; (; const TGWindow * ; p = nullptr, . Int_t ; width = 140, . Int_t ; height = 30, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Constructor for manager edit",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:47979,Modifiability,plugin,plugin,47979,"an existing medium for making a volume. ; Definition at line 1408 of file TGeoManagerEditor.cxx. ◆ DoSelectShape(). void TGeoManagerEditor::DoSelectShape ; (; ). Slot for selecting an existing shape. ; Definition at line 1338 of file TGeoManagerEditor.cxx. ◆ DoSelectShape2(). void TGeoManagerEditor::DoSelectShape2 ; (; ). Slot for selecting a shape for making a volume. ; Definition at line 1352 of file TGeoManagerEditor.cxx. ◆ DoSelectTopVolume(). void TGeoManagerEditor::DoSelectTopVolume ; (; ). Slot for setting top geometry volume. ; Definition at line 1436 of file TGeoManagerEditor.cxx. ◆ DoSelectVolume(). void TGeoManagerEditor::DoSelectVolume ; (; ). Slot for selecting an existing volume. ; Definition at line 1422 of file TGeoManagerEditor.cxx. ◆ DoSetTopVolume(). void TGeoManagerEditor::DoSetTopVolume ; (; ). Set top volume for the geometry. ; Definition at line 1256 of file TGeoManagerEditor.cxx. ◆ LoadLib(). void TGeoManagerEditor::LoadLib ; (; ). static . Dummy static function, used to load plugin. ; Definition at line 1527 of file TGeoManagerEditor.cxx. ◆ SelectedSlot(). void TGeoManagerEditor::SelectedSlot ; (; TVirtualPad * ; pad, . TObject * ; obj, . Int_t ; event . ). virtual . Connected to TCanvas::Selected. ; TGeoManagerEditor takes this function from TGedEditor and only uses it if obj is a TGeoVolume. ; Definition at line 708 of file TGeoManagerEditor.cxx. ◆ SetModel(). void TGeoManagerEditor::SetModel ; (; TObject * ; obj). overridevirtual . Refresh editor according the selected obj. ; Implements TGedFrame.; Definition at line 795 of file TGeoManagerEditor.cxx. ◆ ShowSelectMaterial(). void TGeoManagerEditor::ShowSelectMaterial ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for material selection. ; Definition at line 1491 of file TGeoManagerEditor.cxx. ◆ ShowSelectMatrix(). void TGeoManagerEditor::ShowSelectMatrix ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for matrix selection. ; Definition at line 1515 of file TGeoM",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:27112,Performance,load,load,27112,"nal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void LoadLib ();  Dummy static function, used to load plugin. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shado",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:47974,Performance,load,load,47974,"an existing medium for making a volume. ; Definition at line 1408 of file TGeoManagerEditor.cxx. ◆ DoSelectShape(). void TGeoManagerEditor::DoSelectShape ; (; ). Slot for selecting an existing shape. ; Definition at line 1338 of file TGeoManagerEditor.cxx. ◆ DoSelectShape2(). void TGeoManagerEditor::DoSelectShape2 ; (; ). Slot for selecting a shape for making a volume. ; Definition at line 1352 of file TGeoManagerEditor.cxx. ◆ DoSelectTopVolume(). void TGeoManagerEditor::DoSelectTopVolume ; (; ). Slot for setting top geometry volume. ; Definition at line 1436 of file TGeoManagerEditor.cxx. ◆ DoSelectVolume(). void TGeoManagerEditor::DoSelectVolume ; (; ). Slot for selecting an existing volume. ; Definition at line 1422 of file TGeoManagerEditor.cxx. ◆ DoSetTopVolume(). void TGeoManagerEditor::DoSetTopVolume ; (; ). Set top volume for the geometry. ; Definition at line 1256 of file TGeoManagerEditor.cxx. ◆ LoadLib(). void TGeoManagerEditor::LoadLib ; (; ). static . Dummy static function, used to load plugin. ; Definition at line 1527 of file TGeoManagerEditor.cxx. ◆ SelectedSlot(). void TGeoManagerEditor::SelectedSlot ; (; TVirtualPad * ; pad, . TObject * ; obj, . Int_t ; event . ). virtual . Connected to TCanvas::Selected. ; TGeoManagerEditor takes this function from TGedEditor and only uses it if obj is a TGeoVolume. ; Definition at line 708 of file TGeoManagerEditor.cxx. ◆ SetModel(). void TGeoManagerEditor::SetModel ; (; TObject * ; obj). overridevirtual . Refresh editor according the selected obj. ; Implements TGedFrame.; Definition at line 795 of file TGeoManagerEditor.cxx. ◆ ShowSelectMaterial(). void TGeoManagerEditor::ShowSelectMaterial ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for material selection. ; Definition at line 1491 of file TGeoManagerEditor.cxx. ◆ ShowSelectMatrix(). void TGeoManagerEditor::ShowSelectMatrix ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for matrix selection. ; Definition at line 1515 of file TGeoM",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoManagerEditor.html:18484,Security,hash,hash,18484,"n response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTGeoManagerEditor.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html
https://root.cern/doc/master/classTGeoMaterial-members.html:1742,Availability,error,error,1742,"nst TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttFill::Copy(TAttFill &attfill) constTAttFill; Coulomb(Double_t z)TGeoMaterialstatic; DecayMaterial(Double_t time, Double_t precision=0.001)TGeoMaterialvirtual; DeclFileName()TGeoMaterialinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EGeoMaterial enum nameTGeoMaterial; EGeoMaterialState enum nameTGeoMaterial; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fATGeoMaterialprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCerenkovTGeoMaterialprotected; fConstPropertiesTGeoMaterialprotected; fDensityTGeoMaterialprotected; fElementTGeoMaterialprotected; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fFWExtensionTGeoMaterialprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FillMaterialEvolution(TObjArray *population, Double_t precision=0.001)TGeoMaterialvirtual; fIndexTGeoMaterialprotected; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fIntLenTGeoMaterialprotected; fNameTNamedprotected; fPressureTGeoMaterialprotected; fPropertiesTGeoMaterialprotected; fRadLenTGeoMaterialprotected; fShaderTGeoMaterialprotected; fStateTGeoMaterialprotected; fTemperatureTGeoMa",MatchSource.WIKI,doc/master/classTGeoMaterial-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial-members.html
https://root.cern/doc/master/classTGeoMaterial-members.html:1823,Availability,error,error,1823,"nst TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttFill::Copy(TAttFill &attfill) constTAttFill; Coulomb(Double_t z)TGeoMaterialstatic; DecayMaterial(Double_t time, Double_t precision=0.001)TGeoMaterialvirtual; DeclFileName()TGeoMaterialinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EGeoMaterial enum nameTGeoMaterial; EGeoMaterialState enum nameTGeoMaterial; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fATGeoMaterialprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCerenkovTGeoMaterialprotected; fConstPropertiesTGeoMaterialprotected; fDensityTGeoMaterialprotected; fElementTGeoMaterialprotected; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fFWExtensionTGeoMaterialprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FillMaterialEvolution(TObjArray *population, Double_t precision=0.001)TGeoMaterialvirtual; fIndexTGeoMaterialprotected; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fIntLenTGeoMaterialprotected; fNameTNamedprotected; fPressureTGeoMaterialprotected; fPropertiesTGeoMaterialprotected; fRadLenTGeoMaterialprotected; fShaderTGeoMaterialprotected; fStateTGeoMaterialprotected; fTemperatureTGeoMa",MatchSource.WIKI,doc/master/classTGeoMaterial-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial-members.html
https://root.cern/doc/master/classTGeoMaterial-members.html:3214,Availability,error,error,3214,,MatchSource.WIKI,doc/master/classTGeoMaterial-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial-members.html
https://root.cern/doc/master/classTGeoMaterial-members.html:3282,Availability,error,error,3282,,MatchSource.WIKI,doc/master/classTGeoMaterial-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial-members.html
https://root.cern/doc/master/classTGeoMaterial-members.html:197,Modifiability,inherit,inherited,197,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMaterial Member List. This is the complete list of members for TGeoMaterial, including all inherited members. AbstractMethod(const char *method) constTObject; AddConstProperty(const char *property, const char *ref)TGeoMaterial; AddProperty(const char *property, const char *ref)TGeoMaterial; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TGeoMaterialstatic; Class_Name()TGeoMaterialstatic; Class_Version()TGeoMaterialinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttFill::Copy(TAttFill &attfill) constTAttFill; Coulomb(Double_t z)TGeoMaterialstatic; DecayMaterial(Double_t time, Double_t precision=0.001)TGeoMaterialvirtual; DeclFileName()TGeoMaterialinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EGeoMaterial enum nameTGeoMaterial; EGeoMaterialState enum nameTGeoMaterial; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fATGeoMaterialprotected; Fatal(const char *method, const char *msgfmt,...) constTObject",MatchSource.WIKI,doc/master/classTGeoMaterial-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial-members.html
https://root.cern/doc/master/classTGeoMaterial.html:3979,Availability,error,error,3979,"essure=STP_pressure);  Constructor with state, temperature and pressure. ;  ;  TGeoMaterial (const char *name, TGeoElement *elem, Double_t rho);  Constructor. ;  ;  ~TGeoMaterial () override;  Destructor. ;  ; bool AddConstProperty (const char *property, const char *ref);  ; bool AddProperty (const char *property, const char *ref);  ; virtual TGeoMaterial * DecayMaterial (Double_t time, Double_t precision=0.001);  Create the material representing the decay product of this material at a given time. ;  ; virtual void FillMaterialEvolution (TObjArray *population, Double_t precision=0.001);  Fills a user array with all the elements deriving from the possible decay of the top element composing the mixture. ;  ; virtual Double_t GetA () const;  ; TGeoElement * GetBaseElement () const;  ; virtual Int_t GetByteCount () const;  ; virtual TObject * GetCerenkovProperties () const;  ; TList const & GetConstProperties () const;  ; Double_t GetConstProperty (const char *property, Bool_t *error=nullptr) const;  ; Double_t GetConstProperty (Int_t i, Bool_t *error=nullptr) const;  ; const char * GetConstPropertyRef (const char *property) const;  ; const char * GetConstPropertyRef (Int_t i) const;  ; virtual Int_t GetDefaultColor () const;  Get some default color related to this material. ;  ; virtual Double_t GetDensity () const;  ; TGeoElement * GetElement () const;  Get a pointer to the element this material is made of. ;  ; virtual TGeoElement * GetElement (Int_t i) const;  Get a pointer to the element this material is made of. ;  ; virtual void GetElementProp (Double_t &a, Double_t &z, Double_t &w, Int_t i=0);  Single interface to get element properties. ;  ; TGeoExtension * GetFWExtension () const;  ; Int_t GetIndex ();  Retrieve material index in the list of materials. ;  ; virtual Double_t GetIntLen () const;  ; Int_t GetNconstProperties () const;  ; virtual Int_t GetNelements () const;  ; Int_t GetNproperties () const;  ; const char * GetPointerName () const;  Provide a point",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:4048,Availability,error,error,4048,"essure=STP_pressure);  Constructor with state, temperature and pressure. ;  ;  TGeoMaterial (const char *name, TGeoElement *elem, Double_t rho);  Constructor. ;  ;  ~TGeoMaterial () override;  Destructor. ;  ; bool AddConstProperty (const char *property, const char *ref);  ; bool AddProperty (const char *property, const char *ref);  ; virtual TGeoMaterial * DecayMaterial (Double_t time, Double_t precision=0.001);  Create the material representing the decay product of this material at a given time. ;  ; virtual void FillMaterialEvolution (TObjArray *population, Double_t precision=0.001);  Fills a user array with all the elements deriving from the possible decay of the top element composing the mixture. ;  ; virtual Double_t GetA () const;  ; TGeoElement * GetBaseElement () const;  ; virtual Int_t GetByteCount () const;  ; virtual TObject * GetCerenkovProperties () const;  ; TList const & GetConstProperties () const;  ; Double_t GetConstProperty (const char *property, Bool_t *error=nullptr) const;  ; Double_t GetConstProperty (Int_t i, Bool_t *error=nullptr) const;  ; const char * GetConstPropertyRef (const char *property) const;  ; const char * GetConstPropertyRef (Int_t i) const;  ; virtual Int_t GetDefaultColor () const;  Get some default color related to this material. ;  ; virtual Double_t GetDensity () const;  ; TGeoElement * GetElement () const;  Get a pointer to the element this material is made of. ;  ; virtual TGeoElement * GetElement (Int_t i) const;  Get a pointer to the element this material is made of. ;  ; virtual void GetElementProp (Double_t &a, Double_t &z, Double_t &w, Int_t i=0);  Single interface to get element properties. ;  ; TGeoExtension * GetFWExtension () const;  ; Int_t GetIndex ();  Retrieve material index in the list of materials. ;  ; virtual Double_t GetIntLen () const;  ; Int_t GetNconstProperties () const;  ; virtual Int_t GetNelements () const;  ; Int_t GetNproperties () const;  ; const char * GetPointerName () const;  Provide a point",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:10331,Availability,error,error,10331,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:10420,Availability,error,error,10420,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:10575,Availability,error,error,10575,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:10872,Availability,error,error,10872,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:14818,Availability,error,error,14818,"rtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFil",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:26254,Availability,error,error,26254,"Draw the solution of Bateman equation versus time.Definition TGeoElement.cxx:1612. Reimplemented in TGeoMixture.; Definition at line 742 of file TGeoMaterial.cxx. ◆ GetA(). virtual Double_t TGeoMaterial::GetA ; (; ); const. inlinevirtual . Definition at line 99 of file TGeoMaterial.h. ◆ GetBaseElement(). TGeoElement * TGeoMaterial::GetBaseElement ; (; ); const. inline . Definition at line 107 of file TGeoMaterial.h. ◆ GetByteCount(). virtual Int_t TGeoMaterial::GetByteCount ; (; ); const. inlinevirtual . Reimplemented in TGeoMixture.; Definition at line 98 of file TGeoMaterial.h. ◆ GetCerenkovProperties(). virtual TObject * TGeoMaterial::GetCerenkovProperties ; (; ); const. inlinevirtual . Definition at line 112 of file TGeoMaterial.h. ◆ GetConstProperties(). TList const & TGeoMaterial::GetConstProperties ; (; ); const. inline . Definition at line 95 of file TGeoMaterial.h. ◆ GetConstProperty() [1/2]. Double_t TGeoMaterial::GetConstProperty ; (; const char * ; property, . Bool_t * ; error = nullptr . ); const. Definition at line 392 of file TGeoMaterial.cxx. ◆ GetConstProperty() [2/2]. Double_t TGeoMaterial::GetConstProperty ; (; Int_t ; i, . Bool_t * ; error = nullptr . ); const. Definition at line 405 of file TGeoMaterial.cxx. ◆ GetConstPropertyRef() [1/2]. const char * TGeoMaterial::GetConstPropertyRef ; (; const char * ; property); const. Definition at line 384 of file TGeoMaterial.cxx. ◆ GetConstPropertyRef() [2/2]. const char * TGeoMaterial::GetConstPropertyRef ; (; Int_t ; i); const. inline . Definition at line 90 of file TGeoMaterial.h. ◆ GetDefaultColor(). Int_t TGeoMaterial::GetDefaultColor ; (; ); const. virtual . Get some default color related to this material. ; Definition at line 614 of file TGeoMaterial.cxx. ◆ GetDensity(). virtual Double_t TGeoMaterial::GetDensity ; (; ); const. inlinevirtual . Definition at line 102 of file TGeoMaterial.h. ◆ GetElement() [1/2]. TGeoElement * TGeoMaterial::GetElement ; (; ); const. Get a pointer to the element this ma",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:26428,Availability,error,error,26428,"irtual Double_t TGeoMaterial::GetA ; (; ); const. inlinevirtual . Definition at line 99 of file TGeoMaterial.h. ◆ GetBaseElement(). TGeoElement * TGeoMaterial::GetBaseElement ; (; ); const. inline . Definition at line 107 of file TGeoMaterial.h. ◆ GetByteCount(). virtual Int_t TGeoMaterial::GetByteCount ; (; ); const. inlinevirtual . Reimplemented in TGeoMixture.; Definition at line 98 of file TGeoMaterial.h. ◆ GetCerenkovProperties(). virtual TObject * TGeoMaterial::GetCerenkovProperties ; (; ); const. inlinevirtual . Definition at line 112 of file TGeoMaterial.h. ◆ GetConstProperties(). TList const & TGeoMaterial::GetConstProperties ; (; ); const. inline . Definition at line 95 of file TGeoMaterial.h. ◆ GetConstProperty() [1/2]. Double_t TGeoMaterial::GetConstProperty ; (; const char * ; property, . Bool_t * ; error = nullptr . ); const. Definition at line 392 of file TGeoMaterial.cxx. ◆ GetConstProperty() [2/2]. Double_t TGeoMaterial::GetConstProperty ; (; Int_t ; i, . Bool_t * ; error = nullptr . ); const. Definition at line 405 of file TGeoMaterial.cxx. ◆ GetConstPropertyRef() [1/2]. const char * TGeoMaterial::GetConstPropertyRef ; (; const char * ; property); const. Definition at line 384 of file TGeoMaterial.cxx. ◆ GetConstPropertyRef() [2/2]. const char * TGeoMaterial::GetConstPropertyRef ; (; Int_t ; i); const. inline . Definition at line 90 of file TGeoMaterial.h. ◆ GetDefaultColor(). Int_t TGeoMaterial::GetDefaultColor ; (; ); const. virtual . Get some default color related to this material. ; Definition at line 614 of file TGeoMaterial.cxx. ◆ GetDensity(). virtual Double_t TGeoMaterial::GetDensity ; (; ); const. inlinevirtual . Definition at line 102 of file TGeoMaterial.h. ◆ GetElement() [1/2]. TGeoElement * TGeoMaterial::GetElement ; (; ); const. Get a pointer to the element this material is made of. ; This second call is to avoid warnings to not call a virtual method from the constructor ; Definition at line 625 of file TGeoMaterial.cxx. ◆ GetElement()",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:33742,Deployability,release,released,33742,"inition at line 594 of file TGeoMaterial.cxx. ◆ ScreenFactor(). Double_t TGeoMaterial::ScreenFactor ; (; Double_t ; z). static . static function Compute screening factor for pair production and Bremsstrahlung REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.22 ; Definition at line 1343 of file TGeoMaterial.cxx. ◆ SetA(). virtual void TGeoMaterial::SetA ; (; Double_t ; a). inlinevirtual . Reimplemented in TGeoMixture.; Definition at line 127 of file TGeoMaterial.h. ◆ SetCerenkovProperties(). virtual void TGeoMaterial::SetCerenkovProperties ; (; TObject * ; cerenkov). inlinevirtual . Definition at line 143 of file TGeoMaterial.h. ◆ SetDensity(). virtual void TGeoMaterial::SetDensity ; (; Double_t ; density). inlinevirtual . Reimplemented in TGeoMixture.; Definition at line 137 of file TGeoMaterial.h. ◆ SetFWExtension(). void TGeoMaterial::SetFWExtension ; (; TGeoExtension * ; ext). Connect framework defined extension to the material. ; The material ""grabs"" a copy, so the original object can be released by the producer. Release the previously connected extension if any.; NOTE: This interface is intended for the use by TGeo and the users should NOT connect extensions using this method ; Definition at line 449 of file TGeoMaterial.cxx. ◆ SetIndex(). void TGeoMaterial::SetIndex ; (; Int_t ; index). inline . Definition at line 142 of file TGeoMaterial.h. ◆ SetPressure(). void TGeoMaterial::SetPressure ; (; Double_t ; pressure). inline . Definition at line 148 of file TGeoMaterial.h. ◆ SetRadLen(). void TGeoMaterial::SetRadLen ; (; Double_t ; radlen, . Double_t ; intlen = 0. . ). Set radiation/absorption lengths. ; If the values are negative, their absolute value is taken, otherwise radlen is recomputed using G3 formula. ; Definition at line 496 of file TGeoMaterial.cxx. ◆ SetState(). void TGeoMaterial::SetState ; (; EGeoMaterialState ; state). inline . Definition at line 149 of file TGeoMaterial.h. ◆ SetTemperature(). void TGeoMaterial::SetTemperature ; (; Doubl",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:35266,Deployability,release,released,35266,"(). void TGeoMaterial::SetRadLen ; (; Double_t ; radlen, . Double_t ; intlen = 0. . ). Set radiation/absorption lengths. ; If the values are negative, their absolute value is taken, otherwise radlen is recomputed using G3 formula. ; Definition at line 496 of file TGeoMaterial.cxx. ◆ SetState(). void TGeoMaterial::SetState ; (; EGeoMaterialState ; state). inline . Definition at line 149 of file TGeoMaterial.h. ◆ SetTemperature(). void TGeoMaterial::SetTemperature ; (; Double_t ; temperature). inline . Definition at line 147 of file TGeoMaterial.h. ◆ SetTransparency(). void TGeoMaterial::SetTransparency ; (; Char_t ; transparency = 0). inline . Definition at line 146 of file TGeoMaterial.h. ◆ SetUsed(). void TGeoMaterial::SetUsed ; (; Bool_t ; flag = kTRUE). inline . Definition at line 145 of file TGeoMaterial.h. ◆ SetUserExtension(). void TGeoMaterial::SetUserExtension ; (; TGeoExtension * ; ext). Connect user-defined extension to the material. ; The material ""grabs"" a copy, so the original object can be released by the producer. Release the previously connected extension if any.; NOTE: This interface is intended for user extensions and is guaranteed not to be used by TGeo ; Definition at line 346 of file TGeoMaterial.cxx. ◆ SetZ(). virtual void TGeoMaterial::SetZ ; (; Double_t ; z). inlinevirtual . Reimplemented in TGeoMixture.; Definition at line 132 of file TGeoMaterial.h. ◆ Streamer(). void TGeoMaterial::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TGeoMixture. ◆ StreamerNVirtual(). void TGeoMaterial::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 154 of file TGeoMaterial.h. Member Data Documentation. ◆ fA. Double_t TGeoMaterial::fA. protected . Definition at line 41 of file TGeoMaterial.h. ◆ fCerenkov. TObject* TGeoMaterial::fCerenkov. protected . Definition at line 50 of file TGeoMaterial.h. ◆ fConstProperties. TList TGeoMaterial:",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:4623,Integrability,interface,interface,4623,"ser array with all the elements deriving from the possible decay of the top element composing the mixture. ;  ; virtual Double_t GetA () const;  ; TGeoElement * GetBaseElement () const;  ; virtual Int_t GetByteCount () const;  ; virtual TObject * GetCerenkovProperties () const;  ; TList const & GetConstProperties () const;  ; Double_t GetConstProperty (const char *property, Bool_t *error=nullptr) const;  ; Double_t GetConstProperty (Int_t i, Bool_t *error=nullptr) const;  ; const char * GetConstPropertyRef (const char *property) const;  ; const char * GetConstPropertyRef (Int_t i) const;  ; virtual Int_t GetDefaultColor () const;  Get some default color related to this material. ;  ; virtual Double_t GetDensity () const;  ; TGeoElement * GetElement () const;  Get a pointer to the element this material is made of. ;  ; virtual TGeoElement * GetElement (Int_t i) const;  Get a pointer to the element this material is made of. ;  ; virtual void GetElementProp (Double_t &a, Double_t &z, Double_t &w, Int_t i=0);  Single interface to get element properties. ;  ; TGeoExtension * GetFWExtension () const;  ; Int_t GetIndex ();  Retrieve material index in the list of materials. ;  ; virtual Double_t GetIntLen () const;  ; Int_t GetNconstProperties () const;  ; virtual Int_t GetNelements () const;  ; Int_t GetNproperties () const;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; Double_t GetPressure () const;  ; TList const & GetProperties () const;  ; TGDMLMatrix * GetProperty (const char *name) const;  ; TGDMLMatrix * GetProperty (Int_t i) const;  ; const char * GetPropertyRef (const char *property) const;  ; const char * GetPropertyRef (Int_t i) const;  ; virtual Double_t GetRadLen () const;  ; virtual Double_t GetSpecificActivity (Int_t) const;  ; EGeoMaterialState GetState () const;  ; Double_t GetTemperature () const;  ; Char_t GetTransparency () const;  ; TGeoExtension * GetUserExtension () const;  ; virtual Double_t GetZ () const;  ; ",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:10337,Integrability,message,message,10337,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:10878,Integrability,message,message,10878,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:11868,Integrability,message,message,11868,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:14824,Integrability,message,message,14824,"rtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFil",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:15197,Integrability,message,message,15197,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttribu",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:27798,Integrability,interface,interface,27798,"GeoMaterial.h. ◆ GetDefaultColor(). Int_t TGeoMaterial::GetDefaultColor ; (; ); const. virtual . Get some default color related to this material. ; Definition at line 614 of file TGeoMaterial.cxx. ◆ GetDensity(). virtual Double_t TGeoMaterial::GetDensity ; (; ); const. inlinevirtual . Definition at line 102 of file TGeoMaterial.h. ◆ GetElement() [1/2]. TGeoElement * TGeoMaterial::GetElement ; (; ); const. Get a pointer to the element this material is made of. ; This second call is to avoid warnings to not call a virtual method from the constructor ; Definition at line 625 of file TGeoMaterial.cxx. ◆ GetElement() [2/2]. TGeoElement * TGeoMaterial::GetElement ; (; Int_t ; i); const. virtual . Get a pointer to the element this material is made of. ; Reimplemented in TGeoMixture.; Definition at line 636 of file TGeoMaterial.cxx. ◆ GetElementProp(). void TGeoMaterial::GetElementProp ; (; Double_t & ; a, . Double_t & ; z, . Double_t & ; w, . Int_t ; i = 0 . ). virtual . Single interface to get element properties. ; Reimplemented in TGeoMixture.; Definition at line 647 of file TGeoMaterial.cxx. ◆ GetFWExtension(). TGeoExtension * TGeoMaterial::GetFWExtension ; (; ); const. inline . Definition at line 119 of file TGeoMaterial.h. ◆ GetIndex(). Int_t TGeoMaterial::GetIndex ; (; ). Retrieve material index in the list of materials. ; Definition at line 657 of file TGeoMaterial.cxx. ◆ GetIntLen(). virtual Double_t TGeoMaterial::GetIntLen ; (; ); const. inlinevirtual . Definition at line 110 of file TGeoMaterial.h. ◆ GetNconstProperties(). Int_t TGeoMaterial::GetNconstProperties ; (; ); const. inline . Definition at line 81 of file TGeoMaterial.h. ◆ GetNelements(). virtual Int_t TGeoMaterial::GetNelements ; (; ); const. inlinevirtual . Reimplemented in TGeoMixture.; Definition at line 103 of file TGeoMaterial.h. ◆ GetNproperties(). Int_t TGeoMaterial::GetNproperties ; (; ); const. inline . Definition at line 80 of file TGeoMaterial.h. ◆ GetPointerName(). const char * TGeoMaterial",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:33831,Integrability,interface,interface,33831,"ir production and Bremsstrahlung REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.22 ; Definition at line 1343 of file TGeoMaterial.cxx. ◆ SetA(). virtual void TGeoMaterial::SetA ; (; Double_t ; a). inlinevirtual . Reimplemented in TGeoMixture.; Definition at line 127 of file TGeoMaterial.h. ◆ SetCerenkovProperties(). virtual void TGeoMaterial::SetCerenkovProperties ; (; TObject * ; cerenkov). inlinevirtual . Definition at line 143 of file TGeoMaterial.h. ◆ SetDensity(). virtual void TGeoMaterial::SetDensity ; (; Double_t ; density). inlinevirtual . Reimplemented in TGeoMixture.; Definition at line 137 of file TGeoMaterial.h. ◆ SetFWExtension(). void TGeoMaterial::SetFWExtension ; (; TGeoExtension * ; ext). Connect framework defined extension to the material. ; The material ""grabs"" a copy, so the original object can be released by the producer. Release the previously connected extension if any.; NOTE: This interface is intended for the use by TGeo and the users should NOT connect extensions using this method ; Definition at line 449 of file TGeoMaterial.cxx. ◆ SetIndex(). void TGeoMaterial::SetIndex ; (; Int_t ; index). inline . Definition at line 142 of file TGeoMaterial.h. ◆ SetPressure(). void TGeoMaterial::SetPressure ; (; Double_t ; pressure). inline . Definition at line 148 of file TGeoMaterial.h. ◆ SetRadLen(). void TGeoMaterial::SetRadLen ; (; Double_t ; radlen, . Double_t ; intlen = 0. . ). Set radiation/absorption lengths. ; If the values are negative, their absolute value is taken, otherwise radlen is recomputed using G3 formula. ; Definition at line 496 of file TGeoMaterial.cxx. ◆ SetState(). void TGeoMaterial::SetState ; (; EGeoMaterialState ; state). inline . Definition at line 149 of file TGeoMaterial.h. ◆ SetTemperature(). void TGeoMaterial::SetTemperature ; (; Double_t ; temperature). inline . Definition at line 147 of file TGeoMaterial.h. ◆ SetTransparency(). void TGeoMaterial::SetTransparency ; (; Char_t ; transparency = 0). inline . De",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:35355,Integrability,interface,interface,35355,"value is taken, otherwise radlen is recomputed using G3 formula. ; Definition at line 496 of file TGeoMaterial.cxx. ◆ SetState(). void TGeoMaterial::SetState ; (; EGeoMaterialState ; state). inline . Definition at line 149 of file TGeoMaterial.h. ◆ SetTemperature(). void TGeoMaterial::SetTemperature ; (; Double_t ; temperature). inline . Definition at line 147 of file TGeoMaterial.h. ◆ SetTransparency(). void TGeoMaterial::SetTransparency ; (; Char_t ; transparency = 0). inline . Definition at line 146 of file TGeoMaterial.h. ◆ SetUsed(). void TGeoMaterial::SetUsed ; (; Bool_t ; flag = kTRUE). inline . Definition at line 145 of file TGeoMaterial.h. ◆ SetUserExtension(). void TGeoMaterial::SetUserExtension ; (; TGeoExtension * ; ext). Connect user-defined extension to the material. ; The material ""grabs"" a copy, so the original object can be released by the producer. Release the previously connected extension if any.; NOTE: This interface is intended for user extensions and is guaranteed not to be used by TGeo ; Definition at line 346 of file TGeoMaterial.cxx. ◆ SetZ(). virtual void TGeoMaterial::SetZ ; (; Double_t ; z). inlinevirtual . Reimplemented in TGeoMixture.; Definition at line 132 of file TGeoMaterial.h. ◆ Streamer(). void TGeoMaterial::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TGeoMixture. ◆ StreamerNVirtual(). void TGeoMaterial::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 154 of file TGeoMaterial.h. Member Data Documentation. ◆ fA. Double_t TGeoMaterial::fA. protected . Definition at line 41 of file TGeoMaterial.h. ◆ fCerenkov. TObject* TGeoMaterial::fCerenkov. protected . Definition at line 50 of file TGeoMaterial.h. ◆ fConstProperties. TList TGeoMaterial::fConstProperties. protected . Definition at line 53 of file TGeoMaterial.h. ◆ fDensity. Double_t TGeoMaterial::fDensity. protected . Definition at line 43 of file T",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:1969,Modifiability,inherit,inherited,1969,"memory values an order of magnitude lower. This behavior affected versions up to v6-25-01, after which the default units were restored to be the ROOT ones.; For users needing to restore the CGS behavior for material properties, the following sequence needs to be called before creating the TGeoManager instance: From v6-18-02 to v6-22-06: TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);; From v6-22-08 to v6-25-01: TGeoManager::LockDefaultUnits(false);; TGeoManager::SetDefaultUnits(kRootUnits);; TGeoManager::LockDefaultUnits(true);; TGeoManager::SetDefaultUnitsstatic void SetDefaultUnits(EDefaultUnits new_value)Definition TGeoManager.cxx:4319; TGeoManager::LockDefaultUnitsstatic Bool_t LockDefaultUnits(Bool_t new_value)Definition TGeoManager.cxx:4307. Definition at line 34 of file TGeoMaterial.h. Public Types; enum  EGeoMaterial { kMatUsed = (1ULL << ( 17 )); , kMatSavePrimitive = (1ULL << ( 18 )); };  ; enum  EGeoMaterialState { kMatStateUndefined; , kMatStateSolid; , kMatStateLiquid; , kMatStateGas; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoMaterial ();  Default constructor. ;  ;  TGeoMaterial (const char *name);  Constructor. ;  ;  TGeoMaterial (const char *name, Double_t a, Double_t z, Double_t rho, Double_t radlen=0, Double_t intlen=0);  Constructor. ;  ;  TGeoMaterial (const char *name, Double_t a, Double_t z, Double_t rho, EGeoMaterialState state",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:7134,Modifiability,inherit,inherited,7134,"_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; virtual void SetA (Double_t a);  ; virtual void SetCerenkovProperties (TObject *cerenkov);  ; virtual void SetDensity (Double_t density);  ; void SetFWExtension (TGeoExtension *ext);  Connect framework defined extension to the material. ;  ; void SetIndex (Int_t index);  ; void SetPressure (Double_t pressure);  ; void SetRadLen (Double_t radlen, Double_t intlen=0.);  Set radiation/absorption lengths. ;  ; void SetState (EGeoMaterialState state);  ; void SetTemperature (Double_t temperature);  ; void SetTransparency (Char_t transparency=0);  ; void SetUsed (Bool_t flag=kTRUE);  ; void SetUserExtension (TGeoExtension *ext);  Connect user-defined extension to the material. ;  ; virtual void SetZ (Double_t z);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:8874,Modifiability,inherit,inherited,8874,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:9967,Modifiability,inherit,inheritance,9967,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:11966,Modifiability,inherit,inherits,11966,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:12083,Modifiability,inherit,inherits,12083,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:15504,Modifiability,inherit,inherited,15504,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:17326,Modifiability,inherit,inherited,17326,"t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t Coulomb (Double_t z);  static function Compute Coulomb correction for pair production and Brem REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.17 ;  ; static const char * DeclFileName ();  ; static Double_t ScreenFactor (Double_t z);  static function Compute screening factor for pair production and Bremsstrahlung REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.22 ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMaterial (const TGeoMaterial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *lo",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:17536,Modifiability,inherit,inherited,17536,"t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t Coulomb (Double_t z);  static function Compute Coulomb correction for pair production and Brem REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.17 ;  ; static const char * DeclFileName ();  ; static Double_t ScreenFactor (Double_t z);  static function Compute screening factor for pair production and Bremsstrahlung REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.22 ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMaterial (const TGeoMaterial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *lo",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:18054,Modifiability,inherit,inherited,18054,"actor (Double_t z);  static function Compute screening factor for pair production and Bremsstrahlung REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.22 ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMaterial (const TGeoMaterial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inheri",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:18461,Modifiability,inherit,inherited,18461," DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMaterial (const TGeoMaterial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMaterial.h>. Inheritance diagram for TGe",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:19119,Modifiability,inherit,inherited,19119,"ed from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMaterial (const TGeoMaterial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMaterial.h>. Inheritance diagram for TGeoMaterial:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoMaterial. enum TGeoMaterial::EGeoMaterial. EnumeratorkMatUsed ; kMatSavePrimitive . Definition at line 36 of file TGeoMaterial.h. ◆ EGeoMaterialState. enum TGeoMaterial::EGeoMaterialState. EnumeratorkMatStateUndefined ; kMatStateSolid ; kMatStateLiquid ; kMatStateGas . Definition at line 37 of file TGeoMaterial.h. Constructor & Destructor Documentation. ◆ TGeoMaterial() [1/6]. TGeoMaterial::TGeoMaterial ; (; const TGeoMateria",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:19201,Modifiability,inherit,inherited,19201,"ed from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMaterial (const TGeoMaterial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMaterial.h>. Inheritance diagram for TGeoMaterial:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoMaterial. enum TGeoMaterial::EGeoMaterial. EnumeratorkMatUsed ; kMatSavePrimitive . Definition at line 36 of file TGeoMaterial.h. ◆ EGeoMaterialState. enum TGeoMaterial::EGeoMaterialState. EnumeratorkMatStateUndefined ; kMatStateSolid ; kMatStateLiquid ; kMatStateGas . Definition at line 37 of file TGeoMaterial.h. Constructor & Destructor Documentation. ◆ TGeoMaterial() [1/6]. TGeoMaterial::TGeoMaterial ; (; const TGeoMateria",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:19359,Modifiability,inherit,inherited,19359," & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMaterial.h>. Inheritance diagram for TGeoMaterial:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoMaterial. enum TGeoMaterial::EGeoMaterial. EnumeratorkMatUsed ; kMatSavePrimitive . Definition at line 36 of file TGeoMaterial.h. ◆ EGeoMaterialState. enum TGeoMaterial::EGeoMaterialState. EnumeratorkMatStateUndefined ; kMatStateSolid ; kMatStateLiquid ; kMatStateGas . Definition at line 37 of file TGeoMaterial.h. Constructor & Destructor Documentation. ◆ TGeoMaterial() [1/6]. TGeoMaterial::TGeoMaterial ; (; const TGeoMaterial & ; gm). protected . Transient framework-defined extension to materials. ; Definition at line 264 of file TGeoMaterial.cxx. ◆ TGeoMaterial() [2/6]. TGeoMaterial::TGeoMaterial ; (; ). Default constructor. ; Definition at line 60 of file TGeoMaterial.cxx. ◆ TGeoMaterial() [3/6]. TGeoMaterial::TGeoMaterial ; ",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:27301,Safety,avoid,avoid,27301,"operty() [2/2]. Double_t TGeoMaterial::GetConstProperty ; (; Int_t ; i, . Bool_t * ; error = nullptr . ); const. Definition at line 405 of file TGeoMaterial.cxx. ◆ GetConstPropertyRef() [1/2]. const char * TGeoMaterial::GetConstPropertyRef ; (; const char * ; property); const. Definition at line 384 of file TGeoMaterial.cxx. ◆ GetConstPropertyRef() [2/2]. const char * TGeoMaterial::GetConstPropertyRef ; (; Int_t ; i); const. inline . Definition at line 90 of file TGeoMaterial.h. ◆ GetDefaultColor(). Int_t TGeoMaterial::GetDefaultColor ; (; ); const. virtual . Get some default color related to this material. ; Definition at line 614 of file TGeoMaterial.cxx. ◆ GetDensity(). virtual Double_t TGeoMaterial::GetDensity ; (; ); const. inlinevirtual . Definition at line 102 of file TGeoMaterial.h. ◆ GetElement() [1/2]. TGeoElement * TGeoMaterial::GetElement ; (; ); const. Get a pointer to the element this material is made of. ; This second call is to avoid warnings to not call a virtual method from the constructor ; Definition at line 625 of file TGeoMaterial.cxx. ◆ GetElement() [2/2]. TGeoElement * TGeoMaterial::GetElement ; (; Int_t ; i); const. virtual . Get a pointer to the element this material is made of. ; Reimplemented in TGeoMixture.; Definition at line 636 of file TGeoMaterial.cxx. ◆ GetElementProp(). void TGeoMaterial::GetElementProp ; (; Double_t & ; a, . Double_t & ; z, . Double_t & ; w, . Int_t ; i = 0 . ). virtual . Single interface to get element properties. ; Reimplemented in TGeoMixture.; Definition at line 647 of file TGeoMaterial.cxx. ◆ GetFWExtension(). TGeoExtension * TGeoMaterial::GetFWExtension ; (; ); const. inline . Definition at line 119 of file TGeoMaterial.h. ◆ GetIndex(). Int_t TGeoMaterial::GetIndex ; (; ). Retrieve material index in the list of materials. ; Definition at line 657 of file TGeoMaterial.cxx. ◆ GetIntLen(). virtual Double_t TGeoMaterial::GetIntLen ; (; ); const. inlinevirtual . Definition at line 110 of file TGeoMaterial.h. ◆ Get",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMaterial.html:8002,Security,hash,hash,8002," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html
https://root.cern/doc/master/classTGeoMatrix.html:8795,Availability,error,error,8795,"id Subtract(const TGeoTranslation *other)Subtracting a translation from this one.Definition TGeoMatrix.cxx:742; Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3]. Rotations can be defined either by Euler angles, either, by GEANT3 angles :; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; This represent the composition of : first a rotation about Z axis with angle phi, then a rotation with theta about the rotated X axis, and finally a rotation with psi about the new Z axis.; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); th3auto * th3Definition textalign.C:22; th2auto * th2Definition textalign.C:18; th1auto * th1Definition textalign.C:14; This is a rotation defined in GEANT3 style. Theta and phi are the spherical angles of each axis of the rotated coordinate system with respect to the initial one. This construction allows definition of malformed rotations, e.g. not orthogonal. A check is performed and an error message is issued in this case.; Specific utilities : determinant, inverse.; Scale transformations; Represent a scale shrinking/enlargement. Data members :Double_t fScale[3]. Not fully implemented yet.; Combined transformations; Represent a rotation followed by a translation. Data members: Double_t fTranslation[3], TGeoRotation *fRotation.; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); TGeoGenTrans; Combined transformations including a scale. Not implemented.; TGeoIdentity; A generic singleton matrix representing a identity transformation NOTE: identified by the global variable gGeoIdentity. ; Definition at line 38 of file TGeoMatrix.h. Public Types; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:17215,Availability,error,error,17215,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:17304,Availability,error,error,17304,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:17459,Availability,error,error,17459,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:17756,Availability,error,error,17756,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:21840,Availability,error,error,21840,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:3109,Integrability,interface,interface,3109,"0 1/sy 0 0; 0 0 sz 0 0 0 1/sz 0; 0 0 0 1 0 0 0 1; where:; rij are the 3x3 rotation matrix components,; tx, ty, tz are the translation components; sx, sy, sz are arbitrary scale constants on each axis,. The disadvantage in using this approach is that computation for 4x4 matrices is expensive. Even combining two translation would become a multiplication of their corresponding matrices, which is quite an undesired effect. On the other hand, it is not a good idea to store a translation as a block of 16 numbers. We have therefore chosen to implement each basic transformation type as a class deriving from the same basic abstract class and handling its specific data and point/vector transformation algorithms. The base class TGeoMatrix defines abstract metods for:; translation, rotation and scale getters. Every derived class stores only; its specific data, e.g. a translation stores an array of 3 doubles and a rotation an array of 9. However, asking which is the rotation array of a TGeoTranslation through the base TGeoMatrix interface is a legal operation. The answer in this case is a pointer to a global constant array representing an identity rotation.; Double_t *TGeoMatrix::GetTranslation(); Double_t *TGeoMatrix::GetRotation(); Double_t *TGeoMatrix::GetScale(); TGeoMatrixGeometrical transformation package.Definition TGeoMatrix.h:38; TGeoMatrix::GetTranslationvirtual const Double_t * GetTranslation() const =0; TGeoMatrix::GetScalevirtual const Double_t * GetScale() const =0; double; MasterToLocal() and LocalToMaster() point and vector transformations :; void TGeoMatrix::MasterToLocal(const Double_t *master, Double_t *local); void TGeoMatrix::LocalToMaster(const Double_t *local, Double_t *master); void TGeoMatrix::MasterToLocalVect(const Double_t *master, Double_t *local); void TGeoMatrix::LocalToMasterVect(const Double_t *local, Double_t *master); TGeoMatrix::LocalToMasterVectvirtual void LocalToMasterVect(const Double_t *local, Double_t *master) constconvert a vector by mul",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:8801,Integrability,message,message,8801,"id Subtract(const TGeoTranslation *other)Subtracting a translation from this one.Definition TGeoMatrix.cxx:742; Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3]. Rotations can be defined either by Euler angles, either, by GEANT3 angles :; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; This represent the composition of : first a rotation about Z axis with angle phi, then a rotation with theta about the rotated X axis, and finally a rotation with psi about the new Z axis.; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); th3auto * th3Definition textalign.C:22; th2auto * th2Definition textalign.C:18; th1auto * th1Definition textalign.C:14; This is a rotation defined in GEANT3 style. Theta and phi are the spherical angles of each axis of the rotated coordinate system with respect to the initial one. This construction allows definition of malformed rotations, e.g. not orthogonal. A check is performed and an error message is issued in this case.; Specific utilities : determinant, inverse.; Scale transformations; Represent a scale shrinking/enlargement. Data members :Double_t fScale[3]. Not fully implemented yet.; Combined transformations; Represent a rotation followed by a translation. Data members: Double_t fTranslation[3], TGeoRotation *fRotation.; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); TGeoGenTrans; Combined transformations including a scale. Not implemented.; TGeoIdentity; A generic singleton matrix representing a identity transformation NOTE: identified by the global variable gGeoIdentity. ; Definition at line 38 of file TGeoMatrix.h. Public Types; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:17221,Integrability,message,message,17221,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:17762,Integrability,message,message,17762,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:18752,Integrability,message,message,18752,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:21846,Integrability,message,message,21846,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:22219,Integrability,message,message,22219," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Re",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:9535,Modifiability,variab,variable,9535,"to * th1Definition textalign.C:14; This is a rotation defined in GEANT3 style. Theta and phi are the spherical angles of each axis of the rotated coordinate system with respect to the initial one. This construction allows definition of malformed rotations, e.g. not orthogonal. A check is performed and an error message is issued in this case.; Specific utilities : determinant, inverse.; Scale transformations; Represent a scale shrinking/enlargement. Data members :Double_t fScale[3]. Not fully implemented yet.; Combined transformations; Represent a rotation followed by a translation. Data members: Double_t fTranslation[3], TGeoRotation *fRotation.; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); TGeoGenTrans; Combined transformations including a scale. Not implemented.; TGeoIdentity; A generic singleton matrix representing a identity transformation NOTE: identified by the global variable gGeoIdentity. ; Definition at line 38 of file TGeoMatrix.h. Public Types; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:10212,Modifiability,inherit,inherited,10212,"CombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); TGeoGenTrans; Combined transformations including a scale. Not implemented.; TGeoIdentity; A generic singleton matrix representing a identity transformation NOTE: identified by the global variable gGeoIdentity. ; Definition at line 38 of file TGeoMatrix.h. Public Types; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoMatrix ();  dummy constructor ;  ;  TGeoMatrix (const char *name);  Constructor. ;  ;  ~TGeoMatrix () override;  Destructor. ;  ; virtual Int_t GetByteCount () const;  Get total size in bytes of this. ;  ; void GetHomogenousMatrix (Double_t *hmat) const;  The homogenous matrix associated with the transformation is used for piling up's and visualization. ;  ; const char * GetPointerName () const;  Provide a pointer nam",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:14018,Modifiability,inherit,inherited,14018,"x4 format ;  ; virtual void ReflectX (Bool_t leftside, Bool_t rotonly=kFALSE);  Multiply by a reflection respect to YZ. ;  ; virtual void ReflectY (Bool_t leftside, Bool_t rotonly=kFALSE);  Multiply by a reflection respect to ZX. ;  ; virtual void ReflectZ (Bool_t leftside, Bool_t rotonly=kFALSE);  Multiply by a reflection respect to XY. ;  ; virtual void RegisterYourself ();  Register the matrix in the current manager, which will become the owner. ;  ; virtual void RotateX (Double_t);  ; virtual void RotateY (Double_t);  ; virtual void RotateZ (Double_t);  ; void SetDefaultName ();  If no name was supplied in the ctor, the type of transformation is checked. ;  ; virtual void SetDx (Double_t);  ; virtual void SetDy (Double_t);  ; virtual void SetDz (Double_t);  ; void SetShared (Bool_t flag=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:15758,Modifiability,inherit,inherited,15758,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:16851,Modifiability,inherit,inheritance,16851,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:18850,Modifiability,inherit,inherits,18850,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:18967,Modifiability,inherit,inherits,18967,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:22786,Modifiability,inherit,inherited,22786,"nt style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:22996,Modifiability,inherit,inherited,22996,"nt style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:23600,Modifiability,inherit,inherited,23600,"Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoTransfTypes. enum TGeoMatrix::EGeoTransfTypes. EnumeratorkGeoIdentity ; kGeoShared ; kGeoTranslation ; kGeoRotation ; kGeoScale ; kGeoReflection ; kGeoRegistered ; kGeoSavePrimitive ; kGeoMatrixOwned ; kGeoCombiTrans ; kGeoGenTrans ; kGeoMatrixBits . Definition at line 40 of file TGeoMatrix.h. Constructor & Destructor Documentation. ◆ TGeoMatrix() [1/3]. TGeoMatrix::TGeoMatrix ; (; const TGeoMatrix & ; other). protected . copy constr",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:23830,Modifiability,inherit,inherited,23830," constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoTransfTypes. enum TGeoMatrix::EGeoTransfTypes. EnumeratorkGeoIdentity ; kGeoShared ; kGeoTranslation ; kGeoRotation ; kGeoScale ; kGeoReflection ; kGeoRegistered ; kGeoSavePrimitive ; kGeoMatrixOwned ; kGeoCombiTrans ; kGeoGenTrans ; kGeoMatrixBits . Definition at line 40 of file TGeoMatrix.h. Constructor & Destructor Documentation. ◆ TGeoMatrix() [1/3]. TGeoMatrix::TGeoMatrix ; (; const TGeoMatrix & ; other). protected . copy constructor ; Definition at line 239 of file TGeoMatrix.cxx. ◆ TGeoMatrix() [2/3]. TGeoMatrix::TGeoMatrix ; (; ). dummy constructor ; Definition at line 231 of file TGeoMatrix.cxx. ◆ TGeoMatrix() [3/3]. TGeoMatrix::TGeoMatrix ; (; const char * ; name). Constructor. ; De",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:23923,Modifiability,inherit,inherited,23923," constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoTransfTypes. enum TGeoMatrix::EGeoTransfTypes. EnumeratorkGeoIdentity ; kGeoShared ; kGeoTranslation ; kGeoRotation ; kGeoScale ; kGeoReflection ; kGeoRegistered ; kGeoSavePrimitive ; kGeoMatrixOwned ; kGeoCombiTrans ; kGeoGenTrans ; kGeoMatrixBits . Definition at line 40 of file TGeoMatrix.h. Constructor & Destructor Documentation. ◆ TGeoMatrix() [1/3]. TGeoMatrix::TGeoMatrix ; (; const TGeoMatrix & ; other). protected . copy constructor ; Definition at line 239 of file TGeoMatrix.cxx. ◆ TGeoMatrix() [2/3]. TGeoMatrix::TGeoMatrix ; (; ). dummy constructor ; Definition at line 231 of file TGeoMatrix.cxx. ◆ TGeoMatrix() [3/3]. TGeoMatrix::TGeoMatrix ; (; const char * ; name). Constructor. ; De",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:530,Performance,optimiz,optimize,530,". ROOT: TGeoMatrix Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members ; TGeoMatrix Class ReferenceabstractThe Geometry Package » Geometry classes. ; Geometrical transformation package. ; All geometrical transformations handled by the modeller are provided as a built-in package. This was designed to minimize memory requirements and optimize performance of point/vector master-to-local and local-to-master computation. We need to have in mind that a transformation in TGeo has 2 major use-cases. The first one is for defining the placement of a volume with respect to its container reference frame. This frame will be called 'master' and the frame of the positioned volume - 'local'. If T is a transformation used for positioning volume daughters, then:; MASTER = T * LOCAL; Therefore a local-to-master conversion will be performed by using T, while a master-to-local by using its inverse. The second use case is the computation of the global transformation of a given object in the geometry. Since the geometry is built as 'volumes-inside-volumes', this global transformation represent the pile-up of all local transformations in the corresponding branch. The conversion from the global reference frame and the given object is also called master-to-local, but it is handled by the manager class. A general homogenous transformation is defined as a 4x4 matrix embedding a rotation, a translation and a scale. The advantage of this description is that each basic transformation can be represented as a homogenous matrix, composition being performed as simple matrix multiplication.; Rotation: Inverse rotation:; r11 r12 r13 0 r11 r21 r31 0; r21 r22 r23 0 r12 r22 r32 0; r31 r32 r33 0 r13 r23 r33 0; 0 0 0 1 0 0 0 1; Translation: Inverse translation:; 1 0 0 tx 1 0 0 -tx; 0 1 0 ty 0 1 0 -ty; 0 0 1 tz 0 0 1",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:539,Performance,perform,performance,539,". ROOT: TGeoMatrix Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members ; TGeoMatrix Class ReferenceabstractThe Geometry Package » Geometry classes. ; Geometrical transformation package. ; All geometrical transformations handled by the modeller are provided as a built-in package. This was designed to minimize memory requirements and optimize performance of point/vector master-to-local and local-to-master computation. We need to have in mind that a transformation in TGeo has 2 major use-cases. The first one is for defining the placement of a volume with respect to its container reference frame. This frame will be called 'master' and the frame of the positioned volume - 'local'. If T is a transformation used for positioning volume daughters, then:; MASTER = T * LOCAL; Therefore a local-to-master conversion will be performed by using T, while a master-to-local by using its inverse. The second use case is the computation of the global transformation of a given object in the geometry. Since the geometry is built as 'volumes-inside-volumes', this global transformation represent the pile-up of all local transformations in the corresponding branch. The conversion from the global reference frame and the given object is also called master-to-local, but it is handled by the manager class. A general homogenous transformation is defined as a 4x4 matrix embedding a rotation, a translation and a scale. The advantage of this description is that each basic transformation can be represented as a homogenous matrix, composition being performed as simple matrix multiplication.; Rotation: Inverse rotation:; r11 r12 r13 0 r11 r21 r31 0; r21 r22 r23 0 r12 r22 r32 0; r31 r32 r33 0 r13 r23 r33 0; 0 0 0 1 0 0 0 1; Translation: Inverse translation:; 1 0 0 tx 1 0 0 -tx; 0 1 0 ty 0 1 0 -ty; 0 0 1 tz 0 0 1",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:1019,Performance,perform,performed,1019,". ROOT: TGeoMatrix Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members ; TGeoMatrix Class ReferenceabstractThe Geometry Package » Geometry classes. ; Geometrical transformation package. ; All geometrical transformations handled by the modeller are provided as a built-in package. This was designed to minimize memory requirements and optimize performance of point/vector master-to-local and local-to-master computation. We need to have in mind that a transformation in TGeo has 2 major use-cases. The first one is for defining the placement of a volume with respect to its container reference frame. This frame will be called 'master' and the frame of the positioned volume - 'local'. If T is a transformation used for positioning volume daughters, then:; MASTER = T * LOCAL; Therefore a local-to-master conversion will be performed by using T, while a master-to-local by using its inverse. The second use case is the computation of the global transformation of a given object in the geometry. Since the geometry is built as 'volumes-inside-volumes', this global transformation represent the pile-up of all local transformations in the corresponding branch. The conversion from the global reference frame and the given object is also called master-to-local, but it is handled by the manager class. A general homogenous transformation is defined as a 4x4 matrix embedding a rotation, a translation and a scale. The advantage of this description is that each basic transformation can be represented as a homogenous matrix, composition being performed as simple matrix multiplication.; Rotation: Inverse rotation:; r11 r12 r13 0 r11 r21 r31 0; r21 r22 r23 0 r12 r22 r32 0; r31 r32 r33 0 r13 r23 r33 0; 0 0 0 1 0 0 0 1; Translation: Inverse translation:; 1 0 0 tx 1 0 0 -tx; 0 1 0 ty 0 1 0 -ty; 0 0 1 tz 0 0 1",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:1735,Performance,perform,performed,1735,". The first one is for defining the placement of a volume with respect to its container reference frame. This frame will be called 'master' and the frame of the positioned volume - 'local'. If T is a transformation used for positioning volume daughters, then:; MASTER = T * LOCAL; Therefore a local-to-master conversion will be performed by using T, while a master-to-local by using its inverse. The second use case is the computation of the global transformation of a given object in the geometry. Since the geometry is built as 'volumes-inside-volumes', this global transformation represent the pile-up of all local transformations in the corresponding branch. The conversion from the global reference frame and the given object is also called master-to-local, but it is handled by the manager class. A general homogenous transformation is defined as a 4x4 matrix embedding a rotation, a translation and a scale. The advantage of this description is that each basic transformation can be represented as a homogenous matrix, composition being performed as simple matrix multiplication.; Rotation: Inverse rotation:; r11 r12 r13 0 r11 r21 r31 0; r21 r22 r23 0 r12 r22 r32 0; r31 r32 r33 0 r13 r23 r33 0; 0 0 0 1 0 0 0 1; Translation: Inverse translation:; 1 0 0 tx 1 0 0 -tx; 0 1 0 ty 0 1 0 -ty; 0 0 1 tz 0 0 1 -tz; 0 0 0 1 0 0 0 1; Scale: Inverse scale:; sx 0 0 0 1/sx 0 0 0; 0 sy 0 0 0 1/sy 0 0; 0 0 sz 0 0 0 1/sz 0; 0 0 0 1 0 0 0 1; where:; rij are the 3x3 rotation matrix components,; tx, ty, tz are the translation components; sx, sy, sz are arbitrary scale constants on each axis,. The disadvantage in using this approach is that computation for 4x4 matrices is expensive. Even combining two translation would become a multiplication of their corresponding matrices, which is quite an undesired effect. On the other hand, it is not a good idea to store a translation as a block of 16 numbers. We have therefore chosen to implement each basic transformation type as a class deriving from the sam",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:8778,Performance,perform,performed,8778,"id Subtract(const TGeoTranslation *other)Subtracting a translation from this one.Definition TGeoMatrix.cxx:742; Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3]. Rotations can be defined either by Euler angles, either, by GEANT3 angles :; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; This represent the composition of : first a rotation about Z axis with angle phi, then a rotation with theta about the rotated X axis, and finally a rotation with psi about the new Z axis.; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); th3auto * th3Definition textalign.C:22; th2auto * th2Definition textalign.C:18; th1auto * th1Definition textalign.C:14; This is a rotation defined in GEANT3 style. Theta and phi are the spherical angles of each axis of the rotated coordinate system with respect to the initial one. This construction allows definition of malformed rotations, e.g. not orthogonal. A check is performed and an error message is issued in this case.; Specific utilities : determinant, inverse.; Scale transformations; Represent a scale shrinking/enlargement. Data members :Double_t fScale[3]. Not fully implemented yet.; Combined transformations; Represent a rotation followed by a translation. Data members: Double_t fTranslation[3], TGeoRotation *fRotation.; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); TGeoGenTrans; Combined transformations including a scale. Not implemented.; TGeoIdentity; A generic singleton matrix representing a identity transformation NOTE: identified by the global variable gGeoIdentity. ; Definition at line 38 of file TGeoMatrix.h. Public Types; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( ",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:14886,Security,hash,hash,14886," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMatrix.html:1748,Usability,simpl,simple,1748,". The first one is for defining the placement of a volume with respect to its container reference frame. This frame will be called 'master' and the frame of the positioned volume - 'local'. If T is a transformation used for positioning volume daughters, then:; MASTER = T * LOCAL; Therefore a local-to-master conversion will be performed by using T, while a master-to-local by using its inverse. The second use case is the computation of the global transformation of a given object in the geometry. Since the geometry is built as 'volumes-inside-volumes', this global transformation represent the pile-up of all local transformations in the corresponding branch. The conversion from the global reference frame and the given object is also called master-to-local, but it is handled by the manager class. A general homogenous transformation is defined as a 4x4 matrix embedding a rotation, a translation and a scale. The advantage of this description is that each basic transformation can be represented as a homogenous matrix, composition being performed as simple matrix multiplication.; Rotation: Inverse rotation:; r11 r12 r13 0 r11 r21 r31 0; r21 r22 r23 0 r12 r22 r32 0; r31 r32 r33 0 r13 r23 r33 0; 0 0 0 1 0 0 0 1; Translation: Inverse translation:; 1 0 0 tx 1 0 0 -tx; 0 1 0 ty 0 1 0 -ty; 0 0 1 tz 0 0 1 -tz; 0 0 0 1 0 0 0 1; Scale: Inverse scale:; sx 0 0 0 1/sx 0 0 0; 0 sy 0 0 0 1/sy 0 0; 0 0 sz 0 0 0 1/sz 0; 0 0 0 1 0 0 0 1; where:; rij are the 3x3 rotation matrix components,; tx, ty, tz are the translation components; sx, sy, sz are arbitrary scale constants on each axis,. The disadvantage in using this approach is that computation for 4x4 matrices is expensive. Even combining two translation would become a multiplication of their corresponding matrices, which is quite an undesired effect. On the other hand, it is not a good idea to store a translation as a block of 16 numbers. We have therefore chosen to implement each basic transformation type as a class deriving from the sam",MatchSource.WIKI,doc/master/classTGeoMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html
https://root.cern/doc/master/classTGeoMedium-members.html:1381,Availability,error,error,1381,"mstatic; Class_Name()TGeoMediumstatic; Class_Version()TGeoMediuminlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TGeoMediuminlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EGeoMedium enum nameTGeoMedium; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fIdTGeoMediumprotected; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMaterialTGeoMediumprotected; fNameTNamedprotected; fParamsTGeoMediumprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; GetByteCount() constTGeoMediuminlinevirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetId() constTGeoMediuminline; GetMaterial() constTGeoMediuminline; GetName() const overrideTNamedinlinevirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetParam(Int_t i) constTGeoMediuminline; GetPoint",MatchSource.WIKI,doc/master/classTGeoMedium-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium-members.html
https://root.cern/doc/master/classTGeoMedium-members.html:1462,Availability,error,error,1462,"mstatic; Class_Name()TGeoMediumstatic; Class_Version()TGeoMediuminlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TGeoMediuminlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EGeoMedium enum nameTGeoMedium; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fIdTGeoMediumprotected; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMaterialTGeoMediumprotected; fNameTNamedprotected; fParamsTGeoMediumprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; GetByteCount() constTGeoMediuminlinevirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetId() constTGeoMediuminline; GetMaterial() constTGeoMediuminline; GetName() const overrideTNamedinlinevirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetParam(Int_t i) constTGeoMediuminline; GetPoint",MatchSource.WIKI,doc/master/classTGeoMedium-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium-members.html
https://root.cern/doc/master/classTGeoMedium-members.html:193,Modifiability,inherit,inherited,193,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMedium Member List. This is the complete list of members for TGeoMedium, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TGeoMediumstatic; Class_Name()TGeoMediumstatic; Class_Version()TGeoMediuminlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TGeoMediuminlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EGeoMedium enum nameTGeoMedium; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fIdTGeoMediumprotected; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMaterialTGeoMediumprotected; fNameTNamedprotected; fParamsTGeoMediumprotected; fTitleTNamedprotected; fUniqueIDTObjectpriva",MatchSource.WIKI,doc/master/classTGeoMedium-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium-members.html
https://root.cern/doc/master/classTGeoMedium.html:6054,Availability,error,error,6054,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:6143,Availability,error,error,6143,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:6298,Availability,error,error,6298,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:6595,Availability,error,error,6595,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:10541,Availability,error,error,10541,"rtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:921,Integrability,interface,interfaces,921,". ROOT: TGeoMedium Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGeoMedium Class ReferenceThe Geometry Package » Materials. ; Media are used to store properties related to tracking and which are useful only when using geometry with a particle transport MC package (via VMC). ; One may define several tracking media for a given material. The media ID are user defined values that are not used by the geometry package. In case geometry is used via VMC (in GEANT) these numbers are overwritten, so one can only rely on these values after gMC->FinishGeometry() is called. The media parameters are inspired from GEANT3 and the values defined make sense in context of GEANT (3 but also 4) or FLUKA interfaces. ; Definition at line 23 of file TGeoMedium.h. Public Types; enum  EGeoMedium { kMedSavePrimitive = (1ULL << ( 18 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoMedium ();  Default constructor. ;  ;  TGeoMedium (const char *name, Int_t numed, const TGeoMaterial *mat, Double_t *params=nullptr);  constructor ;  ;  TGeoMedium (const char *name, Int_t numed, Int_t imat, Int_t isvol, Int_t ifield, Double_t fieldm, Double_t tmaxfd, Double_t",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:6060,Integrability,message,message,6060,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:6601,Integrability,message,message,6601,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:7591,Integrability,message,message,7591,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:10547,Integrability,message,message,10547,"rtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:10920,Integrability,message,message,10920,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:1070,Modifiability,inherit,inherited,1070,"atches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGeoMedium Class ReferenceThe Geometry Package » Materials. ; Media are used to store properties related to tracking and which are useful only when using geometry with a particle transport MC package (via VMC). ; One may define several tracking media for a given material. The media ID are user defined values that are not used by the geometry package. In case geometry is used via VMC (in GEANT) these numbers are overwritten, so one can only rely on these values after gMC->FinishGeometry() is called. The media parameters are inspired from GEANT3 and the values defined make sense in context of GEANT (3 but also 4) or FLUKA interfaces. ; Definition at line 23 of file TGeoMedium.h. Public Types; enum  EGeoMedium { kMedSavePrimitive = (1ULL << ( 18 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoMedium ();  Default constructor. ;  ;  TGeoMedium (const char *name, Int_t numed, const TGeoMaterial *mat, Double_t *params=nullptr);  constructor ;  ;  TGeoMedium (const char *name, Int_t numed, Int_t imat, Int_t isvol, Int_t ifield, Double_t fieldm, Double_t tmaxfd, Double_t stemax, Double_t deemax, Double_t epsil, Double_t stmin);  constructor ;  ;  ~TGeoMedium () override;  Dest",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:2857,Modifiability,inherit,inherited,2857,"TGeoMedium (const char *name, Int_t numed, Int_t imat, Int_t isvol, Int_t ifield, Double_t fieldm, Double_t tmaxfd, Double_t stemax, Double_t deemax, Double_t epsil, Double_t stmin);  constructor ;  ;  ~TGeoMedium () override;  Destructor. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetId () const;  ; TGeoMaterial * GetMaterial () const;  ; Double_t GetParam (Int_t i) const;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; virtual void SetCerenkovProperties (TObject *cerenkov);  ; void SetId (Int_t id);  ; void SetMaterial (TGeoMaterial *mat);  ; void SetParam (Int_t i, Double_t val);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:4597,Modifiability,inherit,inherited,4597,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:5690,Modifiability,inherit,inheritance,5690,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:7689,Modifiability,inherit,inherits,7689,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:7806,Modifiability,inherit,inherits,7806,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:11421,Modifiability,inherit,inherited,11421,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMedium (const TGeoMedium &);  copy constructor ;  ; TGeoMedium & operator= (const TGeoMedium &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fId;  ; TGeoMaterial * fM",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:11631,Modifiability,inherit,inherited,11631,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMedium (const TGeoMedium &);  copy constructor ;  ; TGeoMedium & operator= (const TGeoMedium &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fId;  ; TGeoMaterial * fM",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:12301,Modifiability,inherit,inherited,12301,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMedium (const TGeoMedium &);  copy constructor ;  ; TGeoMedium & operator= (const TGeoMedium &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fId;  ; TGeoMaterial * fMaterial;  ; Double_t fParams [20];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMedium.h>. Inheritance diagram for TGeoMedium:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoMedium. enum TGeoMedium::EGeoMedium. EnumeratorkMedSavePrimitive . Definition at line 25 of file TGeoMedium.h. Constructor & Destructor Documentation. ◆ TGeoMedium() [1/4]. TGeoMedium::TGeoMedium ; (; const TGeoMedium & ; gm). protected . copy constructor ; Definition at line 99 of file TGeoMedium.cxx. ◆ TGeoMed",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:12597,Modifiability,inherit,inherited,12597,"st char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMedium (const TGeoMedium &);  copy constructor ;  ; TGeoMedium & operator= (const TGeoMedium &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fId;  ; TGeoMaterial * fMaterial;  ; Double_t fParams [20];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMedium.h>. Inheritance diagram for TGeoMedium:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoMedium. enum TGeoMedium::EGeoMedium. EnumeratorkMedSavePrimitive . Definition at line 25 of file TGeoMedium.h. Constructor & Destructor Documentation. ◆ TGeoMedium() [1/4]. TGeoMedium::TGeoMedium ; (; const TGeoMedium & ; gm). protected . copy constructor ; Definition at line 99 of file TGeoMedium.cxx. ◆ TGeoMedium() [2/4]. TGeoMedium::TGeoMedium ; (; ). Default constructor. ; Definition at line 35 of file TGeoMedium.cxx. ◆ TGeoMedium() [3/4]. TGeoMedium::TGeoMedium ; (; const char * ; name, . Int_t ; numed, . const TGeoMaterial * ; mat, . Double_t * ; params = nullptr . ). constructor ; De",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:12704,Modifiability,inherit,inherited,12704,"();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMedium (const TGeoMedium &);  copy constructor ;  ; TGeoMedium & operator= (const TGeoMedium &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fId;  ; TGeoMaterial * fMaterial;  ; Double_t fParams [20];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMedium.h>. Inheritance diagram for TGeoMedium:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoMedium. enum TGeoMedium::EGeoMedium. EnumeratorkMedSavePrimitive . Definition at line 25 of file TGeoMedium.h. Constructor & Destructor Documentation. ◆ TGeoMedium() [1/4]. TGeoMedium::TGeoMedium ; (; const TGeoMedium & ; gm). protected . copy constructor ; Definition at line 99 of file TGeoMedium.cxx. ◆ TGeoMedium() [2/4]. TGeoMedium::TGeoMedium ; (; ). Default constructor. ; Definition at line 35 of file TGeoMedium.cxx. ◆ TGeoMedium() [3/4]. TGeoMedium::TGeoMedium ; (; const char * ; name, . Int_t ; numed, . const TGeoMaterial * ; mat, . Double_t * ; params = nullptr . ). constructor ; Definition at line 46 of file TGeoMedium.cxx. ◆ TGeoMedium() [4/4]. TGeoMedium::TGeoMedium ; (; const char * ; name, . Int_t ; numed, . Int_t ; ima",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeoMedium.html:3725,Security,hash,hash,3725," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoMedium.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html
https://root.cern/doc/master/classTGeometry.html:9634,Availability,error,error,9634,"hat you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:9723,Availability,error,error,9723,");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out.",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:9878,Availability,error,error,9878," then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; ",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:10175,Availability,error,error,10175,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:13823,Availability,error,error,13823,"is method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * Get (const char *name);  Static function called by TROOT to search name in the geometry. ;  ; static void UpdateTempMatrix (Doubl",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:9640,Integrability,message,message,9640,"hat you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:10181,Integrability,message,message,10181,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:10971,Integrability,message,message,10971,". ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:13829,Integrability,message,message,13829,"is method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * Get (const char *name);  Static function called by TROOT to search name in the geometry. ;  ; static void UpdateTempMatrix (Doubl",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:14202,Integrability,message,message,14202," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * Get (const char *name);  Static function called by TROOT to search name in the geometry. ;  ; static void UpdateTempMatrix (Double_t *dx1, Double_t *rmat1, Double_t x, Double_t y, Double_t z, Double_t *matrix, Double_t *dxnew, Double_t *rmatnew);  Compute new translation vector and global matrix. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileNam",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:6623,Modifiability,inherit,inherited,6623,"al void SetMatrix (TRotMatrix *matrix=nullptr);  ; virtual void SetPosition (Double_t x, Double_t y, Double_t z);  ; virtual void SetPosition (Float_t x, Float_t y, Float_t z);  ; virtual void SetPosition (TRotMatrix *matrix, Double_t x=0, Double_t y=0, Double_t z=0);  ; virtual void SetPosition (TRotMatrix *matrix, Float_t x, Float_t y, Float_t z);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UpdateMatrix (TNode *node);  Update global rotation matrix/translation vector for this node this function must be called before invoking Local2Master. ;  ; virtual void UpdateTempMatrix (Double_t x, Double_t y, Double_t z, Double_t *matrix, Bool_t isReflection=kFALSE);  Update temp matrix. ;  ; virtual void UpdateTempMatrix (Double_t x=0, Double_t y=0, Double_t z=0, TRotMatrix *matrix=nullptr);  Update temp matrix. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:8363,Modifiability,inherit,inherited,8363,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual T",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:9270,Modifiability,inherit,inheritance,9270,"oid StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics sys",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:11069,Modifiability,inherit,inherits,11069," action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:11186,Modifiability,inherit,inherits,11186,"const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:15025,Modifiability,inherit,inherited,15025,"rite (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * Get (const char *name);  Static function called by TROOT to search name in the geometry. ;  ; static void UpdateTempMatrix (Double_t *dx1, Double_t *rmat1, Double_t x, Double_t y, Double_t z, Double_t *matrix, Double_t *dxnew, Double_t *rmatnew);  Compute new translation vector and global matrix. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeometry (const TGeometry &);  copy constructor ;  ; TGeometry & operator= (const TGeometry &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Float_t fBomb;  Pointers to shapes. ;  ; TNode * fCurrentNode;  Pointers to current rotation matrices. ;  ; Int_t fGeomLevel;  ;",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:15235,Modifiability,inherit,inherited,15235,"rite (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * Get (const char *name);  Static function called by TROOT to search name in the geometry. ;  ; static void UpdateTempMatrix (Double_t *dx1, Double_t *rmat1, Double_t x, Double_t y, Double_t z, Double_t *matrix, Double_t *dxnew, Double_t *rmatnew);  Compute new translation vector and global matrix. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeometry (const TGeometry &);  copy constructor ;  ; TGeometry & operator= (const TGeometry &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Float_t fBomb;  Pointers to shapes. ;  ; TNode * fCurrentNode;  Pointers to current rotation matrices. ;  ; Int_t fGeomLevel;  ;",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:15901,Modifiability,inherit,inherited,15901,"e_t *matrix, Double_t *dxnew, Double_t *rmatnew);  Compute new translation vector and global matrix. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeometry (const TGeometry &);  copy constructor ;  ; TGeometry & operator= (const TGeometry &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Float_t fBomb;  Pointers to shapes. ;  ; TNode * fCurrentNode;  Pointers to current rotation matrices. ;  ; Int_t fGeomLevel;  ; Bool_t fIsReflection [kMAXLEVELS];  ; TMaterial ** fMaterialPointer;  Pointer to current node. ;  ; THashList * fMaterials;  ; THashList * fMatrices;  ; TRotMatrix * fMatrix;  ; TRotMatrix ** fMatrixPointer;  Pointers to materials. ;  ; TList * fNodes;  ; Double_t fRotMatrix [kMAXLEVELS][kMatrixSize];  ; TShape ** fShapePointer;  Pointers to rotation matrices. ;  ; THashList * fShapes;  ; Double_t fTranslation [kMAXLEVELS][kVectorSize];  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  The global translation of the current node. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelete",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:16816,Modifiability,inherit,inherited,16816,"ected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Float_t fBomb;  Pointers to shapes. ;  ; TNode * fCurrentNode;  Pointers to current rotation matrices. ;  ; Int_t fGeomLevel;  ; Bool_t fIsReflection [kMAXLEVELS];  ; TMaterial ** fMaterialPointer;  Pointer to current node. ;  ; THashList * fMaterials;  ; THashList * fMatrices;  ; TRotMatrix * fMatrix;  ; TRotMatrix ** fMatrixPointer;  Pointers to materials. ;  ; TList * fNodes;  ; Double_t fRotMatrix [kMAXLEVELS][kMatrixSize];  ; TShape ** fShapePointer;  Pointers to rotation matrices. ;  ; THashList * fShapes;  ; Double_t fTranslation [kMAXLEVELS][kVectorSize];  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  The global translation of the current node. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeometry.h>. Inheritance diagram for TGeometry:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeometry() [1/3]. TGeometry::TGeometry ; (; const TGeometry & ; geo). ",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:17457,Modifiability,inherit,inherited,17457,"[kMatrixSize];  ; TShape ** fShapePointer;  Pointers to rotation matrices. ;  ; THashList * fShapes;  ; Double_t fTranslation [kMAXLEVELS][kVectorSize];  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  The global translation of the current node. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeometry.h>. Inheritance diagram for TGeometry:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeometry() [1/3]. TGeometry::TGeometry ; (; const TGeometry & ; geo). protected . copy constructor ; Definition at line 139 of file TGeometry.cxx. ◆ TGeometry() [2/3]. TGeometry::TGeometry ; (; ). Geometry default constructor. ; Definition at line 96 of file TGeometry.cxx. ◆ TGeometry() [3/3]. TGeometry::TGeometry ; (; const char * ; name, . const char * ; title . ). Geometry normal constructor. ; Definition at line 117 of file TGeometry.cxx. ◆ ~TGeometry(). TGeometry::~TGeometry ; (; ). override . Geometry default destructor. ; Definition at line 200 of file TGeometry.cxx. Member Function Documentation. ◆ Browse(). void TGeometry::Browse ; (; TBrowser * ; b). overridevirtual . Browse. ; Reimplemented f",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:17550,Modifiability,inherit,inherited,17550,"[kMatrixSize];  ; TShape ** fShapePointer;  Pointers to rotation matrices. ;  ; THashList * fShapes;  ; Double_t fTranslation [kMAXLEVELS][kVectorSize];  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  The global translation of the current node. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeometry.h>. Inheritance diagram for TGeometry:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeometry() [1/3]. TGeometry::TGeometry ; (; const TGeometry & ; geo). protected . copy constructor ; Definition at line 139 of file TGeometry.cxx. ◆ TGeometry() [2/3]. TGeometry::TGeometry ; (; ). Geometry default constructor. ; Definition at line 96 of file TGeometry.cxx. ◆ TGeometry() [3/3]. TGeometry::TGeometry ; (; const char * ; name, . const char * ; title . ). Geometry normal constructor. ; Definition at line 117 of file TGeometry.cxx. ◆ ~TGeometry(). TGeometry::~TGeometry ; (; ). override . Geometry default destructor. ; Definition at line 200 of file TGeometry.cxx. Member Function Documentation. ◆ Browse(). void TGeometry::Browse ; (; TBrowser * ; b). overridevirtual . Browse. ; Reimplemented f",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:417,Safety,detect,detector,417,". ROOT: TGeometry Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TGeometry Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; TGeometry description. ; The Geometry class describes the geometry of a detector. The current implementation supports the GEANT3 style description. A special program provided in the ROOT utilities (toroot) can be used to automatically translate a GEANT detector geometry into a ROOT geometry.; a Geometry object is entered into the list of geometries into the ROOT main object (see TROOT description) when the TGeometry constructor is invoked. Several geometries may coexist in memory. / A Geometry object consist of the following linked lists:. the TMaterial list (material definition only).; the TRotmatrix list (Rotation matrices definition only).; the TShape list (volume definition only).; the TNode list assembling all detector elements. Only the Build and Draw functions for a geometry are currently supported.; The conversion program from Geant to Root has been added in the list of utilities in utils directory.(see g2root) The executable module of g2root can be found in $ROOTSYS/bin/g2root.; To use this conversion program, type the shell command:; g2root geant_rzfile macro_name; for example; g2root na49.geom na49.C; will convert the GEANT RZ file na49.geom into a ROOT macro na49.C; To generate the Geometry structure within Root, do:; Root > .x na49.C; Root > na49.Draw(); Root > wh.x3d() (this invokes the 3-d Root viewer); Root > TFile gna49(""na49.root"",""NEW"") //open a new root file; Root > na49.Write() //Write the na49 geometry structure; Root > gna49.Write() //Write all keys (in this case only one); d#define d(i)Definition RSha256.hxx:102; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a f",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:598,Safety,detect,detector,598,". ROOT: TGeometry Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TGeometry Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; TGeometry description. ; The Geometry class describes the geometry of a detector. The current implementation supports the GEANT3 style description. A special program provided in the ROOT utilities (toroot) can be used to automatically translate a GEANT detector geometry into a ROOT geometry.; a Geometry object is entered into the list of geometries into the ROOT main object (see TROOT description) when the TGeometry constructor is invoked. Several geometries may coexist in memory. / A Geometry object consist of the following linked lists:. the TMaterial list (material definition only).; the TRotmatrix list (Rotation matrices definition only).; the TShape list (volume definition only).; the TNode list assembling all detector elements. Only the Build and Draw functions for a geometry are currently supported.; The conversion program from Geant to Root has been added in the list of utilities in utils directory.(see g2root) The executable module of g2root can be found in $ROOTSYS/bin/g2root.; To use this conversion program, type the shell command:; g2root geant_rzfile macro_name; for example; g2root na49.geom na49.C; will convert the GEANT RZ file na49.geom into a ROOT macro na49.C; To generate the Geometry structure within Root, do:; Root > .x na49.C; Root > na49.Draw(); Root > wh.x3d() (this invokes the 3-d Root viewer); Root > TFile gna49(""na49.root"",""NEW"") //open a new root file; Root > na49.Write() //Write the na49 geometry structure; Root > gna49.Write() //Write all keys (in this case only one); d#define d(i)Definition RSha256.hxx:102; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a f",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:1070,Safety,detect,detector,1070,"e Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TGeometry Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; TGeometry description. ; The Geometry class describes the geometry of a detector. The current implementation supports the GEANT3 style description. A special program provided in the ROOT utilities (toroot) can be used to automatically translate a GEANT detector geometry into a ROOT geometry.; a Geometry object is entered into the list of geometries into the ROOT main object (see TROOT description) when the TGeometry constructor is invoked. Several geometries may coexist in memory. / A Geometry object consist of the following linked lists:. the TMaterial list (material definition only).; the TRotmatrix list (Rotation matrices definition only).; the TShape list (volume definition only).; the TNode list assembling all detector elements. Only the Build and Draw functions for a geometry are currently supported.; The conversion program from Geant to Root has been added in the list of utilities in utils directory.(see g2root) The executable module of g2root can be found in $ROOTSYS/bin/g2root.; To use this conversion program, type the shell command:; g2root geant_rzfile macro_name; for example; g2root na49.geom na49.C; will convert the GEANT RZ file na49.geom into a ROOT macro na49.C; To generate the Geometry structure within Root, do:; Root > .x na49.C; Root > na49.Draw(); Root > wh.x3d() (this invokes the 3-d Root viewer); Root > TFile gna49(""na49.root"",""NEW"") //open a new root file; Root > na49.Write() //Write the na49 geometry structure; Root > gna49.Write() //Write all keys (in this case only one); d#define d(i)Definition RSha256.hxx:102; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; Note: all keys are also",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:7491,Security,hash,hash,7491,"d UpdateTempMatrix (Double_t x=0, Double_t y=0, Double_t z=0, TRotMatrix *matrix=nullptr);  Update temp matrix. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeometry.html:2231,Usability,simpl,simply,2231," in the list of utilities in utils directory.(see g2root) The executable module of g2root can be found in $ROOTSYS/bin/g2root.; To use this conversion program, type the shell command:; g2root geant_rzfile macro_name; for example; g2root na49.geom na49.C; will convert the GEANT RZ file na49.geom into a ROOT macro na49.C; To generate the Geometry structure within Root, do:; Root > .x na49.C; Root > na49.Draw(); Root > wh.x3d() (this invokes the 3-d Root viewer); Root > TFile gna49(""na49.root"",""NEW"") //open a new root file; Root > na49.Write() //Write the na49 geometry structure; Root > gna49.Write() //Write all keys (in this case only one); d#define d(i)Definition RSha256.hxx:102; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; Note: all keys are also written on closing of the file, gna49.Close or when the program exits, Root closes all open files correctly. Once this file has been written, in a subsequent session, simply do:; Root > TFile gna49(""na49.root""); Root > na49.Draw(); Drawth1 Draw(); The figure below shows the geometry above using the x3d viewer. This x3d viewer is invoked by selecting ""View x3d"" in the View menu of a canvas (See example of this tool bar in TCanvas). Definition at line 39 of file TGeometry.h. Public Member Functions;  TGeometry ();  Geometry default constructor. ;  ;  TGeometry (const char *name, const char *title);  Geometry normal constructor. ;  ;  ~TGeometry () override;  Geometry default destructor. ;  ; void Browse (TBrowser *b) override;  Browse. ;  ; virtual void cd (const char *path=nullptr);  Change Current Geometry to this. ;  ; void Draw (Option_t *option="""") override;  Draw this Geometry. ;  ; TObject * FindObject (const char *name) const override;  Search object identified by name in the geometry tree. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object in a geometry node, material, etc. ;  ; Int_t GeomLevel () const;  ;",MatchSource.WIKI,doc/master/classTGeometry.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeometry.html
https://root.cern/doc/master/classTGeoMixture.html:4404,Availability,error,error,4404,"r &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoMaterial;  TGeoMaterial ();  Default constructor. ;  ;  TGeoMaterial (const char *name);  Constructor. ;  ;  TGeoMaterial (const char *name, Double_t a, Double_t z, Double_t rho, Double_t radlen=0, Double_t intlen=0);  Constructor. ;  ;  TGeoMaterial (const char *name, Double_t a, Double_t z, Double_t rho, EGeoMaterialState state, Double_t temperature=STP_temperature, Double_t pressure=STP_pressure);  Constructor with state, temperature and pressure. ;  ;  TGeoMaterial (const char *name, TGeoElement *elem, Double_t rho);  Constructor. ;  ;  ~TGeoMaterial () override;  Destructor. ;  ; bool AddConstProperty (const char *property, const char *ref);  ; bool AddProperty (const char *property, const char *ref);  ; virtual Double_t GetA () const;  ; TGeoElement * GetBaseElement () const;  ; virtual TObject * GetCerenkovProperties () const;  ; TList const & GetConstProperties () const;  ; Double_t GetConstProperty (const char *property, Bool_t *error=nullptr) const;  ; Double_t GetConstProperty (Int_t i, Bool_t *error=nullptr) const;  ; const char * GetConstPropertyRef (const char *property) const;  ; const char * GetConstPropertyRef (Int_t i) const;  ; virtual Int_t GetDefaultColor () const;  Get some default color related to this material. ;  ; virtual Double_t GetDensity () const;  ; TGeoElement * GetElement () const;  Get a pointer to the element this material is made of. ;  ; TGeoExtension * GetFWExtension () const;  ; Int_t GetIndex ();  Retrieve material index in the list of materials. ;  ; virtual Double_t GetIntLen () const;  ; Int_t GetNconstProperties () const;  ; Int_t GetNproperties () const;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; Double_t GetPressure () const;  ; TList const & GetProperties () const;  ; TGDMLMatrix * GetProperty (const char *name) const;  ; TGDMLMatrix * GetProperty (Int_t i) const;  ; const char * GetPropertyRef (con",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:4473,Availability,error,error,4473,"r &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoMaterial;  TGeoMaterial ();  Default constructor. ;  ;  TGeoMaterial (const char *name);  Constructor. ;  ;  TGeoMaterial (const char *name, Double_t a, Double_t z, Double_t rho, Double_t radlen=0, Double_t intlen=0);  Constructor. ;  ;  TGeoMaterial (const char *name, Double_t a, Double_t z, Double_t rho, EGeoMaterialState state, Double_t temperature=STP_temperature, Double_t pressure=STP_pressure);  Constructor with state, temperature and pressure. ;  ;  TGeoMaterial (const char *name, TGeoElement *elem, Double_t rho);  Constructor. ;  ;  ~TGeoMaterial () override;  Destructor. ;  ; bool AddConstProperty (const char *property, const char *ref);  ; bool AddProperty (const char *property, const char *ref);  ; virtual Double_t GetA () const;  ; TGeoElement * GetBaseElement () const;  ; virtual TObject * GetCerenkovProperties () const;  ; TList const & GetConstProperties () const;  ; Double_t GetConstProperty (const char *property, Bool_t *error=nullptr) const;  ; Double_t GetConstProperty (Int_t i, Bool_t *error=nullptr) const;  ; const char * GetConstPropertyRef (const char *property) const;  ; const char * GetConstPropertyRef (Int_t i) const;  ; virtual Int_t GetDefaultColor () const;  Get some default color related to this material. ;  ; virtual Double_t GetDensity () const;  ; TGeoElement * GetElement () const;  Get a pointer to the element this material is made of. ;  ; TGeoExtension * GetFWExtension () const;  ; Int_t GetIndex ();  Retrieve material index in the list of materials. ;  ; virtual Double_t GetIntLen () const;  ; Int_t GetNconstProperties () const;  ; Int_t GetNproperties () const;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; Double_t GetPressure () const;  ; TList const & GetProperties () const;  ; TGDMLMatrix * GetProperty (const char *name) const;  ; TGDMLMatrix * GetProperty (Int_t i) const;  ; const char * GetPropertyRef (con",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:9886,Availability,error,error,9886,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:9975,Availability,error,error,9975,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:10130,Availability,error,error,10130,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:10427,Availability,error,error,10427,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:14373,Availability,error,error,14373,"rtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFil",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:2363,Integrability,interface,interface,2363,"onLength ();  Compute Radiation Length based on Geant4 formula. ;  ; TGeoMaterial * DecayMaterial (Double_t time, Double_t precision=0.001) override;  Create the mixture representing the decay product of this material at a given time. ;  ; void DefineElement (Int_t iel, Double_t a, Double_t z, Double_t weight);  ; void DefineElement (Int_t iel, Int_t z, Int_t natoms);  Define the mixture element at index iel by number of atoms in the chemical formula. ;  ; void DefineElement (Int_t iel, TGeoElement *elem, Double_t weight);  ; void FillMaterialEvolution (TObjArray *population, Double_t precision=0.001) override;  Fills a user array with all the elements deriving from the possible decay of the top elements composing the mixture. ;  ; Double_t * GetAmixt () const;  ; Int_t GetByteCount () const override;  ; TGeoElement * GetElement (Int_t i=0) const override;  Retrieve the pointer to the element corresponding to component I. ;  ; void GetElementProp (Double_t &a, Double_t &z, Double_t &w, Int_t i=0) override;  Single interface to get element properties. ;  ; Int_t GetNelements () const override;  ; Int_t * GetNmixt () const;  ; Double_t GetSpecificActivity (Int_t i=-1) const override;  Get specific activity (in Bq/gram) for the whole mixture (no argument) or for a given component. ;  ; Double_t * GetWmixt () const;  ; Double_t * GetZmixt () const;  ; TClass * IsA () const override;  ; Bool_t IsEq (const TGeoMaterial *other) const override;  Return true if the other material has the same physical properties. ;  ; Bool_t IsMixture () const override;  ; void Print (const Option_t *option="""") const override;  print characteristics of this material ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetA (Double_t a) override;  ; void SetDensity (Double_t density) override;  ; void SetZ (Double_t z) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObje",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:9892,Integrability,message,message,9892,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:10433,Integrability,message,message,10433,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:11423,Integrability,message,message,11423,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:14379,Integrability,message,message,14379,"rtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFil",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:14752,Integrability,message,message,14752,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttribu",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:27382,Integrability,interface,interface,27382,"_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; TGeoBatemanSol::Drawvoid Draw(Option_t *option="""") overrideDraw the solution of Bateman equation versus time.Definition TGeoElement.cxx:1612. Reimplemented from TGeoMaterial.; Definition at line 1312 of file TGeoMaterial.cxx. ◆ GetAmixt(). Double_t * TGeoMixture::GetAmixt ; (; ); const. inline . Definition at line 203 of file TGeoMaterial.h. ◆ GetByteCount(). Int_t TGeoMixture::GetByteCount ; (; ); const. inlineoverridevirtual . Reimplemented from TGeoMaterial.; Definition at line 193 of file TGeoMaterial.h. ◆ GetElement(). TGeoElement * TGeoMixture::GetElement ; (; Int_t ; i = 0); const. overridevirtual . Retrieve the pointer to the element corresponding to component I. ; Reimplemented from TGeoMaterial.; Definition at line 1122 of file TGeoMaterial.cxx. ◆ GetElementProp(). void TGeoMixture::GetElementProp ; (; Double_t & ; a, . Double_t & ; z, . Double_t & ; w, . Int_t ; i = 0 . ). inlineoverridevirtual . Single interface to get element properties. ; Reimplemented from TGeoMaterial.; Definition at line 195 of file TGeoMaterial.h. ◆ GetNelements(). Int_t TGeoMixture::GetNelements ; (; ); const. inlineoverridevirtual . Reimplemented from TGeoMaterial.; Definition at line 201 of file TGeoMaterial.h. ◆ GetNmixt(). Int_t * TGeoMixture::GetNmixt ; (; ); const. inline . Definition at line 205 of file TGeoMaterial.h. ◆ GetSpecificActivity(). Double_t TGeoMixture::GetSpecificActivity ; (; Int_t ; i = -1); const. overridevirtual . Get specific activity (in Bq/gram) for the whole mixture (no argument) or for a given component. ; Reimplemented from TGeoMaterial.; Definition at line 1141 of file TGeoMaterial.cxx. ◆ GetWmixt(). Double_t * TGeoMixture::GetWmixt ; (; ); const. inline . Definition at line 204 of file TGeoMaterial.h. ◆ GetZmixt(). Double_t * TGeoMixture::GetZmixt ; (; ); const. inline . Definition at line 202 of file TGeoMaterial.h. ◆ IsA(). TClass * TGeoMixture::IsA ; (; ); const. inlineoverridevirtual . Re",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:3433,Modifiability,inherit,inherited,3433,"ents () const override;  ; Int_t * GetNmixt () const;  ; Double_t GetSpecificActivity (Int_t i=-1) const override;  Get specific activity (in Bq/gram) for the whole mixture (no argument) or for a given component. ;  ; Double_t * GetWmixt () const;  ; Double_t * GetZmixt () const;  ; TClass * IsA () const override;  ; Bool_t IsEq (const TGeoMaterial *other) const override;  Return true if the other material has the same physical properties. ;  ; Bool_t IsMixture () const override;  ; void Print (const Option_t *option="""") const override;  print characteristics of this material ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetA (Double_t a) override;  ; void SetDensity (Double_t density) override;  ; void SetZ (Double_t z) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoMaterial;  TGeoMaterial ();  Default constructor. ;  ;  TGeoMaterial (const char *name);  Constructor. ;  ;  TGeoMaterial (const char *name, Double_t a, Double_t z, Double_t rho, Double_t radlen=0, Double_t intlen=0);  Constructor. ;  ;  TGeoMaterial (const char *name, Double_t a, Double_t z, Double_t rho, EGeoMaterialState state, Double_t temperature=STP_temperature, Double_t pressure=STP_pressure);  Constructor with state, temperature and pressure. ;  ;  TGeoMaterial (const char *name, TGeoElement *elem, Double_t rho);  Constructor. ;  ;  ~TGeoMaterial () override;  Destructor. ;  ; bool AddConstProperty (const char *property, const char *ref);  ; bool AddProperty (const char *property, const char *ref);  ; virtual Double_t GetA () const;  ; TGeoElement * GetBaseElement () const;  ; virtual TObject * GetCerenkovProperties () const;  ; TList const & GetConstProperties () const;  ; Double_t GetConstProperty (const char *property, Bool_t *error=nullptr) ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:6689,Modifiability,inherit,inherited,6689,"nsion () const;  Get a copy of the framework extension pointer. ;  ; TGeoExtension * GrabUserExtension () const;  Get a copy of the user extension pointer. ;  ; Bool_t IsUsed () const;  ; void Print (const Option_t *option="""") const override;  print characteristics of this material ;  ; virtual void SetCerenkovProperties (TObject *cerenkov);  ; void SetFWExtension (TGeoExtension *ext);  Connect framework defined extension to the material. ;  ; void SetIndex (Int_t index);  ; void SetPressure (Double_t pressure);  ; void SetRadLen (Double_t radlen, Double_t intlen=0.);  Set radiation/absorption lengths. ;  ; void SetState (EGeoMaterialState state);  ; void SetTemperature (Double_t temperature);  ; void SetTransparency (Char_t transparency=0);  ; void SetUsed (Bool_t flag=kTRUE);  ; void SetUserExtension (TGeoExtension *ext);  Connect user-defined extension to the material. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:8429,Modifiability,inherit,inherited,8429,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:9522,Modifiability,inherit,inheritance,9522,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:11521,Modifiability,inherit,inherits,11521,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:11638,Modifiability,inherit,inherits,11638,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:15059,Modifiability,inherit,inherited,15059,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:16508,Modifiability,inherit,inherited,16508,"();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMaterial; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t Coulomb (Double_t z);  static function Compute Coulomb correction for pair production and Brem REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.17 ;  ; static const char * DeclFileName ();  ; static Double_t ScreenFactor (Double_t z);  static function Compute screening factor for pair production and Bremsstrahlung REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.22 ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; s",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:17097,Modifiability,inherit,inherited,17097, Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMaterial; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t Coulomb (Double_t z);  static function Compute Coulomb correction for pair production and Brem REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.17 ;  ; static const char * DeclFileName ();  ; static Double_t ScreenFactor (Double_t z);  static function Compute screening factor for pair production and Bremsstrahlung REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.22 ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMixture (const TGeoMixture &)=delete;  ; void AverageProperties ();  Compute effective A/Z and radiation length. ;  ; TGeoMixture & operator= (const TGeoMixture &)=delete;  ;  Protected Member Functions inherited from TGeoMaterial;  TGeoMaterial (const TGeoMaterial,MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:17307,Modifiability,inherit,inherited,17307, Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMaterial; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t Coulomb (Double_t z);  static function Compute Coulomb correction for pair production and Brem REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.17 ;  ; static const char * DeclFileName ();  ; static Double_t ScreenFactor (Double_t z);  static function Compute screening factor for pair production and Bremsstrahlung REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.22 ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMixture (const TGeoMixture &)=delete;  ; void AverageProperties ();  Compute effective A/Z and radiation length. ;  ; TGeoMixture & operator= (const TGeoMixture &)=delete;  ;  Protected Member Functions inherited from TGeoMaterial;  TGeoMaterial (const TGeoMaterial,MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:17825,Modifiability,inherit,inherited,17825,"actor (Double_t z);  static function Compute screening factor for pair production and Bremsstrahlung REFERENCE : EGS MANUAL SLAC 210 - UC32 - JUNE 78 FORMULA 2.7.22 ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMixture (const TGeoMixture &)=delete;  ; void AverageProperties ();  Compute effective A/Z and radiation length. ;  ; TGeoMixture & operator= (const TGeoMixture &)=delete;  ;  Protected Member Functions inherited from TGeoMaterial;  TGeoMaterial (const TGeoMaterial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fAmixture;  ; TObjArray * fElements;  ; Int_t * fNatoms;  ; Int_t fNelements;  ; Double_t * fVecNbOfAtomsPerVolume;  ; Double_t * fWeights;  ; Double_t * fZmixture;  ;  Protected Attributes inherited from TGeoMa",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:18241,Modifiability,inherit,inherited,18241,"DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMixture (const TGeoMixture &)=delete;  ; void AverageProperties ();  Compute effective A/Z and radiation length. ;  ; TGeoMixture & operator= (const TGeoMixture &)=delete;  ;  Protected Member Functions inherited from TGeoMaterial;  TGeoMaterial (const TGeoMaterial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fAmixture;  ; TObjArray * fElements;  ; Int_t * fNatoms;  ; Int_t fNelements;  ; Double_t * fVecNbOfAtomsPerVolume;  ; Double_t * fWeights;  ; Double_t * fZmixture;  ;  Protected Attributes inherited from TGeoMaterial; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState; ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:18469,Modifiability,inherit,inherited,18469,"c Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMixture (const TGeoMixture &)=delete;  ; void AverageProperties ();  Compute effective A/Z and radiation length. ;  ; TGeoMixture & operator= (const TGeoMixture &)=delete;  ;  Protected Member Functions inherited from TGeoMaterial;  TGeoMaterial (const TGeoMaterial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fAmixture;  ; TObjArray * fElements;  ; Int_t * fNatoms;  ; Int_t fNelements;  ; Double_t * fVecNbOfAtomsPerVolume;  ; Double_t * fWeights;  ; Double_t * fZmixture;  ;  Protected Attributes inherited from TGeoMaterial; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill ar",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:18875,Modifiability,inherit,inherited,18875,";  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoMixture (const TGeoMixture &)=delete;  ; void AverageProperties ();  Compute effective A/Z and radiation length. ;  ; TGeoMixture & operator= (const TGeoMixture &)=delete;  ;  Protected Member Functions inherited from TGeoMaterial;  TGeoMaterial (const TGeoMaterial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fAmixture;  ; TObjArray * fElements;  ; Int_t * fNatoms;  ; Int_t fNelements;  ; Double_t * fVecNbOfAtomsPerVolume;  ; Double_t * fWeights;  ; Double_t * fZmixture;  ;  Protected Attributes inherited from TGeoMaterial; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TGeoMaterial; enum  EGeoMaterial { kMatUsed = (1ULL << ( 17 )); , kMatSavePrimitive = (1ULL << ( 18 )); };  ; enum  EGeoMaterialState { kMatStateUndefined; , kMatStateSolid; , kMatStateLiquid; , kMatStateGas; };  ;  Public Types inherited from TObject; enum  { ;   ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:19357,Modifiability,inherit,inherited,19357,"rial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fAmixture;  ; TObjArray * fElements;  ; Int_t * fNatoms;  ; Int_t fNelements;  ; Double_t * fVecNbOfAtomsPerVolume;  ; Double_t * fWeights;  ; Double_t * fZmixture;  ;  Protected Attributes inherited from TGeoMaterial; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TGeoMaterial; enum  EGeoMaterial { kMatUsed = (1ULL << ( 17 )); , kMatSavePrimitive = (1ULL << ( 18 )); };  ; enum  EGeoMaterialState { kMatStateUndefined; , kMatStateSolid; , kMatStateLiquid; , kMatStateGas; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:19439,Modifiability,inherit,inherited,19439,"rial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fAmixture;  ; TObjArray * fElements;  ; Int_t * fNatoms;  ; Int_t fNelements;  ; Double_t * fVecNbOfAtomsPerVolume;  ; Double_t * fWeights;  ; Double_t * fZmixture;  ;  Protected Attributes inherited from TGeoMaterial; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TGeoMaterial; enum  EGeoMaterial { kMatUsed = (1ULL << ( 17 )); , kMatSavePrimitive = (1ULL << ( 18 )); };  ; enum  EGeoMaterialState { kMatStateUndefined; , kMatStateSolid; , kMatStateLiquid; , kMatStateGas; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = ",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:19594,Modifiability,inherit,inherited,19594,"VecNbOfAtomsPerVolume;  ; Double_t * fWeights;  ; Double_t * fZmixture;  ;  Protected Attributes inherited from TGeoMaterial; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TGeoMaterial; enum  EGeoMaterial { kMatUsed = (1ULL << ( 17 )); , kMatSavePrimitive = (1ULL << ( 18 )); };  ; enum  EGeoMaterialState { kMatStateUndefined; , kMatStateSolid; , kMatStateLiquid; , kMatStateGas; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMaterial.h>. Inheritance diagram for TGeoMixture:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoMixture() [1/3]. TGeoM",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:19838,Modifiability,inherit,inherited,19838,"VecNbOfAtomsPerVolume;  ; Double_t * fWeights;  ; Double_t * fZmixture;  ;  Protected Attributes inherited from TGeoMaterial; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TGeoMaterial; enum  EGeoMaterial { kMatUsed = (1ULL << ( 17 )); , kMatSavePrimitive = (1ULL << ( 18 )); };  ; enum  EGeoMaterialState { kMatStateUndefined; , kMatStateSolid; , kMatStateLiquid; , kMatStateGas; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMaterial.h>. Inheritance diagram for TGeoMixture:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoMixture() [1/3]. TGeoM",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:20479,Modifiability,inherit,inherited,20479,";  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TGeoMaterial; enum  EGeoMaterial { kMatUsed = (1ULL << ( 17 )); , kMatSavePrimitive = (1ULL << ( 18 )); };  ; enum  EGeoMaterialState { kMatStateUndefined; , kMatStateSolid; , kMatStateLiquid; , kMatStateGas; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMaterial.h>. Inheritance diagram for TGeoMixture:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoMixture() [1/3]. TGeoMixture::TGeoMixture ; (; const TGeoMixture & ; ). protecteddelete . ◆ TGeoMixture() [2/3]. TGeoMixture::TGeoMixture ; (; ). Default constructor. ; Definition at line 779 of file TGeoMaterial.cxx. ◆ TGeoMixture() [3/3]. TGeoMixture::TGeoMixture ; (; const char * ; name, . Int_t ; nel, . Double_t ; rho = -1 . ). constructor ; Definition at line 793 of file TGeoMaterial.cxx. ◆ ~TGeoMixture(). TGeoMixture::~TGeoMixture ; (; ). override . Destructor. ; Definition at line 810 of file TGeoMaterial.cxx. Member Function Documentation. ◆ AddElement() [1/4]. void TGeoMixture::AddElement ; (; Double_t ; a, . Double_t ; z, . Double_t ; weight . ). add an element to the mixture using fraction by weight Check if the element is a",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoMixture.html:7557,Security,hash,hash,7557,"onnect user-defined extension to the material. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoMixture.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html
https://root.cern/doc/master/classTGeoNavigator.html:2524,Availability,down,downwards,2524,"orld safety calls ;  ;  TGeoNavigator (TGeoManager *geom);  Constructor. ;  ;  ~TGeoNavigator () override;  Destructor. ;  ; void BuildCache (Bool_t dummy=kFALSE, Bool_t nodeid=kFALSE);  Builds the cache for physical nodes and global matrices. ;  ; Bool_t cd (const char *path="""");  Browse the tree of nodes starting from top node according to pathname. ;  ; void CdDown (Int_t index);  Make a daughter of current node current. ;  ; void CdDown (TGeoNode *node);  Make a daughter of current node current. ;  ; void CdNext ();  Do a cd to the node found next by FindNextBoundary. ;  ; void CdNode (Int_t nodeid);  Change current path to point to the node having this id. ;  ; void CdTop ();  Make top level node the current node. ;  ; void CdUp ();  Go one level up in geometry. ;  ; Bool_t CheckPath (const char *path) const;  Check if a geometry path is valid without changing the state of the navigator. ;  ; TGeoNode * CrossBoundaryAndLocate (Bool_t downwards, TGeoNode *skipnode);  Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ;  ; void DoBackupState ();  Backup the current state without affecting the cache stack. ;  ; void DoRestoreState ();  Restore a backed-up state without affecting the cache stack. ;  ; TGeoNode * FindNextBoundary (Double_t stepmax=TGeoShape::Big(), const char *path="""", Bool_t frombdr=kFALSE);  Find distance to next boundary and store it in fStep. ;  ; TGeoNode * FindNextBoundaryAndStep (Double_t stepmax=TGeoShape::Big(), Bool_t compsafe=kFALSE);  Compute distance to next boundary within STEPMAX. ;  ; TGeoNode * FindNextDaughterBoundary (Double_t *point, Double_t *dir, Int_t &idaughter, Bool_t compmatrix=kFALSE);  Computes as fStep the distance to next daughter of the current volume. ;  ; TGeoNode * FindNode (Bool_t safe_start=kTRUE);  Returns deepest node containing current point. ;  ; TGeoNode * FindNode (Double_t x, Double_t y, Double_t z);  Returns deepest node containing current point. ;",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:8211,Availability,down,downwards,8211,"r) const;  ; void LocalToMasterBomb (const Double_t *local, Double_t *master) const;  ; void LocalToMasterVect (const Double_t *local, Double_t *master) const;  ; void MasterToLocal (const Double_t *master, Double_t *local) const;  ; void MasterToLocalBomb (const Double_t *master, Double_t *local) const;  ; void MasterToLocalVect (const Double_t *master, Double_t *local) const;  ; void MasterToTop (const Double_t *master, Double_t *top) const;  Convert coordinates from master volume frame to top. ;  ; void PopDummy (Int_t ipop=9999);  ; Bool_t PopPath ();  ; Bool_t PopPath (Int_t index);  ; Bool_t PopPoint ();  ; Bool_t PopPoint (Int_t index);  ; Int_t PushPath (Int_t startlevel=0);  ; Int_t PushPoint (Int_t startlevel=0);  ; void ResetAll ();  Reset the navigator. ;  ; void ResetState ();  Reset current state flags. ;  ; Double_t Safety (Bool_t inside=kFALSE);  Compute safe distance from the current point. ;  ; TGeoNode * SearchNode (Bool_t downwards=kFALSE, const TGeoNode *skipnode=nullptr);  Returns the deepest node containing fPoint, which must be set a priori. ;  ; void SetCheckingOverlaps (Bool_t flag=kTRUE);  ; void SetCldirChecked (Double_t *dir);  ; void SetCurrentDirection (const Double_t *dir);  ; void SetCurrentDirection (Double_t nx, Double_t ny, Double_t nz);  ; void SetCurrentPoint (const Double_t *point);  ; void SetCurrentPoint (Double_t x, Double_t y, Double_t z);  ; void SetLastPoint (Double_t x, Double_t y, Double_t z);  ; void SetLastSafetyForPoint (Double_t safe, const Double_t *point);  ; void SetLastSafetyForPoint (Double_t safe, Double_t x, Double_t y, Double_t z);  ; void SetOutside (Bool_t flag=kTRUE);  ; void SetStartSafe (Bool_t flag=kTRUE);  ; void SetStep (Double_t step);  ; TGeoNode * Step (Bool_t is_geom=kTRUE, Bool_t cross=kTRUE);  Make a rectiliniar step of length fStep from current point (fPoint) on current direction (fDirection). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtua",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:11210,Availability,error,error,11210,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:11299,Availability,error,error,11299,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:11454,Availability,error,error,11454,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:11751,Availability,error,error,11751,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:16315,Availability,error,error,16315," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t IsPWSafetyCaching ();  ; static void SetPWSafetyCaching (Bool_t b);  ;  Static Public Member Functions inherited from TObject; static ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:23439,Availability,failure,failure,23439,". TGeoNavigator::TGeoNavigator ; (; const TGeoNavigator & ; ). protecteddelete . ◆ TGeoNavigator() [2/3]. TGeoNavigator::TGeoNavigator ; (; ). global mode is caching enabled for parallel world safety calls ; Constructor. ; Definition at line 57 of file TGeoNavigator.cxx. ◆ TGeoNavigator() [3/3]. TGeoNavigator::TGeoNavigator ; (; TGeoManager * ; geom). Constructor. ; Definition at line 109 of file TGeoNavigator.cxx. ◆ ~TGeoNavigator(). TGeoNavigator::~TGeoNavigator ; (; ). override . Destructor. ; Definition at line 169 of file TGeoNavigator.cxx. Member Function Documentation. ◆ BuildCache(). void TGeoNavigator::BuildCache ; (; Bool_t ; dummy = kFALSE, . Bool_t ; nodeid = kFALSE . ). Builds the cache for physical nodes and global matrices. ; Definition at line 182 of file TGeoNavigator.cxx. ◆ cd(). Bool_t TGeoNavigator::cd ; (; const char * ; path = """"). Browse the tree of nodes starting from top node according to pathname. ; Changes the path accordingly. The path is changed to point to the top node in case of failure. ; Definition at line 210 of file TGeoNavigator.cxx. ◆ CdDown() [1/2]. void TGeoNavigator::CdDown ; (; Int_t ; index). Make a daughter of current node current. ; Can be called only with a valid daughter index (no check). Updates cache accordingly. ; Definition at line 313 of file TGeoNavigator.cxx. ◆ CdDown() [2/2]. void TGeoNavigator::CdDown ; (; TGeoNode * ; node). Make a daughter of current node current. ; Can be called only with a valid daughter node (no check). Updates cache accordingly. ; Definition at line 333 of file TGeoNavigator.cxx. ◆ CdNext(). void TGeoNavigator::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 405 of file TGeoNavigator.cxx. ◆ CdNode(). void TGeoNavigator::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 301 of file TGeoNavigator.cxx. ◆ CdTop(). void ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:25517,Availability,down,downwards,25517," the cache accordingly. Determine the overlapping state of current node. ; Definition at line 386 of file TGeoNavigator.cxx. ◆ CdUp(). void TGeoNavigator::CdUp ; (; ). Go one level up in geometry. ; Updates cache accordingly. Determine the overlapping state of current node. ; Definition at line 352 of file TGeoNavigator.cxx. ◆ CheckPath(). Bool_t TGeoNavigator::CheckPath ; (; const char * ; path); const. Check if a geometry path is valid without changing the state of the navigator. ; Definition at line 256 of file TGeoNavigator.cxx. ◆ Class(). static TClass * TGeoNavigator::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoNavigator::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoNavigator::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 282 of file TGeoNavigator.h. ◆ CrossBoundaryAndLocate(). TGeoNode * TGeoNavigator::CrossBoundaryAndLocate ; (; Bool_t ; downwards, . TGeoNode * ; skipnode . ). Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ; Definition at line 523 of file TGeoNavigator.cxx. ◆ CrossDivisionCell(). TGeoNode * TGeoNavigator::CrossDivisionCell ; (; ). protected . Cross a division cell. ; Distance to exit contained in fStep, current node points to the cell node. ; Definition at line 461 of file TGeoNavigator.cxx. ◆ DeclFileName(). static const char * TGeoNavigator::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 282 of file TGeoNavigator.h. ◆ DoBackupState(). void TGeoNavigator::DoBackupState ; (; ). Backup the current state without affecting the cache stack. ; Definition at line 2648 of file TGeoNavigator.cxx. ◆ DoRestoreState(). void TGeoNavigator::DoRestoreState ; (; ). Restore a backed-up state without affecting the cache stack. ; Definition at line 2657 of file TGeoN",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:41809,Availability,down,downwards,41809,"t_t TGeoNavigator::PushPath ; (; Int_t ; startlevel = 0). inline . Definition at line 246 of file TGeoNavigator.h. ◆ PushPoint(). Int_t TGeoNavigator::PushPoint ; (; Int_t ; startlevel = 0). inline . Definition at line 263 of file TGeoNavigator.h. ◆ ResetAll(). void TGeoNavigator::ResetAll ; (; ). Reset the navigator. ; Definition at line 2708 of file TGeoNavigator.cxx. ◆ ResetState(). void TGeoNavigator::ResetState ; (; ). Reset current state flags. ; Definition at line 1643 of file TGeoNavigator.cxx. ◆ Safety(). Double_t TGeoNavigator::Safety ; (; Bool_t ; inside = kFALSE). Compute safe distance from the current point. ; This represent the distance from POINT to the closest boundary. ; Definition at line 1689 of file TGeoNavigator.cxx. ◆ SafetyOverlaps(). void TGeoNavigator::SafetyOverlaps ; (; ). protected . Compute safe distance from the current point within an overlapping node. ; Definition at line 1846 of file TGeoNavigator.cxx. ◆ SearchNode(). TGeoNode * TGeoNavigator::SearchNode ; (; Bool_t ; downwards = kFALSE, . const TGeoNode * ; skipnode = nullptr . ). Returns the deepest node containing fPoint, which must be set a priori. ; Check if parallel world navigation is enabled ; Definition at line 1924 of file TGeoNavigator.cxx. ◆ SetCheckingOverlaps(). void TGeoNavigator::SetCheckingOverlaps ; (; Bool_t ; flag = kTRUE). inline . Definition at line 147 of file TGeoNavigator.h. ◆ SetCldirChecked(). void TGeoNavigator::SetCldirChecked ; (; Double_t * ; dir). inline . Definition at line 193 of file TGeoNavigator.h. ◆ SetCurrentDirection() [1/2]. void TGeoNavigator::SetCurrentDirection ; (; const Double_t * ; dir). inline . Definition at line 185 of file TGeoNavigator.h. ◆ SetCurrentDirection() [2/2]. void TGeoNavigator::SetCurrentDirection ; (; Double_t ; nx, . Double_t ; ny, . Double_t ; nz . ). inline . Definition at line 186 of file TGeoNavigator.h. ◆ SetCurrentPoint() [1/2]. void TGeoNavigator::SetCurrentPoint ; (; const Double_t * ; point). inline . Definition",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:11216,Integrability,message,message,11216,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:11757,Integrability,message,message,11757,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:12959,Integrability,message,message,12959,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:16321,Integrability,message,message,16321," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t IsPWSafetyCaching ();  ; static void SetPWSafetyCaching (Bool_t b);  ;  Static Public Member Functions inherited from TObject; static ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:16694,Integrability,message,message,16694," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t IsPWSafetyCaching ();  ; static void SetPWSafetyCaching (Bool_t b);  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjec",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:9449,Modifiability,inherit,inherited,9449,"t Double_t *dir);  ; void SetCurrentDirection (Double_t nx, Double_t ny, Double_t nz);  ; void SetCurrentPoint (const Double_t *point);  ; void SetCurrentPoint (Double_t x, Double_t y, Double_t z);  ; void SetLastPoint (Double_t x, Double_t y, Double_t z);  ; void SetLastSafetyForPoint (Double_t safe, const Double_t *point);  ; void SetLastSafetyForPoint (Double_t safe, Double_t x, Double_t y, Double_t z);  ; void SetOutside (Bool_t flag=kTRUE);  ; void SetStartSafe (Bool_t flag=kTRUE);  ; void SetStep (Double_t step);  ; TGeoNode * Step (Bool_t is_geom=kTRUE, Bool_t cross=kTRUE);  Make a rectiliniar step of length fStep from current point (fPoint) on current direction (fDirection). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TopToMaster (const Double_t *top, Double_t *master) const;  Convert coordinates from top volume frame to master. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:10846,Modifiability,inherit,inheritance,10846,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:13057,Modifiability,inherit,inherits,13057,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:13174,Modifiability,inherit,inherits,13174,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:17280,Modifiability,inherit,inherited,17280," (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t IsPWSafetyCaching ();  ; static void SetPWSafetyCaching (Bool_t b);  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoNavigator (const TGeoNavigator &)=delete;  ; TGeoNode * CrossDivisionCell ();  Cross a division cell. ;  ; TGeoNode * FindInCluster (Int_t *cluster, Int_t nc);  Find a node inside a cluster of overlapping nodes. ;  ; Int_t GetTouchedCluster (Int_t start, Double_t *point, Int_t *check_list, Int_t ncheck, Int_t *result);  Make the cluster of overlapping nodes in a voxel, containing point in reference of the mother. ;  ; TGeoNavigator & operator= (",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:18413,Modifiability,inherit,inherited,18413,"_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoNavigator (const TGeoNavigator &)=delete;  ; TGeoNode * CrossDivisionCell ();  Cross a division cell. ;  ; TGeoNode * FindInCluster (Int_t *cluster, Int_t nc);  Find a node inside a cluster of overlapping nodes. ;  ; Int_t GetTouchedCluster (Int_t start, Double_t *point, Int_t *check_list, Int_t ncheck, Int_t *result);  Make the cluster of overlapping nodes in a voxel, containing point in reference of the mother. ;  ; TGeoNavigator & operator= (const TGeoNavigator &)=delete;  ; void SafetyOverlaps ();  Compute safe distance from the current point within an overlapping node. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TGeoCacheState * fBackupState;  current point is supposed to be inside this node ;  ; TGeoNodeCache * fCache;  current geometry ;  ; Double_t fCldir [3];  cosine of incident angle on current checked surface ;  ; Double_t fCldirChecked [3];  unit vector to current closest shape ;  ; TGeoHMatrix * fCurrentMatrix;  backup state ;  ; TGeoNode * fCurrentNode;  current volume ;  ; Bool_t fCurrentOverlapping;  flag set when an overlapping cluster is searched ;  ; TGeoVolume * fCurrentVolume;  cache of states ;  ; Double_t fDirection [3];  current point ;  ; TGeoHMatrix * fDivMatrix;  current pointer to cached global matrix ;  ; TGeoNode * fForcedNode;  next node that will be crossed ;  ; TGeoManager * fGeometry;  flag that last geometric step was null ;  ; TGeoHMatrix * fGlobalMatrix;  current stored global matrix ;  ; Bool_t fIsEntering;  flag a safe ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:21475,Modifiability,inherit,inherited,21475,"rched node ;  ; Int_t fNmany;  current geometry level; ;  ; Double_t fNormal [3];  last computed safety radius ;  ; Int_t * fOverlapClusters;  current recursive position in fOverlapClusters ;  ; Int_t fOverlapMark;  current size of fOverlapClusters ;  ; Int_t fOverlapSize;  next daughter index after FindNextBoundary ;  ; TString fPath;  current local matrix of the selected division cell ;  ; Double_t fPoint [3];  unit vector to current checked shape ;  ; Double_t fSafety;  step to be done from current point and direction ;  ; Bool_t fSearchOverlaps;  internal array for overlaps ;  ; Bool_t fStartSafe;  flags the type of the current node ;  ; Double_t fStep;  ; Int_t fThreadId;  last safety returned from parallel world (negative if invalid) ;  ; TGeoNode * fTopNode;  current node ;  . Static Private Attributes; static Bool_t fgUsePWSafetyCaching = kFALSE;  path to current node ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNavigator() [1/3]. TGeoNavigator::TGeoNavigator ; (; const TGeoNavigator & ; ). protecteddelete . ◆ TGeoNavigator() [2/3]. TGeoNavigator::TGe",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:22116,Modifiability,inherit,inherited,22116,"tSafe;  flags the type of the current node ;  ; Double_t fStep;  ; Int_t fThreadId;  last safety returned from parallel world (negative if invalid) ;  ; TGeoNode * fTopNode;  current node ;  . Static Private Attributes; static Bool_t fgUsePWSafetyCaching = kFALSE;  path to current node ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNavigator() [1/3]. TGeoNavigator::TGeoNavigator ; (; const TGeoNavigator & ; ). protecteddelete . ◆ TGeoNavigator() [2/3]. TGeoNavigator::TGeoNavigator ; (; ). global mode is caching enabled for parallel world safety calls ; Constructor. ; Definition at line 57 of file TGeoNavigator.cxx. ◆ TGeoNavigator() [3/3]. TGeoNavigator::TGeoNavigator ; (; TGeoManager * ; geom). Constructor. ; Definition at line 109 of file TGeoNavigator.cxx. ◆ ~TGeoNavigator(). TGeoNavigator::~TGeoNavigator ; (; ). override . Destructor. ; Definition at line 169 of file TGeoNavigator.cxx. Member Function Documentation. ◆ BuildCache(). void TGeoNavigator::BuildCache ; (; Bool_t ; dummy = kFALSE, . Bool_t ; nodeid = kFALSE . ). Builds the cache for physical nod",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:1769,Performance,cache,cache,1769,"XTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TGeoManager::AddNavigatorTGeoNavigator * AddNavigator()Add a navigator in the list of navigators.Definition TGeoManager.cxx:789; TGeoManager::SetCurrentNavigatorBool_t SetCurrentNavigator(Int_t index)Switch to another existing navigator for the calling thread.Definition TGeoManager.cxx:849; TGeoNavigatorClass providing navigation API for TGeo geometries.Definition TGeoNavigator.h:32; TGeoNavigator::TGeoNavigatorTGeoNavigator()global mode is caching enabled for parallel world safety callsDefinition TGeoNavigator.cxx:57; int; .... and then switch back to the default navigator:; gGeoManager->SetCurrentNavigator(0);. Definition at line 32 of file TGeoNavigator.h. Public Member Functions;  TGeoNavigator ();  global mode is caching enabled for parallel world safety calls ;  ;  TGeoNavigator (TGeoManager *geom);  Constructor. ;  ;  ~TGeoNavigator () override;  Destructor. ;  ; void BuildCache (Bool_t dummy=kFALSE, Bool_t nodeid=kFALSE);  Builds the cache for physical nodes and global matrices. ;  ; Bool_t cd (const char *path="""");  Browse the tree of nodes starting from top node according to pathname. ;  ; void CdDown (Int_t index);  Make a daughter of current node current. ;  ; void CdDown (TGeoNode *node);  Make a daughter of current node current. ;  ; void CdNext ();  Do a cd to the node found next by FindNextBoundary. ;  ; void CdNode (Int_t nodeid);  Change current path to point to the node having this id. ;  ; void CdTop ();  Make top level node the current node. ;  ; void CdUp ();  Go one level up in geometry. ;  ; Bool_t CheckPath (const char *path) const;  Check if a geometry path is valid without changing the state of the navigator. ;  ; TGeoNode * CrossBoundaryAndLocate (Bool_t downwards, TGeoNode *skipnode);  Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ;  ; void DoBackupState ();  Backup the current state without affecting the cache sta",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:2743,Performance,cache,cache,2743,"e (Bool_t dummy=kFALSE, Bool_t nodeid=kFALSE);  Builds the cache for physical nodes and global matrices. ;  ; Bool_t cd (const char *path="""");  Browse the tree of nodes starting from top node according to pathname. ;  ; void CdDown (Int_t index);  Make a daughter of current node current. ;  ; void CdDown (TGeoNode *node);  Make a daughter of current node current. ;  ; void CdNext ();  Do a cd to the node found next by FindNextBoundary. ;  ; void CdNode (Int_t nodeid);  Change current path to point to the node having this id. ;  ; void CdTop ();  Make top level node the current node. ;  ; void CdUp ();  Go one level up in geometry. ;  ; Bool_t CheckPath (const char *path) const;  Check if a geometry path is valid without changing the state of the navigator. ;  ; TGeoNode * CrossBoundaryAndLocate (Bool_t downwards, TGeoNode *skipnode);  Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ;  ; void DoBackupState ();  Backup the current state without affecting the cache stack. ;  ; void DoRestoreState ();  Restore a backed-up state without affecting the cache stack. ;  ; TGeoNode * FindNextBoundary (Double_t stepmax=TGeoShape::Big(), const char *path="""", Bool_t frombdr=kFALSE);  Find distance to next boundary and store it in fStep. ;  ; TGeoNode * FindNextBoundaryAndStep (Double_t stepmax=TGeoShape::Big(), Bool_t compsafe=kFALSE);  Compute distance to next boundary within STEPMAX. ;  ; TGeoNode * FindNextDaughterBoundary (Double_t *point, Double_t *dir, Int_t &idaughter, Bool_t compmatrix=kFALSE);  Computes as fStep the distance to next daughter of the current volume. ;  ; TGeoNode * FindNode (Bool_t safe_start=kTRUE);  Returns deepest node containing current point. ;  ; TGeoNode * FindNode (Double_t x, Double_t y, Double_t z);  Returns deepest node containing current point. ;  ; Double_t * FindNormal (Bool_t forward=kTRUE);  Computes normal vector to the next surface that will be or was already crossed when propa",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:2834,Performance,cache,cache,2834,"obal matrices. ;  ; Bool_t cd (const char *path="""");  Browse the tree of nodes starting from top node according to pathname. ;  ; void CdDown (Int_t index);  Make a daughter of current node current. ;  ; void CdDown (TGeoNode *node);  Make a daughter of current node current. ;  ; void CdNext ();  Do a cd to the node found next by FindNextBoundary. ;  ; void CdNode (Int_t nodeid);  Change current path to point to the node having this id. ;  ; void CdTop ();  Make top level node the current node. ;  ; void CdUp ();  Go one level up in geometry. ;  ; Bool_t CheckPath (const char *path) const;  Check if a geometry path is valid without changing the state of the navigator. ;  ; TGeoNode * CrossBoundaryAndLocate (Bool_t downwards, TGeoNode *skipnode);  Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ;  ; void DoBackupState ();  Backup the current state without affecting the cache stack. ;  ; void DoRestoreState ();  Restore a backed-up state without affecting the cache stack. ;  ; TGeoNode * FindNextBoundary (Double_t stepmax=TGeoShape::Big(), const char *path="""", Bool_t frombdr=kFALSE);  Find distance to next boundary and store it in fStep. ;  ; TGeoNode * FindNextBoundaryAndStep (Double_t stepmax=TGeoShape::Big(), Bool_t compsafe=kFALSE);  Compute distance to next boundary within STEPMAX. ;  ; TGeoNode * FindNextDaughterBoundary (Double_t *point, Double_t *dir, Int_t &idaughter, Bool_t compmatrix=kFALSE);  Computes as fStep the distance to next daughter of the current volume. ;  ; TGeoNode * FindNode (Bool_t safe_start=kTRUE);  Returns deepest node containing current point. ;  ; TGeoNode * FindNode (Double_t x, Double_t y, Double_t z);  Returns deepest node containing current point. ;  ; Double_t * FindNormal (Bool_t forward=kTRUE);  Computes normal vector to the next surface that will be or was already crossed when propagating on a straight line from a given point/direction. ;  ; Double_t * FindNormalFast ();",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:19107,Performance,cache,cache,19107,,MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:19219,Performance,cache,cached,19219,,MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:23117,Performance,cache,cache,23117,"bject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNavigator() [1/3]. TGeoNavigator::TGeoNavigator ; (; const TGeoNavigator & ; ). protecteddelete . ◆ TGeoNavigator() [2/3]. TGeoNavigator::TGeoNavigator ; (; ). global mode is caching enabled for parallel world safety calls ; Constructor. ; Definition at line 57 of file TGeoNavigator.cxx. ◆ TGeoNavigator() [3/3]. TGeoNavigator::TGeoNavigator ; (; TGeoManager * ; geom). Constructor. ; Definition at line 109 of file TGeoNavigator.cxx. ◆ ~TGeoNavigator(). TGeoNavigator::~TGeoNavigator ; (; ). override . Destructor. ; Definition at line 169 of file TGeoNavigator.cxx. Member Function Documentation. ◆ BuildCache(). void TGeoNavigator::BuildCache ; (; Bool_t ; dummy = kFALSE, . Bool_t ; nodeid = kFALSE . ). Builds the cache for physical nodes and global matrices. ; Definition at line 182 of file TGeoNavigator.cxx. ◆ cd(). Bool_t TGeoNavigator::cd ; (; const char * ; path = """"). Browse the tree of nodes starting from top node according to pathname. ; Changes the path accordingly. The path is changed to point to the top node in case of failure. ; Definition at line 210 of file TGeoNavigator.cxx. ◆ CdDown() [1/2]. void TGeoNavigator::CdDown ; (; Int_t ; index). Make a daughter of current node current. ; Can be called only with a valid daughter index (no check). Updates cache accordingly. ; Definition at line 313 of file TGeoNavigator.cxx. ◆ CdDown() [2/2]. void TGeoNavigator::CdDown ; (; TGeoNode * ; node). Make a daughter of current node current. ; Can be called only with a valid daughter node (no check). Updates cache accordingly. ; Definition at line 333 of file TGeoNavigator.cxx. ◆ CdNext(). void TGeoNavigator::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 405 of file TGeoN",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:23676,Performance,cache,cache,23676,".cxx. ◆ TGeoNavigator() [3/3]. TGeoNavigator::TGeoNavigator ; (; TGeoManager * ; geom). Constructor. ; Definition at line 109 of file TGeoNavigator.cxx. ◆ ~TGeoNavigator(). TGeoNavigator::~TGeoNavigator ; (; ). override . Destructor. ; Definition at line 169 of file TGeoNavigator.cxx. Member Function Documentation. ◆ BuildCache(). void TGeoNavigator::BuildCache ; (; Bool_t ; dummy = kFALSE, . Bool_t ; nodeid = kFALSE . ). Builds the cache for physical nodes and global matrices. ; Definition at line 182 of file TGeoNavigator.cxx. ◆ cd(). Bool_t TGeoNavigator::cd ; (; const char * ; path = """"). Browse the tree of nodes starting from top node according to pathname. ; Changes the path accordingly. The path is changed to point to the top node in case of failure. ; Definition at line 210 of file TGeoNavigator.cxx. ◆ CdDown() [1/2]. void TGeoNavigator::CdDown ; (; Int_t ; index). Make a daughter of current node current. ; Can be called only with a valid daughter index (no check). Updates cache accordingly. ; Definition at line 313 of file TGeoNavigator.cxx. ◆ CdDown() [2/2]. void TGeoNavigator::CdDown ; (; TGeoNode * ; node). Make a daughter of current node current. ; Can be called only with a valid daughter node (no check). Updates cache accordingly. ; Definition at line 333 of file TGeoNavigator.cxx. ◆ CdNext(). void TGeoNavigator::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 405 of file TGeoNavigator.cxx. ◆ CdNode(). void TGeoNavigator::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 301 of file TGeoNavigator.cxx. ◆ CdTop(). void TGeoNavigator::CdTop ; (; ). Make top level node the current node. ; Updates the cache accordingly. Determine the overlapping state of current node. ; Definition at line 386 of file TGeoNavigator.cxx. ◆ CdUp(). void TGeoNavigator::CdUp ; (; ). Go one level up in geo",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:23926,Performance,cache,cache,23926,"line 169 of file TGeoNavigator.cxx. Member Function Documentation. ◆ BuildCache(). void TGeoNavigator::BuildCache ; (; Bool_t ; dummy = kFALSE, . Bool_t ; nodeid = kFALSE . ). Builds the cache for physical nodes and global matrices. ; Definition at line 182 of file TGeoNavigator.cxx. ◆ cd(). Bool_t TGeoNavigator::cd ; (; const char * ; path = """"). Browse the tree of nodes starting from top node according to pathname. ; Changes the path accordingly. The path is changed to point to the top node in case of failure. ; Definition at line 210 of file TGeoNavigator.cxx. ◆ CdDown() [1/2]. void TGeoNavigator::CdDown ; (; Int_t ; index). Make a daughter of current node current. ; Can be called only with a valid daughter index (no check). Updates cache accordingly. ; Definition at line 313 of file TGeoNavigator.cxx. ◆ CdDown() [2/2]. void TGeoNavigator::CdDown ; (; TGeoNode * ; node). Make a daughter of current node current. ; Can be called only with a valid daughter node (no check). Updates cache accordingly. ; Definition at line 333 of file TGeoNavigator.cxx. ◆ CdNext(). void TGeoNavigator::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 405 of file TGeoNavigator.cxx. ◆ CdNode(). void TGeoNavigator::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 301 of file TGeoNavigator.cxx. ◆ CdTop(). void TGeoNavigator::CdTop ; (; ). Make top level node the current node. ; Updates the cache accordingly. Determine the overlapping state of current node. ; Definition at line 386 of file TGeoNavigator.cxx. ◆ CdUp(). void TGeoNavigator::CdUp ; (; ). Go one level up in geometry. ; Updates cache accordingly. Determine the overlapping state of current node. ; Definition at line 352 of file TGeoNavigator.cxx. ◆ CheckPath(). Bool_t TGeoNavigator::CheckPath ; (; const char * ; path); const. Check if a geometry path is vali",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:24326,Performance,perform,performance,24326,ccording to pathname. ; Changes the path accordingly. The path is changed to point to the top node in case of failure. ; Definition at line 210 of file TGeoNavigator.cxx. ◆ CdDown() [1/2]. void TGeoNavigator::CdDown ; (; Int_t ; index). Make a daughter of current node current. ; Can be called only with a valid daughter index (no check). Updates cache accordingly. ; Definition at line 313 of file TGeoNavigator.cxx. ◆ CdDown() [2/2]. void TGeoNavigator::CdDown ; (; TGeoNode * ; node). Make a daughter of current node current. ; Can be called only with a valid daughter node (no check). Updates cache accordingly. ; Definition at line 333 of file TGeoNavigator.cxx. ◆ CdNext(). void TGeoNavigator::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 405 of file TGeoNavigator.cxx. ◆ CdNode(). void TGeoNavigator::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 301 of file TGeoNavigator.cxx. ◆ CdTop(). void TGeoNavigator::CdTop ; (; ). Make top level node the current node. ; Updates the cache accordingly. Determine the overlapping state of current node. ; Definition at line 386 of file TGeoNavigator.cxx. ◆ CdUp(). void TGeoNavigator::CdUp ; (; ). Go one level up in geometry. ; Updates cache accordingly. Determine the overlapping state of current node. ; Definition at line 352 of file TGeoNavigator.cxx. ◆ CheckPath(). Bool_t TGeoNavigator::CheckPath ; (; const char * ; path); const. Check if a geometry path is valid without changing the state of the navigator. ; Definition at line 256 of file TGeoNavigator.cxx. ◆ Class(). static TClass * TGeoNavigator::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoNavigator::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoNavigator::Class_Version ; (; ). inlines,MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:24496,Performance,cache,cache,24496,x. ◆ CdDown() [1/2]. void TGeoNavigator::CdDown ; (; Int_t ; index). Make a daughter of current node current. ; Can be called only with a valid daughter index (no check). Updates cache accordingly. ; Definition at line 313 of file TGeoNavigator.cxx. ◆ CdDown() [2/2]. void TGeoNavigator::CdDown ; (; TGeoNode * ; node). Make a daughter of current node current. ; Can be called only with a valid daughter node (no check). Updates cache accordingly. ; Definition at line 333 of file TGeoNavigator.cxx. ◆ CdNext(). void TGeoNavigator::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 405 of file TGeoNavigator.cxx. ◆ CdNode(). void TGeoNavigator::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 301 of file TGeoNavigator.cxx. ◆ CdTop(). void TGeoNavigator::CdTop ; (; ). Make top level node the current node. ; Updates the cache accordingly. Determine the overlapping state of current node. ; Definition at line 386 of file TGeoNavigator.cxx. ◆ CdUp(). void TGeoNavigator::CdUp ; (; ). Go one level up in geometry. ; Updates cache accordingly. Determine the overlapping state of current node. ; Definition at line 352 of file TGeoNavigator.cxx. ◆ CheckPath(). Bool_t TGeoNavigator::CheckPath ; (; const char * ; path); const. Check if a geometry path is valid without changing the state of the navigator. ; Definition at line 256 of file TGeoNavigator.cxx. ◆ Class(). static TClass * TGeoNavigator::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoNavigator::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoNavigator::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 282 of file TGeoNavigator.h. ◆ CrossBoundaryAndLocate(). TGeoNode * TGeoNavigator::CrossBoundaryAndLo,MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:24698,Performance,cache,cache,24698,"nition at line 313 of file TGeoNavigator.cxx. ◆ CdDown() [2/2]. void TGeoNavigator::CdDown ; (; TGeoNode * ; node). Make a daughter of current node current. ; Can be called only with a valid daughter node (no check). Updates cache accordingly. ; Definition at line 333 of file TGeoNavigator.cxx. ◆ CdNext(). void TGeoNavigator::CdNext ; (; ). Do a cd to the node found next by FindNextBoundary. ; Definition at line 405 of file TGeoNavigator.cxx. ◆ CdNode(). void TGeoNavigator::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 301 of file TGeoNavigator.cxx. ◆ CdTop(). void TGeoNavigator::CdTop ; (; ). Make top level node the current node. ; Updates the cache accordingly. Determine the overlapping state of current node. ; Definition at line 386 of file TGeoNavigator.cxx. ◆ CdUp(). void TGeoNavigator::CdUp ; (; ). Go one level up in geometry. ; Updates cache accordingly. Determine the overlapping state of current node. ; Definition at line 352 of file TGeoNavigator.cxx. ◆ CheckPath(). Bool_t TGeoNavigator::CheckPath ; (; const char * ; path); const. Check if a geometry path is valid without changing the state of the navigator. ; Definition at line 256 of file TGeoNavigator.cxx. ◆ Class(). static TClass * TGeoNavigator::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoNavigator::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoNavigator::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 282 of file TGeoNavigator.h. ◆ CrossBoundaryAndLocate(). TGeoNode * TGeoNavigator::CrossBoundaryAndLocate ; (; Bool_t ; downwards, . TGeoNode * ; skipnode . ). Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ; Definition at line 523 of file TG",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:26262,Performance,cache,cache,26262,"ass_Version(). static constexpr Version_t TGeoNavigator::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 282 of file TGeoNavigator.h. ◆ CrossBoundaryAndLocate(). TGeoNode * TGeoNavigator::CrossBoundaryAndLocate ; (; Bool_t ; downwards, . TGeoNode * ; skipnode . ). Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ; Definition at line 523 of file TGeoNavigator.cxx. ◆ CrossDivisionCell(). TGeoNode * TGeoNavigator::CrossDivisionCell ; (; ). protected . Cross a division cell. ; Distance to exit contained in fStep, current node points to the cell node. ; Definition at line 461 of file TGeoNavigator.cxx. ◆ DeclFileName(). static const char * TGeoNavigator::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 282 of file TGeoNavigator.h. ◆ DoBackupState(). void TGeoNavigator::DoBackupState ; (; ). Backup the current state without affecting the cache stack. ; Definition at line 2648 of file TGeoNavigator.cxx. ◆ DoRestoreState(). void TGeoNavigator::DoRestoreState ; (; ). Restore a backed-up state without affecting the cache stack. ; Definition at line 2657 of file TGeoNavigator.cxx. ◆ FindInCluster(). TGeoNode * TGeoNavigator::FindInCluster ; (; Int_t * ; cluster, . Int_t ; nc . ). protected . Find a node inside a cluster of overlapping nodes. ; Current node must be on top of all the nodes in cluster. Always nc>1. ; Definition at line 2159 of file TGeoNavigator.cxx. ◆ FindNextBoundary(). TGeoNode * TGeoNavigator::FindNextBoundary ; (; Double_t ; stepmax = TGeoShape::Big(), . const char * ; path = """", . Bool_t ; frombdr = kFALSE . ). Find distance to next boundary and store it in fStep. ; Returns node to which this boundary belongs. If PATH is specified, compute only distance to the node to which PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller than this value. STEPMAX re",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:26439,Performance,cache,cache,26439,"or.h. ◆ CrossBoundaryAndLocate(). TGeoNode * TGeoNavigator::CrossBoundaryAndLocate ; (; Bool_t ; downwards, . TGeoNode * ; skipnode . ). Cross next boundary and locate within current node The current point must be on the boundary of fCurrentNode. ; Definition at line 523 of file TGeoNavigator.cxx. ◆ CrossDivisionCell(). TGeoNode * TGeoNavigator::CrossDivisionCell ; (; ). protected . Cross a division cell. ; Distance to exit contained in fStep, current node points to the cell node. ; Definition at line 461 of file TGeoNavigator.cxx. ◆ DeclFileName(). static const char * TGeoNavigator::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 282 of file TGeoNavigator.h. ◆ DoBackupState(). void TGeoNavigator::DoBackupState ; (; ). Backup the current state without affecting the cache stack. ; Definition at line 2648 of file TGeoNavigator.cxx. ◆ DoRestoreState(). void TGeoNavigator::DoRestoreState ; (; ). Restore a backed-up state without affecting the cache stack. ; Definition at line 2657 of file TGeoNavigator.cxx. ◆ FindInCluster(). TGeoNode * TGeoNavigator::FindInCluster ; (; Int_t * ; cluster, . Int_t ; nc . ). protected . Find a node inside a cluster of overlapping nodes. ; Current node must be on top of all the nodes in cluster. Always nc>1. ; Definition at line 2159 of file TGeoNavigator.cxx. ◆ FindNextBoundary(). TGeoNode * TGeoNavigator::FindNextBoundary ; (; Double_t ; stepmax = TGeoShape::Big(), . const char * ; path = """", . Bool_t ; frombdr = kFALSE . ). Find distance to next boundary and store it in fStep. ; Returns node to which this boundary belongs. If PATH is specified, compute only distance to the node to which PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller than this value. STEPMAX represent the step to be made imposed by other reasons than geometry (usually physics processes). Therefore in this case this method provides the answer to the question : ""Is STEP",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:46270,Performance,cache,cache,46270,0 of file TGeoNavigator.h. ◆ fCache. TGeoNodeCache* TGeoNavigator::fCache. private . current geometry ; Definition at line 73 of file TGeoNavigator.h. ◆ fCldir. Double_t TGeoNavigator::fCldir[3]. private . cosine of incident angle on current checked surface ; Definition at line 47 of file TGeoNavigator.h. ◆ fCldirChecked. Double_t TGeoNavigator::fCldirChecked[3]. private . unit vector to current closest shape ; Definition at line 48 of file TGeoNavigator.h. ◆ fCurrentMatrix. TGeoHMatrix* TGeoNavigator::fCurrentMatrix. private . backup state ; Definition at line 81 of file TGeoNavigator.h. ◆ fCurrentNode. TGeoNode* TGeoNavigator::fCurrentNode. private . current volume ; Definition at line 75 of file TGeoNavigator.h. ◆ fCurrentOverlapping. Bool_t TGeoNavigator::fCurrentOverlapping. private . flag set when an overlapping cluster is searched ; Definition at line 62 of file TGeoNavigator.h. ◆ fCurrentVolume. TGeoVolume* TGeoNavigator::fCurrentVolume. private . cache of states ; Definition at line 74 of file TGeoNavigator.h. ◆ fDirection. Double_t TGeoNavigator::fDirection[3]. private . current point ; Definition at line 50 of file TGeoNavigator.h. ◆ fDivMatrix. TGeoHMatrix* TGeoNavigator::fDivMatrix. private . current pointer to cached global matrix ; Definition at line 83 of file TGeoNavigator.h. ◆ fForcedNode. TGeoNode* TGeoNavigator::fForcedNode. private . next node that will be crossed ; Definition at line 79 of file TGeoNavigator.h. ◆ fGeometry. TGeoManager* TGeoNavigator::fGeometry. private . flag that last geometric step was null ; Definition at line 72 of file TGeoNavigator.h. ◆ fGlobalMatrix. TGeoHMatrix* TGeoNavigator::fGlobalMatrix. private . current stored global matrix ; Definition at line 82 of file TGeoNavigator.h. ◆ fgUsePWSafetyCaching. Bool_t TGeoNavigator::fgUsePWSafetyCaching = kFALSE. staticprivate . path to current node ; Definition at line 86 of file TGeoNavigator.h. ◆ fIsEntering. Bool_t TGeoNavigator::fIsEntering. private . flag a safe start for p,MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:46544,Performance,cache,cached,46544,ion at line 47 of file TGeoNavigator.h. ◆ fCldirChecked. Double_t TGeoNavigator::fCldirChecked[3]. private . unit vector to current closest shape ; Definition at line 48 of file TGeoNavigator.h. ◆ fCurrentMatrix. TGeoHMatrix* TGeoNavigator::fCurrentMatrix. private . backup state ; Definition at line 81 of file TGeoNavigator.h. ◆ fCurrentNode. TGeoNode* TGeoNavigator::fCurrentNode. private . current volume ; Definition at line 75 of file TGeoNavigator.h. ◆ fCurrentOverlapping. Bool_t TGeoNavigator::fCurrentOverlapping. private . flag set when an overlapping cluster is searched ; Definition at line 62 of file TGeoNavigator.h. ◆ fCurrentVolume. TGeoVolume* TGeoNavigator::fCurrentVolume. private . cache of states ; Definition at line 74 of file TGeoNavigator.h. ◆ fDirection. Double_t TGeoNavigator::fDirection[3]. private . current point ; Definition at line 50 of file TGeoNavigator.h. ◆ fDivMatrix. TGeoHMatrix* TGeoNavigator::fDivMatrix. private . current pointer to cached global matrix ; Definition at line 83 of file TGeoNavigator.h. ◆ fForcedNode. TGeoNode* TGeoNavigator::fForcedNode. private . next node that will be crossed ; Definition at line 79 of file TGeoNavigator.h. ◆ fGeometry. TGeoManager* TGeoNavigator::fGeometry. private . flag that last geometric step was null ; Definition at line 72 of file TGeoNavigator.h. ◆ fGlobalMatrix. TGeoHMatrix* TGeoNavigator::fGlobalMatrix. private . current stored global matrix ; Definition at line 82 of file TGeoNavigator.h. ◆ fgUsePWSafetyCaching. Bool_t TGeoNavigator::fgUsePWSafetyCaching = kFALSE. staticprivate . path to current node ; Definition at line 86 of file TGeoNavigator.h. ◆ fIsEntering. Bool_t TGeoNavigator::fIsEntering. private . flag a safe start for point classification ; Definition at line 64 of file TGeoNavigator.h. ◆ fIsExiting. Bool_t TGeoNavigator::fIsExiting. private . flag if current step just got into a new node ; Definition at line 65 of file TGeoNavigator.h. ◆ fIsNullStep. Bool_t TGeoNavigator::fIsNullS,MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:1293,Safety,safe,safety,1293," Private Attributes |; List of all members ; TGeoNavigator Class ReferenceThe Geometry Package » Geometry classes. ; Class providing navigation API for TGeo geometries. ; Several instances are allowed for a single geometry. A default navigator is provided for any geometry but one may add several others for parallel navigation:; TGeoNavigator *navig = new TGeoNavigator(gGeoManager);; Int_t inav = gGeoManager->AddNavigator(navig);; gGeoManager->SetCurrentNavigator(inav);; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TGeoManager::AddNavigatorTGeoNavigator * AddNavigator()Add a navigator in the list of navigators.Definition TGeoManager.cxx:789; TGeoManager::SetCurrentNavigatorBool_t SetCurrentNavigator(Int_t index)Switch to another existing navigator for the calling thread.Definition TGeoManager.cxx:849; TGeoNavigatorClass providing navigation API for TGeo geometries.Definition TGeoNavigator.h:32; TGeoNavigator::TGeoNavigatorTGeoNavigator()global mode is caching enabled for parallel world safety callsDefinition TGeoNavigator.cxx:57; int; .... and then switch back to the default navigator:; gGeoManager->SetCurrentNavigator(0);. Definition at line 32 of file TGeoNavigator.h. Public Member Functions;  TGeoNavigator ();  global mode is caching enabled for parallel world safety calls ;  ;  TGeoNavigator (TGeoManager *geom);  Constructor. ;  ;  ~TGeoNavigator () override;  Destructor. ;  ; void BuildCache (Bool_t dummy=kFALSE, Bool_t nodeid=kFALSE);  Builds the cache for physical nodes and global matrices. ;  ; Bool_t cd (const char *path="""");  Browse the tree of nodes starting from top node according to pathname. ;  ; void CdDown (Int_t index);  Make a daughter of current node current. ;  ; void CdDown (TGeoNode *node);  Make a daughter of current node current. ;  ; void CdNext ();  Do a cd to the node found next by FindNextBoundary. ;  ; void CdNode (Int_t nodeid);  Change current path to point to the node having this id. ;  ; void CdTop ();  ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:1576,Safety,safe,safety,1576,"hers for parallel navigation:; TGeoNavigator *navig = new TGeoNavigator(gGeoManager);; Int_t inav = gGeoManager->AddNavigator(navig);; gGeoManager->SetCurrentNavigator(inav);; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TGeoManager::AddNavigatorTGeoNavigator * AddNavigator()Add a navigator in the list of navigators.Definition TGeoManager.cxx:789; TGeoManager::SetCurrentNavigatorBool_t SetCurrentNavigator(Int_t index)Switch to another existing navigator for the calling thread.Definition TGeoManager.cxx:849; TGeoNavigatorClass providing navigation API for TGeo geometries.Definition TGeoNavigator.h:32; TGeoNavigator::TGeoNavigatorTGeoNavigator()global mode is caching enabled for parallel world safety callsDefinition TGeoNavigator.cxx:57; int; .... and then switch back to the default navigator:; gGeoManager->SetCurrentNavigator(0);. Definition at line 32 of file TGeoNavigator.h. Public Member Functions;  TGeoNavigator ();  global mode is caching enabled for parallel world safety calls ;  ;  TGeoNavigator (TGeoManager *geom);  Constructor. ;  ;  ~TGeoNavigator () override;  Destructor. ;  ; void BuildCache (Bool_t dummy=kFALSE, Bool_t nodeid=kFALSE);  Builds the cache for physical nodes and global matrices. ;  ; Bool_t cd (const char *path="""");  Browse the tree of nodes starting from top node according to pathname. ;  ; void CdDown (Int_t index);  Make a daughter of current node current. ;  ; void CdDown (TGeoNode *node);  Make a daughter of current node current. ;  ; void CdNext ();  Do a cd to the node found next by FindNextBoundary. ;  ; void CdNode (Int_t nodeid);  Change current path to point to the node having this id. ;  ; void CdTop ();  Make top level node the current node. ;  ; void CdUp ();  Go one level up in geometry. ;  ; Bool_t CheckPath (const char *path) const;  Check if a geometry path is valid without changing the state of the navigator. ;  ; TGeoNode * CrossBoundaryAndLocate (Bool_t downwards, TGeoNode *skipnode);  Cross",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:5343,Safety,safe,safety,5343," GetCldir () const;  ; const Double_t * GetCldirChecked () const;  ; const Double_t * GetCurrentDirection () const;  ; TGeoHMatrix * GetCurrentMatrix () const;  ; TGeoNode * GetCurrentNode () const;  ; Int_t GetCurrentNodeId () const;  ; const Double_t * GetCurrentPoint () const;  ; TGeoVolume * GetCurrentVolume () const;  ; TGeoHMatrix * GetDivMatrix () const;  ; TGeoHMatrix * GetHMatrix ();  Return stored current matrix (global matrix of the next touched node). ;  ; const Double_t * GetLastPoint () const;  ; Double_t GetLastSafety () const;  ; Int_t GetLevel () const;  ; TGeoNode * GetMother (Int_t up=1) const;  ; TGeoHMatrix * GetMotherMatrix (Int_t up=1) const;  ; Int_t GetNextDaughterIndex () const;  ; TGeoNode * GetNextNode () const;  ; Int_t GetNmany () const;  ; Int_t GetNodeId () const;  ; const Double_t * GetNormal () const;  ; const char * GetPath () const;  Get path to the current node in the form /node0/node1/... ;  ; Double_t GetPWSafety (Double_t cpoint[3], Double_t saf_max);  Wrapper for getting the safety from the parallel world. ;  ; Double_t GetPWSafetyEstimateFromCache (Double_t cpoint[3]) const;  ; Double_t GetSafeDistance () const;  ; Int_t GetSafeLevel () const;  Go upwards the tree until a non-overlapping node. ;  ; Int_t GetStackLevel () const;  ; Double_t GetStep () const;  ; Int_t GetThreadId () const;  ; Int_t GetVirtualLevel ();  Find level of virtuality of current overlapping node (number of levels up having the same tracking media. ;  ; Bool_t GotoSafeLevel ();  Go upwards the tree until a non-overlapping node. ;  ; TGeoNode * InitTrack (const Double_t *point, const Double_t *dir);  Initialize current point and current direction vector (normalized) in MARS. ;  ; TGeoNode * InitTrack (Double_t x, Double_t y, Double_t z, Double_t nx, Double_t ny, Double_t nz);  Initialize current point and current direction vector (normalized) in MARS. ;  ; void InspectState () const;  Inspects path and all flags for the current state. ;  ; TClass * IsA (",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:6655,Safety,safe,safety,6655,"the tree until a non-overlapping node. ;  ; Int_t GetStackLevel () const;  ; Double_t GetStep () const;  ; Int_t GetThreadId () const;  ; Int_t GetVirtualLevel ();  Find level of virtuality of current overlapping node (number of levels up having the same tracking media. ;  ; Bool_t GotoSafeLevel ();  Go upwards the tree until a non-overlapping node. ;  ; TGeoNode * InitTrack (const Double_t *point, const Double_t *dir);  Initialize current point and current direction vector (normalized) in MARS. ;  ; TGeoNode * InitTrack (Double_t x, Double_t y, Double_t z, Double_t nx, Double_t ny, Double_t nz);  Initialize current point and current direction vector (normalized) in MARS. ;  ; void InspectState () const;  Inspects path and all flags for the current state. ;  ; TClass * IsA () const override;  ; Bool_t IsCheckingOverlaps () const;  ; Bool_t IsCurrentOverlapping () const;  ; Bool_t IsEntering () const;  ; Bool_t IsExiting () const;  ; Bool_t IsNullStep () const;  ; Bool_t IsOnBoundary () const;  ; Bool_t IsOutside () const;  ; Bool_t IsSafeStep (Double_t proposed, Double_t &newsafety) const;  In case a previous safety value was computed, check if the safety region is still safe for the current point and proposed step. ;  ; Bool_t IsSameLocation () const;  ; Bool_t IsSameLocation (Double_t x, Double_t y, Double_t z, Bool_t change=kFALSE);  Checks if point (x,y,z) is still in the current node. ;  ; Bool_t IsSamePoint (Double_t x, Double_t y, Double_t z) const;  Check if a new point with given coordinates is the same as the last located one. ;  ; Bool_t IsStartSafe () const;  ; Bool_t IsStepEntering () const;  ; Bool_t IsStepExiting () const;  ; void LocalToMaster (const Double_t *local, Double_t *master) const;  ; void LocalToMasterBomb (const Double_t *local, Double_t *master) const;  ; void LocalToMasterVect (const Double_t *local, Double_t *master) const;  ; void MasterToLocal (const Double_t *master, Double_t *local) const;  ; void MasterToLocalBomb (const Double_t ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:6695,Safety,safe,safety,6695,"the tree until a non-overlapping node. ;  ; Int_t GetStackLevel () const;  ; Double_t GetStep () const;  ; Int_t GetThreadId () const;  ; Int_t GetVirtualLevel ();  Find level of virtuality of current overlapping node (number of levels up having the same tracking media. ;  ; Bool_t GotoSafeLevel ();  Go upwards the tree until a non-overlapping node. ;  ; TGeoNode * InitTrack (const Double_t *point, const Double_t *dir);  Initialize current point and current direction vector (normalized) in MARS. ;  ; TGeoNode * InitTrack (Double_t x, Double_t y, Double_t z, Double_t nx, Double_t ny, Double_t nz);  Initialize current point and current direction vector (normalized) in MARS. ;  ; void InspectState () const;  Inspects path and all flags for the current state. ;  ; TClass * IsA () const override;  ; Bool_t IsCheckingOverlaps () const;  ; Bool_t IsCurrentOverlapping () const;  ; Bool_t IsEntering () const;  ; Bool_t IsExiting () const;  ; Bool_t IsNullStep () const;  ; Bool_t IsOnBoundary () const;  ; Bool_t IsOutside () const;  ; Bool_t IsSafeStep (Double_t proposed, Double_t &newsafety) const;  In case a previous safety value was computed, check if the safety region is still safe for the current point and proposed step. ;  ; Bool_t IsSameLocation () const;  ; Bool_t IsSameLocation (Double_t x, Double_t y, Double_t z, Bool_t change=kFALSE);  Checks if point (x,y,z) is still in the current node. ;  ; Bool_t IsSamePoint (Double_t x, Double_t y, Double_t z) const;  Check if a new point with given coordinates is the same as the last located one. ;  ; Bool_t IsStartSafe () const;  ; Bool_t IsStepEntering () const;  ; Bool_t IsStepExiting () const;  ; void LocalToMaster (const Double_t *local, Double_t *master) const;  ; void LocalToMasterBomb (const Double_t *local, Double_t *master) const;  ; void LocalToMasterVect (const Double_t *local, Double_t *master) const;  ; void MasterToLocal (const Double_t *master, Double_t *local) const;  ; void MasterToLocalBomb (const Double_t ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:6718,Safety,safe,safe,6718,"the tree until a non-overlapping node. ;  ; Int_t GetStackLevel () const;  ; Double_t GetStep () const;  ; Int_t GetThreadId () const;  ; Int_t GetVirtualLevel ();  Find level of virtuality of current overlapping node (number of levels up having the same tracking media. ;  ; Bool_t GotoSafeLevel ();  Go upwards the tree until a non-overlapping node. ;  ; TGeoNode * InitTrack (const Double_t *point, const Double_t *dir);  Initialize current point and current direction vector (normalized) in MARS. ;  ; TGeoNode * InitTrack (Double_t x, Double_t y, Double_t z, Double_t nx, Double_t ny, Double_t nz);  Initialize current point and current direction vector (normalized) in MARS. ;  ; void InspectState () const;  Inspects path and all flags for the current state. ;  ; TClass * IsA () const override;  ; Bool_t IsCheckingOverlaps () const;  ; Bool_t IsCurrentOverlapping () const;  ; Bool_t IsEntering () const;  ; Bool_t IsExiting () const;  ; Bool_t IsNullStep () const;  ; Bool_t IsOnBoundary () const;  ; Bool_t IsOutside () const;  ; Bool_t IsSafeStep (Double_t proposed, Double_t &newsafety) const;  In case a previous safety value was computed, check if the safety region is still safe for the current point and proposed step. ;  ; Bool_t IsSameLocation () const;  ; Bool_t IsSameLocation (Double_t x, Double_t y, Double_t z, Bool_t change=kFALSE);  Checks if point (x,y,z) is still in the current node. ;  ; Bool_t IsSamePoint (Double_t x, Double_t y, Double_t z) const;  Check if a new point with given coordinates is the same as the last located one. ;  ; Bool_t IsStartSafe () const;  ; Bool_t IsStepEntering () const;  ; Bool_t IsStepExiting () const;  ; void LocalToMaster (const Double_t *local, Double_t *master) const;  ; void LocalToMasterBomb (const Double_t *local, Double_t *master) const;  ; void LocalToMasterVect (const Double_t *local, Double_t *master) const;  ; void MasterToLocal (const Double_t *master, Double_t *local) const;  ; void MasterToLocalBomb (const Double_t ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:8138,Safety,safe,safe,8138,"ool_t IsStepEntering () const;  ; Bool_t IsStepExiting () const;  ; void LocalToMaster (const Double_t *local, Double_t *master) const;  ; void LocalToMasterBomb (const Double_t *local, Double_t *master) const;  ; void LocalToMasterVect (const Double_t *local, Double_t *master) const;  ; void MasterToLocal (const Double_t *master, Double_t *local) const;  ; void MasterToLocalBomb (const Double_t *master, Double_t *local) const;  ; void MasterToLocalVect (const Double_t *master, Double_t *local) const;  ; void MasterToTop (const Double_t *master, Double_t *top) const;  Convert coordinates from master volume frame to top. ;  ; void PopDummy (Int_t ipop=9999);  ; Bool_t PopPath ();  ; Bool_t PopPath (Int_t index);  ; Bool_t PopPoint ();  ; Bool_t PopPoint (Int_t index);  ; Int_t PushPath (Int_t startlevel=0);  ; Int_t PushPoint (Int_t startlevel=0);  ; void ResetAll ();  Reset the navigator. ;  ; void ResetState ();  Reset current state flags. ;  ; Double_t Safety (Bool_t inside=kFALSE);  Compute safe distance from the current point. ;  ; TGeoNode * SearchNode (Bool_t downwards=kFALSE, const TGeoNode *skipnode=nullptr);  Returns the deepest node containing fPoint, which must be set a priori. ;  ; void SetCheckingOverlaps (Bool_t flag=kTRUE);  ; void SetCldirChecked (Double_t *dir);  ; void SetCurrentDirection (const Double_t *dir);  ; void SetCurrentDirection (Double_t nx, Double_t ny, Double_t nz);  ; void SetCurrentPoint (const Double_t *point);  ; void SetCurrentPoint (Double_t x, Double_t y, Double_t z);  ; void SetLastPoint (Double_t x, Double_t y, Double_t z);  ; void SetLastSafetyForPoint (Double_t safe, const Double_t *point);  ; void SetLastSafetyForPoint (Double_t safe, Double_t x, Double_t y, Double_t z);  ; void SetOutside (Bool_t flag=kTRUE);  ; void SetStartSafe (Bool_t flag=kTRUE);  ; void SetStep (Double_t step);  ; TGeoNode * Step (Bool_t is_geom=kTRUE, Bool_t cross=kTRUE);  Make a rectiliniar step of length fStep from current point (fPoint) on current",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:8759,Safety,safe,safe,8759,"rame to top. ;  ; void PopDummy (Int_t ipop=9999);  ; Bool_t PopPath ();  ; Bool_t PopPath (Int_t index);  ; Bool_t PopPoint ();  ; Bool_t PopPoint (Int_t index);  ; Int_t PushPath (Int_t startlevel=0);  ; Int_t PushPoint (Int_t startlevel=0);  ; void ResetAll ();  Reset the navigator. ;  ; void ResetState ();  Reset current state flags. ;  ; Double_t Safety (Bool_t inside=kFALSE);  Compute safe distance from the current point. ;  ; TGeoNode * SearchNode (Bool_t downwards=kFALSE, const TGeoNode *skipnode=nullptr);  Returns the deepest node containing fPoint, which must be set a priori. ;  ; void SetCheckingOverlaps (Bool_t flag=kTRUE);  ; void SetCldirChecked (Double_t *dir);  ; void SetCurrentDirection (const Double_t *dir);  ; void SetCurrentDirection (Double_t nx, Double_t ny, Double_t nz);  ; void SetCurrentPoint (const Double_t *point);  ; void SetCurrentPoint (Double_t x, Double_t y, Double_t z);  ; void SetLastPoint (Double_t x, Double_t y, Double_t z);  ; void SetLastSafetyForPoint (Double_t safe, const Double_t *point);  ; void SetLastSafetyForPoint (Double_t safe, Double_t x, Double_t y, Double_t z);  ; void SetOutside (Bool_t flag=kTRUE);  ; void SetStartSafe (Bool_t flag=kTRUE);  ; void SetStep (Double_t step);  ; TGeoNode * Step (Bool_t is_geom=kTRUE, Bool_t cross=kTRUE);  Make a rectiliniar step of length fStep from current point (fPoint) on current direction (fDirection). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TopToMaster (const Double_t *top, Double_t *master) const;  Convert coordinates from top volume frame to master. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leav",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:8829,Safety,safe,safe,8829,"rame to top. ;  ; void PopDummy (Int_t ipop=9999);  ; Bool_t PopPath ();  ; Bool_t PopPath (Int_t index);  ; Bool_t PopPoint ();  ; Bool_t PopPoint (Int_t index);  ; Int_t PushPath (Int_t startlevel=0);  ; Int_t PushPoint (Int_t startlevel=0);  ; void ResetAll ();  Reset the navigator. ;  ; void ResetState ();  Reset current state flags. ;  ; Double_t Safety (Bool_t inside=kFALSE);  Compute safe distance from the current point. ;  ; TGeoNode * SearchNode (Bool_t downwards=kFALSE, const TGeoNode *skipnode=nullptr);  Returns the deepest node containing fPoint, which must be set a priori. ;  ; void SetCheckingOverlaps (Bool_t flag=kTRUE);  ; void SetCldirChecked (Double_t *dir);  ; void SetCurrentDirection (const Double_t *dir);  ; void SetCurrentDirection (Double_t nx, Double_t ny, Double_t nz);  ; void SetCurrentPoint (const Double_t *point);  ; void SetCurrentPoint (Double_t x, Double_t y, Double_t z);  ; void SetLastPoint (Double_t x, Double_t y, Double_t z);  ; void SetLastSafetyForPoint (Double_t safe, const Double_t *point);  ; void SetLastSafetyForPoint (Double_t safe, Double_t x, Double_t y, Double_t z);  ; void SetOutside (Bool_t flag=kTRUE);  ; void SetStartSafe (Bool_t flag=kTRUE);  ; void SetStep (Double_t step);  ; TGeoNode * Step (Bool_t is_geom=kTRUE, Bool_t cross=kTRUE);  Make a rectiliniar step of length fStep from current point (fPoint) on current direction (fDirection). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TopToMaster (const Double_t *top, Double_t *master) const;  Convert coordinates from top volume frame to master. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leav",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:18315,Safety,safe,safe,18315,"bject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoNavigator (const TGeoNavigator &)=delete;  ; TGeoNode * CrossDivisionCell ();  Cross a division cell. ;  ; TGeoNode * FindInCluster (Int_t *cluster, Int_t nc);  Find a node inside a cluster of overlapping nodes. ;  ; Int_t GetTouchedCluster (Int_t start, Double_t *point, Int_t *check_list, Int_t ncheck, Int_t *result);  Make the cluster of overlapping nodes in a voxel, containing point in reference of the mother. ;  ; TGeoNavigator & operator= (const TGeoNavigator &)=delete;  ; void SafetyOverlaps ();  Compute safe distance from the current point within an overlapping node. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TGeoCacheState * fBackupState;  current point is supposed to be inside this node ;  ; TGeoNodeCache * fCache;  current geometry ;  ; Double_t fCldir [3];  cosine of incident angle on current checked surface ;  ; Double_t fCldirChecked [3];  unit vector to current closest shape ;  ; TGeoHMatrix * fCurrentMatrix;  backup state ;  ; TGeoNode * fCurrentNode;  current volume ;  ; Bool_t fCurrentOverlapping;  flag set when an overlapping cluster is searched ;  ; TGeoVolume * fCurrentVolume;  cache of states ;  ; Double_t fDirection [3];  current point ;  ; TGeoHMatrix * fDivMatrix;  current pointer to cached global matrix ;  ; TGeoNode * fForcedNode;  next node that will be cros",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:19468,Safety,safe,safe,19468,,MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:20213,Safety,safe,safety,20213,"to cached global matrix ;  ; TGeoNode * fForcedNode;  next node that will be crossed ;  ; TGeoManager * fGeometry;  flag that last geometric step was null ;  ; TGeoHMatrix * fGlobalMatrix;  current stored global matrix ;  ; Bool_t fIsEntering;  flag a safe start for point classification ;  ; Bool_t fIsExiting;  flag if current step just got into a new node ;  ; Bool_t fIsNullStep;  flag that a new point is in the same node as previous ;  ; Bool_t fIsOnBoundary;  flag that current point is outside geometry ;  ; Bool_t fIsOutside;  flag that next geometric step will exit current volume ;  ; Bool_t fIsSameLocation;  flag that current point is on some boundary ;  ; Bool_t fIsStepEntering;  flag that current track is about to leave current node ;  ; Bool_t fIsStepExiting;  flag that next geometric step will enter new volume ;  ; TGeoNode * fLastNode;  top physical node ;  ; Double_t fLastPoint [3];  current direction ;  ; Double_t fLastPWSafety {-1};  last point for which parallel world safety was ""evaluated"" ;  ; Double_t fLastPWSaftyPnt [3];  last point for which safety was computed ;  ; Double_t fLastSafety;  safety radius from current point ;  ; Int_t fLevel;  thread id for this navigator ;  ; Int_t fNextDaughterIndex;  number of overlapping nodes on current branch ;  ; TGeoNode * fNextNode;  last searched node ;  ; Int_t fNmany;  current geometry level; ;  ; Double_t fNormal [3];  last computed safety radius ;  ; Int_t * fOverlapClusters;  current recursive position in fOverlapClusters ;  ; Int_t fOverlapMark;  current size of fOverlapClusters ;  ; Int_t fOverlapSize;  next daughter index after FindNextBoundary ;  ; TString fPath;  current local matrix of the selected division cell ;  ; Double_t fPoint [3];  unit vector to current checked shape ;  ; Double_t fSafety;  step to be done from current point and direction ;  ; Bool_t fSearchOverlaps;  internal array for overlaps ;  ; Bool_t fStartSafe;  flags the type of the current node ;  ; Double_t fStep;  ; Int_t fThre",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:20293,Safety,safe,safety,20293,"ssed ;  ; TGeoManager * fGeometry;  flag that last geometric step was null ;  ; TGeoHMatrix * fGlobalMatrix;  current stored global matrix ;  ; Bool_t fIsEntering;  flag a safe start for point classification ;  ; Bool_t fIsExiting;  flag if current step just got into a new node ;  ; Bool_t fIsNullStep;  flag that a new point is in the same node as previous ;  ; Bool_t fIsOnBoundary;  flag that current point is outside geometry ;  ; Bool_t fIsOutside;  flag that next geometric step will exit current volume ;  ; Bool_t fIsSameLocation;  flag that current point is on some boundary ;  ; Bool_t fIsStepEntering;  flag that current track is about to leave current node ;  ; Bool_t fIsStepExiting;  flag that next geometric step will enter new volume ;  ; TGeoNode * fLastNode;  top physical node ;  ; Double_t fLastPoint [3];  current direction ;  ; Double_t fLastPWSafety {-1};  last point for which parallel world safety was ""evaluated"" ;  ; Double_t fLastPWSaftyPnt [3];  last point for which safety was computed ;  ; Double_t fLastSafety;  safety radius from current point ;  ; Int_t fLevel;  thread id for this navigator ;  ; Int_t fNextDaughterIndex;  number of overlapping nodes on current branch ;  ; TGeoNode * fNextNode;  last searched node ;  ; Int_t fNmany;  current geometry level; ;  ; Double_t fNormal [3];  last computed safety radius ;  ; Int_t * fOverlapClusters;  current recursive position in fOverlapClusters ;  ; Int_t fOverlapMark;  current size of fOverlapClusters ;  ; Int_t fOverlapSize;  next daughter index after FindNextBoundary ;  ; TString fPath;  current local matrix of the selected division cell ;  ; Double_t fPoint [3];  unit vector to current checked shape ;  ; Double_t fSafety;  step to be done from current point and direction ;  ; Bool_t fSearchOverlaps;  internal array for overlaps ;  ; Bool_t fStartSafe;  flags the type of the current node ;  ; Double_t fStep;  ; Int_t fThreadId;  last safety returned from parallel world (negative if invalid) ;  ; TGeoN",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:20341,Safety,safe,safety,20341,"  flag that last geometric step was null ;  ; TGeoHMatrix * fGlobalMatrix;  current stored global matrix ;  ; Bool_t fIsEntering;  flag a safe start for point classification ;  ; Bool_t fIsExiting;  flag if current step just got into a new node ;  ; Bool_t fIsNullStep;  flag that a new point is in the same node as previous ;  ; Bool_t fIsOnBoundary;  flag that current point is outside geometry ;  ; Bool_t fIsOutside;  flag that next geometric step will exit current volume ;  ; Bool_t fIsSameLocation;  flag that current point is on some boundary ;  ; Bool_t fIsStepEntering;  flag that current track is about to leave current node ;  ; Bool_t fIsStepExiting;  flag that next geometric step will enter new volume ;  ; TGeoNode * fLastNode;  top physical node ;  ; Double_t fLastPoint [3];  current direction ;  ; Double_t fLastPWSafety {-1};  last point for which parallel world safety was ""evaluated"" ;  ; Double_t fLastPWSaftyPnt [3];  last point for which safety was computed ;  ; Double_t fLastSafety;  safety radius from current point ;  ; Int_t fLevel;  thread id for this navigator ;  ; Int_t fNextDaughterIndex;  number of overlapping nodes on current branch ;  ; TGeoNode * fNextNode;  last searched node ;  ; Int_t fNmany;  current geometry level; ;  ; Double_t fNormal [3];  last computed safety radius ;  ; Int_t * fOverlapClusters;  current recursive position in fOverlapClusters ;  ; Int_t fOverlapMark;  current size of fOverlapClusters ;  ; Int_t fOverlapSize;  next daughter index after FindNextBoundary ;  ; TString fPath;  current local matrix of the selected division cell ;  ; Double_t fPoint [3];  unit vector to current checked shape ;  ; Double_t fSafety;  step to be done from current point and direction ;  ; Bool_t fSearchOverlaps;  internal array for overlaps ;  ; Bool_t fStartSafe;  flags the type of the current node ;  ; Double_t fStep;  ; Int_t fThreadId;  last safety returned from parallel world (negative if invalid) ;  ; TGeoNode * fTopNode;  current node ;  .",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:20634,Safety,safe,safety,20634,"  flag that last geometric step was null ;  ; TGeoHMatrix * fGlobalMatrix;  current stored global matrix ;  ; Bool_t fIsEntering;  flag a safe start for point classification ;  ; Bool_t fIsExiting;  flag if current step just got into a new node ;  ; Bool_t fIsNullStep;  flag that a new point is in the same node as previous ;  ; Bool_t fIsOnBoundary;  flag that current point is outside geometry ;  ; Bool_t fIsOutside;  flag that next geometric step will exit current volume ;  ; Bool_t fIsSameLocation;  flag that current point is on some boundary ;  ; Bool_t fIsStepEntering;  flag that current track is about to leave current node ;  ; Bool_t fIsStepExiting;  flag that next geometric step will enter new volume ;  ; TGeoNode * fLastNode;  top physical node ;  ; Double_t fLastPoint [3];  current direction ;  ; Double_t fLastPWSafety {-1};  last point for which parallel world safety was ""evaluated"" ;  ; Double_t fLastPWSaftyPnt [3];  last point for which safety was computed ;  ; Double_t fLastSafety;  safety radius from current point ;  ; Int_t fLevel;  thread id for this navigator ;  ; Int_t fNextDaughterIndex;  number of overlapping nodes on current branch ;  ; TGeoNode * fNextNode;  last searched node ;  ; Int_t fNmany;  current geometry level; ;  ; Double_t fNormal [3];  last computed safety radius ;  ; Int_t * fOverlapClusters;  current recursive position in fOverlapClusters ;  ; Int_t fOverlapMark;  current size of fOverlapClusters ;  ; Int_t fOverlapSize;  next daughter index after FindNextBoundary ;  ; TString fPath;  current local matrix of the selected division cell ;  ; Double_t fPoint [3];  unit vector to current checked shape ;  ; Double_t fSafety;  step to be done from current point and direction ;  ; Bool_t fSearchOverlaps;  internal array for overlaps ;  ; Bool_t fStartSafe;  flags the type of the current node ;  ; Double_t fStep;  ; Int_t fThreadId;  last safety returned from parallel world (negative if invalid) ;  ; TGeoNode * fTopNode;  current node ;  .",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:21229,Safety,safe,safety,21229,"  flag that last geometric step was null ;  ; TGeoHMatrix * fGlobalMatrix;  current stored global matrix ;  ; Bool_t fIsEntering;  flag a safe start for point classification ;  ; Bool_t fIsExiting;  flag if current step just got into a new node ;  ; Bool_t fIsNullStep;  flag that a new point is in the same node as previous ;  ; Bool_t fIsOnBoundary;  flag that current point is outside geometry ;  ; Bool_t fIsOutside;  flag that next geometric step will exit current volume ;  ; Bool_t fIsSameLocation;  flag that current point is on some boundary ;  ; Bool_t fIsStepEntering;  flag that current track is about to leave current node ;  ; Bool_t fIsStepExiting;  flag that next geometric step will enter new volume ;  ; TGeoNode * fLastNode;  top physical node ;  ; Double_t fLastPoint [3];  current direction ;  ; Double_t fLastPWSafety {-1};  last point for which parallel world safety was ""evaluated"" ;  ; Double_t fLastPWSaftyPnt [3];  last point for which safety was computed ;  ; Double_t fLastSafety;  safety radius from current point ;  ; Int_t fLevel;  thread id for this navigator ;  ; Int_t fNextDaughterIndex;  number of overlapping nodes on current branch ;  ; TGeoNode * fNextNode;  last searched node ;  ; Int_t fNmany;  current geometry level; ;  ; Double_t fNormal [3];  last computed safety radius ;  ; Int_t * fOverlapClusters;  current recursive position in fOverlapClusters ;  ; Int_t fOverlapMark;  current size of fOverlapClusters ;  ; Int_t fOverlapSize;  next daughter index after FindNextBoundary ;  ; TString fPath;  current local matrix of the selected division cell ;  ; Double_t fPoint [3];  unit vector to current checked shape ;  ; Double_t fSafety;  step to be done from current point and direction ;  ; Bool_t fSearchOverlaps;  internal array for overlaps ;  ; Bool_t fStartSafe;  flags the type of the current node ;  ; Double_t fStep;  ; Int_t fThreadId;  last safety returned from parallel world (negative if invalid) ;  ; TGeoNode * fTopNode;  current node ;  .",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:22607,Safety,safe,safety,22607,"sistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNavigator() [1/3]. TGeoNavigator::TGeoNavigator ; (; const TGeoNavigator & ; ). protecteddelete . ◆ TGeoNavigator() [2/3]. TGeoNavigator::TGeoNavigator ; (; ). global mode is caching enabled for parallel world safety calls ; Constructor. ; Definition at line 57 of file TGeoNavigator.cxx. ◆ TGeoNavigator() [3/3]. TGeoNavigator::TGeoNavigator ; (; TGeoManager * ; geom). Constructor. ; Definition at line 109 of file TGeoNavigator.cxx. ◆ ~TGeoNavigator(). TGeoNavigator::~TGeoNavigator ; (; ). override . Destructor. ; Definition at line 169 of file TGeoNavigator.cxx. Member Function Documentation. ◆ BuildCache(). void TGeoNavigator::BuildCache ; (; Bool_t ; dummy = kFALSE, . Bool_t ; nodeid = kFALSE . ). Builds the cache for physical nodes and global matrices. ; Definition at line 182 of file TGeoNavigator.cxx. ◆ cd(). Bool_t TGeoNavigator::cd ; (; const char * ; path = """"). Browse the tree of nodes starting from top node according to pathname. ; Changes the path accordingly. The path is changed to point to the top node in case of failure. ; Definition at line 210 of file TGeoNavigator.cxx. ◆ CdDown() [1/2]. void TGeoNavigator::CdDown ; (; Int_t ; index). Make a daughter of current no",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:27427,Safety,safe,safe,27427,"ithout affecting the cache stack. ; Definition at line 2657 of file TGeoNavigator.cxx. ◆ FindInCluster(). TGeoNode * TGeoNavigator::FindInCluster ; (; Int_t * ; cluster, . Int_t ; nc . ). protected . Find a node inside a cluster of overlapping nodes. ; Current node must be on top of all the nodes in cluster. Always nc>1. ; Definition at line 2159 of file TGeoNavigator.cxx. ◆ FindNextBoundary(). TGeoNode * TGeoNavigator::FindNextBoundary ; (; Double_t ; stepmax = TGeoShape::Big(), . const char * ; path = """", . Bool_t ; frombdr = kFALSE . ). Find distance to next boundary and store it in fStep. ; Returns node to which this boundary belongs. If PATH is specified, compute only distance to the node to which PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller than this value. STEPMAX represent the step to be made imposed by other reasons than geometry (usually physics processes). Therefore in this case this method provides the answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling fStep with a big number. In case frombdr=kTRUE, the isotropic safety is set to zero.; Note : safety distance for the current point is computed ONLY in case STEPMAX is specified, otherwise users have to call explicitly TGeoManager::Safety() if they want this computed for the current point. ; Definition at line 624 of file TGeoNavigator.cxx. ◆ FindNextBoundaryAndStep(). TGeoNode * TGeoNavigator::FindNextBoundaryAndStep ; (; Double_t ; stepmax = TGeoShape::Big(), . Bool_t ; compsafe = kFALSE . ). Compute distance to next boundary within STEPMAX. ; If no boundary is found, propagate current point along current direction with fStep=STEPMAX. Otherwise propagate with fStep=SNEXT (distance to boundary) and locate/return the next node. ; Definition at line 1178 of file TGeoNavigator.cxx. ◆ FindNextDaughterBoundary(). TGeoNode * TGeoNavigator::FindNextDaughterBoundary ; (; Double_t * ; point, . Double_t * ; dir, . Int_t & ; idaughter, . Bool",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:27536,Safety,safe,safety,27536,"Node * TGeoNavigator::FindInCluster ; (; Int_t * ; cluster, . Int_t ; nc . ). protected . Find a node inside a cluster of overlapping nodes. ; Current node must be on top of all the nodes in cluster. Always nc>1. ; Definition at line 2159 of file TGeoNavigator.cxx. ◆ FindNextBoundary(). TGeoNode * TGeoNavigator::FindNextBoundary ; (; Double_t ; stepmax = TGeoShape::Big(), . const char * ; path = """", . Bool_t ; frombdr = kFALSE . ). Find distance to next boundary and store it in fStep. ; Returns node to which this boundary belongs. If PATH is specified, compute only distance to the node to which PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller than this value. STEPMAX represent the step to be made imposed by other reasons than geometry (usually physics processes). Therefore in this case this method provides the answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling fStep with a big number. In case frombdr=kTRUE, the isotropic safety is set to zero.; Note : safety distance for the current point is computed ONLY in case STEPMAX is specified, otherwise users have to call explicitly TGeoManager::Safety() if they want this computed for the current point. ; Definition at line 624 of file TGeoNavigator.cxx. ◆ FindNextBoundaryAndStep(). TGeoNode * TGeoNavigator::FindNextBoundaryAndStep ; (; Double_t ; stepmax = TGeoShape::Big(), . Bool_t ; compsafe = kFALSE . ). Compute distance to next boundary within STEPMAX. ; If no boundary is found, propagate current point along current direction with fStep=STEPMAX. Otherwise propagate with fStep=SNEXT (distance to boundary) and locate/return the next node. ; Definition at line 1178 of file TGeoNavigator.cxx. ◆ FindNextDaughterBoundary(). TGeoNode * TGeoNavigator::FindNextDaughterBoundary ; (; Double_t * ; point, . Double_t * ; dir, . Int_t & ; idaughter, . Bool_t ; compmatrix = kFALSE . ). Computes as fStep the distance to next daughter of the current volume. ; The po",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:27567,Safety,safe,safety,27567,"g nodes. ; Current node must be on top of all the nodes in cluster. Always nc>1. ; Definition at line 2159 of file TGeoNavigator.cxx. ◆ FindNextBoundary(). TGeoNode * TGeoNavigator::FindNextBoundary ; (; Double_t ; stepmax = TGeoShape::Big(), . const char * ; path = """", . Bool_t ; frombdr = kFALSE . ). Find distance to next boundary and store it in fStep. ; Returns node to which this boundary belongs. If PATH is specified, compute only distance to the node to which PATH points. If STEPMAX is specified, compute distance only in case fSafety is smaller than this value. STEPMAX represent the step to be made imposed by other reasons than geometry (usually physics processes). Therefore in this case this method provides the answer to the question : ""Is STEPMAX a safe step ?"" returning a NULL node and filling fStep with a big number. In case frombdr=kTRUE, the isotropic safety is set to zero.; Note : safety distance for the current point is computed ONLY in case STEPMAX is specified, otherwise users have to call explicitly TGeoManager::Safety() if they want this computed for the current point. ; Definition at line 624 of file TGeoNavigator.cxx. ◆ FindNextBoundaryAndStep(). TGeoNode * TGeoNavigator::FindNextBoundaryAndStep ; (; Double_t ; stepmax = TGeoShape::Big(), . Bool_t ; compsafe = kFALSE . ). Compute distance to next boundary within STEPMAX. ; If no boundary is found, propagate current point along current direction with fStep=STEPMAX. Otherwise propagate with fStep=SNEXT (distance to boundary) and locate/return the next node. ; Definition at line 1178 of file TGeoNavigator.cxx. ◆ FindNextDaughterBoundary(). TGeoNode * TGeoNavigator::FindNextDaughterBoundary ; (; Double_t * ; point, . Double_t * ; dir, . Int_t & ; idaughter, . Bool_t ; compmatrix = kFALSE . ). Computes as fStep the distance to next daughter of the current volume. ; The point and direction must be converted in the coordinate system of the current volume. The proposed step limit is fStep. ; Definition at",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:33571,Safety,safe,safety,33571,"const. inline . Definition at line 156 of file TGeoNavigator.h. ◆ GetNextDaughterIndex(). Int_t TGeoNavigator::GetNextDaughterIndex ; (; ); const. inline . Definition at line 153 of file TGeoNavigator.h. ◆ GetNextNode(). TGeoNode * TGeoNavigator::GetNextNode ; (; ); const. inline . Definition at line 154 of file TGeoNavigator.h. ◆ GetNmany(). Int_t TGeoNavigator::GetNmany ; (; ); const. inline . Definition at line 105 of file TGeoNavigator.h. ◆ GetNodeId(). Int_t TGeoNavigator::GetNodeId ; (; ); const. inline . Definition at line 152 of file TGeoNavigator.h. ◆ GetNormal(). const Double_t * TGeoNavigator::GetNormal ; (; ); const. inline . Definition at line 168 of file TGeoNavigator.h. ◆ GetPath(). const char * TGeoNavigator::GetPath ; (; ); const. Get path to the current node in the form /node0/node1/... ; Definition at line 2682 of file TGeoNavigator.cxx. ◆ GetPWSafety(). double TGeoNavigator::GetPWSafety ; (; Double_t ; cpoint[3], . Double_t ; saf_max . ). Wrapper for getting the safety from the parallel world. ; Takes care of caching mechanics + talking to the parallel world. ; Definition at line 1656 of file TGeoNavigator.cxx. ◆ GetPWSafetyEstimateFromCache(). Double_t TGeoNavigator::GetPWSafetyEstimateFromCache ; (; Double_t ; cpoint[3]); const. inline . Definition at line 208 of file TGeoNavigator.h. ◆ GetSafeDistance(). Double_t TGeoNavigator::GetSafeDistance ; (; ); const. inline . Definition at line 126 of file TGeoNavigator.h. ◆ GetSafeLevel(). Int_t TGeoNavigator::GetSafeLevel ; (; ); const. Go upwards the tree until a non-overlapping node. ; Definition at line 2406 of file TGeoNavigator.cxx. ◆ GetStackLevel(). Int_t TGeoNavigator::GetStackLevel ; (; ); const. inline . Definition at line 171 of file TGeoNavigator.h. ◆ GetStep(). Double_t TGeoNavigator::GetStep ; (; ); const. inline . Definition at line 128 of file TGeoNavigator.h. ◆ GetThreadId(). Int_t TGeoNavigator::GetThreadId ; (; ); const. inline . Definition at line 129 of file TGeoNavigator.h. ◆ Ge",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:37485,Safety,safe,safety,37485,"apping ; (; ); const. inline . Definition at line 139 of file TGeoNavigator.h. ◆ IsEntering(). Bool_t TGeoNavigator::IsEntering ; (; ); const. inline . Definition at line 140 of file TGeoNavigator.h. ◆ IsExiting(). Bool_t TGeoNavigator::IsExiting ; (; ); const. inline . Definition at line 141 of file TGeoNavigator.h. ◆ IsNullStep(). Bool_t TGeoNavigator::IsNullStep ; (; ); const. inline . Definition at line 146 of file TGeoNavigator.h. ◆ IsOnBoundary(). Bool_t TGeoNavigator::IsOnBoundary ; (; ); const. inline . Definition at line 145 of file TGeoNavigator.h. ◆ IsOutside(). Bool_t TGeoNavigator::IsOutside ; (; ); const. inline . Definition at line 144 of file TGeoNavigator.h. ◆ IsPWSafetyCaching(). static Bool_t TGeoNavigator::IsPWSafetyCaching ; (; ). inlinestatic . Definition at line 232 of file TGeoNavigator.h. ◆ IsSafeStep(). Bool_t TGeoNavigator::IsSafeStep ; (; Double_t ; proposed, . Double_t & ; newsafety . ); const. In case a previous safety value was computed, check if the safety region is still safe for the current point and proposed step. ; Return value changed only if proposed distance is safe. ; Definition at line 2609 of file TGeoNavigator.cxx. ◆ IsSameLocation() [1/2]. Bool_t TGeoNavigator::IsSameLocation ; (; ); const. inline . Definition at line 133 of file TGeoNavigator.h. ◆ IsSameLocation() [2/2]. Bool_t TGeoNavigator::IsSameLocation ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Bool_t ; change = kFALSE . ). Checks if point (x,y,z) is still in the current node. ; check if this is an overlapping node ; Definition at line 2446 of file TGeoNavigator.cxx. ◆ IsSamePoint(). Bool_t TGeoNavigator::IsSamePoint ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ); const. Check if a new point with given coordinates is the same as the last located one. ; Definition at line 2634 of file TGeoNavigator.cxx. ◆ IsStartSafe(). Bool_t TGeoNavigator::IsStartSafe ; (; ); const. inline . Definition at line 135 of file TGeoNavigator.h. ◆ IsStepEntering(). Bool_t ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:37525,Safety,safe,safety,37525,"apping ; (; ); const. inline . Definition at line 139 of file TGeoNavigator.h. ◆ IsEntering(). Bool_t TGeoNavigator::IsEntering ; (; ); const. inline . Definition at line 140 of file TGeoNavigator.h. ◆ IsExiting(). Bool_t TGeoNavigator::IsExiting ; (; ); const. inline . Definition at line 141 of file TGeoNavigator.h. ◆ IsNullStep(). Bool_t TGeoNavigator::IsNullStep ; (; ); const. inline . Definition at line 146 of file TGeoNavigator.h. ◆ IsOnBoundary(). Bool_t TGeoNavigator::IsOnBoundary ; (; ); const. inline . Definition at line 145 of file TGeoNavigator.h. ◆ IsOutside(). Bool_t TGeoNavigator::IsOutside ; (; ); const. inline . Definition at line 144 of file TGeoNavigator.h. ◆ IsPWSafetyCaching(). static Bool_t TGeoNavigator::IsPWSafetyCaching ; (; ). inlinestatic . Definition at line 232 of file TGeoNavigator.h. ◆ IsSafeStep(). Bool_t TGeoNavigator::IsSafeStep ; (; Double_t ; proposed, . Double_t & ; newsafety . ); const. In case a previous safety value was computed, check if the safety region is still safe for the current point and proposed step. ; Return value changed only if proposed distance is safe. ; Definition at line 2609 of file TGeoNavigator.cxx. ◆ IsSameLocation() [1/2]. Bool_t TGeoNavigator::IsSameLocation ; (; ); const. inline . Definition at line 133 of file TGeoNavigator.h. ◆ IsSameLocation() [2/2]. Bool_t TGeoNavigator::IsSameLocation ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Bool_t ; change = kFALSE . ). Checks if point (x,y,z) is still in the current node. ; check if this is an overlapping node ; Definition at line 2446 of file TGeoNavigator.cxx. ◆ IsSamePoint(). Bool_t TGeoNavigator::IsSamePoint ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ); const. Check if a new point with given coordinates is the same as the last located one. ; Definition at line 2634 of file TGeoNavigator.cxx. ◆ IsStartSafe(). Bool_t TGeoNavigator::IsStartSafe ; (; ); const. inline . Definition at line 135 of file TGeoNavigator.h. ◆ IsStepEntering(). Bool_t ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:37548,Safety,safe,safe,37548,"apping ; (; ); const. inline . Definition at line 139 of file TGeoNavigator.h. ◆ IsEntering(). Bool_t TGeoNavigator::IsEntering ; (; ); const. inline . Definition at line 140 of file TGeoNavigator.h. ◆ IsExiting(). Bool_t TGeoNavigator::IsExiting ; (; ); const. inline . Definition at line 141 of file TGeoNavigator.h. ◆ IsNullStep(). Bool_t TGeoNavigator::IsNullStep ; (; ); const. inline . Definition at line 146 of file TGeoNavigator.h. ◆ IsOnBoundary(). Bool_t TGeoNavigator::IsOnBoundary ; (; ); const. inline . Definition at line 145 of file TGeoNavigator.h. ◆ IsOutside(). Bool_t TGeoNavigator::IsOutside ; (; ); const. inline . Definition at line 144 of file TGeoNavigator.h. ◆ IsPWSafetyCaching(). static Bool_t TGeoNavigator::IsPWSafetyCaching ; (; ). inlinestatic . Definition at line 232 of file TGeoNavigator.h. ◆ IsSafeStep(). Bool_t TGeoNavigator::IsSafeStep ; (; Double_t ; proposed, . Double_t & ; newsafety . ); const. In case a previous safety value was computed, check if the safety region is still safe for the current point and proposed step. ; Return value changed only if proposed distance is safe. ; Definition at line 2609 of file TGeoNavigator.cxx. ◆ IsSameLocation() [1/2]. Bool_t TGeoNavigator::IsSameLocation ; (; ); const. inline . Definition at line 133 of file TGeoNavigator.h. ◆ IsSameLocation() [2/2]. Bool_t TGeoNavigator::IsSameLocation ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Bool_t ; change = kFALSE . ). Checks if point (x,y,z) is still in the current node. ; check if this is an overlapping node ; Definition at line 2446 of file TGeoNavigator.cxx. ◆ IsSamePoint(). Bool_t TGeoNavigator::IsSamePoint ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ); const. Check if a new point with given coordinates is the same as the last located one. ; Definition at line 2634 of file TGeoNavigator.cxx. ◆ IsStartSafe(). Bool_t TGeoNavigator::IsStartSafe ; (; ); const. inline . Definition at line 135 of file TGeoNavigator.h. ◆ IsStepEntering(). Bool_t ",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:37646,Safety,safe,safe,37646,". Bool_t TGeoNavigator::IsEntering ; (; ); const. inline . Definition at line 140 of file TGeoNavigator.h. ◆ IsExiting(). Bool_t TGeoNavigator::IsExiting ; (; ); const. inline . Definition at line 141 of file TGeoNavigator.h. ◆ IsNullStep(). Bool_t TGeoNavigator::IsNullStep ; (; ); const. inline . Definition at line 146 of file TGeoNavigator.h. ◆ IsOnBoundary(). Bool_t TGeoNavigator::IsOnBoundary ; (; ); const. inline . Definition at line 145 of file TGeoNavigator.h. ◆ IsOutside(). Bool_t TGeoNavigator::IsOutside ; (; ); const. inline . Definition at line 144 of file TGeoNavigator.h. ◆ IsPWSafetyCaching(). static Bool_t TGeoNavigator::IsPWSafetyCaching ; (; ). inlinestatic . Definition at line 232 of file TGeoNavigator.h. ◆ IsSafeStep(). Bool_t TGeoNavigator::IsSafeStep ; (; Double_t ; proposed, . Double_t & ; newsafety . ); const. In case a previous safety value was computed, check if the safety region is still safe for the current point and proposed step. ; Return value changed only if proposed distance is safe. ; Definition at line 2609 of file TGeoNavigator.cxx. ◆ IsSameLocation() [1/2]. Bool_t TGeoNavigator::IsSameLocation ; (; ); const. inline . Definition at line 133 of file TGeoNavigator.h. ◆ IsSameLocation() [2/2]. Bool_t TGeoNavigator::IsSameLocation ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Bool_t ; change = kFALSE . ). Checks if point (x,y,z) is still in the current node. ; check if this is an overlapping node ; Definition at line 2446 of file TGeoNavigator.cxx. ◆ IsSamePoint(). Bool_t TGeoNavigator::IsSamePoint ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ); const. Check if a new point with given coordinates is the same as the last located one. ; Definition at line 2634 of file TGeoNavigator.cxx. ◆ IsStartSafe(). Bool_t TGeoNavigator::IsStartSafe ; (; ); const. inline . Definition at line 135 of file TGeoNavigator.h. ◆ IsStepEntering(). Bool_t TGeoNavigator::IsStepEntering ; (; ); const. inline . Definition at line 142 of file TGeoNavi",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:41384,Safety,safe,safe,41384,"tor.h. ◆ PopPath() [2/2]. Bool_t TGeoNavigator::PopPath ; (; Int_t ; index). inline . Definition at line 255 of file TGeoNavigator.h. ◆ PopPoint() [1/2]. Bool_t TGeoNavigator::PopPoint ; (; ). inline . Definition at line 264 of file TGeoNavigator.h. ◆ PopPoint() [2/2]. Bool_t TGeoNavigator::PopPoint ; (; Int_t ; index). inline . Definition at line 272 of file TGeoNavigator.h. ◆ PushPath(). Int_t TGeoNavigator::PushPath ; (; Int_t ; startlevel = 0). inline . Definition at line 246 of file TGeoNavigator.h. ◆ PushPoint(). Int_t TGeoNavigator::PushPoint ; (; Int_t ; startlevel = 0). inline . Definition at line 263 of file TGeoNavigator.h. ◆ ResetAll(). void TGeoNavigator::ResetAll ; (; ). Reset the navigator. ; Definition at line 2708 of file TGeoNavigator.cxx. ◆ ResetState(). void TGeoNavigator::ResetState ; (; ). Reset current state flags. ; Definition at line 1643 of file TGeoNavigator.cxx. ◆ Safety(). Double_t TGeoNavigator::Safety ; (; Bool_t ; inside = kFALSE). Compute safe distance from the current point. ; This represent the distance from POINT to the closest boundary. ; Definition at line 1689 of file TGeoNavigator.cxx. ◆ SafetyOverlaps(). void TGeoNavigator::SafetyOverlaps ; (; ). protected . Compute safe distance from the current point within an overlapping node. ; Definition at line 1846 of file TGeoNavigator.cxx. ◆ SearchNode(). TGeoNode * TGeoNavigator::SearchNode ; (; Bool_t ; downwards = kFALSE, . const TGeoNode * ; skipnode = nullptr . ). Returns the deepest node containing fPoint, which must be set a priori. ; Check if parallel world navigation is enabled ; Definition at line 1924 of file TGeoNavigator.cxx. ◆ SetCheckingOverlaps(). void TGeoNavigator::SetCheckingOverlaps ; (; Bool_t ; flag = kTRUE). inline . Definition at line 147 of file TGeoNavigator.h. ◆ SetCldirChecked(). void TGeoNavigator::SetCldirChecked ; (; Double_t * ; dir). inline . Definition at line 193 of file TGeoNavigator.h. ◆ SetCurrentDirection() [1/2]. void TGeoNavigator::SetCurrentD",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:41624,Safety,safe,safe,41624,"opPoint() [2/2]. Bool_t TGeoNavigator::PopPoint ; (; Int_t ; index). inline . Definition at line 272 of file TGeoNavigator.h. ◆ PushPath(). Int_t TGeoNavigator::PushPath ; (; Int_t ; startlevel = 0). inline . Definition at line 246 of file TGeoNavigator.h. ◆ PushPoint(). Int_t TGeoNavigator::PushPoint ; (; Int_t ; startlevel = 0). inline . Definition at line 263 of file TGeoNavigator.h. ◆ ResetAll(). void TGeoNavigator::ResetAll ; (; ). Reset the navigator. ; Definition at line 2708 of file TGeoNavigator.cxx. ◆ ResetState(). void TGeoNavigator::ResetState ; (; ). Reset current state flags. ; Definition at line 1643 of file TGeoNavigator.cxx. ◆ Safety(). Double_t TGeoNavigator::Safety ; (; Bool_t ; inside = kFALSE). Compute safe distance from the current point. ; This represent the distance from POINT to the closest boundary. ; Definition at line 1689 of file TGeoNavigator.cxx. ◆ SafetyOverlaps(). void TGeoNavigator::SafetyOverlaps ; (; ). protected . Compute safe distance from the current point within an overlapping node. ; Definition at line 1846 of file TGeoNavigator.cxx. ◆ SearchNode(). TGeoNode * TGeoNavigator::SearchNode ; (; Bool_t ; downwards = kFALSE, . const TGeoNode * ; skipnode = nullptr . ). Returns the deepest node containing fPoint, which must be set a priori. ; Check if parallel world navigation is enabled ; Definition at line 1924 of file TGeoNavigator.cxx. ◆ SetCheckingOverlaps(). void TGeoNavigator::SetCheckingOverlaps ; (; Bool_t ; flag = kTRUE). inline . Definition at line 147 of file TGeoNavigator.h. ◆ SetCldirChecked(). void TGeoNavigator::SetCldirChecked ; (; Double_t * ; dir). inline . Definition at line 193 of file TGeoNavigator.h. ◆ SetCurrentDirection() [1/2]. void TGeoNavigator::SetCurrentDirection ; (; const Double_t * ; dir). inline . Definition at line 185 of file TGeoNavigator.h. ◆ SetCurrentDirection() [2/2]. void TGeoNavigator::SetCurrentDirection ; (; Double_t ; nx, . Double_t ; ny, . Double_t ; nz . ). inline . Definition at line 1",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:43261,Safety,safe,safe,43261,"or::SetCldirChecked ; (; Double_t * ; dir). inline . Definition at line 193 of file TGeoNavigator.h. ◆ SetCurrentDirection() [1/2]. void TGeoNavigator::SetCurrentDirection ; (; const Double_t * ; dir). inline . Definition at line 185 of file TGeoNavigator.h. ◆ SetCurrentDirection() [2/2]. void TGeoNavigator::SetCurrentDirection ; (; Double_t ; nx, . Double_t ; ny, . Double_t ; nz . ). inline . Definition at line 186 of file TGeoNavigator.h. ◆ SetCurrentPoint() [1/2]. void TGeoNavigator::SetCurrentPoint ; (; const Double_t * ; point). inline . Definition at line 172 of file TGeoNavigator.h. ◆ SetCurrentPoint() [2/2]. void TGeoNavigator::SetCurrentPoint ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ). inline . Definition at line 173 of file TGeoNavigator.h. ◆ SetLastPoint(). void TGeoNavigator::SetLastPoint ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ). inline . Definition at line 179 of file TGeoNavigator.h. ◆ SetLastSafetyForPoint() [1/2]. void TGeoNavigator::SetLastSafetyForPoint ; (; Double_t ; safe, . const Double_t * ; point . ). inline . Definition at line 194 of file TGeoNavigator.h. ◆ SetLastSafetyForPoint() [2/2]. void TGeoNavigator::SetLastSafetyForPoint ; (; Double_t ; safe, . Double_t ; x, . Double_t ; y, . Double_t ; z . ). inline . Definition at line 199 of file TGeoNavigator.h. ◆ SetOutside(). void TGeoNavigator::SetOutside ; (; Bool_t ; flag = kTRUE). inline . Definition at line 148 of file TGeoNavigator.h. ◆ SetPWSafetyCaching(). static void TGeoNavigator::SetPWSafetyCaching ; (; Bool_t ; b). inlinestatic . Definition at line 231 of file TGeoNavigator.h. ◆ SetStartSafe(). void TGeoNavigator::SetStartSafe ; (; Bool_t ; flag = kTRUE). inline . Definition at line 136 of file TGeoNavigator.h. ◆ SetStep(). void TGeoNavigator::SetStep ; (; Double_t ; step). inline . Definition at line 137 of file TGeoNavigator.h. ◆ Step(). TGeoNode * TGeoNavigator::Step ; (; Bool_t ; is_geom = kTRUE, . Bool_t ; cross = kTRUE . ). Make a rectiliniar step of le",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:43447,Safety,safe,safe,43447,"ble_t * ; dir). inline . Definition at line 185 of file TGeoNavigator.h. ◆ SetCurrentDirection() [2/2]. void TGeoNavigator::SetCurrentDirection ; (; Double_t ; nx, . Double_t ; ny, . Double_t ; nz . ). inline . Definition at line 186 of file TGeoNavigator.h. ◆ SetCurrentPoint() [1/2]. void TGeoNavigator::SetCurrentPoint ; (; const Double_t * ; point). inline . Definition at line 172 of file TGeoNavigator.h. ◆ SetCurrentPoint() [2/2]. void TGeoNavigator::SetCurrentPoint ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ). inline . Definition at line 173 of file TGeoNavigator.h. ◆ SetLastPoint(). void TGeoNavigator::SetLastPoint ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ). inline . Definition at line 179 of file TGeoNavigator.h. ◆ SetLastSafetyForPoint() [1/2]. void TGeoNavigator::SetLastSafetyForPoint ; (; Double_t ; safe, . const Double_t * ; point . ). inline . Definition at line 194 of file TGeoNavigator.h. ◆ SetLastSafetyForPoint() [2/2]. void TGeoNavigator::SetLastSafetyForPoint ; (; Double_t ; safe, . Double_t ; x, . Double_t ; y, . Double_t ; z . ). inline . Definition at line 199 of file TGeoNavigator.h. ◆ SetOutside(). void TGeoNavigator::SetOutside ; (; Bool_t ; flag = kTRUE). inline . Definition at line 148 of file TGeoNavigator.h. ◆ SetPWSafetyCaching(). static void TGeoNavigator::SetPWSafetyCaching ; (; Bool_t ; b). inlinestatic . Definition at line 231 of file TGeoNavigator.h. ◆ SetStartSafe(). void TGeoNavigator::SetStartSafe ; (; Bool_t ; flag = kTRUE). inline . Definition at line 136 of file TGeoNavigator.h. ◆ SetStep(). void TGeoNavigator::SetStep ; (; Double_t ; step). inline . Definition at line 137 of file TGeoNavigator.h. ◆ Step(). TGeoNode * TGeoNavigator::Step ; (; Bool_t ; is_geom = kTRUE, . Bool_t ; cross = kTRUE . ). Make a rectiliniar step of length fStep from current point (fPoint) on current direction (fDirection). ; If the step is imposed by geometry, is_geom flag must be true (default). The cross flag specifies if the bound",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:47285,Safety,safe,safe,47285,Navigator.h. ◆ fDirection. Double_t TGeoNavigator::fDirection[3]. private . current point ; Definition at line 50 of file TGeoNavigator.h. ◆ fDivMatrix. TGeoHMatrix* TGeoNavigator::fDivMatrix. private . current pointer to cached global matrix ; Definition at line 83 of file TGeoNavigator.h. ◆ fForcedNode. TGeoNode* TGeoNavigator::fForcedNode. private . next node that will be crossed ; Definition at line 79 of file TGeoNavigator.h. ◆ fGeometry. TGeoManager* TGeoNavigator::fGeometry. private . flag that last geometric step was null ; Definition at line 72 of file TGeoNavigator.h. ◆ fGlobalMatrix. TGeoHMatrix* TGeoNavigator::fGlobalMatrix. private . current stored global matrix ; Definition at line 82 of file TGeoNavigator.h. ◆ fgUsePWSafetyCaching. Bool_t TGeoNavigator::fgUsePWSafetyCaching = kFALSE. staticprivate . path to current node ; Definition at line 86 of file TGeoNavigator.h. ◆ fIsEntering. Bool_t TGeoNavigator::fIsEntering. private . flag a safe start for point classification ; Definition at line 64 of file TGeoNavigator.h. ◆ fIsExiting. Bool_t TGeoNavigator::fIsExiting. private . flag if current step just got into a new node ; Definition at line 65 of file TGeoNavigator.h. ◆ fIsNullStep. Bool_t TGeoNavigator::fIsNullStep. private . flag that a new point is in the same node as previous ; Definition at line 71 of file TGeoNavigator.h. ◆ fIsOnBoundary. Bool_t TGeoNavigator::fIsOnBoundary. private . flag that current point is outside geometry ; Definition at line 69 of file TGeoNavigator.h. ◆ fIsOutside. Bool_t TGeoNavigator::fIsOutside. private . flag that next geometric step will exit current volume ; Definition at line 68 of file TGeoNavigator.h. ◆ fIsSameLocation. Bool_t TGeoNavigator::fIsSameLocation. private . flag that current point is on some boundary ; Definition at line 70 of file TGeoNavigator.h. ◆ fIsStepEntering. Bool_t TGeoNavigator::fIsStepEntering. private . flag that current track is about to leave current node ; Definition at line 66 of file T,MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:48868,Safety,safe,safety,48868,"tside. private . flag that next geometric step will exit current volume ; Definition at line 68 of file TGeoNavigator.h. ◆ fIsSameLocation. Bool_t TGeoNavigator::fIsSameLocation. private . flag that current point is on some boundary ; Definition at line 70 of file TGeoNavigator.h. ◆ fIsStepEntering. Bool_t TGeoNavigator::fIsStepEntering. private . flag that current track is about to leave current node ; Definition at line 66 of file TGeoNavigator.h. ◆ fIsStepExiting. Bool_t TGeoNavigator::fIsStepExiting. private . flag that next geometric step will enter new volume ; Definition at line 67 of file TGeoNavigator.h. ◆ fLastNode. TGeoNode* TGeoNavigator::fLastNode. private . top physical node ; Definition at line 77 of file TGeoNavigator.h. ◆ fLastPoint. Double_t TGeoNavigator::fLastPoint[3]. private . current direction ; Definition at line 51 of file TGeoNavigator.h. ◆ fLastPWSafety. Double_t TGeoNavigator::fLastPWSafety {-1}. private . last point for which parallel world safety was ""evaluated"" ; Definition at line 53 of file TGeoNavigator.h. ◆ fLastPWSaftyPnt. Double_t TGeoNavigator::fLastPWSaftyPnt[3]. private . last point for which safety was computed ; Definition at line 52 of file TGeoNavigator.h. ◆ fLastSafety. Double_t TGeoNavigator::fLastSafety. private . safety radius from current point ; Definition at line 45 of file TGeoNavigator.h. ◆ fLevel. Int_t TGeoNavigator::fLevel. private . thread id for this navigator ; Definition at line 55 of file TGeoNavigator.h. ◆ fNextDaughterIndex. Int_t TGeoNavigator::fNextDaughterIndex. private . number of overlapping nodes on current branch ; Definition at line 57 of file TGeoNavigator.h. ◆ fNextNode. TGeoNode* TGeoNavigator::fNextNode. private . last searched node ; Definition at line 78 of file TGeoNavigator.h. ◆ fNmany. Int_t TGeoNavigator::fNmany. private . current geometry level; ; Definition at line 56 of file TGeoNavigator.h. ◆ fNormal. Double_t TGeoNavigator::fNormal[3]. private . last computed safety radius ; Defini",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:49034,Safety,safe,safety,49034,"ation. private . flag that current point is on some boundary ; Definition at line 70 of file TGeoNavigator.h. ◆ fIsStepEntering. Bool_t TGeoNavigator::fIsStepEntering. private . flag that current track is about to leave current node ; Definition at line 66 of file TGeoNavigator.h. ◆ fIsStepExiting. Bool_t TGeoNavigator::fIsStepExiting. private . flag that next geometric step will enter new volume ; Definition at line 67 of file TGeoNavigator.h. ◆ fLastNode. TGeoNode* TGeoNavigator::fLastNode. private . top physical node ; Definition at line 77 of file TGeoNavigator.h. ◆ fLastPoint. Double_t TGeoNavigator::fLastPoint[3]. private . current direction ; Definition at line 51 of file TGeoNavigator.h. ◆ fLastPWSafety. Double_t TGeoNavigator::fLastPWSafety {-1}. private . last point for which parallel world safety was ""evaluated"" ; Definition at line 53 of file TGeoNavigator.h. ◆ fLastPWSaftyPnt. Double_t TGeoNavigator::fLastPWSaftyPnt[3]. private . last point for which safety was computed ; Definition at line 52 of file TGeoNavigator.h. ◆ fLastSafety. Double_t TGeoNavigator::fLastSafety. private . safety radius from current point ; Definition at line 45 of file TGeoNavigator.h. ◆ fLevel. Int_t TGeoNavigator::fLevel. private . thread id for this navigator ; Definition at line 55 of file TGeoNavigator.h. ◆ fNextDaughterIndex. Int_t TGeoNavigator::fNextDaughterIndex. private . number of overlapping nodes on current branch ; Definition at line 57 of file TGeoNavigator.h. ◆ fNextNode. TGeoNode* TGeoNavigator::fNextNode. private . last searched node ; Definition at line 78 of file TGeoNavigator.h. ◆ fNmany. Int_t TGeoNavigator::fNmany. private . current geometry level; ; Definition at line 56 of file TGeoNavigator.h. ◆ fNormal. Double_t TGeoNavigator::fNormal[3]. private . last computed safety radius ; Definition at line 46 of file TGeoNavigator.h. ◆ fOverlapClusters. Int_t* TGeoNavigator::fOverlapClusters. private . current recursive position in fOverlapClusters ; Definition a",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:49165,Safety,safe,safety,49165,"r::fIsStepEntering. private . flag that current track is about to leave current node ; Definition at line 66 of file TGeoNavigator.h. ◆ fIsStepExiting. Bool_t TGeoNavigator::fIsStepExiting. private . flag that next geometric step will enter new volume ; Definition at line 67 of file TGeoNavigator.h. ◆ fLastNode. TGeoNode* TGeoNavigator::fLastNode. private . top physical node ; Definition at line 77 of file TGeoNavigator.h. ◆ fLastPoint. Double_t TGeoNavigator::fLastPoint[3]. private . current direction ; Definition at line 51 of file TGeoNavigator.h. ◆ fLastPWSafety. Double_t TGeoNavigator::fLastPWSafety {-1}. private . last point for which parallel world safety was ""evaluated"" ; Definition at line 53 of file TGeoNavigator.h. ◆ fLastPWSaftyPnt. Double_t TGeoNavigator::fLastPWSaftyPnt[3]. private . last point for which safety was computed ; Definition at line 52 of file TGeoNavigator.h. ◆ fLastSafety. Double_t TGeoNavigator::fLastSafety. private . safety radius from current point ; Definition at line 45 of file TGeoNavigator.h. ◆ fLevel. Int_t TGeoNavigator::fLevel. private . thread id for this navigator ; Definition at line 55 of file TGeoNavigator.h. ◆ fNextDaughterIndex. Int_t TGeoNavigator::fNextDaughterIndex. private . number of overlapping nodes on current branch ; Definition at line 57 of file TGeoNavigator.h. ◆ fNextNode. TGeoNode* TGeoNavigator::fNextNode. private . last searched node ; Definition at line 78 of file TGeoNavigator.h. ◆ fNmany. Int_t TGeoNavigator::fNmany. private . current geometry level; ; Definition at line 56 of file TGeoNavigator.h. ◆ fNormal. Double_t TGeoNavigator::fNormal[3]. private . last computed safety radius ; Definition at line 46 of file TGeoNavigator.h. ◆ fOverlapClusters. Int_t* TGeoNavigator::fOverlapClusters. private . current recursive position in fOverlapClusters ; Definition at line 60 of file TGeoNavigator.h. ◆ fOverlapMark. Int_t TGeoNavigator::fOverlapMark. private . current size of fOverlapClusters ; Definition at lin",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:49862,Safety,safe,safety,49862,"uated"" ; Definition at line 53 of file TGeoNavigator.h. ◆ fLastPWSaftyPnt. Double_t TGeoNavigator::fLastPWSaftyPnt[3]. private . last point for which safety was computed ; Definition at line 52 of file TGeoNavigator.h. ◆ fLastSafety. Double_t TGeoNavigator::fLastSafety. private . safety radius from current point ; Definition at line 45 of file TGeoNavigator.h. ◆ fLevel. Int_t TGeoNavigator::fLevel. private . thread id for this navigator ; Definition at line 55 of file TGeoNavigator.h. ◆ fNextDaughterIndex. Int_t TGeoNavigator::fNextDaughterIndex. private . number of overlapping nodes on current branch ; Definition at line 57 of file TGeoNavigator.h. ◆ fNextNode. TGeoNode* TGeoNavigator::fNextNode. private . last searched node ; Definition at line 78 of file TGeoNavigator.h. ◆ fNmany. Int_t TGeoNavigator::fNmany. private . current geometry level; ; Definition at line 56 of file TGeoNavigator.h. ◆ fNormal. Double_t TGeoNavigator::fNormal[3]. private . last computed safety radius ; Definition at line 46 of file TGeoNavigator.h. ◆ fOverlapClusters. Int_t* TGeoNavigator::fOverlapClusters. private . current recursive position in fOverlapClusters ; Definition at line 60 of file TGeoNavigator.h. ◆ fOverlapMark. Int_t TGeoNavigator::fOverlapMark. private . current size of fOverlapClusters ; Definition at line 59 of file TGeoNavigator.h. ◆ fOverlapSize. Int_t TGeoNavigator::fOverlapSize. private . next daughter index after FindNextBoundary ; Definition at line 58 of file TGeoNavigator.h. ◆ fPath. TString TGeoNavigator::fPath. private . current local matrix of the selected division cell ; Definition at line 84 of file TGeoNavigator.h. ◆ fPoint. Double_t TGeoNavigator::fPoint[3]. private . unit vector to current checked shape ; Definition at line 49 of file TGeoNavigator.h. ◆ fSafety. Double_t TGeoNavigator::fSafety. private . step to be done from current point and direction ; Definition at line 44 of file TGeoNavigator.h. ◆ fSearchOverlaps. Bool_t TGeoNavigator::fSearchOverlaps",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:51273,Safety,safe,safety,51273,rmal. Double_t TGeoNavigator::fNormal[3]. private . last computed safety radius ; Definition at line 46 of file TGeoNavigator.h. ◆ fOverlapClusters. Int_t* TGeoNavigator::fOverlapClusters. private . current recursive position in fOverlapClusters ; Definition at line 60 of file TGeoNavigator.h. ◆ fOverlapMark. Int_t TGeoNavigator::fOverlapMark. private . current size of fOverlapClusters ; Definition at line 59 of file TGeoNavigator.h. ◆ fOverlapSize. Int_t TGeoNavigator::fOverlapSize. private . next daughter index after FindNextBoundary ; Definition at line 58 of file TGeoNavigator.h. ◆ fPath. TString TGeoNavigator::fPath. private . current local matrix of the selected division cell ; Definition at line 84 of file TGeoNavigator.h. ◆ fPoint. Double_t TGeoNavigator::fPoint[3]. private . unit vector to current checked shape ; Definition at line 49 of file TGeoNavigator.h. ◆ fSafety. Double_t TGeoNavigator::fSafety. private . step to be done from current point and direction ; Definition at line 44 of file TGeoNavigator.h. ◆ fSearchOverlaps. Bool_t TGeoNavigator::fSearchOverlaps. private . internal array for overlaps ; Definition at line 61 of file TGeoNavigator.h. ◆ fStartSafe. Bool_t TGeoNavigator::fStartSafe. private . flags the type of the current node ; Definition at line 63 of file TGeoNavigator.h. ◆ fStep. Double_t TGeoNavigator::fStep. private . Definition at line 43 of file TGeoNavigator.h. ◆ fThreadId. Int_t TGeoNavigator::fThreadId. private . last safety returned from parallel world (negative if invalid) ; Definition at line 54 of file TGeoNavigator.h. ◆ fTopNode. TGeoNode* TGeoNavigator::fTopNode. private . current node ; Definition at line 76 of file TGeoNavigator.h. Libraries for TGeoNavigator:. [legend]; The documentation for this class was generated from the following files:; geom/geom/inc/TGeoNavigator.h; geom/geom/src/TGeoNavigator.cxx. TGeoNavigator. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:06 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigator.html:12688,Security,hash,hash,12688," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoNavigator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigator.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:10397,Availability,error,error,10397,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:10486,Availability,error,error,10486,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:10641,Availability,error,error,10641," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:10938,Availability,error,error,10938,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:14415,Availability,error,error,14415," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObjArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclF",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:18636,Availability,error,error,18636," kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLo",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:10403,Integrability,message,message,10403,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:10944,Integrability,message,message,10944,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:11805,Integrability,message,message,11805,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:14421,Integrability,message,message,14421," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObjArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclF",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:14794,Integrability,message,message,14794," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObjArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject ",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:905,Modifiability,inherit,inherited,905,". ROOT: TGeoNavigatorArray Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TGeoNavigatorArray Class Reference. . Definition at line 294 of file TGeoNavigator.h. Public Member Functions;  TGeoNavigatorArray ();  ;  TGeoNavigatorArray (TGeoManager *mgr);  ;  ~TGeoNavigatorArray () override;  ; TGeoNavigator * AddNavigator ();  Add a new navigator to the array. ;  ; TGeoNavigator * GetCurrentNavigator () const;  ; TClass * IsA () const override;  ; TGeoNavigator * SetCurrentNavigator (Int_t inav);  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObjArray;  TObjArray (const TObjArray &a);  Create a copy of TObjArray a. Note, does not copy the kIsOwner flag. ;  ;  TObjArray (Int_t s=TCollection::kInitCapacity, Int_t lowerBound=0);  Create an object array. ;  ; virtual ~TObjArray ();  Delete an array. ;  ; void Add (TObject *obj) override;  ; void AddAfter (const TObject *after, TObject *obj) override;  Add object in the slot after object after. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Add object at position ids. ;  ; virtual void AddAtAndExpand (TObject *obj, Int_t idx);  Add object at position idx. ;  ; virtual Int_t AddAtFree (TObject *obj);  Return the position of the new object. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Add object in the slot before object before. ;  ; void AddFirst (TObject *obj) override;  Add object in the first slot of the array. ;  ; void AddLast (TObject *obj) override;  Add object in the next empty slot in the array. ;  ; TObject * After (const TObject *obj) const override;  Return the object after obj. Returns 0 if obj is last object. ;  ; ",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:5012,Modifiability,inherit,inherited,5012,"oid Randomize (Int_t ntimes=1);  Randomize objects inside the array, i.e. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from array. ;  ; TObject * RemoveAt (Int_t idx) override;  Remove object at index idx. ;  ; virtual void RemoveRange (Int_t idx1, Int_t idx2);  Remove objects from index idx1 to idx2 included. ;  ; void SetLast (Int_t last);  Set index of last object in array, effectively truncating the array. ;  ; virtual void Sort (Int_t upto=kMaxInt);  If objects in array are sortable (i.e. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the array to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TObject * UncheckedAt (Int_t i) const;  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; vo",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:5695,Modifiability,inherit,inherited,5695,"ting the array. ;  ; virtual void Sort (Int_t upto=kMaxInt);  If objects in array are sortable (i.e. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the array to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TObject * UncheckedAt (Int_t i) const;  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:6041,Modifiability,inherit,inherit,6041,"ons inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for th",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:9197,Modifiability,inherit,inherited,9197," the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:10102,Modifiability,inherit,inheritance,10102," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:11903,Modifiability,inherit,inherits,11903,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:12020,Modifiability,inherit,inherits,12020,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:15027,Modifiability,inherit,inherited,15027,"rawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObjArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do ",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:15240,Modifiability,inherit,inherited,15240,"rawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObjArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do ",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:15935,Modifiability,inherit,inherited,15935,"Public Member Functions inherited from TObjArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoN",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:16486,Modifiability,inherit,inherited,16486,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoNavigatorArray (const TGeoNavigatorArray &)=delete;  ; TGeoNavigatorArray & operator= (const TGeoNavigatorArray &)=delete;  . Private Attributes; TGeoNavigator * fCurrentNavigator;  ; TGeoManager * fGeoManager;  . Additional Inherited Members;  Public Types inherited from TObjArray; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; ,",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:17261,Modifiability,inherit,inherited,17261,";  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoNavigatorArray (const TGeoNavigatorArray &)=delete;  ; TGeoNavigatorArray & operator= (const TGeoNavigatorArray &)=delete;  . Private Attributes; TGeoNavigator * fCurrentNavigator;  ; TGeoManager * fGeoManager;  . Additional Inherited Members;  Public Types inherited from TObjArray; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:17338,Modifiability,inherit,inherited,17338,";  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoNavigatorArray (const TGeoNavigatorArray &)=delete;  ; TGeoNavigatorArray & operator= (const TGeoNavigatorArray &)=delete;  . Private Attributes; TGeoNavigator * fCurrentNavigator;  ; TGeoManager * fGeoManager;  . Additional Inherited Members;  Public Types inherited from TObjArray; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:17445,Modifiability,inherit,inherited,17445,";  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoNavigatorArray (const TGeoNavigatorArray &)=delete;  ; TGeoNavigatorArray & operator= (const TGeoNavigatorArray &)=delete;  . Private Attributes; TGeoNavigator * fCurrentNavigator;  ; TGeoManager * fGeoManager;  . Additional Inherited Members;  Public Types inherited from TObjArray; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:18086,Modifiability,inherit,inherited,18086,"ed from TObjArray; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the coll",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:18219,Modifiability,inherit,inherited,18219,"ed from TObjArray; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the coll",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:18318,Modifiability,inherit,inherited,18318,"ed from TObjArray; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the coll",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:18698,Modifiability,inherit,inherited,18698,"leanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigatorArray:. This brow",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:18808,Modifiability,inherit,inherited,18808,"leanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigatorArray:. This brow",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:19316,Modifiability,inherit,inherited,19316,"re, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigatorArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNavigatorArray() [1/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; const TGeoNavigatorArray & ; ). privatedelete . ◆ TGeoNavigatorArray() [2/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; ). inline . Definition at line 303 of file TGeoNavigator.h. ◆ TGeoNavigatorArray() [3/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; TGeoManager * ; mgr). inline . Definition at line 304 of",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:19521,Modifiability,inherit,inherited,19521,";  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigatorArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNavigatorArray() [1/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; const TGeoNavigatorArray & ; ). privatedelete . ◆ TGeoNavigatorArray() [2/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; ). inline . Definition at line 303 of file TGeoNavigator.h. ◆ TGeoNavigatorArray() [3/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; TGeoManager * ; mgr). inline . Definition at line 304 of file TGeoNavigator.h. ◆ ~TGeoNavigatorArray(). TGeoNavigatorArray::~TGeoNavigatorArray ; (; ). inlineoverride . Definition at line 305 of file TGeoNavigator.h. Member F",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:19647,Modifiability,inherit,inherited,19647,"nherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigatorArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNavigatorArray() [1/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; const TGeoNavigatorArray & ; ). privatedelete . ◆ TGeoNavigatorArray() [2/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; ). inline . Definition at line 303 of file TGeoNavigator.h. ◆ TGeoNavigatorArray() [3/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; TGeoManager * ; mgr). inline . Definition at line 304 of file TGeoNavigator.h. ◆ ~TGeoNavigatorArray(). TGeoNavigatorArray::~TGeoNavigatorArray ; (; ). inlineoverride . Definition at line 305 of file TGeoNavigator.h. Member Function Documentation. ◆ AddNavigator(). TGeoNavigator * TGeoNavigatorArray::AddNavigator ; (; ). Add a new navigator to the array. ; Definition at line 27",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:19719,Modifiability,inherit,inherited,19719,"nherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigatorArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNavigatorArray() [1/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; const TGeoNavigatorArray & ; ). privatedelete . ◆ TGeoNavigatorArray() [2/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; ). inline . Definition at line 303 of file TGeoNavigator.h. ◆ TGeoNavigatorArray() [3/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; TGeoManager * ; mgr). inline . Definition at line 304 of file TGeoNavigator.h. ◆ ~TGeoNavigatorArray(). TGeoNavigatorArray::~TGeoNavigatorArray ; (; ). inlineoverride . Definition at line 305 of file TGeoNavigator.h. Member Function Documentation. ◆ AddNavigator(). TGeoNavigator * TGeoNavigatorArray::AddNavigator ; (; ). Add a new navigator to the array. ; Definition at line 27",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:19024,Performance,perform,perform,19024,"leanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigatorArray:. This brow",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:8903,Safety,safe,safe,8903,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:6992,Security,hash,hash,6992,"lass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (O",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:8538,Security,access,accessible,8538," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:8878,Security,access,access,8878,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNavigatorArray.html:16350,Security,access,accessible,16350,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoNavigatorArray (const TGeoNavigatorArray &)=delete;  ; TGeoNavigatorArray & operator= (const TGeoNavigatorArray &)=delete;  . Private Attributes; TGeoNavigator * fCurrentNavigator;  ; TGeoManager * fGeoManager;  . Additional Inherited Members;  Public Types inherited from TObjArray; typedef TObjArrayIter Iterator_t;  ;  ",MatchSource.WIKI,doc/master/classTGeoNavigatorArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html
https://root.cern/doc/master/classTGeoNode.html:13739,Availability,error,error,13739,"tructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:13828,Availability,error,error,13828,"n ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return t",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:13983,Availability,error,error,13983,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:14160,Availability,error,error,14160,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:17858,Availability,error,error,17858,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; B",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:8788,Deployability,A/B,A/B,8788,"t a copy of the framework extension pointer. ;  ; TGeoExtension * GrabUserExtension () const;  Get a copy of the user extension pointer. ;  ; void InspectNode () const;  Inspect this node. ;  ; TClass * IsA () const override;  ; Bool_t IsCloned () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOffset () const;  ; Bool_t IsOnScreen () const;  check if this node is drawn. Assumes that this node is current ;  ; Bool_t IsOverlapping () const;  ; Bool_t IsVirtual () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; virtual void LocalToMaster (const Double_t *local, Double_t *master) const;  Convert the point coordinates from local reference system to mother reference. ;  ; virtual void LocalToMasterVect (const Double_t *local, Double_t *master) const;  Convert a vector from local reference system to mother reference. ;  ; void ls (Option_t *option="""") const override;  Print the path (A/B/C/...) to this node on stdout. ;  ; virtual TGeoNode * MakeCopyNode () const;  ; virtual void MasterToLocal (const Double_t *master, Double_t *local) const;  Convert the point coordinates from mother reference to local reference system. ;  ; virtual void MasterToLocalVect (const Double_t *master, Double_t *local) const;  Convert a vector from mother reference to local reference system. ;  ; Bool_t MayOverlap (Int_t iother) const;  Check the overlab between the bounding box of the node overlaps with the one the brother with index IOTHER. ;  ; void Paint (Option_t *option="""") override;  Paint this node and its content according to visualization settings. ;  ; void PrintCandidates () const;  print daughters candidates for containing current point ;  ; void PrintOverlaps () const;  print possible overlapping nodes ;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const;  computes the closest distance from given point to this shape ;  ; void Sa",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:31266,Deployability,A/B,A/B,31266,"rlapping ; (; ); const. inline . Definition at line 107 of file TGeoNode.h. ◆ IsVirtual(). Bool_t TGeoNode::IsVirtual ; (; ); const. inline . Definition at line 108 of file TGeoNode.h. ◆ IsVisDaughters(). Bool_t TGeoNode::IsVisDaughters ; (; ); const. inline . Definition at line 110 of file TGeoNode.h. ◆ IsVisible(). Bool_t TGeoNode::IsVisible ; (; ); const. inline . Definition at line 109 of file TGeoNode.h. ◆ LocalToMaster(). void TGeoNode::LocalToMaster ; (; const Double_t * ; local, . Double_t * ; master . ); const. virtual . Convert the point coordinates from local reference system to mother reference. ; Definition at line 584 of file TGeoNode.cxx. ◆ LocalToMasterVect(). void TGeoNode::LocalToMasterVect ; (; const Double_t * ; local, . Double_t * ; master . ); const. virtual . Convert a vector from local reference system to mother reference. ; Definition at line 592 of file TGeoNode.cxx. ◆ ls(). void TGeoNode::ls ; (; Option_t * ; option = """"); const. overridevirtual . Print the path (A/B/C/...) to this node on stdout. ; Reimplemented from TObject.; Definition at line 600 of file TGeoNode.cxx. ◆ MakeCopyNode(). virtual TGeoNode * TGeoNode::MakeCopyNode ; (; ); const. inlinevirtual . Reimplemented in TGeoNodeMatrix, and TGeoNodeOffset.; Definition at line 113 of file TGeoNode.h. ◆ MasterToLocal(). void TGeoNode::MasterToLocal ; (; const Double_t * ; master, . Double_t * ; local . ); const. virtual . Convert the point coordinates from mother reference to local reference system. ; Definition at line 568 of file TGeoNode.cxx. ◆ MasterToLocalVect(). void TGeoNode::MasterToLocalVect ; (; const Double_t * ; master, . Double_t * ; local . ); const. virtual . Convert a vector from mother reference to local reference system. ; Definition at line 576 of file TGeoNode.cxx. ◆ MayOverlap(). Bool_t TGeoNode::MayOverlap ; (; Int_t ; iother); const. Check the overlab between the bounding box of the node overlaps with the one the brother with index IOTHER. ; Definition at line 5",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:33858,Deployability,release,released,33858,"possible overlapping nodes ; Definition at line 667 of file TGeoNode.cxx. ◆ Safety(). Double_t TGeoNode::Safety ; (; const Double_t * ; point, . Bool_t ; in = kTRUE . ); const. computes the closest distance from given point to this shape ; Definition at line 684 of file TGeoNode.cxx. ◆ SaveAttributes(). void TGeoNode::SaveAttributes ; (; std::ostream & ; out). save attributes for this node ; Definition at line 439 of file TGeoNode.cxx. ◆ SetAllInvisible(). void TGeoNode::SetAllInvisible ; (; ). inline . Definition at line 124 of file TGeoNode.h. ◆ SetCloned(). void TGeoNode::SetCloned ; (; Bool_t ; flag = kTRUE). inline . Definition at line 119 of file TGeoNode.h. ◆ SetCurrentPoint(). void TGeoNode::SetCurrentPoint ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ). inline . Definition at line 116 of file TGeoNode.h. ◆ SetFWExtension(). void TGeoNode::SetFWExtension ; (; TGeoExtension * ; ext). Connect framework defined extension to the node. ; The node ""grabs"" a copy, so the original object can be released by the producer. Release the previously connected extension if any.; NOTE: This interface is intended for the use by TGeo and the users should NOT connect extensions using this method ; Definition at line 518 of file TGeoNode.cxx. ◆ SetInvisible(). void TGeoNode::SetInvisible ; (; ). inline . Definition at line 123 of file TGeoNode.h. ◆ SetMotherVolume(). void TGeoNode::SetMotherVolume ; (; TGeoVolume * ; mother). inline . Definition at line 125 of file TGeoNode.h. ◆ SetNumber(). void TGeoNode::SetNumber ; (; Int_t ; number). inline . Definition at line 118 of file TGeoNode.h. ◆ SetOverlapping(). void TGeoNode::SetOverlapping ; (; Bool_t ; flag = kTRUE). inline . Definition at line 120 of file TGeoNode.h. ◆ SetOverlaps(). void TGeoNode::SetOverlaps ; (; Int_t * ; ovlp, . Int_t ; novlp . ). set the list of overlaps for this node (ovlp must be created with operator new) ; Definition at line 707 of file TGeoNode.cxx. ◆ SetUserExtension(). void TGeoNode::SetUserExt",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:34979,Deployability,release,released,34979,"tended for the use by TGeo and the users should NOT connect extensions using this method ; Definition at line 518 of file TGeoNode.cxx. ◆ SetInvisible(). void TGeoNode::SetInvisible ; (; ). inline . Definition at line 123 of file TGeoNode.h. ◆ SetMotherVolume(). void TGeoNode::SetMotherVolume ; (; TGeoVolume * ; mother). inline . Definition at line 125 of file TGeoNode.h. ◆ SetNumber(). void TGeoNode::SetNumber ; (; Int_t ; number). inline . Definition at line 118 of file TGeoNode.h. ◆ SetOverlapping(). void TGeoNode::SetOverlapping ; (; Bool_t ; flag = kTRUE). inline . Definition at line 120 of file TGeoNode.h. ◆ SetOverlaps(). void TGeoNode::SetOverlaps ; (; Int_t * ; ovlp, . Int_t ; novlp . ). set the list of overlaps for this node (ovlp must be created with operator new) ; Definition at line 707 of file TGeoNode.cxx. ◆ SetUserExtension(). void TGeoNode::SetUserExtension ; (; TGeoExtension * ; ext). Connect user-defined extension to the node. ; The node ""grabs"" a copy, so the original object can be released by the producer. Release the previously connected extension if any.; NOTE: This interface is intended for user extensions and is guaranteed not to be used by TGeo ; Definition at line 500 of file TGeoNode.cxx. ◆ SetVirtual(). void TGeoNode::SetVirtual ; (; ). inline . Definition at line 121 of file TGeoNode.h. ◆ SetVisibility(). void TGeoNode::SetVisibility ; (; Bool_t ; vis = kTRUE). overridevirtual . Set visibility of the node (obsolete). ; Reimplemented from TGeoAtt.; Definition at line 718 of file TGeoNode.cxx. ◆ SetVolume(). void TGeoNode::SetVolume ; (; TGeoVolume * ; volume). inline . Definition at line 117 of file TGeoNode.h. ◆ Streamer(). void TGeoNode::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TGeoNodeMatrix, and TGeoNodeOffset. ◆ StreamerNVirtual(). void TGeoNode::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 145 o",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:13745,Integrability,message,message,13745,"tructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:14166,Integrability,message,message,14166,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:15024,Integrability,message,message,15024," this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:17864,Integrability,message,message,17864,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; B",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:18237,Integrability,message,message,18237," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; Bool_t IsVisContainers () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; Bool_t IsVisLeaves () const;  ; Bool_t IsVisOnly () const;  ; Bool_t IsVisRaytrace () const;  ; Bool_t IsVisStreamed () const;  ; Bool_t IsVisTouched () const;  ; void ResetAttBit (UInt_t f);  ; void SetActiveDaughters (Bool_t flag=kTRUE);  ; void SetActivity (Bool_t flag=kT",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:33947,Integrability,interface,interface,33947,"nst. computes the closest distance from given point to this shape ; Definition at line 684 of file TGeoNode.cxx. ◆ SaveAttributes(). void TGeoNode::SaveAttributes ; (; std::ostream & ; out). save attributes for this node ; Definition at line 439 of file TGeoNode.cxx. ◆ SetAllInvisible(). void TGeoNode::SetAllInvisible ; (; ). inline . Definition at line 124 of file TGeoNode.h. ◆ SetCloned(). void TGeoNode::SetCloned ; (; Bool_t ; flag = kTRUE). inline . Definition at line 119 of file TGeoNode.h. ◆ SetCurrentPoint(). void TGeoNode::SetCurrentPoint ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ). inline . Definition at line 116 of file TGeoNode.h. ◆ SetFWExtension(). void TGeoNode::SetFWExtension ; (; TGeoExtension * ; ext). Connect framework defined extension to the node. ; The node ""grabs"" a copy, so the original object can be released by the producer. Release the previously connected extension if any.; NOTE: This interface is intended for the use by TGeo and the users should NOT connect extensions using this method ; Definition at line 518 of file TGeoNode.cxx. ◆ SetInvisible(). void TGeoNode::SetInvisible ; (; ). inline . Definition at line 123 of file TGeoNode.h. ◆ SetMotherVolume(). void TGeoNode::SetMotherVolume ; (; TGeoVolume * ; mother). inline . Definition at line 125 of file TGeoNode.h. ◆ SetNumber(). void TGeoNode::SetNumber ; (; Int_t ; number). inline . Definition at line 118 of file TGeoNode.h. ◆ SetOverlapping(). void TGeoNode::SetOverlapping ; (; Bool_t ; flag = kTRUE). inline . Definition at line 120 of file TGeoNode.h. ◆ SetOverlaps(). void TGeoNode::SetOverlaps ; (; Int_t * ; ovlp, . Int_t ; novlp . ). set the list of overlaps for this node (ovlp must be created with operator new) ; Definition at line 707 of file TGeoNode.cxx. ◆ SetUserExtension(). void TGeoNode::SetUserExtension ; (; TGeoExtension * ; ext). Connect user-defined extension to the node. ; The node ""grabs"" a copy, so the original object can be released by the producer. Release t",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:35068,Integrability,interface,interface,35068,"oNode::SetInvisible ; (; ). inline . Definition at line 123 of file TGeoNode.h. ◆ SetMotherVolume(). void TGeoNode::SetMotherVolume ; (; TGeoVolume * ; mother). inline . Definition at line 125 of file TGeoNode.h. ◆ SetNumber(). void TGeoNode::SetNumber ; (; Int_t ; number). inline . Definition at line 118 of file TGeoNode.h. ◆ SetOverlapping(). void TGeoNode::SetOverlapping ; (; Bool_t ; flag = kTRUE). inline . Definition at line 120 of file TGeoNode.h. ◆ SetOverlaps(). void TGeoNode::SetOverlaps ; (; Int_t * ; ovlp, . Int_t ; novlp . ). set the list of overlaps for this node (ovlp must be created with operator new) ; Definition at line 707 of file TGeoNode.cxx. ◆ SetUserExtension(). void TGeoNode::SetUserExtension ; (; TGeoExtension * ; ext). Connect user-defined extension to the node. ; The node ""grabs"" a copy, so the original object can be released by the producer. Release the previously connected extension if any.; NOTE: This interface is intended for user extensions and is guaranteed not to be used by TGeo ; Definition at line 500 of file TGeoNode.cxx. ◆ SetVirtual(). void TGeoNode::SetVirtual ; (; ). inline . Definition at line 121 of file TGeoNode.h. ◆ SetVisibility(). void TGeoNode::SetVisibility ; (; Bool_t ; vis = kTRUE). overridevirtual . Set visibility of the node (obsolete). ; Reimplemented from TGeoAtt.; Definition at line 718 of file TGeoNode.cxx. ◆ SetVolume(). void TGeoNode::SetVolume ; (; TGeoVolume * ; volume). inline . Definition at line 117 of file TGeoNode.h. ◆ Streamer(). void TGeoNode::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TGeoNodeMatrix, and TGeoNodeOffset. ◆ StreamerNVirtual(). void TGeoNode::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 145 of file TGeoNode.h. ◆ VisibleDaughters(). void TGeoNode::VisibleDaughters ; (; Bool_t ; vis = kTRUE). Set visibility of the daughters (obsolete). ; Definition at ",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:4145,Modifiability,inherit,inherited,4145," a similar prototype:; TGeoVolume::AddNodeOverlap(same arguments);; TGeoVolume::AddNodeOverlapvirtual void AddNodeOverlap(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")Add a TGeoNode to the list of nodes.Definition TGeoVolume.cxx:1044; When closing the geometry, overlapping nodes perform a check of possible overlaps with their neighbours. These are stored and checked all the time during navigation, therefore navigation is slower when embedding such nodes into geometry.; Node have visualization attributes as volume have. When undefined by users, painting a node on a pad will take the corresponding volume attributes. Definition at line 39 of file TGeoNode.h. Public Types; enum  { ;   kGeoNodeMatrix = (1ULL << ( 14 )); , kGeoNodeOffset = (1ULL << ( 15 )); , kGeoNodeVC = (1ULL << ( 16 )); , kGeoNodeOverlap = (1ULL << ( 17 )); , ;   kGeoNodeCloned = (1ULL << ( 18 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:4783,Modifiability,inherit,inherited,4783,"x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  . Public Member Functions;  TGeoNode ();  Default constructor. ;  ;  TGeoNode (const TGeoVolume *vol);  Constructor. ;  ;  ~TGeoNode () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  How-to-browse for a node. ;  ; virtual void cd () const;  ; void CheckOverlaps (Double_t ovlp=0.1, Option_t *option="""");  Check overlaps bigger than OVLP hierarchically, starting with this node. ;  ; void CheckShapes ();  check for wrong parameters in shapes ;  ; Int_t CountDaughters (Bool_t unique_volumes=kFALSE);  Returns the numb",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:10842,Modifiability,inherit,inherited,10842,"oid SetCurrentPoint (Double_t x, Double_t y, Double_t z);  ; void SetFWExtension (TGeoExtension *ext);  Connect framework defined extension to the node. ;  ; void SetInvisible ();  ; void SetMotherVolume (TGeoVolume *mother);  ; void SetNumber (Int_t number);  ; void SetOverlapping (Bool_t flag=kTRUE);  ; void SetOverlaps (Int_t *ovlp, Int_t novlp);  set the list of overlaps for this node (ovlp must be created with operator new) ;  ; void SetUserExtension (TGeoExtension *ext);  Connect user-defined extension to the node. ;  ; void SetVirtual ();  ; void SetVisibility (Bool_t vis=kTRUE) override;  Set visibility of the node (obsolete). ;  ; void SetVolume (TGeoVolume *volume);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void VisibleDaughters (Bool_t vis=kTRUE);  Set visibility of the daughters (obsolete). ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:12582,Modifiability,inherit,inherited,12582,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gRO",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:13375,Modifiability,inherit,inheritance,13375,"he TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:15122,Modifiability,inherit,inherits,15122,"l (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:15239,Modifiability,inherit,inherits,15239," (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:18544,Modifiability,inherit,inherited,18544,"id SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; Bool_t IsVisContainers () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; Bool_t IsVisLeaves () const;  ; Bool_t IsVisOnly () const;  ; Bool_t IsVisRaytrace () const;  ; Bool_t IsVisStreamed () const;  ; Bool_t IsVisTouched () const;  ; void ResetAttBit (UInt_t f);  ; void SetActiveDaughters (Bool_t flag=kTRUE);  ; void SetActivity (Bool_t flag=kTRUE);  ; void SetAttBit (UInt_t f);  ; void SetAttBit (UInt_t f, Bool_t set);  ; void SetOptimization (Option_t *option);  Set optimization flags. ;  ; void SetVisBranch ();  Set branch type visibility. ;  ; virtual void SetVisContainers (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisDaughters (Bool_t vis=kTR",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:20305,Modifiability,inherit,inherited,20305,"visibility. ;  ; virtual void SetVisContainers (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttBit (UInt_t f) const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int l",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:20515,Modifiability,inherit,inherited,20515,"visibility. ;  ; virtual void SetVisContainers (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttBit (UInt_t f) const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int l",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:21033,Modifiability,inherit,inherited,21033,"ber Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . Private Member Functions;  TGeoNode (const TGeoNode &)=delete;  ; TGeoNode & operator= (const TGeoNo",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:21370,Modifiability,inherit,inherited,21370,"rsion ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . Private Member Functions;  TGeoNode (const TGeoNode &)=delete;  ; TGeoNode & operator= (const TGeoNode &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoNode.h>. Inheritance diagram for TGeoNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ an",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:21878,Modifiability,inherit,inherited,21878," static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . Private Member Functions;  TGeoNode (const TGeoNode &)=delete;  ; TGeoNode & operator= (const TGeoNode &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoNode.h>. Inheritance diagram for TGeoNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkGeoNodeMatrix ; kGeoNodeOffset ; kGeoNodeVC ; kGeoNodeOverlap ; kGeoNodeCloned . Definition at line 56 of file TGeoNode.h. Constructor & Destructor Documentation. ◆ TGeoNode() [1/3]. TGeoNode::TGeoNode ; (; const TGeoNode & ; ). privatedelete . ◆ TGeoNode() [2/3]. TGeoNode::TGeoNode ; (; ). Default constructor. ; Definition at line 95 of file TGeoNode.cxx. ◆",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:21960,Modifiability,inherit,inherited,21960," static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . Private Member Functions;  TGeoNode (const TGeoNode &)=delete;  ; TGeoNode & operator= (const TGeoNode &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoNode.h>. Inheritance diagram for TGeoNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkGeoNodeMatrix ; kGeoNodeOffset ; kGeoNodeVC ; kGeoNodeOverlap ; kGeoNodeCloned . Definition at line 56 of file TGeoNode.h. Constructor & Destructor Documentation. ◆ TGeoNode() [1/3]. TGeoNode::TGeoNode ; (; const TGeoNode & ; ). privatedelete . ◆ TGeoNode() [2/3]. TGeoNode::TGeoNode ; (; ). Default constructor. ; Definition at line 95 of file TGeoNode.cxx. ◆",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:22167,Modifiability,inherit,inherited,22167," const char * DeclFileName ();  . Protected Member Functions; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . Private Member Functions;  TGeoNode (const TGeoNode &)=delete;  ; TGeoNode & operator= (const TGeoNode &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoNode.h>. Inheritance diagram for TGeoNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkGeoNodeMatrix ; kGeoNodeOffset ; kGeoNodeVC ; kGeoNodeOverlap ; kGeoNodeCloned . Definition at line 56 of file TGeoNode.h. Constructor & Destructor Documentation. ◆ TGeoNode() [1/3]. TGeoNode::TGeoNode ; (; const TGeoNode & ; ). privatedelete . ◆ TGeoNode() [2/3]. TGeoNode::TGeoNode ; (; ). Default constructor. ; Definition at line 95 of file TGeoNode.cxx. ◆ TGeoNode() [3/3]. TGeoNode::TGeoNode ; (; const TGeoVolume * ; vol). Constructor. ; Definition at line 109 of file TGeoNode.cxx. ◆ ~TGeoNode(). TGeoNode::~TGeoNode ; (; ). override . Destructor. ; Definition at line 130 of file TGeoNode.cxx. Member Function Documentation. ◆ Browse(). void TGeoNode::Browse ; (; TBrowser * ; b). overridevirtual .",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:3531,Performance,perform,perform,3531,"se.; Nodes can be declared as ""overlapping"" in case they do overlap with other nodes inside the same container or extrude this container. Non-overlapping nodes can be created with:; TGeoVolume::AddNode(TGeoVolume *daughter, Int_t copy_No, TGeoMatrix *matr);; TGeoMatrixGeometrical transformation package.Definition TGeoMatrix.h:38; TGeoVolumeTGeoVolume, TGeoVolumeMulti, TGeoVolumeAssembly are the volume classes.Definition TGeoVolume.h:43; TGeoVolume::AddNodevirtual TGeoNode * AddNode(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")Add a TGeoNode to the list of nodes.Definition TGeoVolume.cxx:975; int; The creation of overlapping nodes can be done with a similar prototype:; TGeoVolume::AddNodeOverlap(same arguments);; TGeoVolume::AddNodeOverlapvirtual void AddNodeOverlap(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")Add a TGeoNode to the list of nodes.Definition TGeoVolume.cxx:1044; When closing the geometry, overlapping nodes perform a check of possible overlaps with their neighbours. These are stored and checked all the time during navigation, therefore navigation is slower when embedding such nodes into geometry.; Node have visualization attributes as volume have. When undefined by users, painting a node on a pad will take the corresponding volume attributes. Definition at line 39 of file TGeoNode.h. Public Types; enum  { ;   kGeoNodeMatrix = (1ULL << ( 14 )); , kGeoNodeOffset = (1ULL << ( 15 )); , kGeoNodeVC = (1ULL << ( 16 )); , kGeoNodeOverlap = (1ULL << ( 17 )); , ;   kGeoNodeCloned = (1ULL << ( 18 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelet",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:19356,Performance,optimiz,optimization,19356,"alled when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; Bool_t IsVisContainers () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; Bool_t IsVisLeaves () const;  ; Bool_t IsVisOnly () const;  ; Bool_t IsVisRaytrace () const;  ; Bool_t IsVisStreamed () const;  ; Bool_t IsVisTouched () const;  ; void ResetAttBit (UInt_t f);  ; void SetActiveDaughters (Bool_t flag=kTRUE);  ; void SetActivity (Bool_t flag=kTRUE);  ; void SetAttBit (UInt_t f);  ; void SetAttBit (UInt_t f, Bool_t set);  ; void SetOptimization (Option_t *option);  Set optimization flags. ;  ; void SetVisBranch ();  Set branch type visibility. ;  ; virtual void SetVisContainers (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttB",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:11710,Security,hash,hash,11710,"_StreamerNVirtual_b);  ; void VisibleDaughters (Bool_t vis=kTRUE);  Set visibility of the daughters (obsolete). ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:1358,Testability,log,logical,1358,"Geometry classes. ; A node represent a volume positioned inside another.They store links to both volumes and to the TGeoMatrix representing the relative positioning. ; Node are never instantiated directly by users, but created as a result of volume operations. Adding a volume named A with a given user ID inside a volume B will create a node node named A_ID. This will be added to the list of nodes stored by B. Also, when applying a division operation in N slices to a volume A, a list of nodes B_1, B_2, ..., B_N is also created. A node B_i does not represent a unique object in the geometry because its container A might be at its turn positioned as node inside several other volumes. Only when a complete branch of nodes is fully defined up to the top node in the geometry, a given path like:; /TOP_1/.../A_3/B_7 will represent an unique object.; Its global transformation matrix can be computed as the pile-up of all local transformations in its branch. We will therefore call ""logical graph"" the hierarchy defined by nodes and volumes. The expansion of the logical graph by all possible paths defines a tree structure where all nodes are unique ""touchable"" objects. We will call this the ""physical tree"". Unlike the logical graph, the physical tree can become a huge structure with several milions of nodes in case of complex geometries, therefore it is not always a good idea to keep it transient in memory. Since a the logical and physical structures are correlated, the modeller rather keeps track only of the current branch, updating the current global matrix at each change of the level in geometry. The current physical node is not an object that can be asked for at a given moment, but rather represented by the combination: current node + current global matrix. However, physical nodes have unique ID's that can be retrieved for a given modeler state. These can be fed back to the modeler in order to force a physical node to become current. The advantage of this comes from the fact th",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:1438,Testability,log,logical,1438,"d to the TGeoMatrix representing the relative positioning. ; Node are never instantiated directly by users, but created as a result of volume operations. Adding a volume named A with a given user ID inside a volume B will create a node node named A_ID. This will be added to the list of nodes stored by B. Also, when applying a division operation in N slices to a volume A, a list of nodes B_1, B_2, ..., B_N is also created. A node B_i does not represent a unique object in the geometry because its container A might be at its turn positioned as node inside several other volumes. Only when a complete branch of nodes is fully defined up to the top node in the geometry, a given path like:; /TOP_1/.../A_3/B_7 will represent an unique object.; Its global transformation matrix can be computed as the pile-up of all local transformations in its branch. We will therefore call ""logical graph"" the hierarchy defined by nodes and volumes. The expansion of the logical graph by all possible paths defines a tree structure where all nodes are unique ""touchable"" objects. We will call this the ""physical tree"". Unlike the logical graph, the physical tree can become a huge structure with several milions of nodes in case of complex geometries, therefore it is not always a good idea to keep it transient in memory. Since a the logical and physical structures are correlated, the modeller rather keeps track only of the current branch, updating the current global matrix at each change of the level in geometry. The current physical node is not an object that can be asked for at a given moment, but rather represented by the combination: current node + current global matrix. However, physical nodes have unique ID's that can be retrieved for a given modeler state. These can be fed back to the modeler in order to force a physical node to become current. The advantage of this comes from the fact that all navigation queries check first the current node, therefore knowing the location of a point in the g",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:1597,Testability,log,logical,1597,"a volume B will create a node node named A_ID. This will be added to the list of nodes stored by B. Also, when applying a division operation in N slices to a volume A, a list of nodes B_1, B_2, ..., B_N is also created. A node B_i does not represent a unique object in the geometry because its container A might be at its turn positioned as node inside several other volumes. Only when a complete branch of nodes is fully defined up to the top node in the geometry, a given path like:; /TOP_1/.../A_3/B_7 will represent an unique object.; Its global transformation matrix can be computed as the pile-up of all local transformations in its branch. We will therefore call ""logical graph"" the hierarchy defined by nodes and volumes. The expansion of the logical graph by all possible paths defines a tree structure where all nodes are unique ""touchable"" objects. We will call this the ""physical tree"". Unlike the logical graph, the physical tree can become a huge structure with several milions of nodes in case of complex geometries, therefore it is not always a good idea to keep it transient in memory. Since a the logical and physical structures are correlated, the modeller rather keeps track only of the current branch, updating the current global matrix at each change of the level in geometry. The current physical node is not an object that can be asked for at a given moment, but rather represented by the combination: current node + current global matrix. However, physical nodes have unique ID's that can be retrieved for a given modeler state. These can be fed back to the modeler in order to force a physical node to become current. The advantage of this comes from the fact that all navigation queries check first the current node, therefore knowing the location of a point in the geometry can be saved as a starting state for later use.; Nodes can be declared as ""overlapping"" in case they do overlap with other nodes inside the same container or extrude this container. Non-overlapping ",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNode.html:1802,Testability,log,logical,1802,"_N is also created. A node B_i does not represent a unique object in the geometry because its container A might be at its turn positioned as node inside several other volumes. Only when a complete branch of nodes is fully defined up to the top node in the geometry, a given path like:; /TOP_1/.../A_3/B_7 will represent an unique object.; Its global transformation matrix can be computed as the pile-up of all local transformations in its branch. We will therefore call ""logical graph"" the hierarchy defined by nodes and volumes. The expansion of the logical graph by all possible paths defines a tree structure where all nodes are unique ""touchable"" objects. We will call this the ""physical tree"". Unlike the logical graph, the physical tree can become a huge structure with several milions of nodes in case of complex geometries, therefore it is not always a good idea to keep it transient in memory. Since a the logical and physical structures are correlated, the modeller rather keeps track only of the current branch, updating the current global matrix at each change of the level in geometry. The current physical node is not an object that can be asked for at a given moment, but rather represented by the combination: current node + current global matrix. However, physical nodes have unique ID's that can be retrieved for a given modeler state. These can be fed back to the modeler in order to force a physical node to become current. The advantage of this comes from the fact that all navigation queries check first the current node, therefore knowing the location of a point in the geometry can be saved as a starting state for later use.; Nodes can be declared as ""overlapping"" in case they do overlap with other nodes inside the same container or extrude this container. Non-overlapping nodes can be created with:; TGeoVolume::AddNode(TGeoVolume *daughter, Int_t copy_No, TGeoMatrix *matr);; TGeoMatrixGeometrical transformation package.Definition TGeoMatrix.h:38; TGeoVolumeTGeoVolume, ",MatchSource.WIKI,doc/master/classTGeoNode.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNode.html
https://root.cern/doc/master/classTGeoNodeCache.html:5895,Availability,error,error,5895,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:5984,Availability,error,error,5984,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:6139,Availability,error,error,6139,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:6436,Availability,error,error,6436,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:11000,Availability,error,error,11000," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:1391,Integrability,interface,interface,1391,"ass ReferenceThe Geometry Package » Geometry classes. ; Special pool of reusable nodes. ; Definition at line 56 of file TGeoCache.h. Public Member Functions;  TGeoNodeCache ();  Dummy constructor. ;  ;  TGeoNodeCache (TGeoNode *top, Bool_t nodeid=kFALSE, Int_t capacity=30);  Default constructor. ;  ;  ~TGeoNodeCache () override;  Destructor. ;  ; void BuildIdArray ();  Builds node id array. ;  ; void BuildInfoBranch ();  Builds info branch. Navigation is possible only after this step. ;  ; Bool_t CdDown (Int_t index);  Make daughter INDEX of current node the active state. Compute global matrix. ;  ; Bool_t CdDown (TGeoNode *node);  Make daughter INDEX of current node the active state. Compute global matrix. ;  ; void CdNode (Int_t nodeid);  Change current path to point to the node having this id. ;  ; void CdTop ();  ; void CdUp ();  Make mother of current node the active state. ;  ; void FillIdBranch (const Int_t *br, Int_t startlevel=0);  ; void * GetBranch () const;  ; void GetBranchNames (Int_t *names) const;  Fill names with current branch volume names (4 char - used by GEANT3 interface). ;  ; void GetBranchNumbers (Int_t *copyNumbers, Int_t *volumeNumbers) const;  Fill copy numbers of current branch nodes. ;  ; void GetBranchOnlys (Int_t *isonly) const;  Fill copy numbers of current branch nodes. ;  ; TGeoHMatrix * GetCurrentMatrix () const;  ; Int_t GetCurrentNodeId () const;  Returns a fixed ID for current physical node. ;  ; const Int_t * GetIdBranch () const;  ; TGeoStateInfo * GetInfo ();  Get next state info pointer. ;  ; Int_t GetLevel () const;  ; TGeoStateInfo * GetMakePWInfo (Int_t nd);  Get the PW info, if none create one. ;  ; void * GetMatrices () const;  ; TGeoNode * GetMother (Int_t up=1) const;  ; TGeoHMatrix * GetMotherMatrix (Int_t up=1) const;  ; TGeoNode * GetNode () const;  ; Int_t GetNodeId () const;  Get unique node id. ;  ; const char * GetPath ();  Returns the current geometry path. ;  ; Int_t GetStackLevel () const;  ; TGeoNode * GetTo",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:5901,Integrability,message,message,5901,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:6442,Integrability,message,message,6442,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:7644,Integrability,message,message,7644,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:11006,Integrability,message,message,11006," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:11379,Integrability,message,message,11379," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:17075,Integrability,interface,interface,17075,"ile TGeoCache.cxx. ◆ Class(). static TClass * TGeoNodeCache::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoNodeCache::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoNodeCache::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 145 of file TGeoCache.h. ◆ DeclFileName(). static const char * TGeoNodeCache::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 145 of file TGeoCache.h. ◆ FillIdBranch(). void TGeoNodeCache::FillIdBranch ; (; const Int_t * ; br, . Int_t ; startlevel = 0 . ). inline . Definition at line 98 of file TGeoCache.h. ◆ GetBranch(). void * TGeoNodeCache::GetBranch ; (; ); const. inline . Definition at line 104 of file TGeoCache.h. ◆ GetBranchNames(). void TGeoNodeCache::GetBranchNames ; (; Int_t * ; names); const. Fill names with current branch volume names (4 char - used by GEANT3 interface). ; Definition at line 306 of file TGeoCache.cxx. ◆ GetBranchNumbers(). void TGeoNodeCache::GetBranchNumbers ; (; Int_t * ; copyNumbers, . Int_t * ; volumeNumbers . ); const. Fill copy numbers of current branch nodes. ; Definition at line 318 of file TGeoCache.cxx. ◆ GetBranchOnlys(). void TGeoNodeCache::GetBranchOnlys ; (; Int_t * ; isonly); const. Fill copy numbers of current branch nodes. ; Definition at line 329 of file TGeoCache.cxx. ◆ GetCurrentMatrix(). TGeoHMatrix * TGeoNodeCache::GetCurrentMatrix ; (; ); const. inline . Definition at line 109 of file TGeoCache.h. ◆ GetCurrentNodeId(). Int_t TGeoNodeCache::GetCurrentNodeId ; (; ); const. Returns a fixed ID for current physical node. ; Definition at line 285 of file TGeoCache.cxx. ◆ GetIdBranch(). const Int_t * TGeoNodeCache::GetIdBranch ; (; ); const. inline . Definition at line 103 of file TGeoCache.h. ◆ GetInfo(). TGeoStateInfo * TGeoNodeCache::GetInfo ; (; ). Get next state info pointer",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:4134,Modifiability,inherit,inherited,4134,"urrent matrix converted to local one and rescaled with bomb factor. ;  ; void MasterToLocalVect (const Double_t *master, Double_t *local) const;  Vector in master frame defined by current matrix converted to local one. ;  ; void PopDummy (Int_t ipop=9999);  ; Bool_t PopState (Int_t &nmany, Double_t *point=nullptr);  Pop next state/point from heap. ;  ; Bool_t PopState (Int_t &nmany, Int_t level, Double_t *point=nullptr);  Pop next state/point from heap and restore matrices starting from LEVEL. ;  ; Int_t PushState (Bool_t ovlp, Int_t ntmany=0, Int_t startlevel=0, Double_t *point=nullptr);  Push current state into heap. ;  ; void Refresh ();  ; void ReleaseInfo ();  Release last used state info pointer. ;  ; Bool_t RestoreState (Int_t &nmany, TGeoCacheState *state, Double_t *point=nullptr);  Pop next state/point from a backed-up state. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:5531,Modifiability,inherit,inheritance,5531,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:7742,Modifiability,inherit,inherits,7742,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:7859,Modifiability,inherit,inherits,7859,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:11880,Modifiability,inherit,inherited,11880,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoNodeCache (const TGeoNodeCache &)=delete;  array of node id's ;  ; TGeoNodeCache & operator= (const TGeoNodeCache &)=delete;  . Private Attributes; Int_t fCurrentID;  ; Int_t fGeoCacheMaxLevels;  ; Int_t fGeoCacheStackSize;  ; Int_t fGeoInfoStackSize;  ; Int_t fIdBranch [100];  ; Int_t fIndex;  ; TGeoStateInfo ** fInfoBranch;  ; Int_t fInfoLevel;  ; Int_t fLevel;  ; TGeoHMatrix * fMatrix;  current node ;  ; TGeoHMatrix ** fMatrixBranch;  ; TGeoHMatrix ** fMPB;  ; TGeoNode * fNode;  ; TGeoN",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:13150,Modifiability,inherit,inherited,13150,"DtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoNodeCache (const TGeoNodeCache &)=delete;  array of node id's ;  ; TGeoNodeCache & operator= (const TGeoNodeCache &)=delete;  . Private Attributes; Int_t fCurrentID;  ; Int_t fGeoCacheMaxLevels;  ; Int_t fGeoCacheStackSize;  ; Int_t fGeoInfoStackSize;  ; Int_t fIdBranch [100];  ; Int_t fIndex;  ; TGeoStateInfo ** fInfoBranch;  ; Int_t fInfoLevel;  ; Int_t fLevel;  ; TGeoHMatrix * fMatrix;  current node ;  ; TGeoHMatrix ** fMatrixBranch;  ; TGeoHMatrix ** fMPB;  ; TGeoNode * fNode;  ; TGeoNode ** fNodeBranch;  ; Int_t * fNodeIdArray;  State info for the parallel world. ;  ; TString fPath;  ; TGeoStateInfo * fPWInfo;  ; TObjArray * fStack;  current matrix ;  ; Int_t fStackLevel;  ; TGeoNode * fTop;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoCache.h>. Inheritance diagram for TGeoNodeCache:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:13791,Modifiability,inherit,inherited,13791,"anch;  ; Int_t * fNodeIdArray;  State info for the parallel world. ;  ; TString fPath;  ; TGeoStateInfo * fPWInfo;  ; TObjArray * fStack;  current matrix ;  ; Int_t fStackLevel;  ; TGeoNode * fTop;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoCache.h>. Inheritance diagram for TGeoNodeCache:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeCache() [1/3]. TGeoNodeCache::TGeoNodeCache ; (; const TGeoNodeCache & ; ). privatedelete . array of node id's . ◆ TGeoNodeCache() [2/3]. TGeoNodeCache::TGeoNodeCache ; (; ). Dummy constructor. ; Definition at line 34 of file TGeoCache.cxx. ◆ TGeoNodeCache() [3/3]. TGeoNodeCache::TGeoNodeCache ; (; TGeoNode * ; top, . Bool_t ; nodeid = kFALSE, . Int_t ; capacity = 30 . ). Default constructor. ; Definition at line 62 of file TGeoCache.cxx. ◆ ~TGeoNodeCache(). TGeoNodeCache::~TGeoNodeCache ; (; ). override . Destructor. ; Definition at line 104 of file TGeoCache.cxx. Member Function Documentation. ◆ BuildIdArray(). vo",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:13890,Modifiability,inherit,inherited,13890,"anch;  ; Int_t * fNodeIdArray;  State info for the parallel world. ;  ; TString fPath;  ; TGeoStateInfo * fPWInfo;  ; TObjArray * fStack;  current matrix ;  ; Int_t fStackLevel;  ; TGeoNode * fTop;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoCache.h>. Inheritance diagram for TGeoNodeCache:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeCache() [1/3]. TGeoNodeCache::TGeoNodeCache ; (; const TGeoNodeCache & ; ). privatedelete . array of node id's . ◆ TGeoNodeCache() [2/3]. TGeoNodeCache::TGeoNodeCache ; (; ). Dummy constructor. ; Definition at line 34 of file TGeoCache.cxx. ◆ TGeoNodeCache() [3/3]. TGeoNodeCache::TGeoNodeCache ; (; TGeoNode * ; top, . Bool_t ; nodeid = kFALSE, . Int_t ; capacity = 30 . ). Default constructor. ; Definition at line 62 of file TGeoCache.cxx. ◆ ~TGeoNodeCache(). TGeoNodeCache::~TGeoNodeCache ; (; ). override . Destructor. ; Definition at line 104 of file TGeoCache.cxx. Member Function Documentation. ◆ BuildIdArray(). vo",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:15761,Performance,perform,performance,15761,"TGeoNodeCache ; (; ). override . Destructor. ; Definition at line 104 of file TGeoCache.cxx. Member Function Documentation. ◆ BuildIdArray(). void TGeoNodeCache::BuildIdArray ; (; ). Builds node id array. ; Definition at line 131 of file TGeoCache.cxx. ◆ BuildInfoBranch(). void TGeoNodeCache::BuildInfoBranch ; (; ). Builds info branch. Navigation is possible only after this step. ; Definition at line 150 of file TGeoCache.cxx. ◆ CdDown() [1/2]. Bool_t TGeoNodeCache::CdDown ; (; Int_t ; index). Make daughter INDEX of current node the active state. Compute global matrix. ; Definition at line 219 of file TGeoCache.cxx. ◆ CdDown() [2/2]. Bool_t TGeoNodeCache::CdDown ; (; TGeoNode * ; node). Make daughter INDEX of current node the active state. Compute global matrix. ; Definition at line 245 of file TGeoCache.cxx. ◆ CdNode(). void TGeoNodeCache::CdNode ; (; Int_t ; nodeid). Change current path to point to the node having this id. ; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons) ; Definition at line 176 of file TGeoCache.cxx. ◆ CdTop(). void TGeoNodeCache::CdTop ; (; ). inline . Definition at line 92 of file TGeoCache.h. ◆ CdUp(). void TGeoNodeCache::CdUp ; (; ). Make mother of current node the active state. ; Definition at line 271 of file TGeoCache.cxx. ◆ Class(). static TClass * TGeoNodeCache::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoNodeCache::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoNodeCache::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 145 of file TGeoCache.h. ◆ DeclFileName(). static const char * TGeoNodeCache::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 145 of file TGeoCache.h. ◆ FillIdBranch(). void TGeoNodeCache::FillIdBranch ; (; const Int_t * ; br, . Int_t ; startlevel = 0 . ). inline . ",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeCache.html:7373,Security,hash,hash,7373," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoNodeCache.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:8977,Availability,error,error,8977,"tructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:9066,Availability,error,error,9066,"n ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return t",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:9221,Availability,error,error,9221,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:9398,Availability,error,error,9398,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:13096,Availability,error,error,13096,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; B",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:4148,Deployability,A/B,A/B,4148,";  ; Int_t * GetOverlaps (Int_t &novlp) const;  ; TGeoExtension * GetUserExtension () const;  ; TGeoVolume * GetVolume () const;  ; TGeoExtension * GrabFWExtension () const;  Get a copy of the framework extension pointer. ;  ; TGeoExtension * GrabUserExtension () const;  Get a copy of the user extension pointer. ;  ; void InspectNode () const;  Inspect this node. ;  ; Bool_t IsCloned () const;  ; Bool_t IsOffset () const;  ; Bool_t IsOnScreen () const;  check if this node is drawn. Assumes that this node is current ;  ; Bool_t IsOverlapping () const;  ; Bool_t IsVirtual () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; virtual void LocalToMaster (const Double_t *local, Double_t *master) const;  Convert the point coordinates from local reference system to mother reference. ;  ; virtual void LocalToMasterVect (const Double_t *local, Double_t *master) const;  Convert a vector from local reference system to mother reference. ;  ; void ls (Option_t *option="""") const override;  Print the path (A/B/C/...) to this node on stdout. ;  ; virtual void MasterToLocal (const Double_t *master, Double_t *local) const;  Convert the point coordinates from mother reference to local reference system. ;  ; virtual void MasterToLocalVect (const Double_t *master, Double_t *local) const;  Convert a vector from mother reference to local reference system. ;  ; Bool_t MayOverlap (Int_t iother) const;  Check the overlab between the bounding box of the node overlaps with the one the brother with index IOTHER. ;  ; void Paint (Option_t *option="""") override;  Paint this node and its content according to visualization settings. ;  ; void PrintCandidates () const;  print daughters candidates for containing current point ;  ; void PrintOverlaps () const;  print possible overlapping nodes ;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const;  computes the closest distance from given point to this shape ;  ; void SaveAttributes (std::ostream &out);  save attri",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:8983,Integrability,message,message,8983,"tructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:9404,Integrability,message,message,9404,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:10262,Integrability,message,message,10262," this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:13102,Integrability,message,message,13102,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; B",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:13475,Integrability,message,message,13475," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; Bool_t IsVisContainers () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; Bool_t IsVisLeaves () const;  ; Bool_t IsVisOnly () const;  ; Bool_t IsVisRaytrace () const;  ; Bool_t IsVisStreamed () const;  ; Bool_t IsVisTouched () const;  ; void ResetAttBit (UInt_t f);  ; void SetActiveDaughters (Bool_t flag=kTRUE);  ; void SetActivity (Bool_t flag=kT",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:1357,Modifiability,inherit,inherited,1357,"classes. ; A node containing local transformation. ; Definition at line 154 of file TGeoNode.h. Public Member Functions;  TGeoNodeMatrix ();  Default constructor. ;  ;  TGeoNodeMatrix (const TGeoVolume *vol, const TGeoMatrix *matrix);  Constructor. ;  ;  ~TGeoNodeMatrix () override;  Destructor. ;  ; Int_t GetByteCount () const override;  return the total size in bytes of this node ;  ; TGeoMatrix * GetMatrix () const override;  ; Int_t GetOptimalVoxels () const override;  Returns type of optimal voxelization for this node. ;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; TGeoNode * MakeCopyNode () const override;  Make a copy of this node. ;  ; void SetMatrix (const TGeoMatrix *matrix);  Matrix setter. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoNode;  TGeoNode ();  Default constructor. ;  ;  TGeoNode (const TGeoVolume *vol);  Constructor. ;  ;  ~TGeoNode () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  How-to-browse for a node. ;  ; virtual void cd () const;  ; void CheckOverlaps (Double_t ovlp=0.1, Option_t *option="""");  Check overlaps bigger than OVLP hierarchically, starting with this node. ;  ; void CheckShapes ();  check for wrong parameters in shapes ;  ; Int_t CountDaughters (Bool_t unique_volumes=kFALSE);  Returns the number of daughters. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  compute the closest distance of approach from point px,py to this node ;  ; void Draw (Option_t *option="""") override;  draw current node according to option ;  ; void DrawOnly (Option_t *option="""");  draw only this node independently of its vis options ;  ; void DrawOverlaps ();  Method drawing the overlap candidates with this node. ;  ; void ExecuteEvent (Int_t even",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:6080,Modifiability,inherit,inherited,6080,"ode ;  ; void SetAllInvisible ();  ; void SetCloned (Bool_t flag=kTRUE);  ; void SetCurrentPoint (Double_t x, Double_t y, Double_t z);  ; void SetFWExtension (TGeoExtension *ext);  Connect framework defined extension to the node. ;  ; void SetInvisible ();  ; void SetMotherVolume (TGeoVolume *mother);  ; void SetNumber (Int_t number);  ; void SetOverlapping (Bool_t flag=kTRUE);  ; void SetOverlaps (Int_t *ovlp, Int_t novlp);  set the list of overlaps for this node (ovlp must be created with operator new) ;  ; void SetUserExtension (TGeoExtension *ext);  Connect user-defined extension to the node. ;  ; void SetVirtual ();  ; void SetVisibility (Bool_t vis=kTRUE) override;  Set visibility of the node (obsolete). ;  ; void SetVolume (TGeoVolume *volume);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void VisibleDaughters (Bool_t vis=kTRUE);  Set visibility of the daughters (obsolete). ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:7820,Modifiability,inherit,inherited,7820,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gRO",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:8613,Modifiability,inherit,inheritance,8613,"he TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:10360,Modifiability,inherit,inherits,10360,"l (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:10477,Modifiability,inherit,inherits,10477," (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:13782,Modifiability,inherit,inherited,13782,"id SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; Bool_t IsVisContainers () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; Bool_t IsVisLeaves () const;  ; Bool_t IsVisOnly () const;  ; Bool_t IsVisRaytrace () const;  ; Bool_t IsVisStreamed () const;  ; Bool_t IsVisTouched () const;  ; void ResetAttBit (UInt_t f);  ; void SetActiveDaughters (Bool_t flag=kTRUE);  ; void SetActivity (Bool_t flag=kTRUE);  ; void SetAttBit (UInt_t f);  ; void SetAttBit (UInt_t f, Bool_t set);  ; void SetOptimization (Option_t *option);  Set optimization flags. ;  ; void SetVisBranch ();  Set branch type visibility. ;  ; virtual void SetVisContainers (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisDaughters (Bool_t vis=kTR",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:15543,Modifiability,inherit,inherited,15543," SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttBit (UInt_t f) const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeMatrix (const TGeoNodeMatrix &gnm)=delete;  ; TGeoNodeMatrix & opera",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:15755,Modifiability,inherit,inherited,15755," SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttBit (UInt_t f) const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeMatrix (const TGeoNodeMatrix &gnm)=delete;  ; TGeoNodeMatrix & opera",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:15965,Modifiability,inherit,inherited,15965," SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttBit (UInt_t f) const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeMatrix (const TGeoNodeMatrix &gnm)=delete;  ; TGeoNodeMatrix & opera",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:16483,Modifiability,inherit,inherited,16483,"from TGeoNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeMatrix (const TGeoNodeMatrix &gnm)=delete;  ; TGeoNodeMatrix & operator= (const TGeoNodeMatrix &gnm)=delete;  . Private Attributes; TGeoMatrix * fMatrix = nullptr;  . Additional Inherited Members;  Public Types inherited from TGeoNode; enum  { ;   kGeoNodeMatrix = (1ULL << ( 14 )); , kGeoNodeOffset = (1ULL << ( 15 )); , kGeoNodeVC = (1ULL << ( 16 )); , kGeoNodeOverlap = (1ULL << ( 17 )); , ;   kGeoNodeCloned = (1ULL << ( 18 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:16908,Modifiability,inherit,inherited,16908," TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeMatrix (const TGeoNodeMatrix &gnm)=delete;  ; TGeoNodeMatrix & operator= (const TGeoNodeMatrix &gnm)=delete;  . Private Attributes; TGeoMatrix * fMatrix = nullptr;  . Additional Inherited Members;  Public Types inherited from TGeoNode; enum  { ;   kGeoNodeMatrix = (1ULL << ( 14 )); , kGeoNodeOffset = (1ULL << ( 15 )); , kGeoNodeVC = (1ULL << ( 16 )); , kGeoNodeOverlap = (1ULL << ( 17 )); , ;   kGeoNodeCloned = (1ULL << ( 18 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:17149,Modifiability,inherit,inherited,17149,"_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeMatrix (const TGeoNodeMatrix &gnm)=delete;  ; TGeoNodeMatrix & operator= (const TGeoNodeMatrix &gnm)=delete;  . Private Attributes; TGeoMatrix * fMatrix = nullptr;  . Additional Inherited Members;  Public Types inherited from TGeoNode; enum  { ;   kGeoNodeMatrix = (1ULL << ( 14 )); , kGeoNodeOffset = (1ULL << ( 15 )); , kGeoNodeVC = (1ULL << ( 16 )); , kGeoNodeOverlap = (1ULL << ( 17 )); , ;   kGeoNodeCloned = (1ULL << ( 18 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:17787,Modifiability,inherit,inherited,17787,"x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = n",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:18710,Modifiability,inherit,inherited,18710,"t; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor D",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:18809,Modifiability,inherit,inherited,18809,"t; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor D",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:18964,Modifiability,inherit,inherited,18964,"ationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeMatrix() [1/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; const TGeoNodeMatrix & ; gnm). privatedelete . ◆ TGeoNodeMatrix() [2/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; ). Default constructor. ; Defin",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:19169,Modifiability,inherit,inherited,19169,"< ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeMatrix() [1/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; const TGeoNodeMatrix & ; gnm). privatedelete . ◆ TGeoNodeMatrix() [2/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; ). Default constructor. ; Definition at line 749 of file TGeoNode.cxx. ◆ TGeoNodeMatrix() [3/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; const TGeoVolume * ; vol, . const TGeoMatrix * ; matrix . ). Constructor.",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:19497,Modifiability,inherit,inherited,19497,"isStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeMatrix() [1/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; const TGeoNodeMatrix & ; gnm). privatedelete . ◆ TGeoNodeMatrix() [2/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; ). Default constructor. ; Definition at line 749 of file TGeoNode.cxx. ◆ TGeoNodeMatrix() [3/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; const TGeoVolume * ; vol, . const TGeoMatrix * ; matrix . ). Constructor. ; Definition at line 757 of file TGeoNode.cxx. ◆ ~TGeoNodeMatrix(). TGeoNodeMatrix::~TGeoNodeMatrix ; (; ). override . Destructor. ; Definition at line 767 of file TGeoNode.cxx. Member Function Documentation. ◆ Class(). static TClass * TGeoNodeMatrix",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:19579,Modifiability,inherit,inherited,19579,"isStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeMatrix() [1/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; const TGeoNodeMatrix & ; gnm). privatedelete . ◆ TGeoNodeMatrix() [2/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; ). Default constructor. ; Definition at line 749 of file TGeoNode.cxx. ◆ TGeoNodeMatrix() [3/3]. TGeoNodeMatrix::TGeoNodeMatrix ; (; const TGeoVolume * ; vol, . const TGeoMatrix * ; matrix . ). Constructor. ; Definition at line 757 of file TGeoNode.cxx. ◆ ~TGeoNodeMatrix(). TGeoNodeMatrix::~TGeoNodeMatrix ; (; ). override . Destructor. ; Definition at line 767 of file TGeoNode.cxx. Member Function Documentation. ◆ Class(). static TClass * TGeoNodeMatrix",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:14594,Performance,optimiz,optimization,14594,"alled when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; Bool_t IsVisContainers () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; Bool_t IsVisLeaves () const;  ; Bool_t IsVisOnly () const;  ; Bool_t IsVisRaytrace () const;  ; Bool_t IsVisStreamed () const;  ; Bool_t IsVisTouched () const;  ; void ResetAttBit (UInt_t f);  ; void SetActiveDaughters (Bool_t flag=kTRUE);  ; void SetActivity (Bool_t flag=kTRUE);  ; void SetAttBit (UInt_t f);  ; void SetAttBit (UInt_t f, Bool_t set);  ; void SetOptimization (Option_t *option);  Set optimization flags. ;  ; void SetVisBranch ();  Set branch type visibility. ;  ; virtual void SetVisContainers (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttB",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeMatrix.html:6948,Security,hash,hash,6948,"_StreamerNVirtual_b);  ; void VisibleDaughters (Bool_t vis=kTRUE);  Set visibility of the daughters (obsolete). ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoNodeMatrix.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html
https://root.cern/doc/master/classTGeoNodeOffset.html:8969,Availability,error,error,8969,"tructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:9058,Availability,error,error,9058,"n ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return t",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:9213,Availability,error,error,9213,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:9390,Availability,error,error,9390,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:13088,Availability,error,error,13088,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; B",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:4140,Deployability,A/B,A/B,4140,"ion * GrabFWExtension () const;  Get a copy of the framework extension pointer. ;  ; TGeoExtension * GrabUserExtension () const;  Get a copy of the user extension pointer. ;  ; void InspectNode () const;  Inspect this node. ;  ; Bool_t IsCloned () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOffset () const;  ; Bool_t IsOnScreen () const;  check if this node is drawn. Assumes that this node is current ;  ; Bool_t IsOverlapping () const;  ; Bool_t IsVirtual () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; virtual void LocalToMaster (const Double_t *local, Double_t *master) const;  Convert the point coordinates from local reference system to mother reference. ;  ; virtual void LocalToMasterVect (const Double_t *local, Double_t *master) const;  Convert a vector from local reference system to mother reference. ;  ; void ls (Option_t *option="""") const override;  Print the path (A/B/C/...) to this node on stdout. ;  ; virtual void MasterToLocal (const Double_t *master, Double_t *local) const;  Convert the point coordinates from mother reference to local reference system. ;  ; virtual void MasterToLocalVect (const Double_t *master, Double_t *local) const;  Convert a vector from mother reference to local reference system. ;  ; Bool_t MayOverlap (Int_t iother) const;  Check the overlab between the bounding box of the node overlaps with the one the brother with index IOTHER. ;  ; void Paint (Option_t *option="""") override;  Paint this node and its content according to visualization settings. ;  ; void PrintCandidates () const;  print daughters candidates for containing current point ;  ; void PrintOverlaps () const;  print possible overlapping nodes ;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const;  computes the closest distance from given point to this shape ;  ; void SaveAttributes (std::ostream &out);  save attri",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:8975,Integrability,message,message,8975,"tructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:9396,Integrability,message,message,9396,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:10254,Integrability,message,message,10254," this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:13094,Integrability,message,message,13094,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; B",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:13467,Integrability,message,message,13467," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; Bool_t IsVisContainers () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; Bool_t IsVisLeaves () const;  ; Bool_t IsVisOnly () const;  ; Bool_t IsVisRaytrace () const;  ; Bool_t IsVisStreamed () const;  ; Bool_t IsVisTouched () const;  ; void ResetAttBit (UInt_t f);  ; void SetActiveDaughters (Bool_t flag=kTRUE);  ; void SetActivity (Bool_t flag=kT",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:1239,Modifiability,inherit,inherited,1239,"unctions |; Private Attributes |; List of all members ; TGeoNodeOffset Class ReferenceThe Geometry Package » Geometry classes. ; Node containing an offset. ; Definition at line 184 of file TGeoNode.h. Public Member Functions;  TGeoNodeOffset ();  Default constructor. ;  ;  TGeoNodeOffset (const TGeoVolume *vol, Int_t index, Double_t offset);  Constructor. Null pointer to matrix means identity transformation. ;  ;  ~TGeoNodeOffset () override;  Destructor. ;  ; void cd () const override;  ; TGeoPatternFinder * GetFinder () const override;  ; Int_t GetIndex () const override;  Get the index of this offset. ;  ; TGeoMatrix * GetMatrix () const override;  ; Double_t GetOffset () const;  ; TClass * IsA () const override;  ; TGeoNode * MakeCopyNode () const override;  Make a copy of this node. ;  ; void SetFinder (TGeoPatternFinder *finder);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoNode;  TGeoNode ();  Default constructor. ;  ;  TGeoNode (const TGeoVolume *vol);  Constructor. ;  ;  ~TGeoNode () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  How-to-browse for a node. ;  ; void CheckOverlaps (Double_t ovlp=0.1, Option_t *option="""");  Check overlaps bigger than OVLP hierarchically, starting with this node. ;  ; void CheckShapes ();  check for wrong parameters in shapes ;  ; Int_t CountDaughters (Bool_t unique_volumes=kFALSE);  Returns the number of daughters. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  compute the closest distance of approach from point px,py to this node ;  ; void Draw (Option_t *option="""") override;  draw current node according to option ;  ; void DrawOnly (Option_t *option="""");  draw only this node independently of its vis options ;  ; void DrawOverlaps ();  Method drawing the overlap candidates with this node. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) overri",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:6072,Modifiability,inherit,inherited,6072,"ode ;  ; void SetAllInvisible ();  ; void SetCloned (Bool_t flag=kTRUE);  ; void SetCurrentPoint (Double_t x, Double_t y, Double_t z);  ; void SetFWExtension (TGeoExtension *ext);  Connect framework defined extension to the node. ;  ; void SetInvisible ();  ; void SetMotherVolume (TGeoVolume *mother);  ; void SetNumber (Int_t number);  ; void SetOverlapping (Bool_t flag=kTRUE);  ; void SetOverlaps (Int_t *ovlp, Int_t novlp);  set the list of overlaps for this node (ovlp must be created with operator new) ;  ; void SetUserExtension (TGeoExtension *ext);  Connect user-defined extension to the node. ;  ; void SetVirtual ();  ; void SetVisibility (Bool_t vis=kTRUE) override;  Set visibility of the node (obsolete). ;  ; void SetVolume (TGeoVolume *volume);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void VisibleDaughters (Bool_t vis=kTRUE);  Set visibility of the daughters (obsolete). ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:7812,Modifiability,inherit,inherited,7812,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gRO",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:8605,Modifiability,inherit,inheritance,8605,"he TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:10352,Modifiability,inherit,inherits,10352,"l (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:10469,Modifiability,inherit,inherits,10469," (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:13774,Modifiability,inherit,inherited,13774,"id SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; Bool_t IsVisContainers () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; Bool_t IsVisLeaves () const;  ; Bool_t IsVisOnly () const;  ; Bool_t IsVisRaytrace () const;  ; Bool_t IsVisStreamed () const;  ; Bool_t IsVisTouched () const;  ; void ResetAttBit (UInt_t f);  ; void SetActiveDaughters (Bool_t flag=kTRUE);  ; void SetActivity (Bool_t flag=kTRUE);  ; void SetAttBit (UInt_t f);  ; void SetAttBit (UInt_t f, Bool_t set);  ; void SetOptimization (Option_t *option);  Set optimization flags. ;  ; void SetVisBranch ();  Set branch type visibility. ;  ; virtual void SetVisContainers (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisDaughters (Bool_t vis=kTR",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:15535,Modifiability,inherit,inherited,15535," SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttBit (UInt_t f) const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeOffset (const TGeoNodeOffset &)=delete;  ; TGeoNodeOffset & operator",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:15747,Modifiability,inherit,inherited,15747," SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttBit (UInt_t f) const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeOffset (const TGeoNodeOffset &)=delete;  ; TGeoNodeOffset & operator",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:15957,Modifiability,inherit,inherited,15957," SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttBit (UInt_t f) const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeOffset (const TGeoNodeOffset &)=delete;  ; TGeoNodeOffset & operator",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:16475,Modifiability,inherit,inherited,16475,"from TGeoNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeOffset (const TGeoNodeOffset &)=delete;  ; TGeoNodeOffset & operator= (const TGeoNodeOffset &)=delete;  . Private Attributes; TGeoPatternFinder * fFinder = nullptr;  ; Int_t fIndex = 0;  ; Double_t fOffset = 0.;  . Additional Inherited Members;  Public Types inherited from TGeoNode; enum  { ;   kGeoNodeMatrix = (1ULL << ( 14 )); , kGeoNodeOffset = (1ULL << ( 15 )); , kGeoNodeVC = (1ULL << ( 16 )); , kGeoNodeOverlap = (1ULL << ( 17 )); , ;   kGeoNodeCloned = (1ULL << ( 18 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; e",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:16948,Modifiability,inherit,inherited,16948,"_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeOffset (const TGeoNodeOffset &)=delete;  ; TGeoNodeOffset & operator= (const TGeoNodeOffset &)=delete;  . Private Attributes; TGeoPatternFinder * fFinder = nullptr;  ; Int_t fIndex = 0;  ; Double_t fOffset = 0.;  . Additional Inherited Members;  Public Types inherited from TGeoNode; enum  { ;   kGeoNodeMatrix = (1ULL << ( 14 )); , kGeoNodeOffset = (1ULL << ( 15 )); , kGeoNodeVC = (1ULL << ( 16 )); , kGeoNodeOverlap = (1ULL << ( 17 )); , ;   kGeoNodeCloned = (1ULL << ( 18 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:17189,Modifiability,inherit,inherited,17189,"flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoNodeOffset (const TGeoNodeOffset &)=delete;  ; TGeoNodeOffset & operator= (const TGeoNodeOffset &)=delete;  . Private Attributes; TGeoPatternFinder * fFinder = nullptr;  ; Int_t fIndex = 0;  ; Double_t fOffset = 0.;  . Additional Inherited Members;  Public Types inherited from TGeoNode; enum  { ;   kGeoNodeMatrix = (1ULL << ( 14 )); , kGeoNodeOffset = (1ULL << ( 15 )); , kGeoNodeVC = (1ULL << ( 16 )); , kGeoNodeOverlap = (1ULL << ( 17 )); , ;   kGeoNodeCloned = (1ULL << ( 18 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:17827,Modifiability,inherit,inherited,17827,"x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = n",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:18750,Modifiability,inherit,inherited,18750,"t; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeOffset:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor D",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:18849,Modifiability,inherit,inherited,18849,"t; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeOffset:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor D",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:19004,Modifiability,inherit,inherited,19004,"ationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeOffset:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeOffset() [1/3]. TGeoNodeOffset::TGeoNodeOffset ; (; const TGeoNodeOffset & ; ). privatedelete . ◆ TGeoNodeOffset() [2/3]. TGeoNodeOffset::TGeoNodeOffset ; (; ). Default constructor. ; Definiti",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:19209,Modifiability,inherit,inherited,19209,"< ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeOffset:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeOffset() [1/3]. TGeoNodeOffset::TGeoNodeOffset ; (; const TGeoNodeOffset & ; ). privatedelete . ◆ TGeoNodeOffset() [2/3]. TGeoNodeOffset::TGeoNodeOffset ; (; ). Default constructor. ; Definition at line 846 of file TGeoNode.cxx. ◆ TGeoNodeOffset() [3/3]. TGeoNodeOffset::TGeoNodeOffset ; (; const TGeoVolume * ; vol, . Int_t ; index, . Double_t ; offset . ). Construc",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:19537,Modifiability,inherit,inherited,19537,"isStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeOffset:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeOffset() [1/3]. TGeoNodeOffset::TGeoNodeOffset ; (; const TGeoNodeOffset & ; ). privatedelete . ◆ TGeoNodeOffset() [2/3]. TGeoNodeOffset::TGeoNodeOffset ; (; ). Default constructor. ; Definition at line 846 of file TGeoNode.cxx. ◆ TGeoNodeOffset() [3/3]. TGeoNodeOffset::TGeoNodeOffset ; (; const TGeoVolume * ; vol, . Int_t ; index, . Double_t ; offset . ). Constructor. Null pointer to matrix means identity transformation. ; Definition at line 857 of file TGeoNode.cxx. ◆ ~TGeoNodeOffset(). TGeoNodeOffset::~TGeoNodeOffset ; (; ). override . Destructor. ; Definition at line 868 of file TGeoNode.cxx. Member Functio",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:19619,Modifiability,inherit,inherited,19619,"isStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . #include <TGeoNode.h>. Inheritance diagram for TGeoNodeOffset:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeOffset() [1/3]. TGeoNodeOffset::TGeoNodeOffset ; (; const TGeoNodeOffset & ; ). privatedelete . ◆ TGeoNodeOffset() [2/3]. TGeoNodeOffset::TGeoNodeOffset ; (; ). Default constructor. ; Definition at line 846 of file TGeoNode.cxx. ◆ TGeoNodeOffset() [3/3]. TGeoNodeOffset::TGeoNodeOffset ; (; const TGeoVolume * ; vol, . Int_t ; index, . Double_t ; offset . ). Constructor. Null pointer to matrix means identity transformation. ; Definition at line 857 of file TGeoNode.cxx. ◆ ~TGeoNodeOffset(). TGeoNodeOffset::~TGeoNodeOffset ; (; ). override . Destructor. ; Definition at line 868 of file TGeoNode.cxx. Member Functio",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:14586,Performance,optimiz,optimization,14586,"alled when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TGeoAtt;  TGeoAtt ();  Default constructor. ;  ;  TGeoAtt (Option_t *vis_opt, Option_t *activity_opt="""", Option_t *optimization_opt="""");  Constructor. ;  ; virtual ~TGeoAtt ();  Destructor. ;  ; Bool_t IsActive () const;  ; Bool_t IsActiveDaughters () const;  ; Bool_t IsVisBranch () const;  ; Bool_t IsVisContainers () const;  ; Bool_t IsVisDaughters () const;  ; Bool_t IsVisible () const;  ; Bool_t IsVisLeaves () const;  ; Bool_t IsVisOnly () const;  ; Bool_t IsVisRaytrace () const;  ; Bool_t IsVisStreamed () const;  ; Bool_t IsVisTouched () const;  ; void ResetAttBit (UInt_t f);  ; void SetActiveDaughters (Bool_t flag=kTRUE);  ; void SetActivity (Bool_t flag=kTRUE);  ; void SetAttBit (UInt_t f);  ; void SetAttBit (UInt_t f, Bool_t set);  ; void SetOptimization (Option_t *option);  Set optimization flags. ;  ; void SetVisBranch ();  Set branch type visibility. ;  ; virtual void SetVisContainers (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttB",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoNodeOffset.html:6940,Security,hash,hash,6940,"_StreamerNVirtual_b);  ; void VisibleDaughters (Bool_t vis=kTRUE);  Set visibility of the daughters (obsolete). ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoNodeOffset.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoNodeOffset.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:2767,Availability,error,error,2767,"nup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoOpticalSurface ();  ;  TGeoOpticalSurface (const char *name, ESurfaceModel model=kMglisur, ESurfaceFinish finish=kFpolished, ESurfaceType type=kTdielectric_dielectric, Double_t value=1.0);  ;  ~TGeoOpticalSurface () override;  ; bool AddConstProperty (const char *property, const char *ref);  ; bool AddProperty (const char *property, const char *ref);  ; TList const & GetConstProperties () const;  ; Double_t GetConstProperty (const char *property, Bool_t *error=nullptr) const;  ; Double_t GetConstProperty (Int_t i, Bool_t *error=nullptr) const;  ; const char * GetConstPropertyRef (const char *property) const;  ; const char * GetConstPropertyRef (Int_t i) const;  ; ESurfaceFinish GetFinish () const;  ; ESurfaceModel GetModel () const;  ; Int_t GetNconstProperties () const;  ; Int_t GetNproperties () const;  ; Double_t GetPolish () const;  ; TList const & GetProperties () const;  ; TGDMLMatrix * GetProperty (const char *name) const;  ; TGDMLMatrix * GetProperty (Int_t i) const;  ; const char * GetPropertyRef (const char *property);  ; const char * GetPropertyRef (Int_t i) const;  ; Double_t GetSigmaAlpha () const;  ; ESurfaceType GetType () const;  ; Double_t GetValue () const;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  This method must be overridden when a class wants to print itself. ;  ; void SetFinish (ESurfaceFinish finish);  ; void SetModel (ESurfaceModel model);  ; void SetPolish (Double_t polish);  ; void SetSigmaAlpha (Double_t sigmaalpha);  ; void SetType (ESurfaceType type);  ; void SetValue (Double_t value);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:2836,Availability,error,error,2836,"nup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoOpticalSurface ();  ;  TGeoOpticalSurface (const char *name, ESurfaceModel model=kMglisur, ESurfaceFinish finish=kFpolished, ESurfaceType type=kTdielectric_dielectric, Double_t value=1.0);  ;  ~TGeoOpticalSurface () override;  ; bool AddConstProperty (const char *property, const char *ref);  ; bool AddProperty (const char *property, const char *ref);  ; TList const & GetConstProperties () const;  ; Double_t GetConstProperty (const char *property, Bool_t *error=nullptr) const;  ; Double_t GetConstProperty (Int_t i, Bool_t *error=nullptr) const;  ; const char * GetConstPropertyRef (const char *property) const;  ; const char * GetConstPropertyRef (Int_t i) const;  ; ESurfaceFinish GetFinish () const;  ; ESurfaceModel GetModel () const;  ; Int_t GetNconstProperties () const;  ; Int_t GetNproperties () const;  ; Double_t GetPolish () const;  ; TList const & GetProperties () const;  ; TGDMLMatrix * GetProperty (const char *name) const;  ; TGDMLMatrix * GetProperty (Int_t i) const;  ; const char * GetPropertyRef (const char *property);  ; const char * GetPropertyRef (Int_t i) const;  ; Double_t GetSigmaAlpha () const;  ; ESurfaceType GetType () const;  ; Double_t GetValue () const;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  This method must be overridden when a class wants to print itself. ;  ; void SetFinish (ESurfaceFinish finish);  ; void SetModel (ESurfaceModel model);  ; void SetPolish (Double_t polish);  ; void SetSigmaAlpha (Double_t sigmaalpha);  ; void SetType (ESurfaceType type);  ; void SetValue (Double_t value);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:7263,Availability,error,error,7263,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:7352,Availability,error,error,7352,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:7507,Availability,error,error,7507,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:7804,Availability,error,error,7804,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:11888,Availability,error,error,11888,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const char * FinishToString (ESurfaceFinish finish);  ; static const char * ModelToString (ESurfaceModel model);  ; static ESurfaceFinish Str",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:18397,Availability,error,error,18397,"). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoOpticalSurface::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoOpticalSurface::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 165 of file TGeoOpticalSurface.h. ◆ DeclFileName(). static const char * TGeoOpticalSurface::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 165 of file TGeoOpticalSurface.h. ◆ FinishToString(). const char * TGeoOpticalSurface::FinishToString ; (; ESurfaceFinish ; finish). static . Definition at line 192 of file TGeoOpticalSurface.cxx. ◆ GetConstProperties(). TList const & TGeoOpticalSurface::GetConstProperties ; (; ); const. inline . Definition at line 135 of file TGeoOpticalSurface.h. ◆ GetConstProperty() [1/2]. Double_t TGeoOpticalSurface::GetConstProperty ; (; const char * ; property, . Bool_t * ; error = nullptr . ); const. Definition at line 280 of file TGeoOpticalSurface.cxx. ◆ GetConstProperty() [2/2]. Double_t TGeoOpticalSurface::GetConstProperty ; (; Int_t ; i, . Bool_t * ; error = nullptr . ); const. Definition at line 293 of file TGeoOpticalSurface.cxx. ◆ GetConstPropertyRef() [1/2]. const char * TGeoOpticalSurface::GetConstPropertyRef ; (; const char * ; property); const. Definition at line 272 of file TGeoOpticalSurface.cxx. ◆ GetConstPropertyRef() [2/2]. const char * TGeoOpticalSurface::GetConstPropertyRef ; (; Int_t ; i); const. inline . Definition at line 130 of file TGeoOpticalSurface.h. ◆ GetFinish(). ESurfaceFinish TGeoOpticalSurface::GetFinish ; (; ); const. inline . Definition at line 144 of file TGeoOpticalSurface.h. ◆ GetModel(). ESurfaceModel TGeoOpticalSurface::GetModel ; (; ); const. inline . Definition at line 143 of file TGeoOpticalSurface.h. ◆ GetNconstProperties(). Int_t TGeoOpticalSurface::GetNconstProperties ; (; ); const. inline . Definition at line 13",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:18583,Availability,error,error,18583,"c constexpr Version_t TGeoOpticalSurface::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 165 of file TGeoOpticalSurface.h. ◆ DeclFileName(). static const char * TGeoOpticalSurface::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 165 of file TGeoOpticalSurface.h. ◆ FinishToString(). const char * TGeoOpticalSurface::FinishToString ; (; ESurfaceFinish ; finish). static . Definition at line 192 of file TGeoOpticalSurface.cxx. ◆ GetConstProperties(). TList const & TGeoOpticalSurface::GetConstProperties ; (; ); const. inline . Definition at line 135 of file TGeoOpticalSurface.h. ◆ GetConstProperty() [1/2]. Double_t TGeoOpticalSurface::GetConstProperty ; (; const char * ; property, . Bool_t * ; error = nullptr . ); const. Definition at line 280 of file TGeoOpticalSurface.cxx. ◆ GetConstProperty() [2/2]. Double_t TGeoOpticalSurface::GetConstProperty ; (; Int_t ; i, . Bool_t * ; error = nullptr . ); const. Definition at line 293 of file TGeoOpticalSurface.cxx. ◆ GetConstPropertyRef() [1/2]. const char * TGeoOpticalSurface::GetConstPropertyRef ; (; const char * ; property); const. Definition at line 272 of file TGeoOpticalSurface.cxx. ◆ GetConstPropertyRef() [2/2]. const char * TGeoOpticalSurface::GetConstPropertyRef ; (; Int_t ; i); const. inline . Definition at line 130 of file TGeoOpticalSurface.h. ◆ GetFinish(). ESurfaceFinish TGeoOpticalSurface::GetFinish ; (; ); const. inline . Definition at line 144 of file TGeoOpticalSurface.h. ◆ GetModel(). ESurfaceModel TGeoOpticalSurface::GetModel ; (; ); const. inline . Definition at line 143 of file TGeoOpticalSurface.h. ◆ GetNconstProperties(). Int_t TGeoOpticalSurface::GetNconstProperties ; (; ); const. inline . Definition at line 137 of file TGeoOpticalSurface.h. ◆ GetNproperties(). Int_t TGeoOpticalSurface::GetNproperties ; (; ); const. inline . Definition at line 136 of file TGeoOpticalSurface.h. ◆ GetPolish(). D",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:384,Integrability,wrap,wrapper,384,". ROOT: TGeoOpticalSurface Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TGeoOpticalSurface Class ReferenceThe Geometry Package » Geometry classes. ; This is a wrapper class to G4OpticalSurface. ; Definition at line 27 of file TGeoOpticalSurface.h. Public Types; enum  ESurfaceFinish { ;   kFpolished; , kFpolishedfrontpainted; , kFpolishedbackpainted; , kFground; , ;   kFgroundfrontpainted; , kFgroundbackpainted; , kFpolishedlumirrorair; , kFpolishedlumirrorglue; , ;   kFpolishedair; , kFpolishedteflonair; , kFpolishedtioair; , kFpolishedtyvekair; , ;   kFpolishedvm2000air; , kFpolishedvm2000glue; , kFetchedlumirrorair; , kFetchedlumirrorglue; , ;   kFetchedair; , kFetchedteflonair; , kFetchedtioair; , kFetchedtyvekair; , ;   kFetchedvm2000air; , kFetchedvm2000glue; , kFgroundlumirrorair; , kFgroundlumirrorglue; , ;   kFgroundair; , kFgroundteflonair; , kFgroundtioair; , kFgroundtyvekair; , ;   kFgroundvm2000air; , kFgroundvm2000glue; , kFRough_LUT; , kFRoughTeflon_LUT; , ;   kFRoughESR_LUT; , kFRoughESRGrease_LUT; , kFPolished_LUT; , kFPolishedTeflon_LUT; , ;   kFPolishedESR_LUT; , kFPolishedESRGrease_LUT; , kFDetector_LUT. };  ; enum  ESurfaceModel { ;   kMglisur; , kMunified; , kMLUT; , kMDAVIS; , ;   kMdichroic. };  ; enum  ESurfaceType { ;   kTdielectric_metal; , kTdielectric_dielectric; , kTdielectric_LUT; , kTdielectric_LUTDAVIS; , ;   kTdielectric_dichroic; , kTfirsov; , kTx_ray. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 ))",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:7269,Integrability,message,message,7269,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:7810,Integrability,message,message,7810,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:8800,Integrability,message,message,8800,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:11894,Integrability,message,message,11894,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const char * FinishToString (ESurfaceFinish finish);  ; static const char * ModelToString (ESurfaceModel model);  ; static ESurfaceFinish Str",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:12267,Integrability,message,message,12267," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const char * FinishToString (ESurfaceFinish finish);  ; static const char * ModelToString (ESurfaceModel model);  ; static ESurfaceFinish StringToFinish (const char *finish);  ; static ESurfaceModel StringToModel (const char *model);  ; static ESurfaceType StringToType (const char *type);  ; static const char * TypeToString (ESurfaceType type);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:1654,Modifiability,inherit,inherited,1654,"onair; , kFpolishedtioair; , kFpolishedtyvekair; , ;   kFpolishedvm2000air; , kFpolishedvm2000glue; , kFetchedlumirrorair; , kFetchedlumirrorglue; , ;   kFetchedair; , kFetchedteflonair; , kFetchedtioair; , kFetchedtyvekair; , ;   kFetchedvm2000air; , kFetchedvm2000glue; , kFgroundlumirrorair; , kFgroundlumirrorglue; , ;   kFgroundair; , kFgroundteflonair; , kFgroundtioair; , kFgroundtyvekair; , ;   kFgroundvm2000air; , kFgroundvm2000glue; , kFRough_LUT; , kFRoughTeflon_LUT; , ;   kFRoughESR_LUT; , kFRoughESRGrease_LUT; , kFPolished_LUT; , kFPolishedTeflon_LUT; , ;   kFPolishedESR_LUT; , kFPolishedESRGrease_LUT; , kFDetector_LUT. };  ; enum  ESurfaceModel { ;   kMglisur; , kMunified; , kMLUT; , kMDAVIS; , ;   kMdichroic. };  ; enum  ESurfaceType { ;   kTdielectric_metal; , kTdielectric_dielectric; , kTdielectric_LUT; , kTdielectric_LUTDAVIS; , ;   kTdielectric_dichroic; , kTfirsov; , kTx_ray. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoOpticalSurface ();  ;  TGeoOpticalSurface (const char *name, ESurfaceModel model=kMglisur, ESurfaceFinish finish=kFpolished, ESurfaceType type=kTdielectric_dielectric, Double_t value=1.0);  ;  ~TGeoOpticalSurface () override;  ; bool AddConstProperty (const char *property, const char *ref);  ; bool AddProperty (const char *property, const char *ref);  ; TList const & GetConstProperties () const;  ; Double_t GetConstPr",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:4066,Modifiability,inherit,inherited,4066,"st;  ; Int_t GetNproperties () const;  ; Double_t GetPolish () const;  ; TList const & GetProperties () const;  ; TGDMLMatrix * GetProperty (const char *name) const;  ; TGDMLMatrix * GetProperty (Int_t i) const;  ; const char * GetPropertyRef (const char *property);  ; const char * GetPropertyRef (Int_t i) const;  ; Double_t GetSigmaAlpha () const;  ; ESurfaceType GetType () const;  ; Double_t GetValue () const;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  This method must be overridden when a class wants to print itself. ;  ; void SetFinish (ESurfaceFinish finish);  ; void SetModel (ESurfaceModel model);  ; void SetPolish (Double_t polish);  ; void SetSigmaAlpha (Double_t sigmaalpha);  ; void SetType (ESurfaceType type);  ; void SetValue (Double_t value);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:5806,Modifiability,inherit,inherited,5806,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:6899,Modifiability,inherit,inheritance,6899,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:8898,Modifiability,inherit,inherits,8898,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:9015,Modifiability,inherit,inherits,9015,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:13125,Modifiability,inherit,inherited,13125,"his object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const char * FinishToString (ESurfaceFinish finish);  ; static const char * ModelToString (ESurfaceModel model);  ; static ESurfaceFinish StringToFinish (const char *finish);  ; static ESurfaceModel StringToModel (const char *model);  ; static ESurfaceType StringToType (const char *type);  ; static const char * TypeToString (ESurfaceType type);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoOpticalSurface (const TGeoOpticalSurface &)=delete;  ; TGeoOpticalSurface & operator= (const TGeoOpticalSurface &)=delete;  . Private Attributes; TList fConstProperties;  ; ESurfaceFinish fFinish = kFpolished; ",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:13335,Modifiability,inherit,inherited,13335,"his object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const char * FinishToString (ESurfaceFinish finish);  ; static const char * ModelToString (ESurfaceModel model);  ; static ESurfaceFinish StringToFinish (const char *finish);  ; static ESurfaceModel StringToModel (const char *model);  ; static ESurfaceType StringToType (const char *type);  ; static const char * TypeToString (ESurfaceType type);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoOpticalSurface (const TGeoOpticalSurface &)=delete;  ; TGeoOpticalSurface & operator= (const TGeoOpticalSurface &)=delete;  . Private Attributes; TList fConstProperties;  ; ESurfaceFinish fFinish = kFpolished; ",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:14325,Modifiability,inherit,inherited,14325,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoOpticalSurface (const TGeoOpticalSurface &)=delete;  ; TGeoOpticalSurface & operator= (const TGeoOpticalSurface &)=delete;  . Private Attributes; TList fConstProperties;  ; ESurfaceFinish fFinish = kFpolished;  ; ESurfaceModel fModel = kMglisur;  ; std::string fName = """";  ; Double_t fPolish = 0.0;  ; TList fProperties;  ; Double_t fSigmaAlpha = 0.0;  ; ESurfaceType fType = kTdielectric_metal;  ; Double_t fValue = 0.0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoOpticalSurface.h>. Inheritance diagram for TGeoOpticalSurface:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESurfaceFinish. enum TGeoOpticalSurface::ESurfaceFinish. EnumeratorkFpolished ; kFpolishedfrontpainted ; kFpolishedbackpainted ; kFground ; kFgroundfrontpainted ; kFgroundbackpainted ; kFpolishedlumirrorair ; kFpolishedlumirrorglue ; kFpolishedair ; kFpolishedteflonair ; kFpolishedtioair ; kFpolishedtyvekair ; kFpolishedvm2000air ; kFpolishedvm2000glue ; kFetchedlumirrorair ; kFetchedlumirrorglue ; kFetchedair ; kFetchedteflonair ; kFetchedtioair ; kFetchedtyvekair ; kFetchedvm2000air ; kFetchedvm2000glue ; kFgroundlumirror",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:14424,Modifiability,inherit,inherited,14424,"tatic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoOpticalSurface (const TGeoOpticalSurface &)=delete;  ; TGeoOpticalSurface & operator= (const TGeoOpticalSurface &)=delete;  . Private Attributes; TList fConstProperties;  ; ESurfaceFinish fFinish = kFpolished;  ; ESurfaceModel fModel = kMglisur;  ; std::string fName = """";  ; Double_t fPolish = 0.0;  ; TList fProperties;  ; Double_t fSigmaAlpha = 0.0;  ; ESurfaceType fType = kTdielectric_metal;  ; Double_t fValue = 0.0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoOpticalSurface.h>. Inheritance diagram for TGeoOpticalSurface:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESurfaceFinish. enum TGeoOpticalSurface::ESurfaceFinish. EnumeratorkFpolished ; kFpolishedfrontpainted ; kFpolishedbackpainted ; kFground ; kFgroundfrontpainted ; kFgroundbackpainted ; kFpolishedlumirrorair ; kFpolishedlumirrorglue ; kFpolishedair ; kFpolishedteflonair ; kFpolishedtioair ; kFpolishedtyvekair ; kFpolishedvm2000air ; kFpolishedvm2000glue ; kFetchedlumirrorair ; kFetchedlumirrorglue ; kFetchedair ; kFetchedteflonair ; kFetchedtioair ; kFetchedtyvekair ; kFetchedvm2000air ; kFetchedvm2000glue ; kFgroundlumirror",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:14629,Modifiability,inherit,inherited,14629,"ct stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoOpticalSurface (const TGeoOpticalSurface &)=delete;  ; TGeoOpticalSurface & operator= (const TGeoOpticalSurface &)=delete;  . Private Attributes; TList fConstProperties;  ; ESurfaceFinish fFinish = kFpolished;  ; ESurfaceModel fModel = kMglisur;  ; std::string fName = """";  ; Double_t fPolish = 0.0;  ; TList fProperties;  ; Double_t fSigmaAlpha = 0.0;  ; ESurfaceType fType = kTdielectric_metal;  ; Double_t fValue = 0.0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoOpticalSurface.h>. Inheritance diagram for TGeoOpticalSurface:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESurfaceFinish. enum TGeoOpticalSurface::ESurfaceFinish. EnumeratorkFpolished ; kFpolishedfrontpainted ; kFpolishedbackpainted ; kFground ; kFgroundfrontpainted ; kFgroundbackpainted ; kFpolishedlumirrorair ; kFpolishedlumirrorglue ; kFpolishedair ; kFpolishedteflonair ; kFpolishedtioair ; kFpolishedtyvekair ; kFpolishedvm2000air ; kFpolishedvm2000glue ; kFetchedlumirrorair ; kFetchedlumirrorglue ; kFetchedair ; kFetchedteflonair ; kFetchedtioair ; kFetchedtyvekair ; kFetchedvm2000air ; kFetchedvm2000glue ; kFgroundlumirrorair ; kFgroundlumirrorglue ; kFgroundair ; kFgroundteflonair ; kFgroundtioair ; kFgroundtyvekair ; kFgroundvm2000air ; kFgroundvm2000glue ; kFRough_LUT ; kFRoughTeflon_LUT ; kFRoughESR_LUT ; kFRoughESRGrea",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOpticalSurface.html:4934,Security,hash,hash,4934," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoOpticalSurface.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html
https://root.cern/doc/master/classTGeoOverlap.html:6522,Availability,error,error,6522,"tructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:6611,Availability,error,error,6611,"n ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:6766,Availability,error,error,6766,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:6943,Availability,error,error,6943,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:10773,Availability,error,error,10773,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:19421,Energy Efficiency,green,green,19421,"atic constexpr Version_t TGeoOverlap::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 97 of file TGeoOverlap.h. ◆ Compare(). Int_t TGeoOverlap::Compare ; (; const TObject * ; obj); const. overridevirtual . Method to compare this overlap with another. ; Returns : -1 - this is smaller than OBJ 0 - equal 1 - greater ; Reimplemented from TObject.; Definition at line 99 of file TGeoOverlap.cxx. ◆ DeclFileName(). static const char * TGeoOverlap::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 97 of file TGeoOverlap.h. ◆ DistancetoPrimitive(). Int_t TGeoOverlap::DistancetoPrimitive ; (; Int_t ; px, . Int_t ; py . ). overridevirtual . Distance to primitive for an overlap. ; Reimplemented from TObject.; Definition at line 121 of file TGeoOverlap.cxx. ◆ Draw(). void TGeoOverlap::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw the overlap. ; One daughter will be blue, the other green, extruding points red. ; Reimplemented from TObject.; Definition at line 130 of file TGeoOverlap.cxx. ◆ ExecuteEvent(). void TGeoOverlap::ExecuteEvent ; (; Int_t ; event, . Int_t ; px, . Int_t ; py . ). overridevirtual . Event interception. ; Reimplemented from TObject.; Definition at line 139 of file TGeoOverlap.cxx. ◆ GetFirstMatrix(). TGeoHMatrix * TGeoOverlap::GetFirstMatrix ; (; ); const. inline . Definition at line 67 of file TGeoOverlap.h. ◆ GetFirstVolume(). TGeoVolume * TGeoOverlap::GetFirstVolume ; (; ); const. inline . Definition at line 65 of file TGeoOverlap.h. ◆ GetOverlap(). Double_t TGeoOverlap::GetOverlap ; (; ); const. inline . Definition at line 69 of file TGeoOverlap.h. ◆ GetPolyMarker(). TPolyMarker3D * TGeoOverlap::GetPolyMarker ; (; ); const. inline . Definition at line 64 of file TGeoOverlap.h. ◆ GetSecondMatrix(). TGeoHMatrix * TGeoOverlap::GetSecondMatrix ; (; ); const. inline . Definition at line 68 of file TGeoOverlap.h. ◆ GetSecondVolume(). TGeo",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:6528,Integrability,message,message,6528,"tructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:6949,Integrability,message,message,6949,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:7939,Integrability,message,message,7939,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:10779,Integrability,message,message,10779,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:11152,Integrability,message,message,11152," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:715,Modifiability,inherit,inherited,715,". ROOT: TGeoOverlap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGeoOverlap Class ReferenceThe Geometry Package » Geometry painter. ; Base class describing geometry overlaps. ; Overlaps apply to the nodes contained inside a volume. These should not overlap to each other nor extrude the shape of their mother volume. ; Definition at line 37 of file TGeoOverlap.h. Public Types; enum  EOverlapType { kGeoOverlap = (1ULL << ( 14 )); , kGeoExtrusion = (1ULL << ( 15 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoOverlap ();  Default ctor. ;  ;  TGeoOverlap (const char *name, TGeoVolume *vol1, TGeoVolume *vol2, const TGeoMatrix *matrix1, const TGeoMatrix *matrix2, Bool_t isovlp=kTRUE, Double_t ovlp=0.01);  Creates a named overlap belonging to volume VOL and having the size OVLP. ;  ;  ~TGeoOverlap () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Define double-click action. ;  ; Int_t Compare (const TObject *obj) const override;  Method to compare this overlap with another. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Distance to primitive for an overlap. ;  ; void Draw (Option_t *option="""") overri",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:3625,Modifiability,inherit,inherited,3625,"ide;  Paint the overlap. ;  ; void Print (Option_t *option="""") const override;  Print detailed info. ;  ; virtual void PrintInfo () const;  Print some info. ;  ; void SampleOverlap (Int_t npoints=1000000);  Draw overlap and sample with random points the overlapping region. ;  ; void SetFirstMatrix (TGeoMatrix *matrix);  ; void SetFirstVolume (TGeoVolume *vol);  ; void SetIsExtrusion (Bool_t flag=kTRUE);  ; void SetIsOverlap (Bool_t flag=kTRUE);  ; void SetNextPoint (Double_t x, Double_t y, Double_t z);  Set next overlapping point. ;  ; void SetOverlap (Double_t ovlp);  ; void SetSecondMatrix (TGeoMatrix *matrix);  ; void SetSecondVolume (TGeoVolume *vol);  ; void Sizeof3D () const override;  Get 3D size of this. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Validate () const;  Validate this overlap. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:5365,Modifiability,inherit,inherited,5365,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gRO",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:6158,Modifiability,inherit,inheritance,6158,"he TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:8037,Modifiability,inherit,inherits,8037,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:8154,Modifiability,inherit,inherits,8154,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:11459,Modifiability,inherit,inherited,11459,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:12964,Modifiability,inherit,inherited,12964,";  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ; ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:14219,Modifiability,inherit,inherited,14219,"new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:14564,Modifiability,inherit,inherited,14564,"char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:14774,Modifiability,inherit,inherited,14774,"char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:15292,Modifiability,inherit,inherited,15292, from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TPolyMarker3D * fMarker;  ; TGeoHMatrix * fMatrix1;  ; TGeoHMatrix * fMatrix2;  ; Double_t fOverlap;  ; TGeoVolume * fVolume1;  ; TGeoVolume * fVolume2;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoOverlap (const TGeoOverlap &)=delete;  ; TGeoOverlap & operator= (const TGeoOverlap &)=delete; ,MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:15504,Modifiability,inherit,inherited,15504, from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TPolyMarker3D * fMarker;  ; TGeoHMatrix * fMatrix1;  ; TGeoHMatrix * fMatrix2;  ; Double_t fOverlap;  ; TGeoVolume * fVolume1;  ; TGeoVolume * fVolume2;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoOverlap (const TGeoOverlap &)=delete;  ; TGeoOverlap & operator= (const TGeoOverlap &)=delete; ,MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:15716,Modifiability,inherit,inherited,15716, from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TPolyMarker3D * fMarker;  ; TGeoHMatrix * fMatrix1;  ; TGeoHMatrix * fMatrix2;  ; Double_t fOverlap;  ; TGeoVolume * fVolume1;  ; TGeoVolume * fVolume2;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoOverlap (const TGeoOverlap &)=delete;  ; TGeoOverlap & operator= (const TGeoOverlap &)=delete; ,MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:16094,Modifiability,inherit,inherited,16094,"s of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TPolyMarker3D * fMarker;  ; TGeoHMatrix * fMatrix1;  ; TGeoHMatrix * fMatrix2;  ; Double_t fOverlap;  ; TGeoVolume * fVolume1;  ; TGeoVolume * fVolume2;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoOverlap (const TGeoOverlap &)=delete;  ; TGeoOverlap & operator= (const TGeoOverlap &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoOverlap.h>. Inheritance diagram for TGeoOverlap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:16176,Modifiability,inherit,inherited,16176,"s of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TPolyMarker3D * fMarker;  ; TGeoHMatrix * fMatrix1;  ; TGeoHMatrix * fMatrix2;  ; Double_t fOverlap;  ; TGeoVolume * fVolume1;  ; TGeoVolume * fVolume2;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoOverlap (const TGeoOverlap &)=delete;  ; TGeoOverlap & operator= (const TGeoOverlap &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoOverlap.h>. Inheritance diagram for TGeoOverlap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:16337,Modifiability,inherit,inherited,16337,"onst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TPolyMarker3D * fMarker;  ; TGeoHMatrix * fMatrix1;  ; TGeoHMatrix * fMatrix2;  ; Double_t fOverlap;  ; TGeoVolume * fVolume1;  ; TGeoVolume * fVolume2;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoOverlap (const TGeoOverlap &)=delete;  ; TGeoOverlap & operator= (const TGeoOverlap &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoOverlap.h>. Inheritance diagram for TGeoOverlap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EOverlapType. enum TGeoOverlap::EOverlapType. EnumeratorkGeoOverlap ; kGeoExtrusion . Definition at line 39 of file TGeoOverlap.h. Constructor & Destructor Documentation. ◆ TGeoOverlap() [1/3]. TGeoOverlap::TGeoOverlap ; (; const TGeoOverlap & ; ). pri",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:16624,Modifiability,inherit,inherited,16624,"from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TPolyMarker3D * fMarker;  ; TGeoHMatrix * fMatrix1;  ; TGeoHMatrix * fMatrix2;  ; Double_t fOverlap;  ; TGeoVolume * fVolume1;  ; TGeoVolume * fVolume2;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoOverlap (const TGeoOverlap &)=delete;  ; TGeoOverlap & operator= (const TGeoOverlap &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoOverlap.h>. Inheritance diagram for TGeoOverlap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EOverlapType. enum TGeoOverlap::EOverlapType. EnumeratorkGeoOverlap ; kGeoExtrusion . Definition at line 39 of file TGeoOverlap.h. Constructor & Destructor Documentation. ◆ TGeoOverlap() [1/3]. TGeoOverlap::TGeoOverlap ; (; const TGeoOverlap & ; ). privatedelete . ◆ TGeoOverlap() [2/3]. TGeoOverlap::TGeoOverlap ; (; ). Default ctor. ; Definition at line 39 of file TGeoOverlap.cxx. ◆ TGeoOverlap() [3/3]. TGeoOverlap::TGeoOverlap ; (; const char * ; name, . TGeoVolume * ; vol1, . TGeoVolume * ; vol2, . const TGeoMatrix * ; matrix1, . const TGeoMatrix * ; matrix2, . Bool_t ; isovlp = kTRUE, . Double_t ; ovlp = 0.01 . ). ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:16723,Modifiability,inherit,inherited,16723,"from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TPolyMarker3D * fMarker;  ; TGeoHMatrix * fMatrix1;  ; TGeoHMatrix * fMatrix2;  ; Double_t fOverlap;  ; TGeoVolume * fVolume1;  ; TGeoVolume * fVolume2;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoOverlap (const TGeoOverlap &)=delete;  ; TGeoOverlap & operator= (const TGeoOverlap &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoOverlap.h>. Inheritance diagram for TGeoOverlap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EOverlapType. enum TGeoOverlap::EOverlapType. EnumeratorkGeoOverlap ; kGeoExtrusion . Definition at line 39 of file TGeoOverlap.h. Constructor & Destructor Documentation. ◆ TGeoOverlap() [1/3]. TGeoOverlap::TGeoOverlap ; (; const TGeoOverlap & ; ). privatedelete . ◆ TGeoOverlap() [2/3]. TGeoOverlap::TGeoOverlap ; (; ). Default ctor. ; Definition at line 39 of file TGeoOverlap.cxx. ◆ TGeoOverlap() [3/3]. TGeoOverlap::TGeoOverlap ; (; const char * ; name, . TGeoVolume * ; vol1, . TGeoVolume * ; vol2, . const TGeoMatrix * ; matrix1, . const TGeoMatrix * ; matrix2, . Bool_t ; isovlp = kTRUE, . Double_t ; ovlp = 0.01 . ). ",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoOverlap.html:4493,Security,hash,hash,4493,"oid StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Validate () const;  Validate this overlap. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoOverlap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html
https://root.cern/doc/master/classTGeoPainter-members.html:3768,Availability,error,error,3768,"l() overrideTGeoPaintervirtual; DrawPath(const char *path, Option_t *option="""") overrideTGeoPaintervirtual; DrawPolygon(const TGeoPolygon *poly) overrideTGeoPaintervirtual; DrawShape(TGeoShape *shape, Option_t *option="""") overrideTGeoPaintervirtual; DrawVolume(TGeoVolume *vol, Option_t *option="""") overrideTGeoPaintervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EditGeometry(Option_t *option="""") overrideTGeoPaintervirtual; EGeoBombOption enum nameTVirtualGeoPainter; EGeoVisLevel enum nameTVirtualGeoPainter; EGeoVisOption enum nameTVirtualGeoPainter; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; EstimateCameraMove(Double_t tmin, Double_t tmax, Double_t *start, Double_t *end) overrideTGeoPaintervirtual; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteManagerEvent(TGeoManager *geom, Int_t event, Int_t px, Int_t py) overrideTGeoPaintervirtual; ExecuteShapeEvent(TGeoShape *shape, Int_t event, Int_t px, Int_t py) overrideTGeoPaintervirtual; ExecuteVolumeEvent(TGeoVolume *volume, Int_t event, Int_t px, Int_t py) overrideTGeoPaintervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBombRTGeoPainterprivate; fBombXTGeoPainterprivate; fBombYTGeoPainterprivate; fBombZTGeoPainterprivate; fBufferTGeoPainterprivate; fCheckedBoxTGeoPainterprivate; fCheckedNodeTGeoPainterprivate; fCheckerTGeoPainterprivate; fClippingShapeTGeoPainterprivate; fExplodedViewTGeoPainterprivate; fgDtorOnlyTObjectprivatestatic; fGeoManagerTGeoPainterprivate; fgGeoPainterTVirtualGeoPainterprotectedstatic; fGlobalTGeoPainterprivate; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fIsEditableTGeoPainterpriv",MatchSource.WIKI,doc/master/classTGeoPainter-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter-members.html
https://root.cern/doc/master/classTGeoPainter-members.html:3849,Availability,error,error,3849,"l() overrideTGeoPaintervirtual; DrawPath(const char *path, Option_t *option="""") overrideTGeoPaintervirtual; DrawPolygon(const TGeoPolygon *poly) overrideTGeoPaintervirtual; DrawShape(TGeoShape *shape, Option_t *option="""") overrideTGeoPaintervirtual; DrawVolume(TGeoVolume *vol, Option_t *option="""") overrideTGeoPaintervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EditGeometry(Option_t *option="""") overrideTGeoPaintervirtual; EGeoBombOption enum nameTVirtualGeoPainter; EGeoVisLevel enum nameTVirtualGeoPainter; EGeoVisOption enum nameTVirtualGeoPainter; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; EstimateCameraMove(Double_t tmin, Double_t tmax, Double_t *start, Double_t *end) overrideTGeoPaintervirtual; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteManagerEvent(TGeoManager *geom, Int_t event, Int_t px, Int_t py) overrideTGeoPaintervirtual; ExecuteShapeEvent(TGeoShape *shape, Int_t event, Int_t px, Int_t py) overrideTGeoPaintervirtual; ExecuteVolumeEvent(TGeoVolume *volume, Int_t event, Int_t px, Int_t py) overrideTGeoPaintervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBombRTGeoPainterprivate; fBombXTGeoPainterprivate; fBombYTGeoPainterprivate; fBombZTGeoPainterprivate; fBufferTGeoPainterprivate; fCheckedBoxTGeoPainterprivate; fCheckedNodeTGeoPainterprivate; fCheckerTGeoPainterprivate; fClippingShapeTGeoPainterprivate; fExplodedViewTGeoPainterprivate; fgDtorOnlyTObjectprivatestatic; fGeoManagerTGeoPainterprivate; fgGeoPainterTVirtualGeoPainterprotectedstatic; fGlobalTGeoPainterprivate; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fIsEditableTGeoPainterpriv",MatchSource.WIKI,doc/master/classTGeoPainter-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter-members.html
https://root.cern/doc/master/classTGeoPainter-members.html:9041,Deployability,update,update,9041,,MatchSource.WIKI,doc/master/classTGeoPainter-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter-members.html
https://root.cern/doc/master/classTGeoPainter-members.html:195,Modifiability,inherit,inherited,195,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPainter Member List. This is the complete list of members for TGeoPainter, including all inherited members. AbstractMethod(const char *method) constTObject; AddSize3D(Int_t numpoints, Int_t numsegs, Int_t numpolys) overrideTGeoPaintervirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddTrack(Int_t id, Int_t pdgcode, TObject *part) overrideTGeoPaintervirtual; AddTrackPoint(Double_t *point, Double_t *box, Bool_t reset=kFALSE) overrideTGeoPaintervirtual; AppendPad(Option_t *option="""")TObjectvirtual; BombTranslation(const Double_t *tr, Double_t *bombtr) overrideTGeoPaintervirtual; Browse(TBrowser *b)TObjectvirtual; CheckBoundaryErrors(Int_t ntracks=1000000, Double_t radius=-1.) overrideTGeoPaintervirtual; CheckBoundaryReference(Int_t icheck=-1) overrideTGeoPaintervirtual; CheckedHash()TObjectinline; CheckEdit()TGeoPainter; CheckGeometry(Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const overrideTGeoPaintervirtual; CheckGeometryFull(Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) overrideTGeoPaintervirtual; CheckOverlaps(const TGeoVolume *vol, Double_t ovlp=0.1, Option_t *option="""") const overrideTGeoPaintervirtual; CheckPoint(Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.) overrideTGeoPaintervirtual; CheckShape(TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) overrideTGeoPaintervirtual; Class()TVirtualGeoPainterstatic; Class_Name()TVirtualGeoPainterstatic; Class_Version()TVirtualGeoPainterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearVisibleVolumes()TGeoPainterprotected; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; CountNodes(TGeoVolume *vol, Int_t level) constTGeoPainter; CountVisibleN",MatchSource.WIKI,doc/master/classTGeoPainter-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter-members.html
https://root.cern/doc/master/classTGeoPainter-members.html:11710,Modifiability,plugin,plugin,11710,"g3path) overrideTGeoPaintervirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetBombFactors(Double_t bombx=1.3, Double_t bomby=1.3, Double_t bombz=1.3, Double_t bombr=1.3) overrideTGeoPaintervirtual; SetCheckedNode(TGeoNode *node) overrideTGeoPaintervirtual; SetClippingShape(TGeoShape *shape) overrideTGeoPainterinlinevirtual; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetExplodedView(Int_t iopt=0) overrideTGeoPaintervirtual; SetGeoManager(TGeoManager *geom) overrideTGeoPainterinlinevirtual; SetIteratorPlugin(TGeoIteratorPlugin *plugin) overrideTGeoPainterinlinevirtual; SetNmeshPoints(Int_t npoints) overrideTGeoPaintervirtual; SetNsegments(Int_t nseg=20) overrideTGeoPaintervirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetPainter(const TVirtualGeoPainter *painter)TVirtualGeoPainterstatic; SetRaytracing(Bool_t flag=kTRUE) overrideTGeoPainterinlinevirtual; SetTopVisible(Bool_t vis=kTRUE) overrideTGeoPaintervirtual; SetTopVolume(TGeoVolume *vol) overrideTGeoPainterinlinevirtual; SetUniqueID(UInt_t uid)TObjectvirtual; SetVisLevel(Int_t level=3) overrideTGeoPaintervirtual; SetVisOption(Int_t option=0) overrideTGeoPaintervirtual; ShapeDistancetoPrimitive(const TGeoShape *shape, Int_t numpoints, Int_t px, Int_t py) const overrideTGeoPaintervirtual; Streamer(TBuffer &) overrideTVirtualGeoPaintervirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TVirtualGeoPainterinline; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; Test(Int_t npoints, Option_t *option) overrideTGeoPaintervirtual; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TestOverlaps(const char *path) overrideTGeoPaintervirtual; TestVoxels(TGeoVolume *vol) overrideTGeoPaintervirtual; TGeoPainter(TGeoManager *manager)TGeoPainter; TObject()T",MatchSource.WIKI,doc/master/classTGeoPainter-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter-members.html
https://root.cern/doc/master/classTGeoPainter-members.html:1406,Safety,safe,safety,1406,"virtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddTrack(Int_t id, Int_t pdgcode, TObject *part) overrideTGeoPaintervirtual; AddTrackPoint(Double_t *point, Double_t *box, Bool_t reset=kFALSE) overrideTGeoPaintervirtual; AppendPad(Option_t *option="""")TObjectvirtual; BombTranslation(const Double_t *tr, Double_t *bombtr) overrideTGeoPaintervirtual; Browse(TBrowser *b)TObjectvirtual; CheckBoundaryErrors(Int_t ntracks=1000000, Double_t radius=-1.) overrideTGeoPaintervirtual; CheckBoundaryReference(Int_t icheck=-1) overrideTGeoPaintervirtual; CheckedHash()TObjectinline; CheckEdit()TGeoPainter; CheckGeometry(Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const overrideTGeoPaintervirtual; CheckGeometryFull(Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) overrideTGeoPaintervirtual; CheckOverlaps(const TGeoVolume *vol, Double_t ovlp=0.1, Option_t *option="""") const overrideTGeoPaintervirtual; CheckPoint(Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.) overrideTGeoPaintervirtual; CheckShape(TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) overrideTGeoPaintervirtual; Class()TVirtualGeoPainterstatic; Class_Name()TVirtualGeoPainterstatic; Class_Version()TVirtualGeoPainterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearVisibleVolumes()TGeoPainterprotected; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; CountNodes(TGeoVolume *vol, Int_t level) constTGeoPainter; CountVisibleNodes() overrideTGeoPaintervirtual; DeclFileName()TVirtualGeoPainterinlinestatic; DefaultAngles() overrideTGeoPaintervirtual; DefaultColors() overrideTGeoPaintervirtual; DefineColors() constTGeoPainterprivate; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DistanceToPrimitiveVol(TGeoVolum",MatchSource.WIKI,doc/master/classTGeoPainter-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter-members.html
https://root.cern/doc/master/classTGeoPainter-members.html:1480,Testability,test,testNo,1480,") overrideTGeoPaintervirtual; CheckShape(TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) overrideTGeoPaintervirtual; Class()TVirtualGeoPainterstatic; Class_Name()TVirtualGeoPainterstatic; Class_Version()TVirtualGeoPainterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearVisibleVolumes()TGeoPainterprotected; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; CountNodes(TGeoVolume *vol, Int_t level) constTGeoPainter; CountVisibleN",MatchSource.WIKI,doc/master/classTGeoPainter-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter-members.html
https://root.cern/doc/master/classTGeoPainter.html:1456,Availability,error,errors,1456," line 39 of file TGeoPainter.h. Public Member Functions;  TGeoPainter (TGeoManager *manager);  Default constructor. ;  ;  ~TGeoPainter () override;  Default destructor. ;  ; void AddSize3D (Int_t numpoints, Int_t numsegs, Int_t numpolys) override;  Add numpoints, numsegs, numpolys to the global 3D size. ;  ; TVirtualGeoTrack * AddTrack (Int_t id, Int_t pdgcode, TObject *part) override;  Create a primary TGeoTrack. ;  ; void AddTrackPoint (Double_t *point, Double_t *box, Bool_t reset=kFALSE) override;  Average center of view of all painted tracklets and compute view box. ;  ; void BombTranslation (const Double_t *tr, Double_t *bombtr) override;  Get the new 'bombed' translation vector according current exploded view mode. ;  ; void CheckBoundaryErrors (Int_t ntracks=1000000, Double_t radius=-1.) override;  Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ;  ; void CheckBoundaryReference (Int_t icheck=-1) override;  Check the boundary errors reference file created by CheckBoundaryErrors method. ;  ; void CheckEdit ();  Check if Ged library is loaded and load geometry editor classe. ;  ; void CheckGeometry (Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const override;  Geometry checking method (see TGeoChecker). ;  ; void CheckGeometryFull (Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) override;  Geometry checking method (see: TGeoManager::CheckGeometry()) ;  ; void CheckOverlaps (const TGeoVolume *vol, Double_t ovlp=0.1, Option_t *option="""") const override;  Check overlaps for the top volume of the geometry, within a limit OVLP. ;  ; void CheckPoint (Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.) override;  Check current point in the geometry. ;  ; void CheckShape (TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) override;  Test for shape navigation methods. ;  ; Int_t Count",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:2520,Availability,down,down,2520," by CheckBoundaryErrors method. ;  ; void CheckEdit ();  Check if Ged library is loaded and load geometry editor classe. ;  ; void CheckGeometry (Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const override;  Geometry checking method (see TGeoChecker). ;  ; void CheckGeometryFull (Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) override;  Geometry checking method (see: TGeoManager::CheckGeometry()) ;  ; void CheckOverlaps (const TGeoVolume *vol, Double_t ovlp=0.1, Option_t *option="""") const override;  Check overlaps for the top volume of the geometry, within a limit OVLP. ;  ; void CheckPoint (Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.) override;  Check current point in the geometry. ;  ; void CheckShape (TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) override;  Test for shape navigation methods. ;  ; Int_t CountNodes (TGeoVolume *vol, Int_t level) const;  Count number of visible nodes down to a given level. ;  ; Int_t CountVisibleNodes () override;  Count total number of visible nodes. ;  ; void DefaultAngles () override;  Set default angles for the current view. ;  ; void DefaultColors () override;  Set default volume colors according to tracking media. ;  ; Int_t DistanceToPrimitiveVol (TGeoVolume *vol, Int_t px, Int_t py) override;  Compute the closest distance of approach from point px,py to a volume. ;  ; void Draw (Option_t *option="""") override;  Draw method. ;  ; void DrawBatemanSol (TGeoBatemanSol *sol, Option_t *option="""") override;  Draw the time evolution of a radionuclide. ;  ; void DrawCurrentPoint (Int_t color) override;  Draw current point in the same view. ;  ; void DrawOnly (Option_t *option="""") override;  Draw only one volume. ;  ; void DrawOverlap (void *ovlp, Option_t *option="""") override;  Draw an overlap. ;  ; void DrawPanel () override;  ; void DrawPath (const char *path, Option_t *option="""") override;  Draw ",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:8865,Availability,down,down,8865,"E-5 around current point. ;  ; void SetBombFactors (Double_t bombx=1.3, Double_t bomby=1.3, Double_t bombz=1.3, Double_t bombr=1.3) override;  Set cartesian and radial bomb factors for translations. ;  ; void SetCheckedNode (TGeoNode *node) override;  Select a node to be checked for overlaps. ;  ; void SetClippingShape (TGeoShape *shape) override;  ; void SetExplodedView (Int_t iopt=0) override;  Set type of exploding view. ;  ; void SetGeoManager (TGeoManager *geom) override;  ; void SetIteratorPlugin (TGeoIteratorPlugin *plugin) override;  ; void SetNmeshPoints (Int_t npoints) override;  Set number of points to be generated on the shape outline when checking for overlaps. ;  ; void SetNsegments (Int_t nseg=20) override;  Set number of segments to approximate circles. ;  ; void SetRaytracing (Bool_t flag=kTRUE) override;  ; void SetTopVisible (Bool_t vis=kTRUE) override;  Set top geometry volume as visible. ;  ; void SetTopVolume (TGeoVolume *vol) override;  ; void SetVisLevel (Int_t level=3) override;  Set default level down to which visualization is performed. ;  ; void SetVisOption (Int_t option=0) override;  Set drawing mode : ;  ; Int_t ShapeDistancetoPrimitive (const TGeoShape *shape, Int_t numpoints, Int_t px, Int_t py) const override;  Returns distance between point px,py on the pad an a shape. ;  ; void Test (Int_t npoints, Option_t *option) override;  Check time of finding ""Where am I"" for n points. ;  ; void TestOverlaps (const char *path) override;  Geometry overlap checker based on sampling. ;  ; Bool_t TestVoxels (TGeoVolume *vol) override;  Check voxels efficiency per volume. ;  ; void UnbombTranslation (const Double_t *tr, Double_t *bombtr) override;  Get the new 'unbombed' translation vector according current exploded view mode. ;  ; Double_t Weight (Double_t precision, Option_t *option=""v"") override;  Compute weight [kg] of the current volume. ;  ;  Public Member Functions inherited from TVirtualGeoPainter;  TVirtualGeoPainter (TGeoManager *manage",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:11831,Availability,error,error,11831,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:11920,Availability,error,error,11920,"longs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:12075,Availability,error,error,12075,"y. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:12372,Availability,error,error,12372,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:16823,Availability,error,error,16823," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void ClearVisibleVolumes ();  Clear the list of visible volumes reset the kVisOnScreen bit for volumes previously in the list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (prot",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:23265,Availability,error,errors,23265,"Average center of view of all painted tracklets and compute view box. ; Implements TVirtualGeoPainter.; Definition at line 138 of file TGeoPainter.cxx. ◆ BombTranslation(). void TGeoPainter::BombTranslation ; (; const Double_t * ; tr, . Double_t * ; bombtr . ). overridevirtual . Get the new 'bombed' translation vector according current exploded view mode. ; Implements TVirtualGeoPainter.; Definition at line 171 of file TGeoPainter.cxx. ◆ CheckBoundaryErrors(). void TGeoPainter::CheckBoundaryErrors ; (; Int_t ; ntracks = 1000000, . Double_t ; radius = -1. . ). overridevirtual . Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ; If radius is not mentioned the full bounding box will be sampled. ; Implements TVirtualGeoPainter.; Definition at line 200 of file TGeoPainter.cxx. ◆ CheckBoundaryReference(). void TGeoPainter::CheckBoundaryReference ; (; Int_t ; icheck = -1). overridevirtual . Check the boundary errors reference file created by CheckBoundaryErrors method. ; The shape for which the crossing failed is drawn with the starting point in red and the extrapolated point to boundary (+/- failing push/pull) in yellow. ; Implements TVirtualGeoPainter.; Definition at line 210 of file TGeoPainter.cxx. ◆ CheckEdit(). void TGeoPainter::CheckEdit ; (; ). Check if Ged library is loaded and load geometry editor classe. ; Definition at line 682 of file TGeoPainter.cxx. ◆ CheckGeometry(). void TGeoPainter::CheckGeometry ; (; Int_t ; nrays, . Double_t ; startx, . Double_t ; starty, . Double_t ; startz . ); const. overridevirtual . Geometry checking method (see TGeoChecker). ; Implements TVirtualGeoPainter.; Definition at line 226 of file TGeoPainter.cxx. ◆ CheckGeometryFull(). void TGeoPainter::CheckGeometryFull ; (; Bool_t ; checkoverlaps = kTRUE, . Bool_t ; checkcrossings = kTRUE, . Int_t ; nrays = 10000, . const Double_t * ; vertex = nullptr . ). overridevirtual . Geometry checking method (see: TGeoManager::CheckG",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:25885,Availability,down,down,25885,"Check current point in the geometry. ; Implements TVirtualGeoPainter.; Definition at line 242 of file TGeoPainter.cxx. ◆ CheckShape(). void TGeoPainter::CheckShape ; (; TGeoShape * ; shape, . Int_t ; testNo, . Int_t ; nsamples, . Option_t * ; option . ). overridevirtual . Test for shape navigation methods. ; Summary for test numbers:; 1: DistFromInside/Outside. Sample points inside the shape. Generate directions randomly in cos(theta). Compute DistFromInside and move the point with bigger distance. Compute DistFromOutside back from new point. Plot d-(d1+d2) . Implements TVirtualGeoPainter.; Definition at line 254 of file TGeoPainter.cxx. ◆ ClearVisibleVolumes(). void TGeoPainter::ClearVisibleVolumes ; (; ). protected . Clear the list of visible volumes reset the kVisOnScreen bit for volumes previously in the list. ; Definition at line 263 of file TGeoPainter.cxx. ◆ CountNodes(). Int_t TGeoPainter::CountNodes ; (; TGeoVolume * ; vol, . Int_t ; level . ); const. Count number of visible nodes down to a given level. ; Definition at line 582 of file TGeoPainter.cxx. ◆ CountVisibleNodes(). Int_t TGeoPainter::CountVisibleNodes ; (; ). overridevirtual . Count total number of visible nodes. ; Implements TVirtualGeoPainter.; Definition at line 636 of file TGeoPainter.cxx. ◆ DefaultAngles(). void TGeoPainter::DefaultAngles ; (; ). overridevirtual . Set default angles for the current view. ; Implements TVirtualGeoPainter.; Definition at line 555 of file TGeoPainter.cxx. ◆ DefaultColors(). void TGeoPainter::DefaultColors ; (; ). overridevirtual . Set default volume colors according to tracking media. ; Implements TVirtualGeoPainter.; Definition at line 570 of file TGeoPainter.cxx. ◆ DefineColors(). void TGeoPainter::DefineColors ; (; ); const. private . Define 100 colors with increasing light intensities for each basic color (1-7) Register these colors at indexes starting with 1000. ; Definition at line 279 of file TGeoPainter.cxx. ◆ DistanceToPrimitiveVol(). Int_t TGeoPainter::D",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:41152,Availability,down,down,41152," ; Implements TVirtualGeoPainter.; Definition at line 2007 of file TGeoPainter.cxx. ◆ SetNsegments(). void TGeoPainter::SetNsegments ; (; Int_t ; nseg = 20). overridevirtual . Set number of segments to approximate circles. ; Implements TVirtualGeoPainter.; Definition at line 1992 of file TGeoPainter.cxx. ◆ SetRaytracing(). void TGeoPainter::SetRaytracing ; (; Bool_t ; flag = kTRUE). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 171 of file TGeoPainter.h. ◆ SetTopVisible(). void TGeoPainter::SetTopVisible ; (; Bool_t ; vis = kTRUE). overridevirtual . Set top geometry volume as visible. ; Implements TVirtualGeoPainter.; Definition at line 2050 of file TGeoPainter.cxx. ◆ SetTopVolume(). void TGeoPainter::SetTopVolume ; (; TGeoVolume * ; vol). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 173 of file TGeoPainter.h. ◆ SetVisLevel(). void TGeoPainter::SetVisLevel ; (; Int_t ; level = 3). overridevirtual . Set default level down to which visualization is performed. ; Implements TVirtualGeoPainter.; Definition at line 2024 of file TGeoPainter.cxx. ◆ SetVisOption(). void TGeoPainter::SetVisOption ; (; Int_t ; option = 0). overridevirtual . Set drawing mode : . option=0 (default) all nodes drawn down to vislevel; option=1 leaves and nodes at vislevel drawn; option=2 path is drawn . Implements TVirtualGeoPainter.; Definition at line 2064 of file TGeoPainter.cxx. ◆ ShapeDistancetoPrimitive(). Int_t TGeoPainter::ShapeDistancetoPrimitive ; (; const TGeoShape * ; shape, . Int_t ; numpoints, . Int_t ; px, . Int_t ; py . ); const. overridevirtual . Returns distance between point px,py on the pad an a shape. ; Implements TVirtualGeoPainter.; Definition at line 2105 of file TGeoPainter.cxx. ◆ Test(). void TGeoPainter::Test ; (; Int_t ; npoints, . Option_t * ; option . ). overridevirtual . Check time of finding ""Where am I"" for n points. ; Implements TVirtualGeoPainter.; Definition at line 2170 of file TGeoPainter.cxx. ◆ TestOve",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:41426,Availability,down,down,41426," TGeoPainter.cxx. ◆ SetRaytracing(). void TGeoPainter::SetRaytracing ; (; Bool_t ; flag = kTRUE). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 171 of file TGeoPainter.h. ◆ SetTopVisible(). void TGeoPainter::SetTopVisible ; (; Bool_t ; vis = kTRUE). overridevirtual . Set top geometry volume as visible. ; Implements TVirtualGeoPainter.; Definition at line 2050 of file TGeoPainter.cxx. ◆ SetTopVolume(). void TGeoPainter::SetTopVolume ; (; TGeoVolume * ; vol). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 173 of file TGeoPainter.h. ◆ SetVisLevel(). void TGeoPainter::SetVisLevel ; (; Int_t ; level = 3). overridevirtual . Set default level down to which visualization is performed. ; Implements TVirtualGeoPainter.; Definition at line 2024 of file TGeoPainter.cxx. ◆ SetVisOption(). void TGeoPainter::SetVisOption ; (; Int_t ; option = 0). overridevirtual . Set drawing mode : . option=0 (default) all nodes drawn down to vislevel; option=1 leaves and nodes at vislevel drawn; option=2 path is drawn . Implements TVirtualGeoPainter.; Definition at line 2064 of file TGeoPainter.cxx. ◆ ShapeDistancetoPrimitive(). Int_t TGeoPainter::ShapeDistancetoPrimitive ; (; const TGeoShape * ; shape, . Int_t ; numpoints, . Int_t ; px, . Int_t ; py . ); const. overridevirtual . Returns distance between point px,py on the pad an a shape. ; Implements TVirtualGeoPainter.; Definition at line 2105 of file TGeoPainter.cxx. ◆ Test(). void TGeoPainter::Test ; (; Int_t ; npoints, . Option_t * ; option . ). overridevirtual . Check time of finding ""Where am I"" for n points. ; Implements TVirtualGeoPainter.; Definition at line 2170 of file TGeoPainter.cxx. ◆ TestOverlaps(). void TGeoPainter::TestOverlaps ; (; const char * ; path). overridevirtual . Geometry overlap checker based on sampling. ; Implements TVirtualGeoPainter.; Definition at line 2178 of file TGeoPainter.cxx. ◆ TestVoxels(). Bool_t TGeoPainter::TestVoxels ; (; TGeoVolume * ; vol). over",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:5992,Deployability,update,update,5992,"de;  ; void GetViewAngles (Double_t &longitude, Double_t &latitude, Double_t &psi) override;  Get the current view angles. ;  ; Double_t * GetViewBox () override;  ; Int_t GetVisLevel () const override;  ; Int_t GetVisOption () const override;  ; const char * GetVolumeInfo (const TGeoVolume *volume, Int_t px, Int_t py) const override;  Get some info about the current selected volume. ;  ; void GrabFocus (Int_t nfr=0, Double_t dlong=0, Double_t dlat=0, Double_t dpsi=0) override;  Move focus to current volume. ;  ; Bool_t IsExplodedView () const override;  ; Bool_t IsPaintingShape () const override;  ; Bool_t IsRaytracing () const override;  ; TH2F * LegoPlot (Int_t ntheta=60, Double_t themin=0., Double_t themax=180., Int_t nphi=90, Double_t phimin=0., Double_t phimax=360., Double_t rmin=0., Double_t rmax=9999999, Option_t *option="""") override;  Generate a lego plot fot the top volume, according to option. ;  ; void Lock (Bool_t flag=kTRUE);  ; void ModifiedPad (Bool_t update=kFALSE) const override;  Check if a pad and view are present and send signal ""Modified"" to pad. ;  ; void OpProgress (const char *opname, Long64_t current, Long64_t size, TStopwatch *watch=nullptr, Bool_t last=kFALSE, Bool_t refresh=kFALSE, const char *msg="""") override;  Text progress bar. ;  ; void Paint (Option_t *option="""") override;  Paint current geometry according to option. ;  ; void PaintNode (TGeoNode *node, Option_t *option="""", TGeoMatrix *global=nullptr) override;  Paint recursively a node and its content according to visualization options. ;  ; void PaintOverlap (void *ovlp, Option_t *option="""") override;  Paint an overlap. ;  ; void PaintPhysicalNode (TGeoPhysicalNode *node, Option_t *option="""");  Paints a physical node associated with a path. ;  ; Bool_t PaintShape (const TGeoShape &shape, Option_t *option) const;  Paint the supplied shape into the current 3D viewer. ;  ; void PaintShape (TGeoShape *shape, Option_t *option="""") override;  Paint an overlap. ;  ; void PaintVolume (TGeoV",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:34926,Deployability,update,update,34926,"l_t TGeoPainter::IsRaytracing ; (; ); const. inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 137 of file TGeoPainter.h. ◆ LegoPlot(). TH2F * TGeoPainter::LegoPlot ; (; Int_t ; ntheta = 60, . Double_t ; themin = 0., . Double_t ; themax = 180., . Int_t ; nphi = 90, . Double_t ; phimin = 0., . Double_t ; phimax = 360., . Double_t ; rmin = 0., . Double_t ; rmax = 9999999, . Option_t * ; option = """" . ). overridevirtual . Generate a lego plot fot the top volume, according to option. ; Implements TVirtualGeoPainter.; Definition at line 1241 of file TGeoPainter.cxx. ◆ LocalToMasterVect(). void TGeoPainter::LocalToMasterVect ; (; const Double_t * ; local, . Double_t * ; master . ); const. private . Convert a local vector according view rotation matrix. ; Definition at line 1249 of file TGeoPainter.cxx. ◆ Lock(). void TGeoPainter::Lock ; (; Bool_t ; flag = kTRUE). inline . Definition at line 142 of file TGeoPainter.h. ◆ ModifiedPad(). void TGeoPainter::ModifiedPad ; (; Bool_t ; update = kFALSE); const. overridevirtual . Check if a pad and view are present and send signal ""Modified"" to pad. ; Implements TVirtualGeoPainter.; Definition at line 1258 of file TGeoPainter.cxx. ◆ OpProgress(). void TGeoPainter::OpProgress ; (; const char * ; opname, . Long64_t ; current, . Long64_t ; size, . TStopwatch * ; watch = nullptr, . Bool_t ; last = kFALSE, . Bool_t ; refresh = kFALSE, . const char * ; msg = """" . ). overridevirtual . Text progress bar. ; Implements TVirtualGeoPainter.; Definition at line 1684 of file TGeoPainter.cxx. ◆ Paint(). void TGeoPainter::Paint ; (; Option_t * ; option = """"). overridevirtual . Paint current geometry according to option. ; Implements TVirtualGeoPainter.; Definition at line 1278 of file TGeoPainter.cxx. ◆ PaintNode(). void TGeoPainter::PaintNode ; (; TGeoNode * ; node, . Option_t * ; option = """", . TGeoMatrix * ; global = nullptr . ). overridevirtual . Paint recursively a node and its content according to visualization options",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:368,Integrability,interface,interfaces,368,". ROOT: TGeoPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TGeoPainter Class ReferenceThe Geometry Package » Geometry painter. ; Class implementing all draw interfaces for a generic 3D viewer using TBuffer3D mechanism. ; Definition at line 39 of file TGeoPainter.h. Public Member Functions;  TGeoPainter (TGeoManager *manager);  Default constructor. ;  ;  ~TGeoPainter () override;  Default destructor. ;  ; void AddSize3D (Int_t numpoints, Int_t numsegs, Int_t numpolys) override;  Add numpoints, numsegs, numpolys to the global 3D size. ;  ; TVirtualGeoTrack * AddTrack (Int_t id, Int_t pdgcode, TObject *part) override;  Create a primary TGeoTrack. ;  ; void AddTrackPoint (Double_t *point, Double_t *box, Bool_t reset=kFALSE) override;  Average center of view of all painted tracklets and compute view box. ;  ; void BombTranslation (const Double_t *tr, Double_t *bombtr) override;  Get the new 'bombed' translation vector according current exploded view mode. ;  ; void CheckBoundaryErrors (Int_t ntracks=1000000, Double_t radius=-1.) override;  Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ;  ; void CheckBoundaryReference (Int_t icheck=-1) override;  Check the boundary errors reference file created by CheckBoundaryErrors method. ;  ; void CheckEdit ();  Check if Ged library is loaded and load geometry editor classe. ;  ; void CheckGeometry (Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const override;  Geometry checking method (see TGeoChecker). ;  ; void CheckGeometryFull (Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) override;  Geometry checking method (see: TGeoManager::CheckGeometry()) ;  ; void CheckOverlaps (const TGeoV",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:11837,Integrability,message,message,11837,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:12378,Integrability,message,message,12378,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:13580,Integrability,message,message,13580,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:16829,Integrability,message,message,16829," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void ClearVisibleVolumes ();  Clear the list of visible volumes reset the kVisOnScreen bit for volumes previously in the list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (prot",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:17202,Integrability,message,message,17202," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void ClearVisibleVolumes ();  Clear the list of visible volumes reset the kVisOnScreen bit for volumes previously in the list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void DefineColors () const;  Define 100 colors with increasing light intensities for each basic color (1-7) Register these colors at indexes starting with 1000. ;  ; void LocalToMasterVect (const Double_t *local, Double_t *master) const;  Convert a local vector according view rotation matrix. ;  . Private Attrib",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:8356,Modifiability,plugin,plugin,8356,"g box of a volume. ;  ; void RandomRays (Int_t nrays, Double_t startx, Double_t starty, Double_t startz, const char *target_vol=nullptr, Bool_t check_norm=kFALSE) override;  Shoot nrays in the current drawn geometry. ;  ; void Raytrace (Option_t *option="""") override;  Raytrace current drawn geometry. ;  ; TGeoNode * SamplePoints (Int_t npoints, Double_t &dist, Double_t epsil, const char *g3path) override;  Shoot npoints randomly in a box of 1E-5 around current point. ;  ; void SetBombFactors (Double_t bombx=1.3, Double_t bomby=1.3, Double_t bombz=1.3, Double_t bombr=1.3) override;  Set cartesian and radial bomb factors for translations. ;  ; void SetCheckedNode (TGeoNode *node) override;  Select a node to be checked for overlaps. ;  ; void SetClippingShape (TGeoShape *shape) override;  ; void SetExplodedView (Int_t iopt=0) override;  Set type of exploding view. ;  ; void SetGeoManager (TGeoManager *geom) override;  ; void SetIteratorPlugin (TGeoIteratorPlugin *plugin) override;  ; void SetNmeshPoints (Int_t npoints) override;  Set number of points to be generated on the shape outline when checking for overlaps. ;  ; void SetNsegments (Int_t nseg=20) override;  Set number of segments to approximate circles. ;  ; void SetRaytracing (Bool_t flag=kTRUE) override;  ; void SetTopVisible (Bool_t vis=kTRUE) override;  Set top geometry volume as visible. ;  ; void SetTopVolume (TGeoVolume *vol) override;  ; void SetVisLevel (Int_t level=3) override;  Set default level down to which visualization is performed. ;  ; void SetVisOption (Int_t option=0) override;  Set drawing mode : ;  ; Int_t ShapeDistancetoPrimitive (const TGeoShape *shape, Int_t numpoints, Int_t px, Int_t py) const override;  Returns distance between point px,py on the pad an a shape. ;  ; void Test (Int_t npoints, Option_t *option) override;  Check time of finding ""Where am I"" for n points. ;  ; void TestOverlaps (const char *path) override;  Geometry overlap checker based on sampling. ;  ; Bool_t TestVoxels (",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:9752,Modifiability,inherit,inherited,9752,"ide;  ; void SetVisLevel (Int_t level=3) override;  Set default level down to which visualization is performed. ;  ; void SetVisOption (Int_t option=0) override;  Set drawing mode : ;  ; Int_t ShapeDistancetoPrimitive (const TGeoShape *shape, Int_t numpoints, Int_t px, Int_t py) const override;  Returns distance between point px,py on the pad an a shape. ;  ; void Test (Int_t npoints, Option_t *option) override;  Check time of finding ""Where am I"" for n points. ;  ; void TestOverlaps (const char *path) override;  Geometry overlap checker based on sampling. ;  ; Bool_t TestVoxels (TGeoVolume *vol) override;  Check voxels efficiency per volume. ;  ; void UnbombTranslation (const Double_t *tr, Double_t *bombtr) override;  Get the new 'unbombed' translation vector according current exploded view mode. ;  ; Double_t Weight (Double_t precision, Option_t *option=""v"") override;  Compute weight [kg] of the current volume. ;  ;  Public Member Functions inherited from TVirtualGeoPainter;  TVirtualGeoPainter (TGeoManager *manager);  Geometry painter default constructor. ;  ;  ~TVirtualGeoPainter () override;  Geometry painter default destructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:10154,Modifiability,inherit,inherited,10154," pad an a shape. ;  ; void Test (Int_t npoints, Option_t *option) override;  Check time of finding ""Where am I"" for n points. ;  ; void TestOverlaps (const char *path) override;  Geometry overlap checker based on sampling. ;  ; Bool_t TestVoxels (TGeoVolume *vol) override;  Check voxels efficiency per volume. ;  ; void UnbombTranslation (const Double_t *tr, Double_t *bombtr) override;  Get the new 'unbombed' translation vector according current exploded view mode. ;  ; Double_t Weight (Double_t precision, Option_t *option=""v"") override;  Compute weight [kg] of the current volume. ;  ;  Public Member Functions inherited from TVirtualGeoPainter;  TVirtualGeoPainter (TGeoManager *manager);  Geometry painter default constructor. ;  ;  ~TVirtualGeoPainter () override;  Geometry painter default destructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:11467,Modifiability,inherit,inheritance,11467," ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:13678,Modifiability,inherit,inherits,13678,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:13795,Modifiability,inherit,inherits,13795,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:17672,Modifiability,inherit,inherited,17672," ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void ClearVisibleVolumes ();  Clear the list of visible volumes reset the kVisOnScreen bit for volumes previously in the list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void DefineColors () const;  Define 100 colors with increasing light intensities for each basic color (1-7) Register these colors at indexes starting with 1000. ;  ; void LocalToMasterVect (const Double_t *local, Double_t *master) const;  Convert a local vector according view rotation matrix. ;  . Private Attributes; Double_t fBombR;  ; Double_t fBombX;  ; Double_t fBombY;  ; Double_t fBombZ;  ; TBuffer3D * fBuffer;  ; Double_t fCheckedBox [6];  ; TGeoNode * fCheckedNode;  ; TGeoChecker * fChecker;  ; TGeoShape * fClippingShape;  ; Int_t fExplodedView;  ; TGeoManager * fGeoManager;  ; TGeoHMatrix * fGlobal;  ; Bool_t fIsEditable;  ; Bool_t fIsPaintingShape;  ; Bool_t fIsRaytracing;  ; TGeoVolume * fLastVolume;  ; Double_t fMat [9];  ; Int_t fNsegments;  ; Int_t fNVisNodes;  ; TGeoOverlap * fOverlap;  ; Bool_t fPaintingOverlaps;  ; TGeoIter",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:18985,Modifiability,inherit,inherited,18985," Convert a local vector according view rotation matrix. ;  . Private Attributes; Double_t fBombR;  ; Double_t fBombX;  ; Double_t fBombY;  ; Double_t fBombZ;  ; TBuffer3D * fBuffer;  ; Double_t fCheckedBox [6];  ; TGeoNode * fCheckedNode;  ; TGeoChecker * fChecker;  ; TGeoShape * fClippingShape;  ; Int_t fExplodedView;  ; TGeoManager * fGeoManager;  ; TGeoHMatrix * fGlobal;  ; Bool_t fIsEditable;  ; Bool_t fIsPaintingShape;  ; Bool_t fIsRaytracing;  ; TGeoVolume * fLastVolume;  ; Double_t fMat [9];  ; Int_t fNsegments;  ; Int_t fNVisNodes;  ; TGeoOverlap * fOverlap;  ; Bool_t fPaintingOverlaps;  ; TGeoIteratorPlugin * fPlugin;  ; Bool_t fTopVisible;  ; TGeoVolume * fTopVolume;  ; TString fVisBranch;  ; Int_t fVisLevel;  ; Bool_t fVisLock;  ; Int_t fVisOption;  ; TObjArray * fVisVolumes;  ; TString fVolInfo;  . Additional Inherited Members;  Public Types inherited from TVirtualGeoPainter; enum  EGeoBombOption { kGeoNoBomb = 0; , kGeoBombXYZ = 1; , kGeoBombCyl = 2; , kGeoBombSph = 3; };  ; enum  EGeoVisLevel { kGeoVisLevel = 0; };  ; enum  EGeoVisOption { ;   kGeoVisDefault = 0; , kGeoVisLeaves = 1; , kGeoVisOnly = 2; , kGeoVisBranch = 3; , ;   kGeoVisChanged = 4. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TVirtualGeoPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version (",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:19320,Modifiability,inherit,inherited,19320,"ape * fClippingShape;  ; Int_t fExplodedView;  ; TGeoManager * fGeoManager;  ; TGeoHMatrix * fGlobal;  ; Bool_t fIsEditable;  ; Bool_t fIsPaintingShape;  ; Bool_t fIsRaytracing;  ; TGeoVolume * fLastVolume;  ; Double_t fMat [9];  ; Int_t fNsegments;  ; Int_t fNVisNodes;  ; TGeoOverlap * fOverlap;  ; Bool_t fPaintingOverlaps;  ; TGeoIteratorPlugin * fPlugin;  ; Bool_t fTopVisible;  ; TGeoVolume * fTopVolume;  ; TString fVisBranch;  ; Int_t fVisLevel;  ; Bool_t fVisLock;  ; Int_t fVisOption;  ; TObjArray * fVisVolumes;  ; TString fVolInfo;  . Additional Inherited Members;  Public Types inherited from TVirtualGeoPainter; enum  EGeoBombOption { kGeoNoBomb = 0; , kGeoBombXYZ = 1; , kGeoBombCyl = 2; , kGeoBombSph = 3; };  ; enum  EGeoVisLevel { kGeoVisLevel = 0; };  ; enum  EGeoVisOption { ;   kGeoVisDefault = 0; , kGeoVisLeaves = 1; , kGeoVisOnly = 2; , kGeoVisBranch = 3; , ;   kGeoVisChanged = 4. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TVirtualGeoPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoPainter * GeoPainter ();  Static function returning a pointer to the geometry painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:19976,Modifiability,inherit,inherited,19976,"BombSph = 3; };  ; enum  EGeoVisLevel { kGeoVisLevel = 0; };  ; enum  EGeoVisOption { ;   kGeoVisDefault = 0; , kGeoVisLeaves = 1; , kGeoVisOnly = 2; , kGeoVisBranch = 3; , ;   kGeoVisChanged = 4. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TVirtualGeoPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoPainter * GeoPainter ();  Static function returning a pointer to the geometry painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TVirtualGeoPainter; static TVirtualGeoPainter * fgGeoPa",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:20431,Modifiability,inherit,inherited,20431,"); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TVirtualGeoPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoPainter * GeoPainter ();  Static function returning a pointer to the geometry painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TVirtualGeoPainter; static TVirtualGeoPainter * fgGeoPainter = nullptr;  . #include <TGeoPainter.h>. Inheritance diagram for TGeoPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPainter(). TGeoPainter::TGeoPainter ; (; TGeoManager * ; manager). Default constructor. ; Definition at line 65 of file TGeoPainter.cxx. ◆ ~TGeoPainter(). TGeoPainter::~TGeoPainter ; (; ). override . Def",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:20934,Modifiability,inherit,inherited,20934," TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoPainter * GeoPainter ();  Static function returning a pointer to the geometry painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TVirtualGeoPainter; static TVirtualGeoPainter * fgGeoPainter = nullptr;  . #include <TGeoPainter.h>. Inheritance diagram for TGeoPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPainter(). TGeoPainter::TGeoPainter ; (; TGeoManager * ; manager). Default constructor. ; Definition at line 65 of file TGeoPainter.cxx. ◆ ~TGeoPainter(). TGeoPainter::~TGeoPainter ; (; ). override . Default destructor. ; Definition at line 108 of file TGeoPainter.cxx. Member Function Documentation. ◆ AddSize3D(). void TGeoPainter::AddSize3D ; (; Int_t ; numpoints, . Int_t ; numsegs, . Int_t ; numpolys . ). overridevirtual . Add numpoints, numsegs, numpolys to the global 3D size. ; Implements TVirtualGeoPainter.; Definition at line 121 of file TGeoPainter.cxx. ◆ AddTrack(). TVirtualGeoTrack * TGeoPainter::AddTrack ; (; Int_t ; id, . Int_t ; pdgcode, . TObject * ; part . ). overr",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:21034,Modifiability,inherit,inherited,21034," TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoPainter * GeoPainter ();  Static function returning a pointer to the geometry painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TVirtualGeoPainter; static TVirtualGeoPainter * fgGeoPainter = nullptr;  . #include <TGeoPainter.h>. Inheritance diagram for TGeoPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPainter(). TGeoPainter::TGeoPainter ; (; TGeoManager * ; manager). Default constructor. ; Definition at line 65 of file TGeoPainter.cxx. ◆ ~TGeoPainter(). TGeoPainter::~TGeoPainter ; (; ). override . Default destructor. ; Definition at line 108 of file TGeoPainter.cxx. Member Function Documentation. ◆ AddSize3D(). void TGeoPainter::AddSize3D ; (; Int_t ; numpoints, . Int_t ; numsegs, . Int_t ; numpolys . ). overridevirtual . Add numpoints, numsegs, numpolys to the global 3D size. ; Implements TVirtualGeoPainter.; Definition at line 121 of file TGeoPainter.cxx. ◆ AddTrack(). TVirtualGeoTrack * TGeoPainter::AddTrack ; (; Int_t ; id, . Int_t ; pdgcode, . TObject * ; part . ). overr",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:39873,Modifiability,plugin,plugin,39873,translations. ; Implements TVirtualGeoPainter.; Definition at line 1949 of file TGeoPainter.cxx. ◆ SetCheckedNode(). void TGeoPainter::SetCheckedNode ; (; TGeoNode * ; node). overridevirtual . Select a node to be checked for overlaps. ; All overlaps not involving it will be ignored. ; Implements TVirtualGeoPainter.; Definition at line 2016 of file TGeoPainter.cxx. ◆ SetClippingShape(). void TGeoPainter::SetClippingShape ; (; TGeoShape * ; shape). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 160 of file TGeoPainter.h. ◆ SetExplodedView(). void TGeoPainter::SetExplodedView ; (; Int_t ; iopt = 0). overridevirtual . Set type of exploding view. ; Implements TVirtualGeoPainter.; Definition at line 1962 of file TGeoPainter.cxx. ◆ SetGeoManager(). void TGeoPainter::SetGeoManager ; (; TGeoManager * ; geom). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 164 of file TGeoPainter.h. ◆ SetIteratorPlugin(). void TGeoPainter::SetIteratorPlugin ; (; TGeoIteratorPlugin * ; plugin). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 165 of file TGeoPainter.h. ◆ SetNmeshPoints(). void TGeoPainter::SetNmeshPoints ; (; Int_t ; npoints). overridevirtual . Set number of points to be generated on the shape outline when checking for overlaps. ; Implements TVirtualGeoPainter.; Definition at line 2007 of file TGeoPainter.cxx. ◆ SetNsegments(). void TGeoPainter::SetNsegments ; (; Int_t ; nseg = 20). overridevirtual . Set number of segments to approximate circles. ; Implements TVirtualGeoPainter.; Definition at line 1992 of file TGeoPainter.cxx. ◆ SetRaytracing(). void TGeoPainter::SetRaytracing ; (; Bool_t ; flag = kTRUE). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 171 of file TGeoPainter.h. ◆ SetTopVisible(). void TGeoPainter::SetTopVisible ; (; Bool_t ; vis = kTRUE). overridevirtual . Set top geometry volume as visible. ; Implements TVirtualGeoPainter.; Definition at line 2050 of ,MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:1566,Performance,load,loaded,1566," ;  ;  ~TGeoPainter () override;  Default destructor. ;  ; void AddSize3D (Int_t numpoints, Int_t numsegs, Int_t numpolys) override;  Add numpoints, numsegs, numpolys to the global 3D size. ;  ; TVirtualGeoTrack * AddTrack (Int_t id, Int_t pdgcode, TObject *part) override;  Create a primary TGeoTrack. ;  ; void AddTrackPoint (Double_t *point, Double_t *box, Bool_t reset=kFALSE) override;  Average center of view of all painted tracklets and compute view box. ;  ; void BombTranslation (const Double_t *tr, Double_t *bombtr) override;  Get the new 'bombed' translation vector according current exploded view mode. ;  ; void CheckBoundaryErrors (Int_t ntracks=1000000, Double_t radius=-1.) override;  Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ;  ; void CheckBoundaryReference (Int_t icheck=-1) override;  Check the boundary errors reference file created by CheckBoundaryErrors method. ;  ; void CheckEdit ();  Check if Ged library is loaded and load geometry editor classe. ;  ; void CheckGeometry (Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const override;  Geometry checking method (see TGeoChecker). ;  ; void CheckGeometryFull (Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) override;  Geometry checking method (see: TGeoManager::CheckGeometry()) ;  ; void CheckOverlaps (const TGeoVolume *vol, Double_t ovlp=0.1, Option_t *option="""") const override;  Check overlaps for the top volume of the geometry, within a limit OVLP. ;  ; void CheckPoint (Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.) override;  Check current point in the geometry. ;  ; void CheckShape (TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) override;  Test for shape navigation methods. ;  ; Int_t CountNodes (TGeoVolume *vol, Int_t level) const;  Count number of visible nodes down to a given level. ;  ; Int_t CountVi",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:1577,Performance,load,load,1577," ;  ;  ~TGeoPainter () override;  Default destructor. ;  ; void AddSize3D (Int_t numpoints, Int_t numsegs, Int_t numpolys) override;  Add numpoints, numsegs, numpolys to the global 3D size. ;  ; TVirtualGeoTrack * AddTrack (Int_t id, Int_t pdgcode, TObject *part) override;  Create a primary TGeoTrack. ;  ; void AddTrackPoint (Double_t *point, Double_t *box, Bool_t reset=kFALSE) override;  Average center of view of all painted tracklets and compute view box. ;  ; void BombTranslation (const Double_t *tr, Double_t *bombtr) override;  Get the new 'bombed' translation vector according current exploded view mode. ;  ; void CheckBoundaryErrors (Int_t ntracks=1000000, Double_t radius=-1.) override;  Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ;  ; void CheckBoundaryReference (Int_t icheck=-1) override;  Check the boundary errors reference file created by CheckBoundaryErrors method. ;  ; void CheckEdit ();  Check if Ged library is loaded and load geometry editor classe. ;  ; void CheckGeometry (Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const override;  Geometry checking method (see TGeoChecker). ;  ; void CheckGeometryFull (Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) override;  Geometry checking method (see: TGeoManager::CheckGeometry()) ;  ; void CheckOverlaps (const TGeoVolume *vol, Double_t ovlp=0.1, Option_t *option="""") const override;  Check overlaps for the top volume of the geometry, within a limit OVLP. ;  ; void CheckPoint (Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.) override;  Check current point in the geometry. ;  ; void CheckShape (TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) override;  Test for shape navigation methods. ;  ; Int_t CountNodes (TGeoVolume *vol, Int_t level) const;  Count number of visible nodes down to a given level. ;  ; Int_t CountVi",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:8896,Performance,perform,performed,8896,"E-5 around current point. ;  ; void SetBombFactors (Double_t bombx=1.3, Double_t bomby=1.3, Double_t bombz=1.3, Double_t bombr=1.3) override;  Set cartesian and radial bomb factors for translations. ;  ; void SetCheckedNode (TGeoNode *node) override;  Select a node to be checked for overlaps. ;  ; void SetClippingShape (TGeoShape *shape) override;  ; void SetExplodedView (Int_t iopt=0) override;  Set type of exploding view. ;  ; void SetGeoManager (TGeoManager *geom) override;  ; void SetIteratorPlugin (TGeoIteratorPlugin *plugin) override;  ; void SetNmeshPoints (Int_t npoints) override;  Set number of points to be generated on the shape outline when checking for overlaps. ;  ; void SetNsegments (Int_t nseg=20) override;  Set number of segments to approximate circles. ;  ; void SetRaytracing (Bool_t flag=kTRUE) override;  ; void SetTopVisible (Bool_t vis=kTRUE) override;  Set top geometry volume as visible. ;  ; void SetTopVolume (TGeoVolume *vol) override;  ; void SetVisLevel (Int_t level=3) override;  Set default level down to which visualization is performed. ;  ; void SetVisOption (Int_t option=0) override;  Set drawing mode : ;  ; Int_t ShapeDistancetoPrimitive (const TGeoShape *shape, Int_t numpoints, Int_t px, Int_t py) const override;  Returns distance between point px,py on the pad an a shape. ;  ; void Test (Int_t npoints, Option_t *option) override;  Check time of finding ""Where am I"" for n points. ;  ; void TestOverlaps (const char *path) override;  Geometry overlap checker based on sampling. ;  ; Bool_t TestVoxels (TGeoVolume *vol) override;  Check voxels efficiency per volume. ;  ; void UnbombTranslation (const Double_t *tr, Double_t *bombtr) override;  Get the new 'unbombed' translation vector according current exploded view mode. ;  ; Double_t Weight (Double_t precision, Option_t *option=""v"") override;  Compute weight [kg] of the current volume. ;  ;  Public Member Functions inherited from TVirtualGeoPainter;  TVirtualGeoPainter (TGeoManager *manage",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:23639,Performance,load,loaded,23639,"mplements TVirtualGeoPainter.; Definition at line 171 of file TGeoPainter.cxx. ◆ CheckBoundaryErrors(). void TGeoPainter::CheckBoundaryErrors ; (; Int_t ; ntracks = 1000000, . Double_t ; radius = -1. . ). overridevirtual . Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ; If radius is not mentioned the full bounding box will be sampled. ; Implements TVirtualGeoPainter.; Definition at line 200 of file TGeoPainter.cxx. ◆ CheckBoundaryReference(). void TGeoPainter::CheckBoundaryReference ; (; Int_t ; icheck = -1). overridevirtual . Check the boundary errors reference file created by CheckBoundaryErrors method. ; The shape for which the crossing failed is drawn with the starting point in red and the extrapolated point to boundary (+/- failing push/pull) in yellow. ; Implements TVirtualGeoPainter.; Definition at line 210 of file TGeoPainter.cxx. ◆ CheckEdit(). void TGeoPainter::CheckEdit ; (; ). Check if Ged library is loaded and load geometry editor classe. ; Definition at line 682 of file TGeoPainter.cxx. ◆ CheckGeometry(). void TGeoPainter::CheckGeometry ; (; Int_t ; nrays, . Double_t ; startx, . Double_t ; starty, . Double_t ; startz . ); const. overridevirtual . Geometry checking method (see TGeoChecker). ; Implements TVirtualGeoPainter.; Definition at line 226 of file TGeoPainter.cxx. ◆ CheckGeometryFull(). void TGeoPainter::CheckGeometryFull ; (; Bool_t ; checkoverlaps = kTRUE, . Bool_t ; checkcrossings = kTRUE, . Int_t ; nrays = 10000, . const Double_t * ; vertex = nullptr . ). overridevirtual . Geometry checking method (see: TGeoManager::CheckGeometry()) ; Implements TVirtualGeoPainter.; Definition at line 218 of file TGeoPainter.cxx. ◆ CheckOverlaps(). void TGeoPainter::CheckOverlaps ; (; const TGeoVolume * ; vol, . Double_t ; ovlp = 0.1, . Option_t * ; option = """" . ); const. overridevirtual . Check overlaps for the top volume of the geometry, within a limit OVLP. ; Implements TVirtualGeoPainter.",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:23650,Performance,load,load,23650,"mplements TVirtualGeoPainter.; Definition at line 171 of file TGeoPainter.cxx. ◆ CheckBoundaryErrors(). void TGeoPainter::CheckBoundaryErrors ; (; Int_t ; ntracks = 1000000, . Double_t ; radius = -1. . ). overridevirtual . Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ; If radius is not mentioned the full bounding box will be sampled. ; Implements TVirtualGeoPainter.; Definition at line 200 of file TGeoPainter.cxx. ◆ CheckBoundaryReference(). void TGeoPainter::CheckBoundaryReference ; (; Int_t ; icheck = -1). overridevirtual . Check the boundary errors reference file created by CheckBoundaryErrors method. ; The shape for which the crossing failed is drawn with the starting point in red and the extrapolated point to boundary (+/- failing push/pull) in yellow. ; Implements TVirtualGeoPainter.; Definition at line 210 of file TGeoPainter.cxx. ◆ CheckEdit(). void TGeoPainter::CheckEdit ; (; ). Check if Ged library is loaded and load geometry editor classe. ; Definition at line 682 of file TGeoPainter.cxx. ◆ CheckGeometry(). void TGeoPainter::CheckGeometry ; (; Int_t ; nrays, . Double_t ; startx, . Double_t ; starty, . Double_t ; startz . ); const. overridevirtual . Geometry checking method (see TGeoChecker). ; Implements TVirtualGeoPainter.; Definition at line 226 of file TGeoPainter.cxx. ◆ CheckGeometryFull(). void TGeoPainter::CheckGeometryFull ; (; Bool_t ; checkoverlaps = kTRUE, . Bool_t ; checkcrossings = kTRUE, . Int_t ; nrays = 10000, . const Double_t * ; vertex = nullptr . ). overridevirtual . Geometry checking method (see: TGeoManager::CheckGeometry()) ; Implements TVirtualGeoPainter.; Definition at line 218 of file TGeoPainter.cxx. ◆ CheckOverlaps(). void TGeoPainter::CheckOverlaps ; (; const TGeoVolume * ; vol, . Double_t ; ovlp = 0.1, . Option_t * ; option = """" . ); const. overridevirtual . Check overlaps for the top volume of the geometry, within a limit OVLP. ; Implements TVirtualGeoPainter.",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:41183,Performance,perform,performed,41183," ; Implements TVirtualGeoPainter.; Definition at line 2007 of file TGeoPainter.cxx. ◆ SetNsegments(). void TGeoPainter::SetNsegments ; (; Int_t ; nseg = 20). overridevirtual . Set number of segments to approximate circles. ; Implements TVirtualGeoPainter.; Definition at line 1992 of file TGeoPainter.cxx. ◆ SetRaytracing(). void TGeoPainter::SetRaytracing ; (; Bool_t ; flag = kTRUE). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 171 of file TGeoPainter.h. ◆ SetTopVisible(). void TGeoPainter::SetTopVisible ; (; Bool_t ; vis = kTRUE). overridevirtual . Set top geometry volume as visible. ; Implements TVirtualGeoPainter.; Definition at line 2050 of file TGeoPainter.cxx. ◆ SetTopVolume(). void TGeoPainter::SetTopVolume ; (; TGeoVolume * ; vol). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 173 of file TGeoPainter.h. ◆ SetVisLevel(). void TGeoPainter::SetVisLevel ; (; Int_t ; level = 3). overridevirtual . Set default level down to which visualization is performed. ; Implements TVirtualGeoPainter.; Definition at line 2024 of file TGeoPainter.cxx. ◆ SetVisOption(). void TGeoPainter::SetVisOption ; (; Int_t ; option = 0). overridevirtual . Set drawing mode : . option=0 (default) all nodes drawn down to vislevel; option=1 leaves and nodes at vislevel drawn; option=2 path is drawn . Implements TVirtualGeoPainter.; Definition at line 2064 of file TGeoPainter.cxx. ◆ ShapeDistancetoPrimitive(). Int_t TGeoPainter::ShapeDistancetoPrimitive ; (; const TGeoShape * ; shape, . Int_t ; numpoints, . Int_t ; px, . Int_t ; py . ); const. overridevirtual . Returns distance between point px,py on the pad an a shape. ; Implements TVirtualGeoPainter.; Definition at line 2105 of file TGeoPainter.cxx. ◆ Test(). void TGeoPainter::Test ; (; Int_t ; npoints, . Option_t * ; option . ). overridevirtual . Check time of finding ""Where am I"" for n points. ; Implements TVirtualGeoPainter.; Definition at line 2170 of file TGeoPainter.cxx. ◆ TestOve",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:2236,Safety,safe,safety,2236,"undaryErrors (Int_t ntracks=1000000, Double_t radius=-1.) override;  Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ;  ; void CheckBoundaryReference (Int_t icheck=-1) override;  Check the boundary errors reference file created by CheckBoundaryErrors method. ;  ; void CheckEdit ();  Check if Ged library is loaded and load geometry editor classe. ;  ; void CheckGeometry (Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const override;  Geometry checking method (see TGeoChecker). ;  ; void CheckGeometryFull (Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) override;  Geometry checking method (see: TGeoManager::CheckGeometry()) ;  ; void CheckOverlaps (const TGeoVolume *vol, Double_t ovlp=0.1, Option_t *option="""") const override;  Check overlaps for the top volume of the geometry, within a limit OVLP. ;  ; void CheckPoint (Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.) override;  Check current point in the geometry. ;  ; void CheckShape (TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) override;  Test for shape navigation methods. ;  ; Int_t CountNodes (TGeoVolume *vol, Int_t level) const;  Count number of visible nodes down to a given level. ;  ; Int_t CountVisibleNodes () override;  Count total number of visible nodes. ;  ; void DefaultAngles () override;  Set default angles for the current view. ;  ; void DefaultColors () override;  Set default volume colors according to tracking media. ;  ; Int_t DistanceToPrimitiveVol (TGeoVolume *vol, Int_t px, Int_t py) override;  Compute the closest distance of approach from point px,py to a volume. ;  ; void Draw (Option_t *option="""") override;  Draw method. ;  ; void DrawBatemanSol (TGeoBatemanSol *sol, Option_t *option="""") override;  Draw the time evolution of a radionuclide. ;  ; void DrawCurrentPoint (Int_t color) override;  Draw curr",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:24845,Safety,safe,safety,24845,"Double_t ; startz . ); const. overridevirtual . Geometry checking method (see TGeoChecker). ; Implements TVirtualGeoPainter.; Definition at line 226 of file TGeoPainter.cxx. ◆ CheckGeometryFull(). void TGeoPainter::CheckGeometryFull ; (; Bool_t ; checkoverlaps = kTRUE, . Bool_t ; checkcrossings = kTRUE, . Int_t ; nrays = 10000, . const Double_t * ; vertex = nullptr . ). overridevirtual . Geometry checking method (see: TGeoManager::CheckGeometry()) ; Implements TVirtualGeoPainter.; Definition at line 218 of file TGeoPainter.cxx. ◆ CheckOverlaps(). void TGeoPainter::CheckOverlaps ; (; const TGeoVolume * ; vol, . Double_t ; ovlp = 0.1, . Option_t * ; option = """" . ); const. overridevirtual . Check overlaps for the top volume of the geometry, within a limit OVLP. ; Implements TVirtualGeoPainter.; Definition at line 234 of file TGeoPainter.cxx. ◆ CheckPoint(). void TGeoPainter::CheckPoint ; (; Double_t ; x = 0, . Double_t ; y = 0, . Double_t ; z = 0, . Option_t * ; option = """", . Double_t ; safety = 0. . ). overridevirtual . Check current point in the geometry. ; Implements TVirtualGeoPainter.; Definition at line 242 of file TGeoPainter.cxx. ◆ CheckShape(). void TGeoPainter::CheckShape ; (; TGeoShape * ; shape, . Int_t ; testNo, . Int_t ; nsamples, . Option_t * ; option . ). overridevirtual . Test for shape navigation methods. ; Summary for test numbers:; 1: DistFromInside/Outside. Sample points inside the shape. Generate directions randomly in cos(theta). Compute DistFromInside and move the point with bigger distance. Compute DistFromOutside back from new point. Plot d-(d1+d2) . Implements TVirtualGeoPainter.; Definition at line 254 of file TGeoPainter.cxx. ◆ ClearVisibleVolumes(). void TGeoPainter::ClearVisibleVolumes ; (; ). protected . Clear the list of visible volumes reset the kVisOnScreen bit for volumes previously in the list. ; Definition at line 263 of file TGeoPainter.cxx. ◆ CountNodes(). Int_t TGeoPainter::CountNodes ; (; TGeoVolume * ; vol, . Int_t ; level . ",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:13309,Security,hash,hash,13309," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:2341,Testability,test,testNo,2341,"NextBoundary. ;  ; void CheckBoundaryReference (Int_t icheck=-1) override;  Check the boundary errors reference file created by CheckBoundaryErrors method. ;  ; void CheckEdit ();  Check if Ged library is loaded and load geometry editor classe. ;  ; void CheckGeometry (Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const override;  Geometry checking method (see TGeoChecker). ;  ; void CheckGeometryFull (Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) override;  Geometry checking method (see: TGeoManager::CheckGeometry()) ;  ; void CheckOverlaps (const TGeoVolume *vol, Double_t ovlp=0.1, Option_t *option="""") const override;  Check overlaps for the top volume of the geometry, within a limit OVLP. ;  ; void CheckPoint (Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.) override;  Check current point in the geometry. ;  ; void CheckShape (TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) override;  Test for shape navigation methods. ;  ; Int_t CountNodes (TGeoVolume *vol, Int_t level) const;  Count number of visible nodes down to a given level. ;  ; Int_t CountVisibleNodes () override;  Count total number of visible nodes. ;  ; void DefaultAngles () override;  Set default angles for the current view. ;  ; void DefaultColors () override;  Set default volume colors according to tracking media. ;  ; Int_t DistanceToPrimitiveVol (TGeoVolume *vol, Int_t px, Int_t py) override;  Compute the closest distance of approach from point px,py to a volume. ;  ; void Draw (Option_t *option="""") override;  Draw method. ;  ; void DrawBatemanSol (TGeoBatemanSol *sol, Option_t *option="""") override;  Draw the time evolution of a radionuclide. ;  ; void DrawCurrentPoint (Int_t color) override;  Draw current point in the same view. ;  ; void DrawOnly (Option_t *option="""") override;  Draw only one volume. ;  ; void DrawOverlap (void *ovlp, Option_t *option="""") override; ",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:25080,Testability,test,testNo,25080,"; Bool_t ; checkoverlaps = kTRUE, . Bool_t ; checkcrossings = kTRUE, . Int_t ; nrays = 10000, . const Double_t * ; vertex = nullptr . ). overridevirtual . Geometry checking method (see: TGeoManager::CheckGeometry()) ; Implements TVirtualGeoPainter.; Definition at line 218 of file TGeoPainter.cxx. ◆ CheckOverlaps(). void TGeoPainter::CheckOverlaps ; (; const TGeoVolume * ; vol, . Double_t ; ovlp = 0.1, . Option_t * ; option = """" . ); const. overridevirtual . Check overlaps for the top volume of the geometry, within a limit OVLP. ; Implements TVirtualGeoPainter.; Definition at line 234 of file TGeoPainter.cxx. ◆ CheckPoint(). void TGeoPainter::CheckPoint ; (; Double_t ; x = 0, . Double_t ; y = 0, . Double_t ; z = 0, . Option_t * ; option = """", . Double_t ; safety = 0. . ). overridevirtual . Check current point in the geometry. ; Implements TVirtualGeoPainter.; Definition at line 242 of file TGeoPainter.cxx. ◆ CheckShape(). void TGeoPainter::CheckShape ; (; TGeoShape * ; shape, . Int_t ; testNo, . Int_t ; nsamples, . Option_t * ; option . ). overridevirtual . Test for shape navigation methods. ; Summary for test numbers:; 1: DistFromInside/Outside. Sample points inside the shape. Generate directions randomly in cos(theta). Compute DistFromInside and move the point with bigger distance. Compute DistFromOutside back from new point. Plot d-(d1+d2) . Implements TVirtualGeoPainter.; Definition at line 254 of file TGeoPainter.cxx. ◆ ClearVisibleVolumes(). void TGeoPainter::ClearVisibleVolumes ; (; ). protected . Clear the list of visible volumes reset the kVisOnScreen bit for volumes previously in the list. ; Definition at line 263 of file TGeoPainter.cxx. ◆ CountNodes(). Int_t TGeoPainter::CountNodes ; (; TGeoVolume * ; vol, . Int_t ; level . ); const. Count number of visible nodes down to a given level. ; Definition at line 582 of file TGeoPainter.cxx. ◆ CountVisibleNodes(). Int_t TGeoPainter::CountVisibleNodes ; (; ). overridevirtual . Count total number of visible nodes.",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:25202,Testability,test,test,25202,". overridevirtual . Geometry checking method (see: TGeoManager::CheckGeometry()) ; Implements TVirtualGeoPainter.; Definition at line 218 of file TGeoPainter.cxx. ◆ CheckOverlaps(). void TGeoPainter::CheckOverlaps ; (; const TGeoVolume * ; vol, . Double_t ; ovlp = 0.1, . Option_t * ; option = """" . ); const. overridevirtual . Check overlaps for the top volume of the geometry, within a limit OVLP. ; Implements TVirtualGeoPainter.; Definition at line 234 of file TGeoPainter.cxx. ◆ CheckPoint(). void TGeoPainter::CheckPoint ; (; Double_t ; x = 0, . Double_t ; y = 0, . Double_t ; z = 0, . Option_t * ; option = """", . Double_t ; safety = 0. . ). overridevirtual . Check current point in the geometry. ; Implements TVirtualGeoPainter.; Definition at line 242 of file TGeoPainter.cxx. ◆ CheckShape(). void TGeoPainter::CheckShape ; (; TGeoShape * ; shape, . Int_t ; testNo, . Int_t ; nsamples, . Option_t * ; option . ). overridevirtual . Test for shape navigation methods. ; Summary for test numbers:; 1: DistFromInside/Outside. Sample points inside the shape. Generate directions randomly in cos(theta). Compute DistFromInside and move the point with bigger distance. Compute DistFromOutside back from new point. Plot d-(d1+d2) . Implements TVirtualGeoPainter.; Definition at line 254 of file TGeoPainter.cxx. ◆ ClearVisibleVolumes(). void TGeoPainter::ClearVisibleVolumes ; (; ). protected . Clear the list of visible volumes reset the kVisOnScreen bit for volumes previously in the list. ; Definition at line 263 of file TGeoPainter.cxx. ◆ CountNodes(). Int_t TGeoPainter::CountNodes ; (; TGeoVolume * ; vol, . Int_t ; level . ); const. Count number of visible nodes down to a given level. ; Definition at line 582 of file TGeoPainter.cxx. ◆ CountVisibleNodes(). Int_t TGeoPainter::CountVisibleNodes ; (; ). overridevirtual . Count total number of visible nodes. ; Implements TVirtualGeoPainter.; Definition at line 636 of file TGeoPainter.cxx. ◆ DefaultAngles(). void TGeoPainter::DefaultAngles ;",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:6276,Usability,progress bar,progress bar,6276,"el () const override;  ; Int_t GetVisOption () const override;  ; const char * GetVolumeInfo (const TGeoVolume *volume, Int_t px, Int_t py) const override;  Get some info about the current selected volume. ;  ; void GrabFocus (Int_t nfr=0, Double_t dlong=0, Double_t dlat=0, Double_t dpsi=0) override;  Move focus to current volume. ;  ; Bool_t IsExplodedView () const override;  ; Bool_t IsPaintingShape () const override;  ; Bool_t IsRaytracing () const override;  ; TH2F * LegoPlot (Int_t ntheta=60, Double_t themin=0., Double_t themax=180., Int_t nphi=90, Double_t phimin=0., Double_t phimax=360., Double_t rmin=0., Double_t rmax=9999999, Option_t *option="""") override;  Generate a lego plot fot the top volume, according to option. ;  ; void Lock (Bool_t flag=kTRUE);  ; void ModifiedPad (Bool_t update=kFALSE) const override;  Check if a pad and view are present and send signal ""Modified"" to pad. ;  ; void OpProgress (const char *opname, Long64_t current, Long64_t size, TStopwatch *watch=nullptr, Bool_t last=kFALSE, Bool_t refresh=kFALSE, const char *msg="""") override;  Text progress bar. ;  ; void Paint (Option_t *option="""") override;  Paint current geometry according to option. ;  ; void PaintNode (TGeoNode *node, Option_t *option="""", TGeoMatrix *global=nullptr) override;  Paint recursively a node and its content according to visualization options. ;  ; void PaintOverlap (void *ovlp, Option_t *option="""") override;  Paint an overlap. ;  ; void PaintPhysicalNode (TGeoPhysicalNode *node, Option_t *option="""");  Paints a physical node associated with a path. ;  ; Bool_t PaintShape (const TGeoShape &shape, Option_t *option) const;  Paint the supplied shape into the current 3D viewer. ;  ; void PaintShape (TGeoShape *shape, Option_t *option="""") override;  Paint an overlap. ;  ; void PaintVolume (TGeoVolume *vol, Option_t *option="""", TGeoMatrix *global=nullptr) override;  Paint recursively a node and its content according to visualization options. ;  ; void PrintOverlaps () const",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPainter.html:35380,Usability,progress bar,progress bar,35380," fot the top volume, according to option. ; Implements TVirtualGeoPainter.; Definition at line 1241 of file TGeoPainter.cxx. ◆ LocalToMasterVect(). void TGeoPainter::LocalToMasterVect ; (; const Double_t * ; local, . Double_t * ; master . ); const. private . Convert a local vector according view rotation matrix. ; Definition at line 1249 of file TGeoPainter.cxx. ◆ Lock(). void TGeoPainter::Lock ; (; Bool_t ; flag = kTRUE). inline . Definition at line 142 of file TGeoPainter.h. ◆ ModifiedPad(). void TGeoPainter::ModifiedPad ; (; Bool_t ; update = kFALSE); const. overridevirtual . Check if a pad and view are present and send signal ""Modified"" to pad. ; Implements TVirtualGeoPainter.; Definition at line 1258 of file TGeoPainter.cxx. ◆ OpProgress(). void TGeoPainter::OpProgress ; (; const char * ; opname, . Long64_t ; current, . Long64_t ; size, . TStopwatch * ; watch = nullptr, . Bool_t ; last = kFALSE, . Bool_t ; refresh = kFALSE, . const char * ; msg = """" . ). overridevirtual . Text progress bar. ; Implements TVirtualGeoPainter.; Definition at line 1684 of file TGeoPainter.cxx. ◆ Paint(). void TGeoPainter::Paint ; (; Option_t * ; option = """"). overridevirtual . Paint current geometry according to option. ; Implements TVirtualGeoPainter.; Definition at line 1278 of file TGeoPainter.cxx. ◆ PaintNode(). void TGeoPainter::PaintNode ; (; TGeoNode * ; node, . Option_t * ; option = """", . TGeoMatrix * ; global = nullptr . ). overridevirtual . Paint recursively a node and its content according to visualization options. ; Implements TVirtualGeoPainter.; Definition at line 1376 of file TGeoPainter.cxx. ◆ PaintOverlap(). void TGeoPainter::PaintOverlap ; (; void * ; ovlp, . Option_t * ; option = """" . ). overridevirtual . Paint an overlap. ; Implements TVirtualGeoPainter.; Definition at line 1321 of file TGeoPainter.cxx. ◆ PaintPhysicalNode(). void TGeoPainter::PaintPhysicalNode ; (; TGeoPhysicalNode * ; node, . Option_t * ; option = """" . ). Paints a physical node associated with a",MatchSource.WIKI,doc/master/classTGeoPainter.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html
https://root.cern/doc/master/classTGeoPara.html:9573,Availability,error,error,9573,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:9662,Availability,error,error,9662,"t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:9817,Availability,error,error,9817,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:9994,Availability,error,error,9994,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:13827,Availability,error,error,13827,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox ",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:15778,Availability,error,error,15778,"od, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static D",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:16225,Availability,error,error,16225,"_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static Double_t EpsMch ();  static function returning the machine round-off error ;  ; static TGeoMatrix * GetTransform ();  Returns current transformation matrix that applies to shape. ;  ; static Bool_t IsCloseToPhi (Double_t epsil, const Double_t *point, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  True if point is closer than epsil to one of the phi planes defined by c1,s1 or c2,s2. ;  ; static Bool_t IsCrossingSemiplane (const Double_t *point, const Double_t *dir, Double_t cphi, Double_t sphi, Double_t &snext, Double_t &rxy);  Compute distance from POINT to semiplane defined by PHI angle along DIR. ;  ; static Bool_t IsInPhiRange (const Double_t *point, Double_t phi1, Double_t phi2);  Static method to check if a point is in the phi range (phi1, phi2) [degrees]. ;  ; static Bool_t IsSameWithinTolerance (Double_t a, Double_t b);  Check if two numbers differ with less than a tolerance. ;  ; static Bool_t IsSegCrossing (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t x3, Double_t y3, Double_t x4, Double_t y4);  Check if segments (A,B) and (C,D) are cr",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:17048,Availability,toler,tolerance,17048,"Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static Double_t EpsMch ();  static function returning the machine round-off error ;  ; static TGeoMatrix * GetTransform ();  Returns current transformation matrix that applies to shape. ;  ; static Bool_t IsCloseToPhi (Double_t epsil, const Double_t *point, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  True if point is closer than epsil to one of the phi planes defined by c1,s1 or c2,s2. ;  ; static Bool_t IsCrossingSemiplane (const Double_t *point, const Double_t *dir, Double_t cphi, Double_t sphi, Double_t &snext, Double_t &rxy);  Compute distance from POINT to semiplane defined by PHI angle along DIR. ;  ; static Bool_t IsInPhiRange (const Double_t *point, Double_t phi1, Double_t phi2);  Static method to check if a point is in the phi range (phi1, phi2) [degrees]. ;  ; static Bool_t IsSameWithinTolerance (Double_t a, Double_t b);  Check if two numbers differ with less than a tolerance. ;  ; static Bool_t IsSegCrossing (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t x3, Double_t y3, Double_t x4, Double_t y4);  Check if segments (A,B) and (C,D) are crossing, where: A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ;",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:9579,Integrability,message,message,9579,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:10000,Integrability,message,message,10000,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:10990,Integrability,message,message,10990,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:13833,Integrability,message,message,13833,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox ",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:14206,Integrability,message,message,14206,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, ",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:3317,Modifiability,inherit,inherited,3317,"() const;  ; void InspectShape () const override;  ; TClass * IsA () const override;  ; Bool_t IsCylType () const override;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  ; void Safety_v (const Double_t *points, const Bool_t *inside, Double_t *safe, Int_t vecsize) const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDimensions (Double_t *param) override;  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  TGeoBBox (Double_t *param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; const char * GetAxisName (Int_t iaxis) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; Bool_t GetPointsOnSegments (Int_t npoints, Double_t *array) const override;  ; virtual Bool_t IsNullBox () cons",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:4887,Modifiability,inherit,inherited,4887,"param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; const char * GetAxisName (Int_t iaxis) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; Bool_t GetPointsOnSegments (Int_t npoints, Double_t *array) const override;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; TBuffer3D * MakeBuffer3D () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void SetSegsAndPols (TBuffer3D &buffer) const override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThreadData () const;  ; virtual void CreateThreadData (Int_t);  ; void Draw (Option_t *option="""") override;  Draw this shape. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute mouse actions on this shape. ;  ; Int_t GetId () con",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:6574,Modifiability,inherit,inherited,6574,"nst char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; void InvertShapeBit (UInt_t f);  ; TClass * IsA () const override;  ; virtual Bool_t IsAssembly () const;  ; virtual Bool_t IsComposite () const;  ; virtual Bool_t IsReflected () const;  ; Bool_t IsRunTimeShape () const;  ; Bool_t IsValid () const;  ; virtual Bool_t IsVecGeom () const;  ; void Paint (Option_t *option="""") override;  Paint this shape. ;  ; void ResetShapeBit (UInt_t f);  ; void SetId (Int_t id);  ; void SetRuntime (Bool_t flag=kTRUE);  ; void SetShapeBit (UInt_t f);  ; void SetShapeBit (UInt_t f, Bool_t set);  Equivalent of TObject::SetBit. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numpoints, Int_t px, Int_t py) const;  Returns distance to shape primitive mesh. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestShapeBit (UInt_t f) const;  ; Int_t TestShapeBits (UInt_t f) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:8314,Modifiability,inherit,inherited,8314,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * Dra",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:9209,Modifiability,inherit,inheritance,9209,"ject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:11088,Modifiability,inherit,inherits,11088,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:11205,Modifiability,inherit,inherits,11205,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:14707,Modifiability,inherit,inherited,14707,"od, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static D",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:15532,Modifiability,inherit,inherited,15532,"od, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static D",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:18062,Modifiability,inherit,inherited,18062,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPara (const TGeoPara &)=delete;  ; TGeoPara & operator= (const TGeoPara &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:18272,Modifiability,inherit,inherited,18272,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPara (const TGeoPara &)=delete;  ; TGeoPara & operator= (const TGeoPara &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:18905,Modifiability,inherit,inherited,18905,"t transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPara (const TGeoPara &)=delete;  ; TGeoPara & operator= (const TGeoPara &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fAlpha;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTxy;  ; Double_t fTxz;  ; Double_t fTyz;  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX; ",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:19260,Modifiability,inherit,inherited,19260,"er Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPara (const TGeoPara &)=delete;  ; TGeoPara & operator= (const TGeoPara &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fAlpha;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTxy;  ; Double_t fTxz;  ; Double_t fTyz;  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  ESha",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:19520,Modifiability,inherit,inherited,19520,"flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPara (const TGeoPara &)=delete;  ; TGeoPara & operator= (const TGeoPara &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fAlpha;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTxy;  ; Double_t fTxz;  ; Double_t fTyz;  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ; ",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:19907,Modifiability,inherit,inherited,19907,"(const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fAlpha;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTxy;  ; Double_t fTxz;  ; Double_t fTyz;  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 ));",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:20030,Modifiability,inherit,inherited,20030,"(const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fAlpha;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTxy;  ; Double_t fTxz;  ; Double_t fTyz;  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 ));",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:20119,Modifiability,inherit,inherited,20119,"(const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fAlpha;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTxy;  ; Double_t fTxz;  ; Double_t fTyz;  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 ));",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:20223,Modifiability,inherit,inherited,20223," ; Double_t fTxy;  ; Double_t fTxz;  ; Double_t fTyz;  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:21403,Modifiability,inherit,inherited,21403,"kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoPara.h>. Inheritance diagram for TGeoPara:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPara() [1/",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:22046,Modifiability,inherit,inherited,22046," (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoPara.h>. Inheritance diagram for TGeoPara:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPara() [1/5]. TGeoPara::TGeoPara ; (; const TGeoPara & ; ). protecteddelete . ◆ TGeoPara() [2/5]. TGeoPara::TGeoPara ; (; ). ◆ TGeoPara() [3/5]. TGeoPara::TGeoPara ; (; Double_t ; dx, . Double_t ; dy, . Double_t ; dz, . Double_t ; alpha, . Double_t ; theta, . Double_t ; phi . ). ◆ TGeoPara() [4/5]. TGeoPara::TGeoPara ; (; const char * ; name, . Double_t ; dx, . Double_t ; dy, . Double_t ; dz, . Double_t ; alpha, . Double_t ; theta, . Double_t ; phi . ). ◆ TGeoPara() [5/5]. TGeoPara::TGeoPara ; (; Double_t * ; param). ◆ ~TGeoPara(). TGeoPara::~TGeoPara ; (; ). override . Member Function Documentation. ◆ Capacity(). Double_t TGeoPara::Capacity ; (; ); const. overridevir",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:22197,Modifiability,inherit,inherited,22197," (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoPara.h>. Inheritance diagram for TGeoPara:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPara() [1/5]. TGeoPara::TGeoPara ; (; const TGeoPara & ; ). protecteddelete . ◆ TGeoPara() [2/5]. TGeoPara::TGeoPara ; (; ). ◆ TGeoPara() [3/5]. TGeoPara::TGeoPara ; (; Double_t ; dx, . Double_t ; dy, . Double_t ; dz, . Double_t ; alpha, . Double_t ; theta, . Double_t ; phi . ). ◆ TGeoPara() [4/5]. TGeoPara::TGeoPara ; (; const char * ; name, . Double_t ; dx, . Double_t ; dy, . Double_t ; dz, . Double_t ; alpha, . Double_t ; theta, . Double_t ; phi . ). ◆ TGeoPara() [5/5]. TGeoPara::TGeoPara ; (; Double_t * ; param). ◆ ~TGeoPara(). TGeoPara::~TGeoPara ; (; ). override . Member Function Documentation. ◆ Capacity(). Double_t TGeoPara::Capacity ; (; ); const. overridevir",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:1218,Safety,safe,safe,1218," Public Member Functions;  TGeoPara ();  ;  TGeoPara (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi);  ;  TGeoPara (Double_t *param);  ;  TGeoPara (Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi);  ;  ~TGeoPara () override;  ; Double_t Capacity () const override;  ; void ComputeBBox () override;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; Double_t GetAlpha () const;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; Int_t Get",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:1513,Safety,safe,safe,1513,"(Double_t *param);  ;  TGeoPara (Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi);  ;  ~TGeoPara () override;  ; Double_t Capacity () const override;  ; void ComputeBBox () override;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; Double_t GetAlpha () const;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; Int_t GetByteCount () const override;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; Int_t GetNmeshVertices () const override;  ; Double_t GetPhi () const;  ; Double_t GetTheta () const;  ; Double_t GetTxy () const;  ; Double_t GetTxz () const;  ; Double_t GetTyz () const;  ; Double_t GetX () const;  ; Double_t GetY () const;  ; Double_t GetZ () const; ",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:2780,Safety,safe,safe,2780,"ntains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; Double_t GetAlpha () const;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; Int_t GetByteCount () const override;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; Int_t GetNmeshVertices () const override;  ; Double_t GetPhi () const;  ; Double_t GetTheta () const;  ; Double_t GetTxy () const;  ; Double_t GetTxz () const;  ; Double_t GetTyz () const;  ; Double_t GetX () const;  ; Double_t GetY () const;  ; Double_t GetZ () const;  ; void InspectShape () const override;  ; TClass * IsA () const override;  ; Bool_t IsCylType () const override;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  ; void Safety_v (const Double_t *points, const Bool_t *inside, Double_t *safe, Int_t vecsize) const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"".",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:3964,Safety,avoid,avoid,3964,"rimitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDimensions (Double_t *param) override;  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  TGeoBBox (Double_t *param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; const char * GetAxisName (Int_t iaxis) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; Bool_t GetPointsOnSegments (Int_t npoints, Double_t *array) const override;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; TBuffer3D * MakeBuffer3D () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void SetSegsAndPols (TBuffer3D &buffer) const override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited fr",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:17605,Safety,safe,safety,17605," ;  ; static Bool_t IsCrossingSemiplane (const Double_t *point, const Double_t *dir, Double_t cphi, Double_t sphi, Double_t &snext, Double_t &rxy);  Compute distance from POINT to semiplane defined by PHI angle along DIR. ;  ; static Bool_t IsInPhiRange (const Double_t *point, Double_t phi1, Double_t phi2);  Static method to check if a point is in the phi range (phi1, phi2) [degrees]. ;  ; static Bool_t IsSameWithinTolerance (Double_t a, Double_t b);  Check if two numbers differ with less than a tolerance. ;  ; static Bool_t IsSegCrossing (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t x3, Double_t y3, Double_t x4, Double_t y4);  Check if segments (A,B) and (C,D) are crossing, where: A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat (",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:22109,Safety,detect,detection,22109," (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoPara.h>. Inheritance diagram for TGeoPara:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPara() [1/5]. TGeoPara::TGeoPara ; (; const TGeoPara & ; ). protecteddelete . ◆ TGeoPara() [2/5]. TGeoPara::TGeoPara ; (; ). ◆ TGeoPara() [3/5]. TGeoPara::TGeoPara ; (; Double_t ; dx, . Double_t ; dy, . Double_t ; dz, . Double_t ; alpha, . Double_t ; theta, . Double_t ; phi . ). ◆ TGeoPara() [4/5]. TGeoPara::TGeoPara ; (; const char * ; name, . Double_t ; dx, . Double_t ; dy, . Double_t ; dz, . Double_t ; alpha, . Double_t ; theta, . Double_t ; phi . ). ◆ TGeoPara() [5/5]. TGeoPara::TGeoPara ; (; Double_t * ; param). ◆ ~TGeoPara(). TGeoPara::~TGeoPara ; (; ). override . Member Function Documentation. ◆ Capacity(). Double_t TGeoPara::Capacity ; (; ); const. overridevir",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:24701,Safety,safe,safe,24701,"; (; const Double_t * ; point, . const Double_t * ; dir, . Double_t * ; norm . ). overridevirtual . Reimplemented from TGeoBBox. ◆ ComputeNormal_v(). void TGeoPara::ComputeNormal_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; norms, . Int_t ; vecsize . ). overridevirtual . Reimplemented from TGeoBBox. ◆ Contains(). Bool_t TGeoPara::Contains ; (; const Double_t * ; point); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Contains_v(). void TGeoPara::Contains_v ; (; const Double_t * ; points, . Bool_t * ; inside, . Int_t ; vecsize . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DeclFileName(). static const char * TGeoPara::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file TGeoPara.h. ◆ DistFromInside(). Double_t TGeoPara::DistFromInside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromInside_v(). void TGeoPara::DistFromInside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside(). Double_t TGeoPara::DistFromOutside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside_v(). void TGeoPara::DistFromOutside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Divide(). TGeoVolume * TGeoPara::Divide ; (; TGeoVolume * ; voldiv, . const char * ; divname, . Int_t ; iaxis, . Int_t ; ndiv, . Double_t ; start, . Double_t ; step . ). overridevirtual . Reimpleme",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:25194,Safety,safe,safe,25194,"ains_v ; (; const Double_t * ; points, . Bool_t * ; inside, . Int_t ; vecsize . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DeclFileName(). static const char * TGeoPara::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file TGeoPara.h. ◆ DistFromInside(). Double_t TGeoPara::DistFromInside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromInside_v(). void TGeoPara::DistFromInside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside(). Double_t TGeoPara::DistFromOutside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside_v(). void TGeoPara::DistFromOutside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Divide(). TGeoVolume * TGeoPara::Divide ; (; TGeoVolume * ; voldiv, . const char * ; divname, . Int_t ; iaxis, . Int_t ; ndiv, . Double_t ; start, . Double_t ; step . ). overridevirtual . Reimplemented from TGeoBBox. ◆ GetAlpha(). Double_t TGeoPara::GetAlpha ; (; ); const. inline . Definition at line 69 of file TGeoPara.h. ◆ GetAxisRange(). Double_t TGeoPara::GetAxisRange ; (; Int_t ; iaxis, . Double_t & ; xlo, . Double_t & ; xhi . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetBoundingCylinder(). void TGeoPara::GetBoundingCylinder ; (; Double_t * ; param); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetByteCount(). Int_t TGeoPara::GetByteCount ; (; ); co",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:28479,Safety,safe,safe,28479,"a.h. ◆ GetY(). Double_t TGeoPara::GetY ; (; ); const. inline . Definition at line 67 of file TGeoPara.h. ◆ GetZ(). Double_t TGeoPara::GetZ ; (; ); const. inline . Definition at line 68 of file TGeoPara.h. ◆ InspectShape(). void TGeoPara::InspectShape ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ IsA(). TClass * TGeoPara::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGeoBBox.; Definition at line 85 of file TGeoPara.h. ◆ IsCylType(). Bool_t TGeoPara::IsCylType ; (; ); const. inlineoverridevirtual . Reimplemented from TGeoBBox.; Definition at line 76 of file TGeoPara.h. ◆ operator=(). TGeoPara & TGeoPara::operator= ; (; const TGeoPara & ; ). protecteddelete . ◆ Safety(). Double_t TGeoPara::Safety ; (; const Double_t * ; point, . Bool_t ; in = kTRUE . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Safety_v(). void TGeoPara::Safety_v ; (; const Double_t * ; points, . const Bool_t * ; inside, . Double_t * ; safe, . Int_t ; vecsize . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SavePrimitive(). void TGeoPara::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented from TGeoBBox. ◆ SetDimensions(). void TGeoPara::SetDimensions ; (; Double_t * ; param). overridevirtual . Reimplemented from TGeoBBox. ◆ SetPoints() [1/2]. void TGeoPara::SetPoints ; (; Double_t * ; points); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SetPoints() [2/2]. void TGeoPara::SetPoints ; (; Float_t * ; points); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Sizeof3D(). void TGeoPara::Sizeof3D ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Streamer(). void TGeoPara::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGeoBBox. ◆ StreamerNVirtual(). void TGeoPara::StreamerNVirtual ; (; TBuffer & ; Clas",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:7442,Security,hash,hash,7442," &ClassDef_StreamerNVirtual_b);  ; Bool_t TestShapeBit (UInt_t f) const;  ; Int_t TestShapeBits (UInt_t f) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoPara.html:5113,Testability,test,testNo,5113,"ual Double_t GetFacetArea (Int_t index=0) const;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; Bool_t GetPointsOnSegments (Int_t npoints, Double_t *array) const override;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; TBuffer3D * MakeBuffer3D () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void SetSegsAndPols (TBuffer3D &buffer) const override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThreadData () const;  ; virtual void CreateThreadData (Int_t);  ; void Draw (Option_t *option="""") override;  Draw this shape. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute mouse actions on this shape. ;  ; Int_t GetId () const;  ; const char * GetName () const override;  Get the shape name. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; void InvertShapeBit (UInt_t f);  ; TClass * IsA () const override;  ; virtual Bool_t IsAssembly () const;  ; virtual Bool_t IsComposite () const;  ; virtual Bool_t IsReflected () const;  ; Bool_t IsRunTimeShape () const;  ; Bool_t IsValid () const;  ; virtual Bool_t IsVecGeom () const;  ; void Paint (Option_t *option="""") override;  Paint this shape. ;  ; void ResetShapeBit (UInt_t f);  ; void SetId (Int_t id);  ; void SetRuntime (Bool_t flag=kTRUE);  ; void SetShapeBit (UInt_t f);  ; vo",MatchSource.WIKI,doc/master/classTGeoPara.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPara.html
https://root.cern/doc/master/classTGeoParaboloid.html:9509,Availability,error,error,9509,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:9598,Availability,error,error,9598,"t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:9753,Availability,error,error,9753,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:9930,Availability,error,error,9930,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:13763,Availability,error,error,13763,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox ",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:15714,Availability,error,error,15714,"od, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static D",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:16161,Availability,error,error,16161,"_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static Double_t EpsMch ();  static function returning the machine round-off error ;  ; static TGeoMatrix * GetTransform ();  Returns current transformation matrix that applies to shape. ;  ; static Bool_t IsCloseToPhi (Double_t epsil, const Double_t *point, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  True if point is closer than epsil to one of the phi planes defined by c1,s1 or c2,s2. ;  ; static Bool_t IsCrossingSemiplane (const Double_t *point, const Double_t *dir, Double_t cphi, Double_t sphi, Double_t &snext, Double_t &rxy);  Compute distance from POINT to semiplane defined by PHI angle along DIR. ;  ; static Bool_t IsInPhiRange (const Double_t *point, Double_t phi1, Double_t phi2);  Static method to check if a point is in the phi range (phi1, phi2) [degrees]. ;  ; static Bool_t IsSameWithinTolerance (Double_t a, Double_t b);  Check if two numbers differ with less than a tolerance. ;  ; static Bool_t IsSegCrossing (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t x3, Double_t y3, Double_t x4, Double_t y4);  Check if segments (A,B) and (C,D) are cr",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:16984,Availability,toler,tolerance,16984,"Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static Double_t EpsMch ();  static function returning the machine round-off error ;  ; static TGeoMatrix * GetTransform ();  Returns current transformation matrix that applies to shape. ;  ; static Bool_t IsCloseToPhi (Double_t epsil, const Double_t *point, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  True if point is closer than epsil to one of the phi planes defined by c1,s1 or c2,s2. ;  ; static Bool_t IsCrossingSemiplane (const Double_t *point, const Double_t *dir, Double_t cphi, Double_t sphi, Double_t &snext, Double_t &rxy);  Compute distance from POINT to semiplane defined by PHI angle along DIR. ;  ; static Bool_t IsInPhiRange (const Double_t *point, Double_t phi1, Double_t phi2);  Static method to check if a point is in the phi range (phi1, phi2) [degrees]. ;  ; static Bool_t IsSameWithinTolerance (Double_t a, Double_t b);  Check if two numbers differ with less than a tolerance. ;  ; static Bool_t IsSegCrossing (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t x3, Double_t y3, Double_t x4, Double_t y4);  Check if segments (A,B) and (C,D) are crossing, where: A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ;",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:9515,Integrability,message,message,9515,"ct"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:9936,Integrability,message,message,9936,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:10926,Integrability,message,message,10926,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:13769,Integrability,message,message,13769,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox ",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:14142,Integrability,message,message,14142,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, ",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:3542,Modifiability,inherit,inherited,3542,"e_t dz);  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buff) const override;  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  TGeoBBox (Double_t *param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; const char * GetAxisName (Int_t iaxis) const override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; Int_t GetByteCount () const override;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThread",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:4823,Modifiability,inherit,inherited,4823,"e_t dz);  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buff) const override;  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  TGeoBBox (Double_t *param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; const char * GetAxisName (Int_t iaxis) const override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; Int_t GetByteCount () const override;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThread",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:6510,Modifiability,inherit,inherited,6510,"nst char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; void InvertShapeBit (UInt_t f);  ; TClass * IsA () const override;  ; virtual Bool_t IsAssembly () const;  ; virtual Bool_t IsComposite () const;  ; virtual Bool_t IsReflected () const;  ; Bool_t IsRunTimeShape () const;  ; Bool_t IsValid () const;  ; virtual Bool_t IsVecGeom () const;  ; void Paint (Option_t *option="""") override;  Paint this shape. ;  ; void ResetShapeBit (UInt_t f);  ; void SetId (Int_t id);  ; void SetRuntime (Bool_t flag=kTRUE);  ; void SetShapeBit (UInt_t f);  ; void SetShapeBit (UInt_t f, Bool_t set);  Equivalent of TObject::SetBit. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numpoints, Int_t px, Int_t py) const;  Returns distance to shape primitive mesh. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestShapeBit (UInt_t f) const;  ; Int_t TestShapeBits (UInt_t f) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:8250,Modifiability,inherit,inherited,8250,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * Dra",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:9145,Modifiability,inherit,inheritance,9145,"ject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:11024,Modifiability,inherit,inherits,11024,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:11141,Modifiability,inherit,inherits,11141,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:14643,Modifiability,inherit,inherited,14643,"od, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static D",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:15468,Modifiability,inherit,inherited,15468,"od, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static D",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:17998,Modifiability,inherit,inherited,17998,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoParaboloid (const TGeoParaboloid &)=delete;  ; TGeoParaboloid & operator= (const TGeoParaboloid &)=delete;  . Private Attributes; Double_t fA;  ; Double_t fB;  ; Double_t fDz;  ; Double_t fRhi;  ; Double_t fRlo;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg =",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:18208,Modifiability,inherit,inherited,18208,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoParaboloid (const TGeoParaboloid &)=delete;  ; TGeoParaboloid & operator= (const TGeoParaboloid &)=delete;  . Private Attributes; Double_t fA;  ; Double_t fB;  ; Double_t fDz;  ; Double_t fRhi;  ; Double_t fRlo;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg =",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:18984,Modifiability,inherit,inherited,18984,"torOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoParaboloid (const TGeoParaboloid &)=delete;  ; TGeoParaboloid & operator= (const TGeoParaboloid &)=delete;  . Private Attributes; Double_t fA;  ; Double_t fB;  ; Double_t fDz;  ; Double_t fRhi;  ; Double_t fRlo;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:20164,Modifiability,inherit,inherited,20164,"kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:20807,Modifiability,inherit,inherited,20807,", kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t f",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:20958,Modifiability,inherit,inherited,20958,", kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t f",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:21057,Modifiability,inherit,inherited,21057,", kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t f",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:21412,Modifiability,inherit,inherited,21412,", kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoParaboloid.h>. Inheritance diagram for TGeoParaboloid:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoParaboloid() [1/5]. TGeoParaboloid::TGeoParaboloid",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:21672,Modifiability,inherit,inherited,21672," << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoParaboloid.h>. Inheritance diagram for TGeoParaboloid:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoParaboloid() [1/5]. TGeoParaboloid::TGeoParaboloid ; (; const TGeoParaboloid & ; ). privatedelete . ◆ TGeoParaboloid() [2/5]. TGeoParaboloid::TGeoParaboloid ; (; ). ◆ TGeoParaboloid() [3/5]. TGeoParaboloid::TGeoParaboloid ; (; Double_t ; rlo, . Double_t ; rhi, . Double_t ; dz . ). ◆ TGeoParaboloid()",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:21877,Modifiability,inherit,inherited,21877," { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoParaboloid.h>. Inheritance diagram for TGeoParaboloid:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoParaboloid() [1/5]. TGeoParaboloid::TGeoParaboloid ; (; const TGeoParaboloid & ; ). privatedelete . ◆ TGeoParaboloid() [2/5]. TGeoParaboloid::TGeoParaboloid ; (; ). ◆ TGeoParaboloid() [3/5]. TGeoParaboloid::TGeoParaboloid ; (; Double_t ; rlo, . Double_t ; rhi, . Double_t ; dz . ). ◆ TGeoParaboloid() [4/5]. TGeoParaboloid::TGeoParaboloid ; (; const char * ; name, . Double_t ; rlo, . Double_t ; rhi, . Double_t ; dz . ). ◆ TGeoParaboloid() [5/5]. TGeoParaboloid::TGeoParaboloid ; (; Double_t * ; params). ◆ ~TGeoParaboloid(). TGeoParaboloid::~TGeoParaboloid ; (; ). override . Member Function Documentation. ◆ Capacity(). Dou",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:22000,Modifiability,inherit,inherited,22000," { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoParaboloid.h>. Inheritance diagram for TGeoParaboloid:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoParaboloid() [1/5]. TGeoParaboloid::TGeoParaboloid ; (; const TGeoParaboloid & ; ). privatedelete . ◆ TGeoParaboloid() [2/5]. TGeoParaboloid::TGeoParaboloid ; (; ). ◆ TGeoParaboloid() [3/5]. TGeoParaboloid::TGeoParaboloid ; (; Double_t ; rlo, . Double_t ; rhi, . Double_t ; dz . ). ◆ TGeoParaboloid() [4/5]. TGeoParaboloid::TGeoParaboloid ; (; const char * ; name, . Double_t ; rlo, . Double_t ; rhi, . Double_t ; dz . ). ◆ TGeoParaboloid() [5/5]. TGeoParaboloid::TGeoParaboloid ; (; Double_t * ; params). ◆ ~TGeoParaboloid(). TGeoParaboloid::~TGeoParaboloid ; (; ). override . Member Function Documentation. ◆ Capacity(). Dou",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:22089,Modifiability,inherit,inherited,22089," { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoParaboloid.h>. Inheritance diagram for TGeoParaboloid:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoParaboloid() [1/5]. TGeoParaboloid::TGeoParaboloid ; (; const TGeoParaboloid & ; ). privatedelete . ◆ TGeoParaboloid() [2/5]. TGeoParaboloid::TGeoParaboloid ; (; ). ◆ TGeoParaboloid() [3/5]. TGeoParaboloid::TGeoParaboloid ; (; Double_t ; rlo, . Double_t ; rhi, . Double_t ; dz . ). ◆ TGeoParaboloid() [4/5]. TGeoParaboloid::TGeoParaboloid ; (; const char * ; name, . Double_t ; rlo, . Double_t ; rhi, . Double_t ; dz . ). ◆ TGeoParaboloid() [5/5]. TGeoParaboloid::TGeoParaboloid ; (; Double_t * ; params). ◆ ~TGeoParaboloid(). TGeoParaboloid::~TGeoParaboloid ; (; ). override . Member Function Documentation. ◆ Capacity(). Dou",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:1290,Safety,safe,safe,1290,"ox () override;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistToParaboloid (const Double_t *point, const Double_t *dir, Bool_t in) const;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Double_t GetDz () const;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t, Double_t *) const override;  ; Double_t GetRhi () const;  ; Double_t GetRlo () const;  ; void InspectShape () const override;  ; TClass * IsA () const override;  ; Bool_t IsCylType () const override; ",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:1585,Safety,safe,safe,1585,"ox () override;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistToParaboloid (const Double_t *point, const Double_t *dir, Bool_t in) const;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Double_t GetDz () const;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t, Double_t *) const override;  ; Double_t GetRhi () const;  ; Double_t GetRlo () const;  ; void InspectShape () const override;  ; TClass * IsA () const override;  ; Bool_t IsCylType () const override; ",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:2149,Safety,avoid,avoid,2149,"ox () override;  ; void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm) override;  ; void ComputeNormal_v (const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;  ; Bool_t Contains (const Double_t *point) const override;  ; void Contains_v (const Double_t *points, Bool_t *inside, Int_t vecsize) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromInside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override;  ; void DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistToParaboloid (const Double_t *point, const Double_t *dir, Bool_t in) const;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Double_t GetDz () const;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t, Double_t *) const override;  ; Double_t GetRhi () const;  ; Double_t GetRlo () const;  ; void InspectShape () const override;  ; TClass * IsA () const override;  ; Bool_t IsCylType () const override; ",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:2873,Safety,safe,safe,2873,"oid DistFromOutside_v (const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; Double_t DistToParaboloid (const Double_t *point, const Double_t *dir, Bool_t in) const;  ; TGeoVolume * Divide (TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; Double_t GetDz () const;  ; TGeoShape * GetMakeRuntimeShape (TGeoShape *mother, TGeoMatrix *mat) const override;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; Bool_t GetPointsOnSegments (Int_t, Double_t *) const override;  ; Double_t GetRhi () const;  ; Double_t GetRlo () const;  ; void InspectShape () const override;  ; TClass * IsA () const override;  ; Bool_t IsCylType () const override;  ; TBuffer3D * MakeBuffer3D () const override;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  ; void Safety_v (const Double_t *points, const Bool_t *inside, Double_t *safe, Int_t vecsize) const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDimensions (Double_t *param) override;  ; void SetParaboloidDimensions (Double_t rlo, Double_t rhi, Double_t dz);  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buff) const override;  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:17541,Safety,safe,safety,17541," ;  ; static Bool_t IsCrossingSemiplane (const Double_t *point, const Double_t *dir, Double_t cphi, Double_t sphi, Double_t &snext, Double_t &rxy);  Compute distance from POINT to semiplane defined by PHI angle along DIR. ;  ; static Bool_t IsInPhiRange (const Double_t *point, Double_t phi1, Double_t phi2);  Static method to check if a point is in the phi range (phi1, phi2) [degrees]. ;  ; static Bool_t IsSameWithinTolerance (Double_t a, Double_t b);  Check if two numbers differ with less than a tolerance. ;  ; static Bool_t IsSegCrossing (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t x3, Double_t y3, Double_t x4, Double_t y4);  Check if segments (A,B) and (C,D) are crossing, where: A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat (",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:20870,Safety,detect,detection,20870,", kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t f",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:25001,Safety,safe,safe,25001,"araboloid::Contains ; (; const Double_t * ; point); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Contains_v(). void TGeoParaboloid::Contains_v ; (; const Double_t * ; points, . Bool_t * ; inside, . Int_t ; vecsize . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DeclFileName(). static const char * TGeoParaboloid::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 78 of file TGeoParaboloid.h. ◆ DistancetoPrimitive(). Int_t TGeoParaboloid::DistancetoPrimitive ; (; Int_t ; px, . Int_t ; py . ). overridevirtual . Computes distance from point (px,py) to the object. ; This member function must be implemented for each graphics primitive. This default function returns a big number (999999). ; Reimplemented from TGeoBBox. ◆ DistFromInside(). Double_t TGeoParaboloid::DistFromInside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromInside_v(). void TGeoParaboloid::DistFromInside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside(). Double_t TGeoParaboloid::DistFromOutside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside_v(). void TGeoParaboloid::DistFromOutside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistToParaboloid(). Double_t TGeoParaboloid::DistToParaboloid ; (; const Double_t * ; point, . const Double_t * ; dir, . Bool_t ; in . ); const. ◆ Divide(). TGeoVolume * TGeoParab",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:25506,Safety,safe,safe,25506," Int_t TGeoParaboloid::DistancetoPrimitive ; (; Int_t ; px, . Int_t ; py . ). overridevirtual . Computes distance from point (px,py) to the object. ; This member function must be implemented for each graphics primitive. This default function returns a big number (999999). ; Reimplemented from TGeoBBox. ◆ DistFromInside(). Double_t TGeoParaboloid::DistFromInside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromInside_v(). void TGeoParaboloid::DistFromInside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside(). Double_t TGeoParaboloid::DistFromOutside ; (; const Double_t * ; point, . const Double_t * ; dir, . Int_t ; iact = 1, . Double_t ; step = TGeoShape::Big(), . Double_t * ; safe = nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside_v(). void TGeoParaboloid::DistFromOutside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistToParaboloid(). Double_t TGeoParaboloid::DistToParaboloid ; (; const Double_t * ; point, . const Double_t * ; dir, . Bool_t ; in . ); const. ◆ Divide(). TGeoVolume * TGeoParaboloid::Divide ; (; TGeoVolume * ; voldiv, . const char * ; divname, . Int_t ; iaxis, . Int_t ; ndiv, . Double_t ; start, . Double_t ; step . ). overridevirtual . Reimplemented from TGeoBBox. ◆ GetBoundingCylinder(). void TGeoParaboloid::GetBoundingCylinder ; (; Double_t * ; param); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetBuffer3D(). const TBuffer3D & TGeoParaboloid::GetBuffer3D ; (; Int_t ; reqSections, . Bool_t ; localFrame . ); const. overridevirtual . Stub implementation to avoi",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:26503,Safety,avoid,avoid,26503," nullptr . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistFromOutside_v(). void TGeoParaboloid::DistFromOutside_v ; (; const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ DistToParaboloid(). Double_t TGeoParaboloid::DistToParaboloid ; (; const Double_t * ; point, . const Double_t * ; dir, . Bool_t ; in . ); const. ◆ Divide(). TGeoVolume * TGeoParaboloid::Divide ; (; TGeoVolume * ; voldiv, . const char * ; divname, . Int_t ; iaxis, . Int_t ; ndiv, . Double_t ; start, . Double_t ; step . ). overridevirtual . Reimplemented from TGeoBBox. ◆ GetBoundingCylinder(). void TGeoParaboloid::GetBoundingCylinder ; (; Double_t * ; param); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetBuffer3D(). const TBuffer3D & TGeoParaboloid::GetBuffer3D ; (; Int_t ; reqSections, . Bool_t ; localFrame . ); const. overridevirtual . Stub implementation to avoid forcing implementation at this stage. ; Reimplemented from TGeoBBox. ◆ GetDz(). Double_t TGeoParaboloid::GetDz ; (; ); const. inline . Definition at line 58 of file TGeoParaboloid.h. ◆ GetMakeRuntimeShape(). TGeoShape * TGeoParaboloid::GetMakeRuntimeShape ; (; TGeoShape * ; mother, . TGeoMatrix * ; mat . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetMeshNumbers(). void TGeoParaboloid::GetMeshNumbers ; (; Int_t & ; nvert, . Int_t & ; nsegs, . Int_t & ; npols . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetNmeshVertices(). Int_t TGeoParaboloid::GetNmeshVertices ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetPointsOnSegments(). Bool_t TGeoParaboloid::GetPointsOnSegments ; (; Int_t ; , . Double_t * ;  . ); const. inlineoverridevirtual . Reimplemented from TGeoBBox.; Definition at line 64 of file TGeoParaboloid.h. ◆ GetRhi(). Double_t TGeoParaboloid::GetRhi ; (; ); const. inline . Definition at line 57 of file TGeoParaboloid.h. ◆ GetRlo(). Dou",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:28592,Safety,safe,safe,28592,"of file TGeoParaboloid.h. ◆ InspectShape(). void TGeoParaboloid::InspectShape ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ IsA(). TClass * TGeoParaboloid::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGeoBBox.; Definition at line 78 of file TGeoParaboloid.h. ◆ IsCylType(). Bool_t TGeoParaboloid::IsCylType ; (; ); const. inlineoverridevirtual . Reimplemented from TGeoBBox.; Definition at line 66 of file TGeoParaboloid.h. ◆ MakeBuffer3D(). TBuffer3D * TGeoParaboloid::MakeBuffer3D ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ operator=(). TGeoParaboloid & TGeoParaboloid::operator= ; (; const TGeoParaboloid & ; ). privatedelete . ◆ Safety(). Double_t TGeoParaboloid::Safety ; (; const Double_t * ; point, . Bool_t ; in = kTRUE . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Safety_v(). void TGeoParaboloid::Safety_v ; (; const Double_t * ; points, . const Bool_t * ; inside, . Double_t * ; safe, . Int_t ; vecsize . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SavePrimitive(). void TGeoParaboloid::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented from TGeoBBox. ◆ SetDimensions(). void TGeoParaboloid::SetDimensions ; (; Double_t * ; param). overridevirtual . Reimplemented from TGeoBBox. ◆ SetParaboloidDimensions(). void TGeoParaboloid::SetParaboloidDimensions ; (; Double_t ; rlo, . Double_t ; rhi, . Double_t ; dz . ). ◆ SetPoints() [1/2]. void TGeoParaboloid::SetPoints ; (; Double_t * ; points); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SetPoints() [2/2]. void TGeoParaboloid::SetPoints ; (; Float_t * ; points); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SetSegsAndPols(). void TGeoParaboloid::SetSegsAndPols ; (; TBuffer3D & ; buff); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Sizeof3D(). void TGeoPara",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:7378,Security,hash,hash,7378," &ClassDef_StreamerNVirtual_b);  ; Bool_t TestShapeBit (UInt_t f) const;  ; Int_t TestShapeBits (UInt_t f) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParaboloid.html:5049,Testability,test,testNo,5049,"teCount () const override;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThreadData () const;  ; virtual void CreateThreadData (Int_t);  ; void Draw (Option_t *option="""") override;  Draw this shape. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute mouse actions on this shape. ;  ; Int_t GetId () const;  ; const char * GetName () const override;  Get the shape name. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; void InvertShapeBit (UInt_t f);  ; TClass * IsA () const override;  ; virtual Bool_t IsAssembly () const;  ; virtual Bool_t IsComposite () const;  ; virtual Bool_t IsReflected () const;  ; Bool_t IsRunTimeShape () const;  ; Bool_t IsValid () const;  ; virtual Bool_t IsVecGeom () const;  ; void Paint (Option_t *option="""") override;  Paint this shape. ;  ; void ResetShapeBit (UInt_t f);  ; void SetId (Int_t id);  ; void SetRuntime (Bool_t flag=kTRUE);  ; void SetShapeBit (UInt_t f);  ; vo",MatchSource.WIKI,doc/master/classTGeoParaboloid.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html
https://root.cern/doc/master/classTGeoParallelWorld.html:2655,Availability,toler,tolerance,2655,"textMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoParallelWorld ();  ;  TGeoParallelWorld (const char *name, TGeoManager *mgr);  Default constructor. ;  ;  ~TGeoParallelWorld () override;  Destructor. ;  ; void AddNode (const char *path);  Add a node normally to this world. Overlapping nodes not allowed. ;  ; void AddOverlap (const char *volname, Bool_t activate=kTRUE);  To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ;  ; void AddOverlap (TGeoVolume *vol, Bool_t activate=kTRUE);  To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ;  ; void BuildBVH ();  Build the BVH acceleration structure. ;  ; bool CheckBVH (void *, size_t) const;  Check/validate the BVH acceleration structure. ;  ; void CheckOverlaps (Double_t ovlp=0.001);  Check overlaps within a tolerance value. ;  ; Bool_t CloseGeometry ();  The main geometry must be closed. ;  ; void Draw (Option_t *option) override;  Draw the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundary (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  ; TGeoPhysicalNode * FindNode (Double_t point[3]);  ; AccelerationMode const & GetAccelerationMode () const;  ; TGeoManager * GetGeometry () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsClosed () const;  ; Bool_t IsUsingOverlaps () const;  ; void PrintBVH () const;  Prints the BVH. ;  ; Int_t PrintDetectedOverlaps () const;  Print the overlaps which were detected during real tracking. ;  ; void RefreshPhysicalNodes ();  Refresh the node pointers and re-voxelize. ;  ; void ResetOverlaps () const;  Reset overlapflag for all volumes in geometry. ;  ; Double_t Safety (Double_t point[3], Double_t safmax=1.E30);  ; void SetAccelerationMode (AccelerationMode const &mode);  ;",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:6967,Availability,error,error,6967,"d graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:7056,Availability,error,error,7056," be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:7211,Availability,error,error,7211," then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:7508,Availability,error,error,7508,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:11592,Availability,error,error,11592,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:19494,Availability,toler,tolerance,19494,"f volumes which may overlap with any of the physical nodes of the parallel world. ; Better be done before misalignment ; Definition at line 120 of file TGeoParallelWorld.cxx. ◆ AddOverlap() [2/2]. void TGeoParallelWorld::AddOverlap ; (; TGeoVolume * ; vol, . Bool_t ; activate = kTRUE . ). To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ; Better be done before misalignment ; Definition at line 108 of file TGeoParallelWorld.cxx. ◆ BuildBVH(). void TGeoParallelWorld::BuildBVH ; (; ). Build the BVH acceleration structure. ; Definition at line 1315 of file TGeoParallelWorld.cxx. ◆ CheckBVH(). bool TGeoParallelWorld::CheckBVH ; (; void * ; bvh, . size_t ; expected_leaf_count . ); const. Check/validate the BVH acceleration structure. ; Definition at line 1261 of file TGeoParallelWorld.cxx. ◆ CheckOverlaps(). void TGeoParallelWorld::CheckOverlaps ; (; Double_t ; ovlp = 0.001). Check overlaps within a tolerance value. ; Definition at line 1245 of file TGeoParallelWorld.cxx. ◆ Class(). static TClass * TGeoParallelWorld::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoParallelWorld::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoParallelWorld::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 184 of file TGeoParallelWorld.h. ◆ CloseGeometry(). Bool_t TGeoParallelWorld::CloseGeometry ; (; ). The main geometry must be closed. ; Definition at line 165 of file TGeoParallelWorld.cxx. ◆ DeclFileName(). static const char * TGeoParallelWorld::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 184 of file TGeoParallelWorld.h. ◆ Draw(). void TGeoParallelWorld::Draw ; (; Option_t * ; option). overridevirtual . Draw the parallel world. ; Reimplemented from TObject.; Definitio",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:543,Integrability,interface,interface,543,". ROOT: TGeoParallelWorld Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGeoParallelWorld Class ReferenceThe Geometry Package » Geometry classes. ; Base class for a flat parallel geometry. ; The parallel geometry can be composed by both normal volumes added using the AddNode interface (not implemented yet) or by physical nodes which will use as position their actual global matrix with respect to the top volume of the main geometry.; All these nodes are added as daughters to the ""top"" volume of the parallel world which acts as a navigation helper in this parallel world. The parallel world has to be closed before calling any navigation method. ; Definition at line 23 of file TGeoParallelWorld.h. Classes; struct  SafetyVoxelInfo;  . Public Types; enum class  AccelerationMode { kVoxelFinder; , kBVH; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoParallelWorld ();  ;  TGeoParallelWorld (const char *name, TGeoManager *mgr);  Default constructor. ;  ;  ~TGeoParallelWorld () override;  Destructor. ;  ; void AddNode (const char *path);  Add a node normally to this world. Overlapping nodes not allowe",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:6973,Integrability,message,message,6973,"d graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:7514,Integrability,message,message,7514,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:8504,Integrability,message,message,8504,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:11598,Integrability,message,message,11598,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:11971,Integrability,message,message,11971," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:1094,Modifiability,inherit,inherited,1094," members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGeoParallelWorld Class ReferenceThe Geometry Package » Geometry classes. ; Base class for a flat parallel geometry. ; The parallel geometry can be composed by both normal volumes added using the AddNode interface (not implemented yet) or by physical nodes which will use as position their actual global matrix with respect to the top volume of the main geometry.; All these nodes are added as daughters to the ""top"" volume of the parallel world which acts as a navigation helper in this parallel world. The parallel world has to be closed before calling any navigation method. ; Definition at line 23 of file TGeoParallelWorld.h. Classes; struct  SafetyVoxelInfo;  . Public Types; enum class  AccelerationMode { kVoxelFinder; , kBVH; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoParallelWorld ();  ;  TGeoParallelWorld (const char *name, TGeoManager *mgr);  Default constructor. ;  ;  ~TGeoParallelWorld () override;  Destructor. ;  ; void AddNode (const char *path);  Add a node normally to this world. Overlapping nodes not allowed. ;  ; void AddOverlap (const char *volname, Bool_t activate=kTRUE);  To use this optimization, the user should declare the full list",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:3854,Modifiability,inherit,inherited,3854,"_t dir[3], Double_t &step, Double_t stepmax=1.E30);  ; TGeoPhysicalNode * FindNode (Double_t point[3]);  ; AccelerationMode const & GetAccelerationMode () const;  ; TGeoManager * GetGeometry () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsClosed () const;  ; Bool_t IsUsingOverlaps () const;  ; void PrintBVH () const;  Prints the BVH. ;  ; Int_t PrintDetectedOverlaps () const;  Print the overlaps which were detected during real tracking. ;  ; void RefreshPhysicalNodes ();  Refresh the node pointers and re-voxelize. ;  ; void ResetOverlaps () const;  Reset overlapflag for all volumes in geometry. ;  ; Double_t Safety (Double_t point[3], Double_t safmax=1.E30);  ; void SetAccelerationMode (AccelerationMode const &mode);  ; void SetUseOverlaps (Bool_t flag);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:5594,Modifiability,inherit,inherited,5594,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:6603,Modifiability,inherit,inheritance,6603,"m TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:8602,Modifiability,inherit,inherits,8602,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:8719,Modifiability,inherit,inherits,8719,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:12472,Modifiability,inherit,inherited,12472,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoParallelWorld (const TGeoParallelWorld &)=delete;  switch between different algorithm implementations ;  ; TGeoParallelWorld & operator= (const TGeoParallelWorld &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:12682,Modifiability,inherit,inherited,12682,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoParallelWorld (const TGeoParallelWorld &)=delete;  switch between different algorithm implementations ;  ; TGeoParallelWorld & operator= (const TGeoParallelWorld &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:13405,Modifiability,inherit,inherited,13405,"texpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoParallelWorld (const TGeoParallelWorld &)=delete;  switch between different algorithm implementations ;  ; TGeoParallelWorld & operator= (const TGeoParallelWorld &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; AccelerationMode fAccMode = AccelerationMode::kVoxelFinder;  to keep the vector of primitive axis aligned bounding boxes ;  ; void * fBoundingBoxes = nullptr;  stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ;  ; void * fBVH = nullptr;  array of physical nodes ;  ; TGeoManager * fGeoManager;  ; Bool_t fIsClosed;  ; TGeoPhysicalNode * fLastState;  helper volume ;  ; TObjArray * fPaths;  ; TObjArray * fPhysical;  Last PN touched. ;  ; std::vector< unsigned int > fSafetyCandidateStore {};  A regular 3D cache layer for fast point-based safety lookups. ;  ; TGeoVoxelGrid< SafetyVoxelInfo > * fSafetyVoxelCache;  BVH helper structure for safety and navigation. ;  ; Bool_t fUseOverlaps;  ; TG",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:14424,Modifiability,inherit,inherited,14424,"id DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; AccelerationMode fAccMode = AccelerationMode::kVoxelFinder;  to keep the vector of primitive axis aligned bounding boxes ;  ; void * fBoundingBoxes = nullptr;  stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ;  ; void * fBVH = nullptr;  array of physical nodes ;  ; TGeoManager * fGeoManager;  ; Bool_t fIsClosed;  ; TGeoPhysicalNode * fLastState;  helper volume ;  ; TObjArray * fPaths;  ; TObjArray * fPhysical;  Last PN touched. ;  ; std::vector< unsigned int > fSafetyCandidateStore {};  A regular 3D cache layer for fast point-based safety lookups. ;  ; TGeoVoxelGrid< SafetyVoxelInfo > * fSafetyVoxelCache;  BVH helper structure for safety and navigation. ;  ; Bool_t fUseOverlaps;  ; TGeoVolume * fVolume;  Closed flag. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; TGeoPhysicalNode * FindNextBoundaryBVH (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundaryLoop (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world in a trivial loop version (for debugging) ;  ; TGeoPhysicalNode * FindNextBoundaryOrig (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNodeBVH (Double_t point[3]);  Finds physical node containing the point. ;  ; TGeoPhysicalNode * FindNodeLoop (Double_t point[3]);  Finds physical node containing the point using simple algorithm (for debugging) ;  ; TGeoPhysicalNode * Fi",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:16954,Modifiability,inherit,inherited,16954,"te bounding boxes for safety calculation given a point. ;  ; void InitSafetyVoxel (TGeoVoxelGridIndex const &);  Method to initialize the safety voxel at a specific 3D voxel (grid) index. ;  ; Double_t SafetyBVH (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ;  ; Double_t SafetyLoop (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (trivial loop version for comparison/debugging) ;  ; Double_t SafetyOrig (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (original version based on TGeoVoxelFinder) ;  ; void TestVoxelGrid ();  ; Double_t VoxelSafety (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world used BVH structure with addiditional on-the-fly 3D grid/voxel caching —> essentially an O(1) algorithm !) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoParallelWorld.h>. Inheritance diagram for TGeoParallelWorld:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ AccelerationMode. enum class TGeoParallelWorld::AccelerationMode. strong . EnumeratorkVoxelFinder ; kBVH . Definition at line 28 of file TGeoParallelWorld.h. Constructor & Destructor Documentation. ◆ TGeoParallelWorld() [1/3]. TGeoParallelWorld::TGeoParallelWorld ; (; const TGeoParallelWorld & ; ). protecteddelete . switch between different algorithm implementations . ◆ TGeoParallelWorld() [2/3]. TGeoParallelWorld::TGeoParallelWorld ; (; ). inline . Definition at line 62 of file TGeoParallelWorld.h. ◆ TGeoParallelWorld() [3/3]. TGeoParallelWorld::TGeoParallelWorld ; (; const char * ; name, . TGeoManager * ; mgr . ). Default constructor. ; Definition at line 61 of file TGeoParallelWorld.cxx. ◆ ~TGeoParallelWorld(). TGeoPara",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:2084,Performance,optimiz,optimization,2084,"Object; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoParallelWorld ();  ;  TGeoParallelWorld (const char *name, TGeoManager *mgr);  Default constructor. ;  ;  ~TGeoParallelWorld () override;  Destructor. ;  ; void AddNode (const char *path);  Add a node normally to this world. Overlapping nodes not allowed. ;  ; void AddOverlap (const char *volname, Bool_t activate=kTRUE);  To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ;  ; void AddOverlap (TGeoVolume *vol, Bool_t activate=kTRUE);  To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ;  ; void BuildBVH ();  Build the BVH acceleration structure. ;  ; bool CheckBVH (void *, size_t) const;  Check/validate the BVH acceleration structure. ;  ; void CheckOverlaps (Double_t ovlp=0.001);  Check overlaps within a tolerance value. ;  ; Bool_t CloseGeometry ();  The main geometry must be closed. ;  ; void Draw (Option_t *option) override;  Draw the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundary (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  ; TGeoPhysicalNode * FindNode (Double_t point[3]);  ; AccelerationMode const & GetAccelerationMode () const;  ; TGeoManager * GetGeometry () const;  ; TGeoVolume * GetVolume () const; ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:2295,Performance,optimiz,optimization,2295," (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoParallelWorld ();  ;  TGeoParallelWorld (const char *name, TGeoManager *mgr);  Default constructor. ;  ;  ~TGeoParallelWorld () override;  Destructor. ;  ; void AddNode (const char *path);  Add a node normally to this world. Overlapping nodes not allowed. ;  ; void AddOverlap (const char *volname, Bool_t activate=kTRUE);  To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ;  ; void AddOverlap (TGeoVolume *vol, Bool_t activate=kTRUE);  To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ;  ; void BuildBVH ();  Build the BVH acceleration structure. ;  ; bool CheckBVH (void *, size_t) const;  Check/validate the BVH acceleration structure. ;  ; void CheckOverlaps (Double_t ovlp=0.001);  Check overlaps within a tolerance value. ;  ; Bool_t CloseGeometry ();  The main geometry must be closed. ;  ; void Draw (Option_t *option) override;  Draw the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundary (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  ; TGeoPhysicalNode * FindNode (Double_t point[3]);  ; AccelerationMode const & GetAccelerationMode () const;  ; TGeoManager * GetGeometry () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsClosed () const;  ; Bool_t IsUsingOverlaps () const;  ; void PrintBVH () const;  Prints the BVH. ;  ; Int_t PrintDetectedOverlaps () const;  Print the overlaps which ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:14175,Performance,cache,cache,14175," ;  . Protected Member Functions;  TGeoParallelWorld (const TGeoParallelWorld &)=delete;  switch between different algorithm implementations ;  ; TGeoParallelWorld & operator= (const TGeoParallelWorld &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; AccelerationMode fAccMode = AccelerationMode::kVoxelFinder;  to keep the vector of primitive axis aligned bounding boxes ;  ; void * fBoundingBoxes = nullptr;  stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ;  ; void * fBVH = nullptr;  array of physical nodes ;  ; TGeoManager * fGeoManager;  ; Bool_t fIsClosed;  ; TGeoPhysicalNode * fLastState;  helper volume ;  ; TObjArray * fPaths;  ; TObjArray * fPhysical;  Last PN touched. ;  ; std::vector< unsigned int > fSafetyCandidateStore {};  A regular 3D cache layer for fast point-based safety lookups. ;  ; TGeoVoxelGrid< SafetyVoxelInfo > * fSafetyVoxelCache;  BVH helper structure for safety and navigation. ;  ; Bool_t fUseOverlaps;  ; TGeoVolume * fVolume;  Closed flag. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; TGeoPhysicalNode * FindNextBoundaryBVH (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundaryLoop (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world in a trivial loop version (for debugging) ;  ; TGeoPhysicalNode * FindNextBoundaryOrig (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the par",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:18436,Performance,optimiz,optimization,18436," ; (; const TGeoParallelWorld & ; ). protecteddelete . switch between different algorithm implementations . ◆ TGeoParallelWorld() [2/3]. TGeoParallelWorld::TGeoParallelWorld ; (; ). inline . Definition at line 62 of file TGeoParallelWorld.h. ◆ TGeoParallelWorld() [3/3]. TGeoParallelWorld::TGeoParallelWorld ; (; const char * ; name, . TGeoManager * ; mgr . ). Default constructor. ; Definition at line 61 of file TGeoParallelWorld.cxx. ◆ ~TGeoParallelWorld(). TGeoParallelWorld::~TGeoParallelWorld ; (; ). override . Destructor. ; Definition at line 76 of file TGeoParallelWorld.cxx. Member Function Documentation. ◆ AddNode(). void TGeoParallelWorld::AddNode ; (; const char * ; path). Add a node normally to this world. Overlapping nodes not allowed. ; Definition at line 92 of file TGeoParallelWorld.cxx. ◆ AddOverlap() [1/2]. void TGeoParallelWorld::AddOverlap ; (; const char * ; volname, . Bool_t ; activate = kTRUE . ). To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ; Better be done before misalignment ; Definition at line 120 of file TGeoParallelWorld.cxx. ◆ AddOverlap() [2/2]. void TGeoParallelWorld::AddOverlap ; (; TGeoVolume * ; vol, . Bool_t ; activate = kTRUE . ). To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ; Better be done before misalignment ; Definition at line 108 of file TGeoParallelWorld.cxx. ◆ BuildBVH(). void TGeoParallelWorld::BuildBVH ; (; ). Build the BVH acceleration structure. ; Definition at line 1315 of file TGeoParallelWorld.cxx. ◆ CheckBVH(). bool TGeoParallelWorld::CheckBVH ; (; void * ; bvh, . size_t ; expected_leaf_count . ); const. Check/validate the BVH acceleration structure. ; Definition at line 1261 of file TGeoParallelWorld.cxx. ◆ CheckOverlaps(). void TGeoParallelWorld::CheckOverlaps ; (; Double_t ; ovlp = 0.001). Check overlaps within a tol",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:18791,Performance,optimiz,optimization,18791," . ). Default constructor. ; Definition at line 61 of file TGeoParallelWorld.cxx. ◆ ~TGeoParallelWorld(). TGeoParallelWorld::~TGeoParallelWorld ; (; ). override . Destructor. ; Definition at line 76 of file TGeoParallelWorld.cxx. Member Function Documentation. ◆ AddNode(). void TGeoParallelWorld::AddNode ; (; const char * ; path). Add a node normally to this world. Overlapping nodes not allowed. ; Definition at line 92 of file TGeoParallelWorld.cxx. ◆ AddOverlap() [1/2]. void TGeoParallelWorld::AddOverlap ; (; const char * ; volname, . Bool_t ; activate = kTRUE . ). To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ; Better be done before misalignment ; Definition at line 120 of file TGeoParallelWorld.cxx. ◆ AddOverlap() [2/2]. void TGeoParallelWorld::AddOverlap ; (; TGeoVolume * ; vol, . Bool_t ; activate = kTRUE . ). To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ; Better be done before misalignment ; Definition at line 108 of file TGeoParallelWorld.cxx. ◆ BuildBVH(). void TGeoParallelWorld::BuildBVH ; (; ). Build the BVH acceleration structure. ; Definition at line 1315 of file TGeoParallelWorld.cxx. ◆ CheckBVH(). bool TGeoParallelWorld::CheckBVH ; (; void * ; bvh, . size_t ; expected_leaf_count . ); const. Check/validate the BVH acceleration structure. ; Definition at line 1261 of file TGeoParallelWorld.cxx. ◆ CheckOverlaps(). void TGeoParallelWorld::CheckOverlaps ; (; Double_t ; ovlp = 0.001). Check overlaps within a tolerance value. ; Definition at line 1245 of file TGeoParallelWorld.cxx. ◆ Class(). static TClass * TGeoParallelWorld::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoParallelWorld::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoParallelWorld::C",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:29136,Performance,cache,cache,29136,oid* TGeoParallelWorld::fBoundingBoxes = nullptr. protected . stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ; Definition at line 54 of file TGeoParallelWorld.h. ◆ fBVH. void* TGeoParallelWorld::fBVH = nullptr. protected . array of physical nodes ; Definition at line 49 of file TGeoParallelWorld.h. ◆ fGeoManager. TGeoManager* TGeoParallelWorld::fGeoManager. protected . Definition at line 41 of file TGeoParallelWorld.h. ◆ fIsClosed. Bool_t TGeoParallelWorld::fIsClosed. protected . Definition at line 44 of file TGeoParallelWorld.h. ◆ fLastState. TGeoPhysicalNode* TGeoParallelWorld::fLastState. protected . helper volume ; Definition at line 46 of file TGeoParallelWorld.h. ◆ fPaths. TObjArray* TGeoParallelWorld::fPaths. protected . Definition at line 42 of file TGeoParallelWorld.h. ◆ fPhysical. TObjArray* TGeoParallelWorld::fPhysical. protected . Last PN touched. ; Definition at line 47 of file TGeoParallelWorld.h. ◆ fSafetyCandidateStore. std::vector<unsigned int> TGeoParallelWorld::fSafetyCandidateStore {}. protected . A regular 3D cache layer for fast point-based safety lookups. ; Definition at line 52 of file TGeoParallelWorld.h. ◆ fSafetyVoxelCache. TGeoVoxelGrid<SafetyVoxelInfo>* TGeoParallelWorld::fSafetyVoxelCache. protected . Initial value:=; nullptr. BVH helper structure for safety and navigation. ; Definition at line 50 of file TGeoParallelWorld.h. ◆ fUseOverlaps. Bool_t TGeoParallelWorld::fUseOverlaps. protected . Definition at line 43 of file TGeoParallelWorld.h. ◆ fVolume. TGeoVolume* TGeoParallelWorld::fVolume. protected . Closed flag. ; Definition at line 45 of file TGeoParallelWorld.h. Libraries for TGeoParallelWorld:. [legend]; The documentation for this class was generated from the following files:; geom/geom/inc/TGeoParallelWorld.h; geom/geom/src/TGeoParallelWorld.cxx. TGeoParallelWorld. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:07 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:3329,Safety,detect,detected,3329,"n, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ;  ; void BuildBVH ();  Build the BVH acceleration structure. ;  ; bool CheckBVH (void *, size_t) const;  Check/validate the BVH acceleration structure. ;  ; void CheckOverlaps (Double_t ovlp=0.001);  Check overlaps within a tolerance value. ;  ; Bool_t CloseGeometry ();  The main geometry must be closed. ;  ; void Draw (Option_t *option) override;  Draw the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundary (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  ; TGeoPhysicalNode * FindNode (Double_t point[3]);  ; AccelerationMode const & GetAccelerationMode () const;  ; TGeoManager * GetGeometry () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsClosed () const;  ; Bool_t IsUsingOverlaps () const;  ; void PrintBVH () const;  Prints the BVH. ;  ; Int_t PrintDetectedOverlaps () const;  Print the overlaps which were detected during real tracking. ;  ; void RefreshPhysicalNodes ();  Refresh the node pointers and re-voxelize. ;  ; void ResetOverlaps () const;  Reset overlapflag for all volumes in geometry. ;  ; Double_t Safety (Double_t point[3], Double_t safmax=1.E30);  ; void SetAccelerationMode (AccelerationMode const &mode);  ; void SetUseOverlaps (Bool_t flag);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:13808,Safety,safe,safety,13808,"lFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoParallelWorld (const TGeoParallelWorld &)=delete;  switch between different algorithm implementations ;  ; TGeoParallelWorld & operator= (const TGeoParallelWorld &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; AccelerationMode fAccMode = AccelerationMode::kVoxelFinder;  to keep the vector of primitive axis aligned bounding boxes ;  ; void * fBoundingBoxes = nullptr;  stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ;  ; void * fBVH = nullptr;  array of physical nodes ;  ; TGeoManager * fGeoManager;  ; Bool_t fIsClosed;  ; TGeoPhysicalNode * fLastState;  helper volume ;  ; TObjArray * fPaths;  ; TObjArray * fPhysical;  Last PN touched. ;  ; std::vector< unsigned int > fSafetyCandidateStore {};  A regular 3D cache layer for fast point-based safety lookups. ;  ; TGeoVoxelGrid< SafetyVoxelInfo > * fSafetyVoxelCache;  BVH helper structure for safety and navigation. ;  ; Bool_t fUseOverlaps;  ; TGeoVolume * fVolume;  Closed flag. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; TGeoPhysicalNode * FindNextBoundaryBVH (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundaryLoop (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same f",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:14208,Safety,safe,safety,14208," ;  . Protected Member Functions;  TGeoParallelWorld (const TGeoParallelWorld &)=delete;  switch between different algorithm implementations ;  ; TGeoParallelWorld & operator= (const TGeoParallelWorld &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; AccelerationMode fAccMode = AccelerationMode::kVoxelFinder;  to keep the vector of primitive axis aligned bounding boxes ;  ; void * fBoundingBoxes = nullptr;  stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ;  ; void * fBVH = nullptr;  array of physical nodes ;  ; TGeoManager * fGeoManager;  ; Bool_t fIsClosed;  ; TGeoPhysicalNode * fLastState;  helper volume ;  ; TObjArray * fPaths;  ; TObjArray * fPhysical;  Last PN touched. ;  ; std::vector< unsigned int > fSafetyCandidateStore {};  A regular 3D cache layer for fast point-based safety lookups. ;  ; TGeoVoxelGrid< SafetyVoxelInfo > * fSafetyVoxelCache;  BVH helper structure for safety and navigation. ;  ; Bool_t fUseOverlaps;  ; TGeoVolume * fVolume;  Closed flag. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; TGeoPhysicalNode * FindNextBoundaryBVH (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundaryLoop (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world in a trivial loop version (for debugging) ;  ; TGeoPhysicalNode * FindNextBoundaryOrig (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the par",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:14309,Safety,safe,safety,14309,"algorithm implementations ;  ; TGeoParallelWorld & operator= (const TGeoParallelWorld &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; AccelerationMode fAccMode = AccelerationMode::kVoxelFinder;  to keep the vector of primitive axis aligned bounding boxes ;  ; void * fBoundingBoxes = nullptr;  stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ;  ; void * fBVH = nullptr;  array of physical nodes ;  ; TGeoManager * fGeoManager;  ; Bool_t fIsClosed;  ; TGeoPhysicalNode * fLastState;  helper volume ;  ; TObjArray * fPaths;  ; TObjArray * fPhysical;  Last PN touched. ;  ; std::vector< unsigned int > fSafetyCandidateStore {};  A regular 3D cache layer for fast point-based safety lookups. ;  ; TGeoVoxelGrid< SafetyVoxelInfo > * fSafetyVoxelCache;  BVH helper structure for safety and navigation. ;  ; Bool_t fUseOverlaps;  ; TGeoVolume * fVolume;  Closed flag. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; TGeoPhysicalNode * FindNextBoundaryBVH (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundaryLoop (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world in a trivial loop version (for debugging) ;  ; TGeoPhysicalNode * FindNextBoundaryOrig (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNodeBVH (Double_t point[3]);  Finds physical node containing the point. ; ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:15755,Safety,safe,safety,15755,"e * FindNextBoundaryLoop (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world in a trivial loop version (for debugging) ;  ; TGeoPhysicalNode * FindNextBoundaryOrig (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNodeBVH (Double_t point[3]);  Finds physical node containing the point. ;  ; TGeoPhysicalNode * FindNodeLoop (Double_t point[3]);  Finds physical node containing the point using simple algorithm (for debugging) ;  ; TGeoPhysicalNode * FindNodeOrig (Double_t point[3]);  Finds physical node containing the point (original version based on TGeoVoxelFinder) ;  ; std::pair< double, double > GetBVHSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; std::pair< double, double > GetLoopSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; void InitSafetyVoxel (TGeoVoxelGridIndex const &);  Method to initialize the safety voxel at a specific 3D voxel (grid) index. ;  ; Double_t SafetyBVH (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ;  ; Double_t SafetyLoop (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (trivial loop version for comparison/debugging) ;  ; Double_t SafetyOrig (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (original version based on TGeoVoxelFinder) ;  ; void TestVoxelGrid ();  ; Double_t VoxelSafety (Double_t point[3], D",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:15987,Safety,safe,safety,15987,"  ; TGeoPhysicalNode * FindNextBoundaryOrig (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNodeBVH (Double_t point[3]);  Finds physical node containing the point. ;  ; TGeoPhysicalNode * FindNodeLoop (Double_t point[3]);  Finds physical node containing the point using simple algorithm (for debugging) ;  ; TGeoPhysicalNode * FindNodeOrig (Double_t point[3]);  Finds physical node containing the point (original version based on TGeoVoxelFinder) ;  ; std::pair< double, double > GetBVHSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; std::pair< double, double > GetLoopSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; void InitSafetyVoxel (TGeoVoxelGridIndex const &);  Method to initialize the safety voxel at a specific 3D voxel (grid) index. ;  ; Double_t SafetyBVH (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ;  ; Double_t SafetyLoop (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (trivial loop version for comparison/debugging) ;  ; Double_t SafetyOrig (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (original version based on TGeoVoxelFinder) ;  ; void TestVoxelGrid ();  ; Double_t VoxelSafety (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world used BVH structure with addiditional on-the-fly 3D grid/voxel caching —> essentially an O(1) algorithm !) ;  . Additional Inherited Members;  Protected Types inherited fr",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:16103,Safety,safe,safety,16103,";  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNodeBVH (Double_t point[3]);  Finds physical node containing the point. ;  ; TGeoPhysicalNode * FindNodeLoop (Double_t point[3]);  Finds physical node containing the point using simple algorithm (for debugging) ;  ; TGeoPhysicalNode * FindNodeOrig (Double_t point[3]);  Finds physical node containing the point (original version based on TGeoVoxelFinder) ;  ; std::pair< double, double > GetBVHSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; std::pair< double, double > GetLoopSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; void InitSafetyVoxel (TGeoVoxelGridIndex const &);  Method to initialize the safety voxel at a specific 3D voxel (grid) index. ;  ; Double_t SafetyBVH (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ;  ; Double_t SafetyLoop (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (trivial loop version for comparison/debugging) ;  ; Double_t SafetyOrig (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (original version based on TGeoVoxelFinder) ;  ; void TestVoxelGrid ();  ; Double_t VoxelSafety (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world used BVH structure with addiditional on-the-fly 3D grid/voxel caching —> essentially an O(1) algorithm !) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoParallelWorld.h>. Inheritance diagram for TGeoP",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:16230,Safety,safe,safety,16230,"uble_t point[3]);  Finds physical node containing the point using simple algorithm (for debugging) ;  ; TGeoPhysicalNode * FindNodeOrig (Double_t point[3]);  Finds physical node containing the point (original version based on TGeoVoxelFinder) ;  ; std::pair< double, double > GetBVHSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; std::pair< double, double > GetLoopSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; void InitSafetyVoxel (TGeoVoxelGridIndex const &);  Method to initialize the safety voxel at a specific 3D voxel (grid) index. ;  ; Double_t SafetyBVH (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ;  ; Double_t SafetyLoop (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (trivial loop version for comparison/debugging) ;  ; Double_t SafetyOrig (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (original version based on TGeoVoxelFinder) ;  ; void TestVoxelGrid ();  ; Double_t VoxelSafety (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world used BVH structure with addiditional on-the-fly 3D grid/voxel caching —> essentially an O(1) algorithm !) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoParallelWorld.h>. Inheritance diagram for TGeoParallelWorld:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ AccelerationMode. enum class TGeoParallelWorld::AccelerationMode. strong . Enumerat",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:16431,Safety,safe,safety,16431,"ontaining the point (original version based on TGeoVoxelFinder) ;  ; std::pair< double, double > GetBVHSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; std::pair< double, double > GetLoopSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; void InitSafetyVoxel (TGeoVoxelGridIndex const &);  Method to initialize the safety voxel at a specific 3D voxel (grid) index. ;  ; Double_t SafetyBVH (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ;  ; Double_t SafetyLoop (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (trivial loop version for comparison/debugging) ;  ; Double_t SafetyOrig (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (original version based on TGeoVoxelFinder) ;  ; void TestVoxelGrid ();  ; Double_t VoxelSafety (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world used BVH structure with addiditional on-the-fly 3D grid/voxel caching —> essentially an O(1) algorithm !) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoParallelWorld.h>. Inheritance diagram for TGeoParallelWorld:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ AccelerationMode. enum class TGeoParallelWorld::AccelerationMode. strong . EnumeratorkVoxelFinder ; kBVH . Definition at line 28 of file TGeoParallelWorld.h. Constructor & Destructor Documentation. ◆ TGeoParallelWorld() [1/3]. TGeoParallelWorld::TGeoParallelWor",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:16587,Safety,safe,safety,16587,"s, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; std::pair< double, double > GetLoopSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; void InitSafetyVoxel (TGeoVoxelGridIndex const &);  Method to initialize the safety voxel at a specific 3D voxel (grid) index. ;  ; Double_t SafetyBVH (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ;  ; Double_t SafetyLoop (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (trivial loop version for comparison/debugging) ;  ; Double_t SafetyOrig (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (original version based on TGeoVoxelFinder) ;  ; void TestVoxelGrid ();  ; Double_t VoxelSafety (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world used BVH structure with addiditional on-the-fly 3D grid/voxel caching —> essentially an O(1) algorithm !) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoParallelWorld.h>. Inheritance diagram for TGeoParallelWorld:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ AccelerationMode. enum class TGeoParallelWorld::AccelerationMode. strong . EnumeratorkVoxelFinder ; kBVH . Definition at line 28 of file TGeoParallelWorld.h. Constructor & Destructor Documentation. ◆ TGeoParallelWorld() [1/3]. TGeoParallelWorld::TGeoParallelWorld ; (; const TGeoParallelWorld & ; ). protecteddelete . switch between different algorithm implementations . ◆ TGeoParallelWorld() [2/3]. TGeoParallelWorld::TGeoParall",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:16766,Safety,safe,safety,16766,"pSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; void InitSafetyVoxel (TGeoVoxelGridIndex const &);  Method to initialize the safety voxel at a specific 3D voxel (grid) index. ;  ; Double_t SafetyBVH (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ;  ; Double_t SafetyLoop (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (trivial loop version for comparison/debugging) ;  ; Double_t SafetyOrig (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (original version based on TGeoVoxelFinder) ;  ; void TestVoxelGrid ();  ; Double_t VoxelSafety (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world used BVH structure with addiditional on-the-fly 3D grid/voxel caching —> essentially an O(1) algorithm !) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoParallelWorld.h>. Inheritance diagram for TGeoParallelWorld:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ AccelerationMode. enum class TGeoParallelWorld::AccelerationMode. strong . EnumeratorkVoxelFinder ; kBVH . Definition at line 28 of file TGeoParallelWorld.h. Constructor & Destructor Documentation. ◆ TGeoParallelWorld() [1/3]. TGeoParallelWorld::TGeoParallelWorld ; (; const TGeoParallelWorld & ; ). protecteddelete . switch between different algorithm implementations . ◆ TGeoParallelWorld() [2/3]. TGeoParallelWorld::TGeoParallelWorld ; (; ). inline . Definition at line 62 of file TGeoParallelWorld.h. ◆ TGeoParallelWorld() [3/3]. TGeoParallelWorld::TGeoParallelWorld ; (; const char * ; name,",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:23323,Safety,safe,safety,23323,"mented based on TGeoVoxelGrid caching. ; Definition at line 245 of file TGeoParallelWorld.cxx. ◆ FindNodeLoop(). TGeoPhysicalNode * TGeoParallelWorld::FindNodeLoop ; (; Double_t ; point[3]). private . Finds physical node containing the point using simple algorithm (for debugging) ; Definition at line 353 of file TGeoParallelWorld.cxx. ◆ FindNodeOrig(). TGeoPhysicalNode * TGeoParallelWorld::FindNodeOrig ; (; Double_t ; point[3]). private . Finds physical node containing the point (original version based on TGeoVoxelFinder) ; Definition at line 318 of file TGeoParallelWorld.cxx. ◆ GetAccelerationMode(). AccelerationMode const & TGeoParallelWorld::GetAccelerationMode ; (; ); const. inline . Definition at line 96 of file TGeoParallelWorld.h. ◆ GetBVHSafetyCandidates(). std::pair< double, double > TGeoParallelWorld::GetBVHSafetyCandidates ; (; double ; point[3], . std::vector< int > & ; candidates, . double ; margin = 0. . ); const. private . Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ; Uses BVH to do so. ; Definition at line 802 of file TGeoParallelWorld.cxx. ◆ GetGeometry(). TGeoManager * TGeoParallelWorld::GetGeometry ; (; ); const. inline . Definition at line 142 of file TGeoParallelWorld.h. ◆ GetLoopSafetyCandidates(). std::pair< double, double > TGeoParallelWorld::GetLoopSafetyCandidates ; (; double ; point[3], . std::vector< int > & ; candidates, . double ; margin = 0. . ); const. private . Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ; Uses trivial algorithm to do so. ; Definition at line 740 of file TGeoParallelWorld.cxx. ◆ GetVolume(). TGeoVolume * TGeoParallelWorld::GetVolume ; (; ); const. inline . Definition at line 144 of file TGeoParallelWorld.h. ◆ InitSafetyVoxel(). void TGeoParallelWorld::InitSafetyVoxel ; (; TGeoVoxelGridIndex const & ; vi). private . Method to initialize the safety voxel at a specific 3D voxel (grid) index. ; Definition at line ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:23843,Safety,safe,safety,23843,"Finder) ; Definition at line 318 of file TGeoParallelWorld.cxx. ◆ GetAccelerationMode(). AccelerationMode const & TGeoParallelWorld::GetAccelerationMode ; (; ); const. inline . Definition at line 96 of file TGeoParallelWorld.h. ◆ GetBVHSafetyCandidates(). std::pair< double, double > TGeoParallelWorld::GetBVHSafetyCandidates ; (; double ; point[3], . std::vector< int > & ; candidates, . double ; margin = 0. . ); const. private . Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ; Uses BVH to do so. ; Definition at line 802 of file TGeoParallelWorld.cxx. ◆ GetGeometry(). TGeoManager * TGeoParallelWorld::GetGeometry ; (; ); const. inline . Definition at line 142 of file TGeoParallelWorld.h. ◆ GetLoopSafetyCandidates(). std::pair< double, double > TGeoParallelWorld::GetLoopSafetyCandidates ; (; double ; point[3], . std::vector< int > & ; candidates, . double ; margin = 0. . ); const. private . Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ; Uses trivial algorithm to do so. ; Definition at line 740 of file TGeoParallelWorld.cxx. ◆ GetVolume(). TGeoVolume * TGeoParallelWorld::GetVolume ; (; ); const. inline . Definition at line 144 of file TGeoParallelWorld.h. ◆ InitSafetyVoxel(). void TGeoParallelWorld::InitSafetyVoxel ; (; TGeoVoxelGridIndex const & ; vi). private . Method to initialize the safety voxel at a specific 3D voxel (grid) index. ; Definition at line 916 of file TGeoParallelWorld.cxx. ◆ IsA(). TClass * TGeoParallelWorld::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 184 of file TGeoParallelWorld.h. ◆ IsClosed(). Bool_t TGeoParallelWorld::IsClosed ; (; ); const. inline . Definition at line 143 of file TGeoParallelWorld.h. ◆ IsUsingOverlaps(). Bool_t TGeoParallelWorld::IsUsingOverlaps ; (; ); const. inline . Definition at line 81 of file TGeoParallelWorld.h. ◆ operator=(). TGeo",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:24236,Safety,safe,safety,24236," private . Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ; Uses BVH to do so. ; Definition at line 802 of file TGeoParallelWorld.cxx. ◆ GetGeometry(). TGeoManager * TGeoParallelWorld::GetGeometry ; (; ); const. inline . Definition at line 142 of file TGeoParallelWorld.h. ◆ GetLoopSafetyCandidates(). std::pair< double, double > TGeoParallelWorld::GetLoopSafetyCandidates ; (; double ; point[3], . std::vector< int > & ; candidates, . double ; margin = 0. . ); const. private . Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ; Uses trivial algorithm to do so. ; Definition at line 740 of file TGeoParallelWorld.cxx. ◆ GetVolume(). TGeoVolume * TGeoParallelWorld::GetVolume ; (; ); const. inline . Definition at line 144 of file TGeoParallelWorld.h. ◆ InitSafetyVoxel(). void TGeoParallelWorld::InitSafetyVoxel ; (; TGeoVoxelGridIndex const & ; vi). private . Method to initialize the safety voxel at a specific 3D voxel (grid) index. ; Definition at line 916 of file TGeoParallelWorld.cxx. ◆ IsA(). TClass * TGeoParallelWorld::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 184 of file TGeoParallelWorld.h. ◆ IsClosed(). Bool_t TGeoParallelWorld::IsClosed ; (; ); const. inline . Definition at line 143 of file TGeoParallelWorld.h. ◆ IsUsingOverlaps(). Bool_t TGeoParallelWorld::IsUsingOverlaps ; (; ); const. inline . Definition at line 81 of file TGeoParallelWorld.h. ◆ operator=(). TGeoParallelWorld & TGeoParallelWorld::operator= ; (; const TGeoParallelWorld & ; ). protecteddelete . ◆ PrintBVH(). void TGeoParallelWorld::PrintBVH ; (; ); const. Prints the BVH. ; Definition at line 374 of file TGeoParallelWorld.cxx. ◆ PrintDetectedOverlaps(). Int_t TGeoParallelWorld::PrintDetectedOverlaps ; (; ); const. Print the overlaps which were detected during real tracking. ; Definition at line 135 of file TGeoP",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:25179,Safety,detect,detected,25179,"idIndex const & ; vi). private . Method to initialize the safety voxel at a specific 3D voxel (grid) index. ; Definition at line 916 of file TGeoParallelWorld.cxx. ◆ IsA(). TClass * TGeoParallelWorld::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 184 of file TGeoParallelWorld.h. ◆ IsClosed(). Bool_t TGeoParallelWorld::IsClosed ; (; ); const. inline . Definition at line 143 of file TGeoParallelWorld.h. ◆ IsUsingOverlaps(). Bool_t TGeoParallelWorld::IsUsingOverlaps ; (; ); const. inline . Definition at line 81 of file TGeoParallelWorld.h. ◆ operator=(). TGeoParallelWorld & TGeoParallelWorld::operator= ; (; const TGeoParallelWorld & ; ). protecteddelete . ◆ PrintBVH(). void TGeoParallelWorld::PrintBVH ; (; ); const. Prints the BVH. ; Definition at line 374 of file TGeoParallelWorld.cxx. ◆ PrintDetectedOverlaps(). Int_t TGeoParallelWorld::PrintDetectedOverlaps ; (; ); const. Print the overlaps which were detected during real tracking. ; Definition at line 135 of file TGeoParallelWorld.cxx. ◆ RefreshPhysicalNodes(). void TGeoParallelWorld::RefreshPhysicalNodes ; (; ). Refresh the node pointers and re-voxelize. ; To be called mandatory in case re-alignment happened. ; Definition at line 198 of file TGeoParallelWorld.cxx. ◆ ResetOverlaps(). void TGeoParallelWorld::ResetOverlaps ; (; ); const. Reset overlapflag for all volumes in geometry. ; Definition at line 154 of file TGeoParallelWorld.cxx. ◆ Safety(). Double_t TGeoParallelWorld::Safety ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). inline . Definition at line 118 of file TGeoParallelWorld.h. ◆ SafetyBVH(). double TGeoParallelWorld::SafetyBVH ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ; Definition at line 1027 of file TGeoParallelWorld.cxx. ◆ SafetyLoop(). Double_t TGeo",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:25970,Safety,safe,safety,25970,"d.cxx. ◆ PrintDetectedOverlaps(). Int_t TGeoParallelWorld::PrintDetectedOverlaps ; (; ); const. Print the overlaps which were detected during real tracking. ; Definition at line 135 of file TGeoParallelWorld.cxx. ◆ RefreshPhysicalNodes(). void TGeoParallelWorld::RefreshPhysicalNodes ; (; ). Refresh the node pointers and re-voxelize. ; To be called mandatory in case re-alignment happened. ; Definition at line 198 of file TGeoParallelWorld.cxx. ◆ ResetOverlaps(). void TGeoParallelWorld::ResetOverlaps ; (; ); const. Reset overlapflag for all volumes in geometry. ; Definition at line 154 of file TGeoParallelWorld.cxx. ◆ Safety(). Double_t TGeoParallelWorld::Safety ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). inline . Definition at line 118 of file TGeoParallelWorld.h. ◆ SafetyBVH(). double TGeoParallelWorld::SafetyBVH ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ; Definition at line 1027 of file TGeoParallelWorld.cxx. ◆ SafetyLoop(). Double_t TGeoParallelWorld::SafetyLoop ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world (trivial loop version for comparison/debugging) ; Definition at line 1207 of file TGeoParallelWorld.cxx. ◆ SafetyOrig(). Double_t TGeoParallelWorld::SafetyOrig ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world (original version based on TGeoVoxelFinder) ; Definition at line 1145 of file TGeoParallelWorld.cxx. ◆ SetAccelerationMode(). void TGeoParallelWorld::SetAccelerationMode ; (; AccelerationMode const & ; mode). inline . Definition at line 95 of file TGeoParallelWorld.h. ◆ SetUseOverlaps(). void TGeoParallelWorld::SetUseOverlaps ; (; Bool_t ; flag). inline . Definition at line 80 of file TGeoParallelWorld.h. ◆ Streamer(). void TGeoParallelWorld::Streamer ; (; TBuffer & ; R",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:26282,Safety,safe,safety,26282,"). Refresh the node pointers and re-voxelize. ; To be called mandatory in case re-alignment happened. ; Definition at line 198 of file TGeoParallelWorld.cxx. ◆ ResetOverlaps(). void TGeoParallelWorld::ResetOverlaps ; (; ); const. Reset overlapflag for all volumes in geometry. ; Definition at line 154 of file TGeoParallelWorld.cxx. ◆ Safety(). Double_t TGeoParallelWorld::Safety ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). inline . Definition at line 118 of file TGeoParallelWorld.h. ◆ SafetyBVH(). double TGeoParallelWorld::SafetyBVH ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ; Definition at line 1027 of file TGeoParallelWorld.cxx. ◆ SafetyLoop(). Double_t TGeoParallelWorld::SafetyLoop ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world (trivial loop version for comparison/debugging) ; Definition at line 1207 of file TGeoParallelWorld.cxx. ◆ SafetyOrig(). Double_t TGeoParallelWorld::SafetyOrig ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world (original version based on TGeoVoxelFinder) ; Definition at line 1145 of file TGeoParallelWorld.cxx. ◆ SetAccelerationMode(). void TGeoParallelWorld::SetAccelerationMode ; (; AccelerationMode const & ; mode). inline . Definition at line 95 of file TGeoParallelWorld.h. ◆ SetUseOverlaps(). void TGeoParallelWorld::SetUseOverlaps ; (; Bool_t ; flag). inline . Definition at line 80 of file TGeoParallelWorld.h. ◆ Streamer(). void TGeoParallelWorld::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGeoParallelWorld::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 184 of file TGeoParallelWorld.h. ◆ TestVoxelGrid(). void TGeoPa",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:26549,Safety,safe,safety,26549,"n geometry. ; Definition at line 154 of file TGeoParallelWorld.cxx. ◆ Safety(). Double_t TGeoParallelWorld::Safety ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). inline . Definition at line 118 of file TGeoParallelWorld.h. ◆ SafetyBVH(). double TGeoParallelWorld::SafetyBVH ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ; Definition at line 1027 of file TGeoParallelWorld.cxx. ◆ SafetyLoop(). Double_t TGeoParallelWorld::SafetyLoop ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world (trivial loop version for comparison/debugging) ; Definition at line 1207 of file TGeoParallelWorld.cxx. ◆ SafetyOrig(). Double_t TGeoParallelWorld::SafetyOrig ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world (original version based on TGeoVoxelFinder) ; Definition at line 1145 of file TGeoParallelWorld.cxx. ◆ SetAccelerationMode(). void TGeoParallelWorld::SetAccelerationMode ; (; AccelerationMode const & ; mode). inline . Definition at line 95 of file TGeoParallelWorld.h. ◆ SetUseOverlaps(). void TGeoParallelWorld::SetUseOverlaps ; (; Bool_t ; flag). inline . Definition at line 80 of file TGeoParallelWorld.h. ◆ Streamer(). void TGeoParallelWorld::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGeoParallelWorld::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 184 of file TGeoParallelWorld.h. ◆ TestVoxelGrid(). void TGeoParallelWorld::TestVoxelGrid ; (; ). private . Definition at line 1425 of file TGeoParallelWorld.cxx. ◆ VoxelSafety(). double TGeoParallelWorld::VoxelSafety ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world use",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:27575,Safety,safe,safety,27575,"allelWorld.cxx. ◆ SetAccelerationMode(). void TGeoParallelWorld::SetAccelerationMode ; (; AccelerationMode const & ; mode). inline . Definition at line 95 of file TGeoParallelWorld.h. ◆ SetUseOverlaps(). void TGeoParallelWorld::SetUseOverlaps ; (; Bool_t ; flag). inline . Definition at line 80 of file TGeoParallelWorld.h. ◆ Streamer(). void TGeoParallelWorld::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGeoParallelWorld::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 184 of file TGeoParallelWorld.h. ◆ TestVoxelGrid(). void TGeoParallelWorld::TestVoxelGrid ; (; ). private . Definition at line 1425 of file TGeoParallelWorld.cxx. ◆ VoxelSafety(). double TGeoParallelWorld::VoxelSafety ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world used BVH structure with addiditional on-the-fly 3D grid/voxel caching —> essentially an O(1) algorithm !) ; Definition at line 944 of file TGeoParallelWorld.cxx. Member Data Documentation. ◆ fAccMode. AccelerationMode TGeoParallelWorld::fAccMode = AccelerationMode::kVoxelFinder. protected . to keep the vector of primitive axis aligned bounding boxes ; Definition at line 55 of file TGeoParallelWorld.h. ◆ fBoundingBoxes. void* TGeoParallelWorld::fBoundingBoxes = nullptr. protected . stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ; Definition at line 54 of file TGeoParallelWorld.h. ◆ fBVH. void* TGeoParallelWorld::fBVH = nullptr. protected . array of physical nodes ; Definition at line 49 of file TGeoParallelWorld.h. ◆ fGeoManager. TGeoManager* TGeoParallelWorld::fGeoManager. protected . Definition at line 41 of file TGeoParallelWorld.h. ◆ fIsClosed. Bool_t TGeoParallelWorld::fIsClosed. protected . Definition at line 44 of file TGeoParallelWorld.h. ◆ fLastState. TGeoPhysicalNode* TGeoPa",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:28129,Safety,safe,safety,28129,"TGeoParallelWorld::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 184 of file TGeoParallelWorld.h. ◆ TestVoxelGrid(). void TGeoParallelWorld::TestVoxelGrid ; (; ). private . Definition at line 1425 of file TGeoParallelWorld.cxx. ◆ VoxelSafety(). double TGeoParallelWorld::VoxelSafety ; (; Double_t ; point[3], . Double_t ; safmax = 1.E30 . ). private . Compute safety for the parallel world used BVH structure with addiditional on-the-fly 3D grid/voxel caching —> essentially an O(1) algorithm !) ; Definition at line 944 of file TGeoParallelWorld.cxx. Member Data Documentation. ◆ fAccMode. AccelerationMode TGeoParallelWorld::fAccMode = AccelerationMode::kVoxelFinder. protected . to keep the vector of primitive axis aligned bounding boxes ; Definition at line 55 of file TGeoParallelWorld.h. ◆ fBoundingBoxes. void* TGeoParallelWorld::fBoundingBoxes = nullptr. protected . stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ; Definition at line 54 of file TGeoParallelWorld.h. ◆ fBVH. void* TGeoParallelWorld::fBVH = nullptr. protected . array of physical nodes ; Definition at line 49 of file TGeoParallelWorld.h. ◆ fGeoManager. TGeoManager* TGeoParallelWorld::fGeoManager. protected . Definition at line 41 of file TGeoParallelWorld.h. ◆ fIsClosed. Bool_t TGeoParallelWorld::fIsClosed. protected . Definition at line 44 of file TGeoParallelWorld.h. ◆ fLastState. TGeoPhysicalNode* TGeoParallelWorld::fLastState. protected . helper volume ; Definition at line 46 of file TGeoParallelWorld.h. ◆ fPaths. TObjArray* TGeoParallelWorld::fPaths. protected . Definition at line 42 of file TGeoParallelWorld.h. ◆ fPhysical. TObjArray* TGeoParallelWorld::fPhysical. protected . Last PN touched. ; Definition at line 47 of file TGeoParallelWorld.h. ◆ fSafetyCandidateStore. std::vector<unsigned int> TGeoParallelWorld::fSafetyCandidateStore {}. protected . A regular 3D cache layer for fast point-based s",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:29169,Safety,safe,safety,29169,oid* TGeoParallelWorld::fBoundingBoxes = nullptr. protected . stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ; Definition at line 54 of file TGeoParallelWorld.h. ◆ fBVH. void* TGeoParallelWorld::fBVH = nullptr. protected . array of physical nodes ; Definition at line 49 of file TGeoParallelWorld.h. ◆ fGeoManager. TGeoManager* TGeoParallelWorld::fGeoManager. protected . Definition at line 41 of file TGeoParallelWorld.h. ◆ fIsClosed. Bool_t TGeoParallelWorld::fIsClosed. protected . Definition at line 44 of file TGeoParallelWorld.h. ◆ fLastState. TGeoPhysicalNode* TGeoParallelWorld::fLastState. protected . helper volume ; Definition at line 46 of file TGeoParallelWorld.h. ◆ fPaths. TObjArray* TGeoParallelWorld::fPaths. protected . Definition at line 42 of file TGeoParallelWorld.h. ◆ fPhysical. TObjArray* TGeoParallelWorld::fPhysical. protected . Last PN touched. ; Definition at line 47 of file TGeoParallelWorld.h. ◆ fSafetyCandidateStore. std::vector<unsigned int> TGeoParallelWorld::fSafetyCandidateStore {}. protected . A regular 3D cache layer for fast point-based safety lookups. ; Definition at line 52 of file TGeoParallelWorld.h. ◆ fSafetyVoxelCache. TGeoVoxelGrid<SafetyVoxelInfo>* TGeoParallelWorld::fSafetyVoxelCache. protected . Initial value:=; nullptr. BVH helper structure for safety and navigation. ; Definition at line 50 of file TGeoParallelWorld.h. ◆ fUseOverlaps. Bool_t TGeoParallelWorld::fUseOverlaps. protected . Definition at line 43 of file TGeoParallelWorld.h. ◆ fVolume. TGeoVolume* TGeoParallelWorld::fVolume. protected . Closed flag. ; Definition at line 45 of file TGeoParallelWorld.h. Libraries for TGeoParallelWorld:. [legend]; The documentation for this class was generated from the following files:; geom/geom/inc/TGeoParallelWorld.h; geom/geom/src/TGeoParallelWorld.cxx. TGeoParallelWorld. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:07 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:29392,Safety,safe,safety,29392,oid* TGeoParallelWorld::fBoundingBoxes = nullptr. protected . stores bounding boxes serving a quick safety candidates (to be used with the VoxelGrid and SafetyVoxelInfo) ; Definition at line 54 of file TGeoParallelWorld.h. ◆ fBVH. void* TGeoParallelWorld::fBVH = nullptr. protected . array of physical nodes ; Definition at line 49 of file TGeoParallelWorld.h. ◆ fGeoManager. TGeoManager* TGeoParallelWorld::fGeoManager. protected . Definition at line 41 of file TGeoParallelWorld.h. ◆ fIsClosed. Bool_t TGeoParallelWorld::fIsClosed. protected . Definition at line 44 of file TGeoParallelWorld.h. ◆ fLastState. TGeoPhysicalNode* TGeoParallelWorld::fLastState. protected . helper volume ; Definition at line 46 of file TGeoParallelWorld.h. ◆ fPaths. TObjArray* TGeoParallelWorld::fPaths. protected . Definition at line 42 of file TGeoParallelWorld.h. ◆ fPhysical. TObjArray* TGeoParallelWorld::fPhysical. protected . Last PN touched. ; Definition at line 47 of file TGeoParallelWorld.h. ◆ fSafetyCandidateStore. std::vector<unsigned int> TGeoParallelWorld::fSafetyCandidateStore {}. protected . A regular 3D cache layer for fast point-based safety lookups. ; Definition at line 52 of file TGeoParallelWorld.h. ◆ fSafetyVoxelCache. TGeoVoxelGrid<SafetyVoxelInfo>* TGeoParallelWorld::fSafetyVoxelCache. protected . Initial value:=; nullptr. BVH helper structure for safety and navigation. ; Definition at line 50 of file TGeoParallelWorld.h. ◆ fUseOverlaps. Bool_t TGeoParallelWorld::fUseOverlaps. protected . Definition at line 43 of file TGeoParallelWorld.h. ◆ fVolume. TGeoVolume* TGeoParallelWorld::fVolume. protected . Closed flag. ; Definition at line 45 of file TGeoParallelWorld.h. Libraries for TGeoParallelWorld:. [legend]; The documentation for this class was generated from the following files:; geom/geom/inc/TGeoParallelWorld.h; geom/geom/src/TGeoParallelWorld.cxx. TGeoParallelWorld. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:07 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:2542,Security,validat,validate,2542," , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoParallelWorld ();  ;  TGeoParallelWorld (const char *name, TGeoManager *mgr);  Default constructor. ;  ;  ~TGeoParallelWorld () override;  Destructor. ;  ; void AddNode (const char *path);  Add a node normally to this world. Overlapping nodes not allowed. ;  ; void AddOverlap (const char *volname, Bool_t activate=kTRUE);  To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ;  ; void AddOverlap (TGeoVolume *vol, Bool_t activate=kTRUE);  To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ;  ; void BuildBVH ();  Build the BVH acceleration structure. ;  ; bool CheckBVH (void *, size_t) const;  Check/validate the BVH acceleration structure. ;  ; void CheckOverlaps (Double_t ovlp=0.001);  Check overlaps within a tolerance value. ;  ; Bool_t CloseGeometry ();  The main geometry must be closed. ;  ; void Draw (Option_t *option) override;  Draw the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundary (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  ; TGeoPhysicalNode * FindNode (Double_t point[3]);  ; AccelerationMode const & GetAccelerationMode () const;  ; TGeoManager * GetGeometry () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsClosed () const;  ; Bool_t IsUsingOverlaps () const;  ; void PrintBVH () const;  Prints the BVH. ;  ; Int_t PrintDetectedOverlaps () const;  Print the overlaps which were detected during real tracking. ;  ; void RefreshPhysicalNodes ();  Refresh the node pointers and re-voxelize. ;  ; void ResetOverlaps () const;  Reset overlapflag for all volumes in geometry. ;  ; Double_t Sa",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:4722,Security,hash,hash,4722," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:19284,Security,validat,validate,19284,"cxx. ◆ AddOverlap() [1/2]. void TGeoParallelWorld::AddOverlap ; (; const char * ; volname, . Bool_t ; activate = kTRUE . ). To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ; Better be done before misalignment ; Definition at line 120 of file TGeoParallelWorld.cxx. ◆ AddOverlap() [2/2]. void TGeoParallelWorld::AddOverlap ; (; TGeoVolume * ; vol, . Bool_t ; activate = kTRUE . ). To use this optimization, the user should declare the full list of volumes which may overlap with any of the physical nodes of the parallel world. ; Better be done before misalignment ; Definition at line 108 of file TGeoParallelWorld.cxx. ◆ BuildBVH(). void TGeoParallelWorld::BuildBVH ; (; ). Build the BVH acceleration structure. ; Definition at line 1315 of file TGeoParallelWorld.cxx. ◆ CheckBVH(). bool TGeoParallelWorld::CheckBVH ; (; void * ; bvh, . size_t ; expected_leaf_count . ); const. Check/validate the BVH acceleration structure. ; Definition at line 1261 of file TGeoParallelWorld.cxx. ◆ CheckOverlaps(). void TGeoParallelWorld::CheckOverlaps ; (; Double_t ; ovlp = 0.001). Check overlaps within a tolerance value. ; Definition at line 1245 of file TGeoParallelWorld.cxx. ◆ Class(). static TClass * TGeoParallelWorld::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoParallelWorld::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoParallelWorld::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 184 of file TGeoParallelWorld.h. ◆ CloseGeometry(). Bool_t TGeoParallelWorld::CloseGeometry ; (; ). The main geometry must be closed. ; Definition at line 165 of file TGeoParallelWorld.cxx. ◆ DeclFileName(). static const char * TGeoParallelWorld::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition a",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:15381,Usability,simpl,simple,15381,"le;  . Private Member Functions; TGeoPhysicalNode * FindNextBoundaryBVH (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNextBoundaryLoop (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world in a trivial loop version (for debugging) ;  ; TGeoPhysicalNode * FindNextBoundaryOrig (Double_t point[3], Double_t dir[3], Double_t &step, Double_t stepmax=1.E30);  Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ;  ; TGeoPhysicalNode * FindNodeBVH (Double_t point[3]);  Finds physical node containing the point. ;  ; TGeoPhysicalNode * FindNodeLoop (Double_t point[3]);  Finds physical node containing the point using simple algorithm (for debugging) ;  ; TGeoPhysicalNode * FindNodeOrig (Double_t point[3]);  Finds physical node containing the point (original version based on TGeoVoxelFinder) ;  ; std::pair< double, double > GetBVHSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; std::pair< double, double > GetLoopSafetyCandidates (double point[3], std::vector< int > &candidates, double margin=0.) const;  Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ;  ; void InitSafetyVoxel (TGeoVoxelGridIndex const &);  Method to initialize the safety voxel at a specific 3D voxel (grid) index. ;  ; Double_t SafetyBVH (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (using pure BVH traversal, mainly for debugging/fallback since VoxelSafety should be faster) ;  ; Double_t SafetyLoop (Double_t point[3], Double_t safmax=1.E30);  Compute safety for the parallel world (trivial loop ve",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoParallelWorld.html:22554,Usability,simpl,simple,22554,"orld::FindNextBoundaryOrig ; (; Double_t ; point[3], . Double_t ; dir[3], . Double_t & ; step, . Double_t ; stepmax = 1.E30 . ). private . Same functionality as TGeoNavigator::FindNextDaughterBoundary for the parallel world. ; (original version based on TGeoVoxelFinder) ; Definition at line 519 of file TGeoParallelWorld.cxx. ◆ FindNode(). TGeoPhysicalNode * TGeoParallelWorld::FindNode ; (; Double_t ; point[3]). inline . Definition at line 106 of file TGeoParallelWorld.h. ◆ FindNodeBVH(). TGeoPhysicalNode * TGeoParallelWorld::FindNodeBVH ; (; Double_t ; point[3]). private . Finds physical node containing the point. ; Uses BVH to do so. (Not the best algorithm since not O(1) but good enough.) An improved version could be implemented based on TGeoVoxelGrid caching. ; Definition at line 245 of file TGeoParallelWorld.cxx. ◆ FindNodeLoop(). TGeoPhysicalNode * TGeoParallelWorld::FindNodeLoop ; (; Double_t ; point[3]). private . Finds physical node containing the point using simple algorithm (for debugging) ; Definition at line 353 of file TGeoParallelWorld.cxx. ◆ FindNodeOrig(). TGeoPhysicalNode * TGeoParallelWorld::FindNodeOrig ; (; Double_t ; point[3]). private . Finds physical node containing the point (original version based on TGeoVoxelFinder) ; Definition at line 318 of file TGeoParallelWorld.cxx. ◆ GetAccelerationMode(). AccelerationMode const & TGeoParallelWorld::GetAccelerationMode ; (; ); const. inline . Definition at line 96 of file TGeoParallelWorld.h. ◆ GetBVHSafetyCandidates(). std::pair< double, double > TGeoParallelWorld::GetBVHSafetyCandidates ; (; double ; point[3], . std::vector< int > & ; candidates, . double ; margin = 0. . ); const. private . Method to find potentially relevant candidate bounding boxes for safety calculation given a point. ; Uses BVH to do so. ; Definition at line 802 of file TGeoParallelWorld.cxx. ◆ GetGeometry(). TGeoManager * TGeoParallelWorld::GetGeometry ; (; ); const. inline . Definition at line 142 of file TGeoParallelWorld.h. ",MatchSource.WIKI,doc/master/classTGeoParallelWorld.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoParallelWorld.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:5145,Availability,error,error,5145,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:5234,Availability,error,error,5234,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:5389,Availability,error,error,5389,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:5686,Availability,error,error,5686,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:10112,Availability,error,error,10112,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexp",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:5151,Integrability,message,message,5151,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:5692,Integrability,message,message,5692,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:6894,Integrability,message,message,6894,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:10118,Integrability,message,message,10118,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexp",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:10491,Integrability,message,message,10491,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObject",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:1900,Modifiability,inherit,inherited,1900,"rix () const override;  Return new matrix of type used by this finder. ;  ; TGeoNode * FindNode (Double_t *point, const Double_t *dir=nullptr) override;  find the node containing the query point ;  ; Int_t GetDivAxis () override;  ; TClass * IsA () const override;  ; Bool_t IsOnBoundary (const Double_t *point) const override;  Checks if the current point is on division boundary. ;  ; TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE) override;  Make a copy of this finder. Reflect by Z if required. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TGeoVolume. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateMatrix (Int_t idiv, TGeoHMatrix &matrix) const override;  Fills external matrix with the local one corresponding to the given division index. ;  ;  Public Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder ();  Default constructor. ;  ;  TGeoPatternFinder (TGeoVolume *vol, Int_t ndiv);  Default constructor. ;  ;  ~TGeoPatternFinder () override;  Destructor. ;  ; virtual TGeoNode * CdNext ();  Make next node (if any) current. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:3384,Modifiability,inherit,inherited,3384,"rn current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (Int_t index);  Set index of next division. ;  ; void SetRange (Double_t start, Double_t step, Int_t ndivisions);  Set division range. Use this method only when dividing an assembly. ;  ; void SetSpacedOut (Bool_t flag);  ; void SetVolume (TGeoVolume *vol);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:4781,Modifiability,inherit,inheritance,4781,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:6992,Modifiability,inherit,inherits,6992,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:7109,Modifiability,inherit,inherits,7109,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:10992,Modifiability,inherit,inherited,10992,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternCylPhi (const TGeoPatternCylPhi &pfc);  [2*fNdivisions] table of sines/cosines ;  ; TGeoPatternCylPhi & operator= (const TGeoPatternCylPhi &pfc);  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  ",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:11213,Modifiability,inherit,inherited,11213,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternCylPhi (const TGeoPatternCylPhi &pfc);  [2*fNdivisions] table of sines/cosines ;  ; TGeoPatternCylPhi & operator= (const TGeoPatternCylPhi &pfc);  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  ",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:11916,Modifiability,inherit,inherited,11916,"_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternCylPhi (const TGeoPatternCylPhi &pfc);  [2*fNdivisions] table of sines/cosines ;  ; TGeoPatternCylPhi & operator= (const TGeoPatternCylPhi &pfc);  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Double_t * fSinCos = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:12140,Modifiability,inherit,inherited,12140,"r * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternCylPhi (const TGeoPatternCylPhi &pfc);  [2*fNdivisions] table of sines/cosines ;  ; TGeoPatternCylPhi & operator= (const TGeoPatternCylPhi &pfc);  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Double_t * fSinCos = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); ",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:12420,Modifiability,inherit,inherited,12420,"tStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternCylPhi (const TGeoPatternCylPhi &pfc);  [2*fNdivisions] table of sines/cosines ;  ; TGeoPatternCylPhi & operator= (const TGeoPatternCylPhi &pfc);  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Double_t * fSinCos = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Dou",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:13061,Modifiability,inherit,inherited,13061,", va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Double_t * fSinCos = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternCylPhi:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPatternCylPhi() [1/5]. TGeoPatternCylPhi::TGeoPatternCylPhi ; (; const TGeoPatternCylPhi & ; pfc). inlineprotected . [2*fNdivisions] table of sines/cosines ; Definition at line 387 of file TGeoPatternFinder.h. ◆ TGeoPatternCylPhi() [2/5]. TGeoPatternCylPhi::TGeoPatternCylPhi ; (; ). Default constructor. ; Definition at line 1696 of file TGeoPatternFinder.cxx. ◆ TGeoPatternCylPhi",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:13221,Modifiability,inherit,inherited,13221,", va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Double_t * fSinCos = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternCylPhi:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPatternCylPhi() [1/5]. TGeoPatternCylPhi::TGeoPatternCylPhi ; (; const TGeoPatternCylPhi & ; pfc). inlineprotected . [2*fNdivisions] table of sines/cosines ; Definition at line 387 of file TGeoPatternFinder.h. ◆ TGeoPatternCylPhi() [2/5]. TGeoPatternCylPhi::TGeoPatternCylPhi ; (; ). Default constructor. ; Definition at line 1696 of file TGeoPatternFinder.cxx. ◆ TGeoPatternCylPhi",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:13314,Modifiability,inherit,inherited,13314,", va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Double_t * fSinCos = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternCylPhi:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPatternCylPhi() [1/5]. TGeoPatternCylPhi::TGeoPatternCylPhi ; (; const TGeoPatternCylPhi & ; pfc). inlineprotected . [2*fNdivisions] table of sines/cosines ; Definition at line 387 of file TGeoPatternFinder.h. ◆ TGeoPatternCylPhi() [2/5]. TGeoPatternCylPhi::TGeoPatternCylPhi ; (; ). Default constructor. ; Definition at line 1696 of file TGeoPatternFinder.cxx. ◆ TGeoPatternCylPhi",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylPhi.html:6623,Security,hash,hash,6623," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoPatternCylPhi.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html
https://root.cern/doc/master/classTGeoPatternCylR.html:5201,Availability,error,error,5201,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:5290,Availability,error,error,5290,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:5445,Availability,error,error,5445,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:5742,Availability,error,error,5742,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:10168,Availability,error,error,10168,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexp",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:5207,Integrability,message,message,5207,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:5748,Integrability,message,message,5748,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:6950,Integrability,message,message,6950,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:10174,Integrability,message,message,10174,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexp",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:10547,Integrability,message,message,10547,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObject",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:1956,Modifiability,inherit,inherited,1956,"eoNode * FindNode (Double_t *point, const Double_t *dir=nullptr) override;  find the node containing the query point ;  ; Int_t GetDivAxis () override;  ; TClass * IsA () const override;  ; Bool_t IsOnBoundary (const Double_t *point) const override;  Checks if the current point is on division boundary. ;  ; TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE) override;  Make a copy of this finder. Reflect by Z if required. ;  ; TGeoPatternCylR & operator= (const TGeoPatternCylR &);  assignment operator ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateMatrix (Int_t idiv, TGeoHMatrix &matrix) const override;  Fills external matrix with the local one corresponding to the given division index. ;  ;  Public Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder ();  Default constructor. ;  ;  TGeoPatternFinder (TGeoVolume *vol, Int_t ndiv);  Default constructor. ;  ;  ~TGeoPatternFinder () override;  Destructor. ;  ; virtual TGeoNode * CdNext ();  Make next node (if any) current. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:3440,Modifiability,inherit,inherited,3440,"rn current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (Int_t index);  Set index of next division. ;  ; void SetRange (Double_t start, Double_t step, Int_t ndivisions);  Set division range. Use this method only when dividing an assembly. ;  ; void SetSpacedOut (Bool_t flag);  ; void SetVolume (TGeoVolume *vol);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:4837,Modifiability,inherit,inheritance,4837,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:7048,Modifiability,inherit,inherits,7048,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:7165,Modifiability,inherit,inherits,7165,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:11048,Modifiability,inherit,inherited,11048,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBi",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:11269,Modifiability,inherit,inherited,11269,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBi",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:11799,Modifiability,inherit,inherited,11799,"static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFind",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:12440,Modifiability,inherit,inherited,12440,"(void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternCylR:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; ",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:12600,Modifiability,inherit,inherited,12600,"(void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternCylR:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; ",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:12699,Modifiability,inherit,inherited,12699,"(void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternCylR:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; ",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:12923,Modifiability,inherit,inherited,12923," , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternCylR:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPatternCylR() [1/5]. TGeoPatternCylR::TGeoPatternCylR ; (; ). Default constructor. ; Definition at line 1543 of file TGeoPatternFinder.cxx. ◆ TGeoPatternCylR() [2/5]. TGeoPatternCylR::TGeoPatternCylR ; (; TGeoVolume * ; vol, . Int_t ; ndivisions . ). constructor ; Definition",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:13128,Modifiability,inherit,inherited,13128,"StatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternCylR:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPatternCylR() [1/5]. TGeoPatternCylR::TGeoPatternCylR ; (; ). Default constructor. ; Definition at line 1543 of file TGeoPatternFinder.cxx. ◆ TGeoPatternCylR() [2/5]. TGeoPatternCylR::TGeoPatternCylR ; (; TGeoVolume * ; vol, . Int_t ; ndivisions . ). constructor ; Definition at line 1550 of file TGeoPatternFinder.cxx. ◆ TGeoPatternCylR() [3/5]. TGeoPatternCylR::TGeoPatternCylR ; (; TGeoVolume * ; vol, . Int_t ; ndivisions, . Double_t ; step . ). constructor ; Definition at line 1557 of file ",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternCylR.html:6679,Security,hash,hash,6679," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoPatternCylR.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html
https://root.cern/doc/master/classTGeoPatternFinder.html:5015,Availability,error,error,5015,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:5104,Availability,error,error,5104,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:5259,Availability,error,error,5259,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:5556,Availability,error,error,5556,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:10120,Availability,error,error,10120," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:5021,Integrability,message,message,5021,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:5562,Integrability,message,message,5562,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:6764,Integrability,message,message,6764,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:10126,Integrability,message,message,10126," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:10499,Integrability,message,message,10499," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:3254,Modifiability,inherit,inherited,3254,"v () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; virtual Bool_t IsOnBoundary (const Double_t *) const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; virtual TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE)=0;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (Int_t index);  Set index of next division. ;  ; void SetRange (Double_t start, Double_t step, Int_t ndivisions);  Set division range. Use this method only when dividing an assembly. ;  ; void SetSpacedOut (Bool_t flag);  ; void SetVolume (TGeoVolume *vol);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UpdateMatrix (Int_t, TGeoHMatrix &) const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t C",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:4651,Modifiability,inherit,inheritance,4651,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:6862,Modifiability,inherit,inherits,6862,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:6979,Modifiability,inherit,inherits,6979,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:11000,Modifiability,inherit,inherited,11000,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fm",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:11629,Modifiability,inherit,inherited,11629,";  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:11918,Modifiability,inherit,inherited,11918,"const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , k",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:12455,Modifiability,inherit,inherited,12455,"ernFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternFinder:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoPatternFlags. enum TGeoPatternFinder::EGeoPatternFlags. protected . EnumeratorkPatternReflected ; kPatternSpacedOut . Definition at line 50 of file TGeoPatternFinder.h. Constructor & Destructor Documentation. ◆ TGeoPatternFinde",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternFinder.html:6493,Security,hash,hash,6493," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoPatternFinder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:4556,Availability,error,error,4556,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:4645,Availability,error,error,4645,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:4800,Availability,error,error,4800,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:5097,Availability,error,error,5097,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:9661,Availability,error,error,9661," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexp",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:4562,Integrability,message,message,4562,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:5103,Integrability,message,message,5103,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:6305,Integrability,message,message,6305,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:9667,Integrability,message,message,9667," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexp",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:10040,Integrability,message,message,10040," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObject",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:1334,Modifiability,inherit,inherited,1334,"GeoPatternFinder.h. Public Member Functions;  TGeoPatternHoneycomb ();  Default constructor. ;  ;  TGeoPatternHoneycomb (TGeoVolume *vol, Int_t nrows);  Default constructor. ;  ;  ~TGeoPatternHoneycomb () override;  destructor ;  ; void cd (Int_t idiv) override;  Update current division index and global matrix to point to a given slice. ;  ; TGeoMatrix * CreateMatrix () const override;  Return new matrix of type used by this finder. ;  ; TGeoNode * FindNode (Double_t *point, const Double_t *dir=nullptr) override;  find the node containing the query point ;  ; TClass * IsA () const override;  ; TGeoPatternFinder * MakeCopy (Bool_t) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateMatrix (Int_t idiv, TGeoHMatrix &matrix) const override;  Fills external matrix with the local one corresponding to the given division index. ;  ;  Public Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder ();  Default constructor. ;  ;  TGeoPatternFinder (TGeoVolume *vol, Int_t ndiv);  Default constructor. ;  ;  ~TGeoPatternFinder () override;  Destructor. ;  ; virtual TGeoNode * CdNext ();  Make next node (if any) current. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; virtual Int_t GetDivAxis ();  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; virtual Bool_t IsOnBoundary (const Double_t *) const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ;",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:2795,Modifiability,inherit,inherited,2795,"l Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; virtual Int_t GetDivAxis ();  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; virtual Bool_t IsOnBoundary (const Double_t *) const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (Int_t index);  Set index of next division. ;  ; void SetRange (Double_t start, Double_t step, Int_t ndivisions);  Set division range. Use this method only when dividing an assembly. ;  ; void SetSpacedOut (Bool_t flag);  ; void SetVolume (TGeoVolume *vol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:4192,Modifiability,inherit,inheritance,4192,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:6403,Modifiability,inherit,inherits,6403,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:6520,Modifiability,inherit,inherits,6520,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:10541,Modifiability,inherit,inherited,10541,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternHoneycomb (const TGeoPatternHoneycomb &);  copy constructor ;  ; TGeoPatternHoneycomb & operator= (const TGeoPatternHoneycomb &);  assignment operator ;  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:10762,Modifiability,inherit,inherited,10762,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternHoneycomb (const TGeoPatternHoneycomb &);  copy constructor ;  ; TGeoPatternHoneycomb & operator= (const TGeoPatternHoneycomb &);  assignment operator ;  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:11472,Modifiability,inherit,inherited,11472,"e ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternHoneycomb (const TGeoPatternHoneycomb &);  copy constructor ;  ; TGeoPatternHoneycomb & operator= (const TGeoPatternHoneycomb &);  assignment operator ;  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Int_t fAxisOnRows;  ; Int_t * fNdivisions;  ; Int_t fNrows;  ; Double_t * fStart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanD",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:11696,Modifiability,inherit,inherited,11696,"lFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternHoneycomb (const TGeoPatternHoneycomb &);  copy constructor ;  ; TGeoPatternHoneycomb & operator= (const TGeoPatternHoneycomb &);  assignment operator ;  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Int_t fAxisOnRows;  ; Int_t * fNdivisions;  ; Int_t fNrows;  ; Double_t * fStart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoP",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:12028,Modifiability,inherit,inherited,12028," SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternHoneycomb (const TGeoPatternHoneycomb &);  copy constructor ;  ; TGeoPatternHoneycomb & operator= (const TGeoPatternHoneycomb &);  assignment operator ;  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Int_t fAxisOnRows;  ; Int_t * fNdivisions;  ; Int_t fNrows;  ; Double_t * fStart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Dou",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:12669,Modifiability,inherit,inherited,12669,"tected). ;  ; void MakeZombie ();  . Private Attributes; Int_t fAxisOnRows;  ; Int_t * fNdivisions;  ; Int_t fNrows;  ; Double_t * fStart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternHoneycomb:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPatternHoneycomb() [1/3]. TGeoPatternHoneycomb::TGeoPatternHoneycomb ; (; const TGeoPatternHoneycomb & ; pfh). protected . copy constructor ; Definition at line 2338 of file TGeoPatternFinder.cxx. ◆ TGeoPatternHoneycomb() [2/3]. TGeoPatternHoneycomb::TGeoPatternHoneycomb ; (; ). Default constructor. ; Definition at line 2315 of file TGeoPatternFinder.cxx. ◆ TGeoPatternHoneyco",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:12829,Modifiability,inherit,inherited,12829,"tected). ;  ; void MakeZombie ();  . Private Attributes; Int_t fAxisOnRows;  ; Int_t * fNdivisions;  ; Int_t fNrows;  ; Double_t * fStart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternHoneycomb:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPatternHoneycomb() [1/3]. TGeoPatternHoneycomb::TGeoPatternHoneycomb ; (; const TGeoPatternHoneycomb & ; pfh). protected . copy constructor ; Definition at line 2338 of file TGeoPatternFinder.cxx. ◆ TGeoPatternHoneycomb() [2/3]. TGeoPatternHoneycomb::TGeoPatternHoneycomb ; (; ). Default constructor. ; Definition at line 2315 of file TGeoPatternFinder.cxx. ◆ TGeoPatternHoneyco",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:12922,Modifiability,inherit,inherited,12922,"tected). ;  ; void MakeZombie ();  . Private Attributes; Int_t fAxisOnRows;  ; Int_t * fNdivisions;  ; Int_t fNrows;  ; Double_t * fStart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternHoneycomb:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPatternHoneycomb() [1/3]. TGeoPatternHoneycomb::TGeoPatternHoneycomb ; (; const TGeoPatternHoneycomb & ; pfh). protected . copy constructor ; Definition at line 2338 of file TGeoPatternFinder.cxx. ◆ TGeoPatternHoneycomb() [2/3]. TGeoPatternHoneycomb::TGeoPatternHoneycomb ; (; ). Default constructor. ; Definition at line 2315 of file TGeoPatternFinder.cxx. ◆ TGeoPatternHoneyco",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternHoneycomb.html:6034,Security,hash,hash,6034," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoPatternHoneycomb.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html
https://root.cern/doc/master/classTGeoPatternParaX.html:5108,Availability,error,error,5108,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:5197,Availability,error,error,5197,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:5352,Availability,error,error,5352,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:5649,Availability,error,error,5649,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:10075,Availability,error,error,10075,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexp",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:5114,Integrability,message,message,5114,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:5655,Integrability,message,message,5655,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:6857,Integrability,message,message,6857,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:10081,Integrability,message,message,10081,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexp",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:10454,Integrability,message,message,10454,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObject",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:1975,Modifiability,inherit,inherited,1975,"indNode (Double_t *point, const Double_t *dir=nullptr) override;  get the node division containing the query point ;  ; Int_t GetDivAxis () override;  ; TClass * IsA () const override;  ; Bool_t IsOnBoundary (const Double_t *point) const override;  Checks if the current point is on division boundary. ;  ; TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE) override;  Make a copy of this finder. Reflect by Z if required. ;  ; TGeoPatternParaX & operator= (const TGeoPatternParaX &);  assignment operator ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateMatrix (Int_t idiv, TGeoHMatrix &matrix) const override;  Fills external matrix with the local one corresponding to the given division index. ;  ;  Public Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder ();  Default constructor. ;  ;  TGeoPatternFinder (TGeoVolume *vol, Int_t ndiv);  Default constructor. ;  ;  ~TGeoPatternFinder () override;  Destructor. ;  ; virtual TGeoNode * CdNext ();  Make next node (if any) current. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (In",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:3347,Modifiability,inherit,inherited,3347,"oid CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (Int_t index);  Set index of next division. ;  ; void SetRange (Double_t start, Double_t step, Int_t ndivisions);  Set division range. Use this method only when dividing an assembly. ;  ; void SetSpacedOut (Bool_t flag);  ; void SetVolume (TGeoVolume *vol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual ",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:4744,Modifiability,inherit,inheritance,4744,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:6955,Modifiability,inherit,inherits,6955,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:7072,Modifiability,inherit,inherits,7072,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:10955,Modifiability,inherit,inherited,10955,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBi",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:11176,Modifiability,inherit,inherited,11176,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBi",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:11706,Modifiability,inherit,inherited,11706,"static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFind",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:12347,Modifiability,inherit,inherited,12347,"(void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternParaX:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.;",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:12507,Modifiability,inherit,inherited,12507,"(void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternParaX:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.;",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:12606,Modifiability,inherit,inherited,12606,"(void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternParaX:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.;",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:12830,Modifiability,inherit,inherited,12830," , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternParaX:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPatternParaX() [1/5]. TGeoPatternParaX::TGeoPatternParaX ; (; ). Default constructor. ; Definition at line 812 of file TGeoPatternFinder.cxx. ◆ TGeoPatternParaX() [2/5]. TGeoPatternParaX::TGeoPatternParaX ; (; TGeoVolume * ; vol, . Int_t ; ndivisions . ). constructor ; Defi",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:13035,Modifiability,inherit,inherited,13035,"StatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGeoPatternFinder; enum  EGeoPatternFlags { kPatternReflected = (1ULL << ( 14 )); , kPatternSpacedOut = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoPatternFinder; Int_t fDivIndex;  ; Double_t fEnd;  ; std::mutex fMutex;  Size of the thread vector. ;  ; Int_t fNdivisions;  ; Double_t fStart;  ; Double_t fStep;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Vector of thread private transient data. ;  ; TGeoVolume * fVolume;  . #include <TGeoPatternFinder.h>. Inheritance diagram for TGeoPatternParaX:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoPatternParaX() [1/5]. TGeoPatternParaX::TGeoPatternParaX ; (; ). Default constructor. ; Definition at line 812 of file TGeoPatternFinder.cxx. ◆ TGeoPatternParaX() [2/5]. TGeoPatternParaX::TGeoPatternParaX ; (; TGeoVolume * ; vol, . Int_t ; ndivisions . ). constructor ; Definition at line 819 of file TGeoPatternFinder.cxx. ◆ TGeoPatternParaX() [3/5]. TGeoPatternParaX::TGeoPatternParaX ; (; TGeoVolume * ; vol, . Int_t ; ndivisions, . Double_t ; step . ). constructor ; Definition at line 830 o",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaX.html:6586,Security,hash,hash,6586," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGeoPatternParaX.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaX.html
https://root.cern/doc/master/classTGeoPatternParaY.html:5130,Availability,error,error,5130,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternParaY.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html
https://root.cern/doc/master/classTGeoPatternParaY.html:5219,Availability,error,error,5219,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGeoPatternParaY.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html
https://root.cern/doc/master/classTGeoPatternParaY.html:5374,Availability,error,error,5374,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGeoPatternParaY.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html
https://root.cern/doc/master/classTGeoPatternParaY.html:5671,Availability,error,error,5671,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternParaY.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html
https://root.cern/doc/master/classTGeoPatternParaY.html:10097,Availability,error,error,10097,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexp",MatchSource.WIKI,doc/master/classTGeoPatternParaY.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html
https://root.cern/doc/master/classTGeoPatternParaY.html:5136,Integrability,message,message,5136,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGeoPatternParaY.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html
https://root.cern/doc/master/classTGeoPatternParaY.html:5677,Integrability,message,message,5677,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGeoPatternParaY.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html
https://root.cern/doc/master/classTGeoPatternParaY.html:6879,Integrability,message,message,6879,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGeoPatternParaY.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html
https://root.cern/doc/master/classTGeoPatternParaY.html:10103,Integrability,message,message,10103,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexp",MatchSource.WIKI,doc/master/classTGeoPatternParaY.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html
https://root.cern/doc/master/classTGeoPatternParaY.html:10476,Integrability,message,message,10476,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObject",MatchSource.WIKI,doc/master/classTGeoPatternParaY.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html
