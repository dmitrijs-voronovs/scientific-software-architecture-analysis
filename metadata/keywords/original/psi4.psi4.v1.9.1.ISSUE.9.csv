id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/psi4/psi4/pull/3158:4687,Testability,Test,Tests,4687,"mpty. -->; - [X] Adds the `SCF_COSX_GUESS` input keyword to Psi4, usable with `SCF_TYPE=DIRECT` and `SCF_TYPE=DFDIRJ+LINK`. When enabled, the calculation will first converge the SCF on a small `COSX` grid, and then execute `COSX_MAXITER_FINAL` number of SCF iterations using the specified `SCF_TYPE`.; - [X] Expands the `DF_SCF_GUESS` keyword to work with `SCF_TYPE=DFDIRJ+LINK`.; - [X] Expands the use cases of the `COSX_RADIAL_POINTS_INITIAL`, `COSX_SPHERICAL_POINTS_INITIAL`, and `COSX_MAXITER_FINAL` keywords. `COSX_RADIAL_POINTS_INITIAL` and `COSX_SPHERICAL_POINTS_INITIAL` control the size of the grid used for the `SCF_COSX_GUESS` guess ( default: (20/50) ). `COSX_MAXITER_FINAL` controls how many `DIRECT`/`DFDIRJ+LINK` iterations to run after the converged `COSX` SCF (default: 2).; -[X] Cleans up `scf_iterator.py`, renaming `early_screening` and all associated variables, and adding comments for cases where multi-stage SCF convergence procedures are used.; - [X] Adds testing for `SCF_COSX_GUESS` and `COSX_MAXITER_FINAL`. ## Questions; - [ ] I already know this will be brought up, so I'll start it off: what's the best name for this keyword? `SCF_COSX_GUESS` and `DF_SCF_GUESS` do very similar things, but have a different naming structure, i.e., SCF is located at a different point in the variable name. I intentionally picked `SCF_COSX_GUESS` because putting SCF at the front makes it clear that the option applies for the whole SCF rather than just COSX itself, which is exacerbated by the existence of other `COSX_xxx` variables that exist specifically for COSX. I actually wouldn't mind switching the name of `DF_SCF_GUESS`, too, to maintain consistency. But if `COSX_SCF_GUESS` is preferred by everyone else, I'll switch to that. . ## Checklist; - [X] Tests added for any new features; - [] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3158
https://github.com/psi4/psi4/pull/3158:4760,Testability,test,tests,4760,"mpty. -->; - [X] Adds the `SCF_COSX_GUESS` input keyword to Psi4, usable with `SCF_TYPE=DIRECT` and `SCF_TYPE=DFDIRJ+LINK`. When enabled, the calculation will first converge the SCF on a small `COSX` grid, and then execute `COSX_MAXITER_FINAL` number of SCF iterations using the specified `SCF_TYPE`.; - [X] Expands the `DF_SCF_GUESS` keyword to work with `SCF_TYPE=DFDIRJ+LINK`.; - [X] Expands the use cases of the `COSX_RADIAL_POINTS_INITIAL`, `COSX_SPHERICAL_POINTS_INITIAL`, and `COSX_MAXITER_FINAL` keywords. `COSX_RADIAL_POINTS_INITIAL` and `COSX_SPHERICAL_POINTS_INITIAL` control the size of the grid used for the `SCF_COSX_GUESS` guess ( default: (20/50) ). `COSX_MAXITER_FINAL` controls how many `DIRECT`/`DFDIRJ+LINK` iterations to run after the converged `COSX` SCF (default: 2).; -[X] Cleans up `scf_iterator.py`, renaming `early_screening` and all associated variables, and adding comments for cases where multi-stage SCF convergence procedures are used.; - [X] Adds testing for `SCF_COSX_GUESS` and `COSX_MAXITER_FINAL`. ## Questions; - [ ] I already know this will be brought up, so I'll start it off: what's the best name for this keyword? `SCF_COSX_GUESS` and `DF_SCF_GUESS` do very similar things, but have a different naming structure, i.e., SCF is located at a different point in the variable name. I intentionally picked `SCF_COSX_GUESS` because putting SCF at the front makes it clear that the option applies for the whole SCF rather than just COSX itself, which is exacerbated by the existence of other `COSX_xxx` variables that exist specifically for COSX. I actually wouldn't mind switching the name of `DF_SCF_GUESS`, too, to maintain consistency. But if `COSX_SCF_GUESS` is preferred by everyone else, I'll switch to that. . ## Checklist; - [X] Tests added for any new features; - [] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3158
https://github.com/psi4/psi4/pull/3158:4851,Testability,test,tests,4851,"mpty. -->; - [X] Adds the `SCF_COSX_GUESS` input keyword to Psi4, usable with `SCF_TYPE=DIRECT` and `SCF_TYPE=DFDIRJ+LINK`. When enabled, the calculation will first converge the SCF on a small `COSX` grid, and then execute `COSX_MAXITER_FINAL` number of SCF iterations using the specified `SCF_TYPE`.; - [X] Expands the `DF_SCF_GUESS` keyword to work with `SCF_TYPE=DFDIRJ+LINK`.; - [X] Expands the use cases of the `COSX_RADIAL_POINTS_INITIAL`, `COSX_SPHERICAL_POINTS_INITIAL`, and `COSX_MAXITER_FINAL` keywords. `COSX_RADIAL_POINTS_INITIAL` and `COSX_SPHERICAL_POINTS_INITIAL` control the size of the grid used for the `SCF_COSX_GUESS` guess ( default: (20/50) ). `COSX_MAXITER_FINAL` controls how many `DIRECT`/`DFDIRJ+LINK` iterations to run after the converged `COSX` SCF (default: 2).; -[X] Cleans up `scf_iterator.py`, renaming `early_screening` and all associated variables, and adding comments for cases where multi-stage SCF convergence procedures are used.; - [X] Adds testing for `SCF_COSX_GUESS` and `COSX_MAXITER_FINAL`. ## Questions; - [ ] I already know this will be brought up, so I'll start it off: what's the best name for this keyword? `SCF_COSX_GUESS` and `DF_SCF_GUESS` do very similar things, but have a different naming structure, i.e., SCF is located at a different point in the variable name. I intentionally picked `SCF_COSX_GUESS` because putting SCF at the front makes it clear that the option applies for the whole SCF rather than just COSX itself, which is exacerbated by the existence of other `COSX_xxx` variables that exist specifically for COSX. I actually wouldn't mind switching the name of `DF_SCF_GUESS`, too, to maintain consistency. But if `COSX_SCF_GUESS` is preferred by everyone else, I'll switch to that. . ## Checklist; - [X] Tests added for any new features; - [] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3158
https://github.com/psi4/psi4/pull/3158:2246,Usability,usab,usable,2246,"d functionality has been expanded. `COSX_RADIAL_POINTS_INITIAL` and `COSX_SPHERICAL_POINTS_INITIAL` can be used to control the `COSX` grid size for the `SCF_COSX_GUESS`, with the grid in this context defaulting to (20/50). `COSX_MAXITER_FINAL` can be used to control the number of `DIRECT`/`DFDIRJ+LINK` iterations to run after the `COSX` guess, defaulting to 2 in this context. Note that the grid for `SCF_COSX_GUESS` uses different defaults compared to the usual initial grid for `DFDIRJ+COSX` runs. This PR also adds a fair bit of cleanup/QoL changes, as follows:; - The `early_screening` variable in `scf_iterator.py`, and all related quantities, have been renamed for clarity.; - `DFDIRJ+LINK` can now be used in conjunction with `DF_SCF_GUESS`.; - Tests have been expanded. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Adds the `SCF_COSX_GUESS` input keyword to Psi4, usable with `SCF_TYPE=DIRECT` and `SCF_TYPE=DFDIRJ+LINK`. When enabled, the calculation will first converge the SCF on a small `COSX` grid, and then execute `COSX_MAXITER_FINAL` number of SCF iterations using the specified `SCF_TYPE`. The grid used by the COSX guess can be controlled by the `COSX_RADIAL_POINTS_INITIAL` and `COSX_SPHERICAL_POINTS_INITIAL` keywords.; - [X] Expands the `DF_SCF_GUESS` keyword to work with `SCF_TYPE=DFDIRJ+LINK`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds the `SCF_COSX_GUESS` input keyword to Psi4, usable with `SCF_TYPE=DIRECT` and `SCF_TYPE=DFDIRJ+LINK`. When enabled, the calculation will first converge the SCF on a small `COSX` grid, and then execute `COSX_MAXITER_FINAL` number of SCF iterations using the specified `SCF_TYPE`.; - [X] Expands the `DF_SCF_G",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3158
https://github.com/psi4/psi4/pull/3158:2981,Usability,usab,usable,2981,"`DF_SCF_GUESS`.; - Tests have been expanded. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Adds the `SCF_COSX_GUESS` input keyword to Psi4, usable with `SCF_TYPE=DIRECT` and `SCF_TYPE=DFDIRJ+LINK`. When enabled, the calculation will first converge the SCF on a small `COSX` grid, and then execute `COSX_MAXITER_FINAL` number of SCF iterations using the specified `SCF_TYPE`. The grid used by the COSX guess can be controlled by the `COSX_RADIAL_POINTS_INITIAL` and `COSX_SPHERICAL_POINTS_INITIAL` keywords.; - [X] Expands the `DF_SCF_GUESS` keyword to work with `SCF_TYPE=DFDIRJ+LINK`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds the `SCF_COSX_GUESS` input keyword to Psi4, usable with `SCF_TYPE=DIRECT` and `SCF_TYPE=DFDIRJ+LINK`. When enabled, the calculation will first converge the SCF on a small `COSX` grid, and then execute `COSX_MAXITER_FINAL` number of SCF iterations using the specified `SCF_TYPE`.; - [X] Expands the `DF_SCF_GUESS` keyword to work with `SCF_TYPE=DFDIRJ+LINK`.; - [X] Expands the use cases of the `COSX_RADIAL_POINTS_INITIAL`, `COSX_SPHERICAL_POINTS_INITIAL`, and `COSX_MAXITER_FINAL` keywords. `COSX_RADIAL_POINTS_INITIAL` and `COSX_SPHERICAL_POINTS_INITIAL` control the size of the grid used for the `SCF_COSX_GUESS` guess ( default: (20/50) ). `COSX_MAXITER_FINAL` controls how many `DIRECT`/`DFDIRJ+LINK` iterations to run after the converged `COSX` SCF (default: 2).; -[X] Cleans up `scf_iterator.py`, renaming `early_screening` and all associated variables, and adding comments for cases where multi-stage SCF convergence procedures are used.; - [X] Adds testing for `SCF_COSX_GUESS` and `COSX_MAXITER_FINAL`. ## Questions; - [ ] I already",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3158
https://github.com/psi4/psi4/pull/3158:4316,Usability,clear,clear,4316,"mpty. -->; - [X] Adds the `SCF_COSX_GUESS` input keyword to Psi4, usable with `SCF_TYPE=DIRECT` and `SCF_TYPE=DFDIRJ+LINK`. When enabled, the calculation will first converge the SCF on a small `COSX` grid, and then execute `COSX_MAXITER_FINAL` number of SCF iterations using the specified `SCF_TYPE`.; - [X] Expands the `DF_SCF_GUESS` keyword to work with `SCF_TYPE=DFDIRJ+LINK`.; - [X] Expands the use cases of the `COSX_RADIAL_POINTS_INITIAL`, `COSX_SPHERICAL_POINTS_INITIAL`, and `COSX_MAXITER_FINAL` keywords. `COSX_RADIAL_POINTS_INITIAL` and `COSX_SPHERICAL_POINTS_INITIAL` control the size of the grid used for the `SCF_COSX_GUESS` guess ( default: (20/50) ). `COSX_MAXITER_FINAL` controls how many `DIRECT`/`DFDIRJ+LINK` iterations to run after the converged `COSX` SCF (default: 2).; -[X] Cleans up `scf_iterator.py`, renaming `early_screening` and all associated variables, and adding comments for cases where multi-stage SCF convergence procedures are used.; - [X] Adds testing for `SCF_COSX_GUESS` and `COSX_MAXITER_FINAL`. ## Questions; - [ ] I already know this will be brought up, so I'll start it off: what's the best name for this keyword? `SCF_COSX_GUESS` and `DF_SCF_GUESS` do very similar things, but have a different naming structure, i.e., SCF is located at a different point in the variable name. I intentionally picked `SCF_COSX_GUESS` because putting SCF at the front makes it clear that the option applies for the whole SCF rather than just COSX itself, which is exacerbated by the existence of other `COSX_xxx` variables that exist specifically for COSX. I actually wouldn't mind switching the name of `DF_SCF_GUESS`, too, to maintain consistency. But if `COSX_SCF_GUESS` is preferred by everyone else, I'll switch to that. . ## Checklist; - [X] Tests added for any new features; - [] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3158
https://github.com/psi4/psi4/issues/3159:352,Availability,error,errors,352,"Hi,. I just got an MRCC license and started toying around with the Psi4 interface. Unfortunately, it is not working for me. ; ```; molecule {; 0 1; O; H 1 1.0; H 1 1.0 2 110.0; }. set qc_module mrcc; optimize('ccsdt/cc-pvdz'); freq('ccsdt/cc-pvdz'); ```; Using the mrcc.2023-08-28.binary.tar.gz binary release, I just get a big bunch of file not found errors; ```; $ psi4 -n6 h2o.in ; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:302,Deployability,release,release,302,"Hi,. I just got an MRCC license and started toying around with the Psi4 interface. Unfortunately, it is not working for me. ; ```; molecule {; 0 1; O; H 1 1.0; H 1 1.0 2 110.0; }. set qc_module mrcc; optimize('ccsdt/cc-pvdz'); freq('ccsdt/cc-pvdz'); ```; Using the mrcc.2023-08-28.binary.tar.gz binary release, I just get a big bunch of file not found errors; ```; $ psi4 -n6 h2o.in ; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:8181,Deployability,install,install,8181,"425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; ^CTraceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:8299,Deployability,install,install,8299,"425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; ^CTraceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:8452,Deployability,install,install,8452,"3AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; ^CTraceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_di",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:8549,Deployability,install,install,8549,"found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; ^CTraceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['ener",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:8663,Deployability,install,install,8663,"31B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; ^CTraceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/pr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:9134,Deployability,install,install,9134," recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:9310,Deployability,install,install,9310,"File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 223, in scf_initialize; self.guess(); KeyboardInterrupt; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:9473,Deployability,install,install,9473,"File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 223, in scf_initialize; self.guess(); KeyboardInterrupt; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:9631,Deployability,install,install,9631,"File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 223, in scf_initialize; self.guess(); KeyboardInterrupt; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:9755,Deployability,install,install,9755,"File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 223, in scf_initialize; self.guess(); KeyboardInterrupt; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:9885,Deployability,install,install,9885,"File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 223, in scf_initialize; self.guess(); KeyboardInterrupt; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:10013,Deployability,install,install,10013,"File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 223, in scf_initialize; self.guess(); KeyboardInterrupt; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:10149,Deployability,install,install,10149,"File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 223, in scf_initialize; self.guess(); KeyboardInterrupt; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:9522,Energy Efficiency,energy,energy,9522,"File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 223, in scf_initialize; self.guess(); KeyboardInterrupt; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:9548,Energy Efficiency,energy,energy,9548,"File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 223, in scf_initialize; self.guess(); KeyboardInterrupt; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:72,Integrability,interface,interface,72,"Hi,. I just got an MRCC license and started toying around with the Psi4 interface. Unfortunately, it is not working for me. ; ```; molecule {; 0 1; O; H 1 1.0; H 1 1.0 2 110.0; }. set qc_module mrcc; optimize('ccsdt/cc-pvdz'); freq('ccsdt/cc-pvdz'); ```; Using the mrcc.2023-08-28.binary.tar.gz binary release, I just get a big bunch of file not found errors; ```; $ psi4 -n6 h2o.in ; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:518,Integrability,Rout,Routine,518,"in ; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:1153,Integrability,Rout,Routine,1153,"in ; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:1788,Integrability,Rout,Routine,1788,"000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 00000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:2423,Integrability,Rout,Routine,2423,"000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 00000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:3058,Integrability,Rout,Routine,3058,"000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; invalid value encountered in scalar divide; invalid value encountered in divide; Optimizer: Optimization complete!; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:3809,Integrability,Rout,Routine,3809,"nknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; invalid value encountered in scalar divide; invalid value encountered in divide; Optimizer: Optimization complete!; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 00000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:4444,Integrability,Rout,Routine,4444,"nknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; invalid value encountered in scalar divide; invalid value encountered in divide; Optimizer: Optimization complete!; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 00000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:5079,Integrability,Rout,Routine,5079,"000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 00000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:5714,Integrability,Rout,Routine,5714,"000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 00000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:6349,Integrability,Rout,Routine,6349,"000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 00000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:6984,Integrability,Rout,Routine,6984,"000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 00000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:7619,Integrability,Rout,Routine,7619,"425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; ^CTraceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:8904,Modifiability,config,config,8904,"nown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; ^CTraceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:200,Performance,optimiz,optimize,200,"Hi,. I just got an MRCC license and started toying around with the Psi4 interface. Unfortunately, it is not working for me. ; ```; molecule {; 0 1; O; H 1 1.0; H 1 1.0 2 110.0; }. set qc_module mrcc; optimize('ccsdt/cc-pvdz'); freq('ccsdt/cc-pvdz'); ```; Using the mrcc.2023-08-28.binary.tar.gz binary release, I just get a big bunch of file not found errors; ```; $ psi4 -n6 h2o.in ; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:3641,Performance,Optimiz,Optimizer,3641,"000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; invalid value encountered in scalar divide; invalid value encountered in divide; Optimizer: Optimization complete!; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unkno",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/issues/3159:3652,Performance,Optimiz,Optimization,3652,"C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; invalid value encountered in scalar divide; invalid value encountered in divide; Optimizer: Optimization complete!; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/pull/3160:1374,Availability,avail,available,1374,"PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:1851,Availability,error,error,1851,"rnal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". Those have all been removed. Where possible (and up to ""4""), replacements are suggested. This required a good amount of changes to the tests.; - [x] the gradient and Hessian qcvars were previously of dimension appropriate for the subsystem. Now, they have been padded with zeros and have supersystem dimensions.; * QCManyBody changes; - [x] most of the operative code for many-body analyses was moved into qcmb. what's left is a derived class that turns psi4 syntax into ManyBodyInpu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:223,Deployability,install,installed,223,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. This is a snapshot in which all n-body tests pass using QCManyBody locally. There's lots of code to be erased and reworked yet. And qcmb isn't installed in CI, so tests aren't expected to pass. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:407,Deployability,release,release,407,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. This is a snapshot in which all n-body tests pass using QCManyBody locally. There's lots of code to be erased and reworked yet. And qcmb isn't installed in CI, so tests aren't expected to pass. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:780,Deployability,update,updated,780,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. This is a snapshot in which all n-body tests pass using QCManyBody locally. There's lots of code to be erased and reworked yet. And qcmb isn't installed in CI, so tests aren't expected to pass. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:1521,Energy Efficiency,energy,energy,1521,"PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:2216,Energy Efficiency,efficient,efficient,2216," [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". Those have all been removed. Where possible (and up to ""4""), replacements are suggested. This required a good amount of changes to the tests.; - [x] the gradient and Hessian qcvars were previously of dimension appropriate for the subsystem. Now, they have been padded with zeros and have supersystem dimensions.; * QCManyBody changes; - [x] most of the operative code for many-body analyses was moved into qcmb. what's left is a derived class that turns psi4 syntax into ManyBodyInput and ManyBodyResult into psi4 qcvars and wfn; - [x] new entry from task_planner into ManyBodyComputer. current setup isn't final, but there's going to be less logic in the task_planner; - [x] new option `supersystem_ie_only` skips the mbe analysis and does the IE directly. useful for trimers and larger. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:1348,Integrability,depend,dependency,1348,"PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:995,Performance,OPTIMIZ,OPTIMIZATION,995,"iption of the PR's purpose here. -->. This is a snapshot in which all n-body tests pass using QCManyBody locally. There's lots of code to be erased and reworked yet. And qcmb isn't installed in CI, so tests aren't expected to pass. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribut",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:119,Testability,test,tests,119,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. This is a snapshot in which all n-body tests pass using QCManyBody locally. There's lots of code to be erased and reworked yet. And qcmb isn't installed in CI, so tests aren't expected to pass. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:243,Testability,test,tests,243,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. This is a snapshot in which all n-body tests pass using QCManyBody locally. There's lots of code to be erased and reworked yet. And qcmb isn't installed in CI, so tests aren't expected to pass. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:1177,Testability,test,testing,1177,"PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:2495,Testability,test,tests,2495,"pi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". Those have all been removed. Where possible (and up to ""4""), replacements are suggested. This required a good amount of changes to the tests.; - [x] the gradient and Hessian qcvars were previously of dimension appropriate for the subsystem. Now, they have been padded with zeros and have supersystem dimensions.; * QCManyBody changes; - [x] most of the operative code for many-body analyses was moved into qcmb. what's left is a derived class that turns psi4 syntax into ManyBodyInput and ManyBodyResult into psi4 qcvars and wfn; - [x] new entry from task_planner into ManyBodyComputer. current setup isn't final, but there's going to be less logic in the task_planner; - [x] new option `supersystem_ie_only` skips the mbe analysis and does the IE directly. useful for trimers and larger. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:3003,Testability,log,logic,3003,"pi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". Those have all been removed. Where possible (and up to ""4""), replacements are suggested. This required a good amount of changes to the tests.; - [x] the gradient and Hessian qcvars were previously of dimension appropriate for the subsystem. Now, they have been padded with zeros and have supersystem dimensions.; * QCManyBody changes; - [x] most of the operative code for many-body analyses was moved into qcmb. what's left is a derived class that turns psi4 syntax into ManyBodyInput and ManyBodyResult into psi4 qcvars and wfn; - [x] new entry from task_planner into ManyBodyComputer. current setup isn't final, but there's going to be less logic in the task_planner; - [x] new option `supersystem_ie_only` skips the mbe analysis and does the IE directly. useful for trimers and larger. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:3169,Testability,Test,Tests,3169,"pi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". Those have all been removed. Where possible (and up to ""4""), replacements are suggested. This required a good amount of changes to the tests.; - [x] the gradient and Hessian qcvars were previously of dimension appropriate for the subsystem. Now, they have been padded with zeros and have supersystem dimensions.; * QCManyBody changes; - [x] most of the operative code for many-body analyses was moved into qcmb. what's left is a derived class that turns psi4 syntax into ManyBodyInput and ManyBodyResult into psi4 qcvars and wfn; - [x] new entry from task_planner into ManyBodyComputer. current setup isn't final, but there's going to be less logic in the task_planner; - [x] new option `supersystem_ie_only` skips the mbe analysis and does the IE directly. useful for trimers and larger. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:3243,Testability,test,tests,3243,"pi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". Those have all been removed. Where possible (and up to ""4""), replacements are suggested. This required a good amount of changes to the tests.; - [x] the gradient and Hessian qcvars were previously of dimension appropriate for the subsystem. Now, they have been padded with zeros and have supersystem dimensions.; * QCManyBody changes; - [x] most of the operative code for many-body analyses was moved into qcmb. what's left is a derived class that turns psi4 syntax into ManyBodyInput and ManyBodyResult into psi4 qcvars and wfn; - [x] new entry from task_planner into ManyBodyComputer. current setup isn't final, but there's going to be less logic in the task_planner; - [x] new option `supersystem_ie_only` skips the mbe analysis and does the IE directly. useful for trimers and larger. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/pull/3160:3334,Testability,test,tests,3334,"pi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". Those have all been removed. Where possible (and up to ""4""), replacements are suggested. This required a good amount of changes to the tests.; - [x] the gradient and Hessian qcvars were previously of dimension appropriate for the subsystem. Now, they have been padded with zeros and have supersystem dimensions.; * QCManyBody changes; - [x] most of the operative code for many-body analyses was moved into qcmb. what's left is a derived class that turns psi4 syntax into ManyBodyInput and ManyBodyResult into psi4 qcvars and wfn; - [x] new entry from task_planner into ManyBodyComputer. current setup isn't final, but there's going to be less logic in the task_planner; - [x] new option `supersystem_ie_only` skips the mbe analysis and does the IE directly. useful for trimers and larger. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3160
https://github.com/psi4/psi4/issues/3161:457,Energy Efficiency,energy,energy,457,"I have seen the same result in both v1.7 and v1.9. Below is my input:. ```; molecule {; C 43.447574615 4.402106285 18.442501068; Cl 43.539905548 3.305690527 19.834751129; H 43.777095795 3.891677380 17.581066132; H 42.397209167 4.711723328 18.365312576; H 44.039062500 5.304682255 18.653499603; Na 43.090690613 5.591814041 21.935888290; 1 1; }; set print 2; set basis def2-TZVPPD; set gradient_write on; G, wfn = gradient(""WB97M-D3BJ"", return_wfn=True); wfn.energy(); wfn.gradient().print_out(); ```. Output:; [psi 1.7](https://github.com/psi4/psi4/files/15100254/dimer_0001.txt); [psi 1.9](https://github.com/psi4/psi4/files/15100255/test.txt). Output gradient:. ```; -Total Gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 0.017612153536 -0.030226835448 -0.016364611072; 2 -0.001951550496 0.000510350455 -0.012196966883; 3 -0.006845878529 0.008632172968 0.016317898785; 4 -0.007830360016 0.005006082123 0.005314350686; 5 -0.000151463183 0.010716793785 0.004937148905; 6 -0.000804674189 0.005151834777 0.001952651442; ```. The total gradient of the geometry is (in Hatree/Bohr):. ```; 0.000028227123 -0.00020960134 -0.000039528137; ```. This seems quite large! When converted to kcal/mol/A, it's almost 0.25 kcal/mol/A. I am training a machine learning potential, which needs data in high accuracy. To find the source, I set `set print 2`, and found the source is XC Gradient. Other parts are good. ```; -XC Gradient: ; Atom X Y Z ; ------ ----------------- ----------------- ----------------- ; 1 0.023413713156 -0.034618654043 0.016561407807 ; 2 0.004295152287 -0.082574073389 0.110502690803 ; 3 0.057058934205 -0.084984859487 -0.155578605215 ; 4 -0.165454990449 0.054800035457 -0.007744542989 ; 5 0.081560548449 0.141475784522 0.033034928588 ; 6 -0.000845130524 0.005692165589 0.003184592861 ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161
https://github.com/psi4/psi4/issues/3161:634,Testability,test,test,634,"I have seen the same result in both v1.7 and v1.9. Below is my input:. ```; molecule {; C 43.447574615 4.402106285 18.442501068; Cl 43.539905548 3.305690527 19.834751129; H 43.777095795 3.891677380 17.581066132; H 42.397209167 4.711723328 18.365312576; H 44.039062500 5.304682255 18.653499603; Na 43.090690613 5.591814041 21.935888290; 1 1; }; set print 2; set basis def2-TZVPPD; set gradient_write on; G, wfn = gradient(""WB97M-D3BJ"", return_wfn=True); wfn.energy(); wfn.gradient().print_out(); ```. Output:; [psi 1.7](https://github.com/psi4/psi4/files/15100254/dimer_0001.txt); [psi 1.9](https://github.com/psi4/psi4/files/15100255/test.txt). Output gradient:. ```; -Total Gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 0.017612153536 -0.030226835448 -0.016364611072; 2 -0.001951550496 0.000510350455 -0.012196966883; 3 -0.006845878529 0.008632172968 0.016317898785; 4 -0.007830360016 0.005006082123 0.005314350686; 5 -0.000151463183 0.010716793785 0.004937148905; 6 -0.000804674189 0.005151834777 0.001952651442; ```. The total gradient of the geometry is (in Hatree/Bohr):. ```; 0.000028227123 -0.00020960134 -0.000039528137; ```. This seems quite large! When converted to kcal/mol/A, it's almost 0.25 kcal/mol/A. I am training a machine learning potential, which needs data in high accuracy. To find the source, I set `set print 2`, and found the source is XC Gradient. Other parts are good. ```; -XC Gradient: ; Atom X Y Z ; ------ ----------------- ----------------- ----------------- ; 1 0.023413713156 -0.034618654043 0.016561407807 ; 2 0.004295152287 -0.082574073389 0.110502690803 ; 3 0.057058934205 -0.084984859487 -0.155578605215 ; 4 -0.165454990449 0.054800035457 -0.007744542989 ; 5 0.081560548449 0.141475784522 0.033034928588 ; 6 -0.000845130524 0.005692165589 0.003184592861 ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161
https://github.com/psi4/psi4/issues/3161:1282,Usability,learn,learning,1282,"I have seen the same result in both v1.7 and v1.9. Below is my input:. ```; molecule {; C 43.447574615 4.402106285 18.442501068; Cl 43.539905548 3.305690527 19.834751129; H 43.777095795 3.891677380 17.581066132; H 42.397209167 4.711723328 18.365312576; H 44.039062500 5.304682255 18.653499603; Na 43.090690613 5.591814041 21.935888290; 1 1; }; set print 2; set basis def2-TZVPPD; set gradient_write on; G, wfn = gradient(""WB97M-D3BJ"", return_wfn=True); wfn.energy(); wfn.gradient().print_out(); ```. Output:; [psi 1.7](https://github.com/psi4/psi4/files/15100254/dimer_0001.txt); [psi 1.9](https://github.com/psi4/psi4/files/15100255/test.txt). Output gradient:. ```; -Total Gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 0.017612153536 -0.030226835448 -0.016364611072; 2 -0.001951550496 0.000510350455 -0.012196966883; 3 -0.006845878529 0.008632172968 0.016317898785; 4 -0.007830360016 0.005006082123 0.005314350686; 5 -0.000151463183 0.010716793785 0.004937148905; 6 -0.000804674189 0.005151834777 0.001952651442; ```. The total gradient of the geometry is (in Hatree/Bohr):. ```; 0.000028227123 -0.00020960134 -0.000039528137; ```. This seems quite large! When converted to kcal/mol/A, it's almost 0.25 kcal/mol/A. I am training a machine learning potential, which needs data in high accuracy. To find the source, I set `set print 2`, and found the source is XC Gradient. Other parts are good. ```; -XC Gradient: ; Atom X Y Z ; ------ ----------------- ----------------- ----------------- ; 1 0.023413713156 -0.034618654043 0.016561407807 ; 2 0.004295152287 -0.082574073389 0.110502690803 ; 3 0.057058934205 -0.084984859487 -0.155578605215 ; 4 -0.165454990449 0.054800035457 -0.007744542989 ; 5 0.081560548449 0.141475784522 0.033034928588 ; 6 -0.000845130524 0.005692165589 0.003184592861 ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3161
https://github.com/psi4/psi4/pull/3162:413,Availability,error,error,413,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] cmake to 3.19 in preparation for einsums; - [x] Einsums 0.5 to fix CI; - [x] bump mem to fix error in fsapt1 test. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3162
https://github.com/psi4/psi4/pull/3162:429,Testability,test,test,429,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] cmake to 3.19 in preparation for einsums; - [x] Einsums 0.5 to fix CI; - [x] bump mem to fix error in fsapt1 test. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3162
https://github.com/psi4/psi4/pull/3162:486,Testability,Test,Tests,486,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] cmake to 3.19 in preparation for einsums; - [x] Einsums 0.5 to fix CI; - [x] bump mem to fix error in fsapt1 test. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3162
https://github.com/psi4/psi4/pull/3162:560,Testability,test,tests,560,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] cmake to 3.19 in preparation for einsums; - [x] Einsums 0.5 to fix CI; - [x] bump mem to fix error in fsapt1 test. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3162
https://github.com/psi4/psi4/pull/3162:651,Testability,test,tests,651,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] cmake to 3.19 in preparation for einsums; - [x] Einsums 0.5 to fix CI; - [x] bump mem to fix error in fsapt1 test. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3162
https://github.com/psi4/psi4/pull/3163:142,Availability,avail,available,142,"## Description; First we had to constrain einsums to the openblas variant on linux to get the env to solve b/c the most recent libblas wasn't available for MKL 2023. Then that got fixed on c-f and we could use the mkl variant. But that as a constraint, of course, won't work on Mac Silicon, which doesn't have MKL. It'd be cleanest if the solver handled it, so I'm giving the no-constraint a try. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3163
https://github.com/psi4/psi4/pull/3163:530,Deployability,release,release,530,"## Description; First we had to constrain einsums to the openblas variant on linux to get the env to solve b/c the most recent libblas wasn't available for MKL 2023. Then that got fixed on c-f and we could use the mkl variant. But that as a constraint, of course, won't work on Mac Silicon, which doesn't have MKL. It'd be cleanest if the solver handled it, so I'm giving the no-constraint a try. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3163
https://github.com/psi4/psi4/pull/3163:905,Testability,Test,Tests,905,"## Description; First we had to constrain einsums to the openblas variant on linux to get the env to solve b/c the most recent libblas wasn't available for MKL 2023. Then that got fixed on c-f and we could use the mkl variant. But that as a constraint, of course, won't work on Mac Silicon, which doesn't have MKL. It'd be cleanest if the solver handled it, so I'm giving the no-constraint a try. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3163
https://github.com/psi4/psi4/pull/3163:979,Testability,test,tests,979,"## Description; First we had to constrain einsums to the openblas variant on linux to get the env to solve b/c the most recent libblas wasn't available for MKL 2023. Then that got fixed on c-f and we could use the mkl variant. But that as a constraint, of course, won't work on Mac Silicon, which doesn't have MKL. It'd be cleanest if the solver handled it, so I'm giving the no-constraint a try. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3163
https://github.com/psi4/psi4/pull/3163:1070,Testability,test,tests,1070,"## Description; First we had to constrain einsums to the openblas variant on linux to get the env to solve b/c the most recent libblas wasn't available for MKL 2023. Then that got fixed on c-f and we could use the mkl variant. But that as a constraint, of course, won't work on Mac Silicon, which doesn't have MKL. It'd be cleanest if the solver handled it, so I'm giving the no-constraint a try. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3163
https://github.com/psi4/psi4/issues/3164:1631,Availability,Error,Error,1631,"t, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:1707,Availability,error,error,1707,"si4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/t/deleting-scratch-files-before-a-computation-finishes/2206). To find ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:1946,Availability,error,error,1946,"ld/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/t/deleting-scratch-files-before-a-computation-finishes/2206). To find this function, I took a lucky guess that Psi4 had some kind of cleanup function since independent calculations succeeded. Instead, this should probably be in: https://psicode.org/psi4manual/master/psiapi.html. I am fully willi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:2010,Availability,Error,Error,2010,"/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/t/deleting-scratch-files-before-a-computation-finishes/2206). To find this function, I took a lucky guess that Psi4 had some kind of cleanup function since independent calculations succeeded. Instead, this should probably be in: https://psicode.org/psi4manual/master/psiapi.html. I am fully willing to submit a PR with this documentation, but I don't have much experience with Psi4/QC knowledge in genera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:2075,Availability,error,error,2075,"/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/t/deleting-scratch-files-before-a-computation-finishes/2206). To find this function, I took a lucky guess that Psi4 had some kind of cleanup function since independent calculations succeeded. Instead, this should probably be in: https://psicode.org/psi4manual/master/psiapi.html. I am fully willing to submit a PR with this documentation, but I don't have much experience with Psi4/QC knowledge in genera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:503,Energy Efficiency,energy,energyFromGeometryFile,503,"I am new to Psi4 and quantum chemistry in general. The [PsiAPI tutorial](https://psicode.org/psi4manual/master/psiapi.html) is helpful in getting started, but doesn't mention use of `psi4.core.clean()`. I can't find any mention of this function in the docs, except [here](https://psicode.org/psi4manual/master/api/psi4.core.clean.html). A newbie like me may try to run two calculations in series. In my case, I got:; ```; Traceback (most recent call last):; File ""test.py"", line 47, in <module>; h2oi = energyFromGeometryFile('geometries/01.xyz', method=""ccsd""); File ""test.py"", line 27, in energyFromGeometryFile; return calculateEnergy(text, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:591,Energy Efficiency,energy,energyFromGeometryFile,591,"I am new to Psi4 and quantum chemistry in general. The [PsiAPI tutorial](https://psicode.org/psi4manual/master/psiapi.html) is helpful in getting started, but doesn't mention use of `psi4.core.clean()`. I can't find any mention of this function in the docs, except [here](https://psicode.org/psi4manual/master/api/psi4.core.clean.html). A newbie like me may try to run two calculations in series. In my case, I got:; ```; Traceback (most recent call last):; File ""test.py"", line 47, in <module>; h2oi = energyFromGeometryFile('geometries/01.xyz', method=""ccsd""); File ""test.py"", line 27, in energyFromGeometryFile; return calculateEnergy(text, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:714,Energy Efficiency,energy,energy,714,"I am new to Psi4 and quantum chemistry in general. The [PsiAPI tutorial](https://psicode.org/psi4manual/master/psiapi.html) is helpful in getting started, but doesn't mention use of `psi4.core.clean()`. I can't find any mention of this function in the docs, except [here](https://psicode.org/psi4manual/master/api/psi4.core.clean.html). A newbie like me may try to run two calculations in series. In my case, I got:; ```; Traceback (most recent call last):; File ""test.py"", line 47, in <module>; h2oi = energyFromGeometryFile('geometries/01.xyz', method=""ccsd""); File ""test.py"", line 27, in energyFromGeometryFile; return calculateEnergy(text, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:822,Energy Efficiency,energy,energy,822,"I am new to Psi4 and quantum chemistry in general. The [PsiAPI tutorial](https://psicode.org/psi4manual/master/psiapi.html) is helpful in getting started, but doesn't mention use of `psi4.core.clean()`. I can't find any mention of this function in the docs, except [here](https://psicode.org/psi4manual/master/api/psi4.core.clean.html). A newbie like me may try to run two calculations in series. In my case, I got:; ```; Traceback (most recent call last):; File ""test.py"", line 47, in <module>; h2oi = energyFromGeometryFile('geometries/01.xyz', method=""ccsd""); File ""test.py"", line 27, in energyFromGeometryFile; return calculateEnergy(text, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:848,Energy Efficiency,energy,energy,848,"I am new to Psi4 and quantum chemistry in general. The [PsiAPI tutorial](https://psicode.org/psi4manual/master/psiapi.html) is helpful in getting started, but doesn't mention use of `psi4.core.clean()`. I can't find any mention of this function in the docs, except [here](https://psicode.org/psi4manual/master/api/psi4.core.clean.html). A newbie like me may try to run two calculations in series. In my case, I got:; ```; Traceback (most recent call last):; File ""test.py"", line 47, in <module>; h2oi = energyFromGeometryFile('geometries/01.xyz', method=""ccsd""); File ""test.py"", line 27, in energyFromGeometryFile; return calculateEnergy(text, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:464,Testability,test,test,464,"I am new to Psi4 and quantum chemistry in general. The [PsiAPI tutorial](https://psicode.org/psi4manual/master/psiapi.html) is helpful in getting started, but doesn't mention use of `psi4.core.clean()`. I can't find any mention of this function in the docs, except [here](https://psicode.org/psi4manual/master/api/psi4.core.clean.html). A newbie like me may try to run two calculations in series. In my case, I got:; ```; Traceback (most recent call last):; File ""test.py"", line 47, in <module>; h2oi = energyFromGeometryFile('geometries/01.xyz', method=""ccsd""); File ""test.py"", line 27, in energyFromGeometryFile; return calculateEnergy(text, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:569,Testability,test,test,569,"I am new to Psi4 and quantum chemistry in general. The [PsiAPI tutorial](https://psicode.org/psi4manual/master/psiapi.html) is helpful in getting started, but doesn't mention use of `psi4.core.clean()`. I can't find any mention of this function in the docs, except [here](https://psicode.org/psi4manual/master/api/psi4.core.clean.html). A newbie like me may try to run two calculations in series. In my case, I got:; ```; Traceback (most recent call last):; File ""test.py"", line 47, in <module>; h2oi = energyFromGeometryFile('geometries/01.xyz', method=""ccsd""); File ""test.py"", line 27, in energyFromGeometryFile; return calculateEnergy(text, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3164:666,Testability,test,test,666,"I am new to Psi4 and quantum chemistry in general. The [PsiAPI tutorial](https://psicode.org/psi4manual/master/psiapi.html) is helpful in getting started, but doesn't mention use of `psi4.core.clean()`. I can't find any mention of this function in the docs, except [here](https://psicode.org/psi4manual/master/api/psi4.core.clean.html). A newbie like me may try to run two calculations in series. In my case, I got:; ```; Traceback (most recent call last):; File ""test.py"", line 47, in <module>; h2oi = energyFromGeometryFile('geometries/01.xyz', method=""ccsd""); File ""test.py"", line 27, in energyFromGeometryFile; return calculateEnergy(text, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3164
https://github.com/psi4/psi4/issues/3165:71,Integrability,interface,interface,71,"I am wondering if CPU and memory use are handled correctly in the MRCC interface. I am running some hig-level coupled cluster benchmarks but MRCC appears to run mostly single threaded, and doesn't use a lot of memory. Is the `memory` statement in Psi4 copied to the MRCC input file? I could not find the used MRCC input in the scratch directory...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3165
https://github.com/psi4/psi4/issues/3165:126,Testability,benchmark,benchmarks,126,"I am wondering if CPU and memory use are handled correctly in the MRCC interface. I am running some hig-level coupled cluster benchmarks but MRCC appears to run mostly single threaded, and doesn't use a lot of memory. Is the `memory` statement in Psi4 copied to the MRCC input file? I could not find the used MRCC input in the scratch directory...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3165
https://github.com/psi4/psi4/pull/3166:784,Deployability,release,release,784,"## Description; The `MGGA_MVSh` functional [is aliased to `MVSh`](https://github.com/psi4/psi4/blob/bf9d20fc579995b0bc2c38b749a31c0d6f85c82e/psi4/driver/procrouting/dft/hyb_functionals.py#L326). This is inconsistent with `MGGA_MS0`, `MGGA_MS1`, `MGGA_MS2`, and `MGGA_MVS`. This change adds an alias for `MS0`, `MS1`, `MS2`, and `MVS`, respectively. **EDIT:** Similarly, there are two more functionals with inconsistent naming: PW91 and mPWPW. LibXC refers to these as PW91 and mPW91, respectively, while the mPWPW paper refers to them as PWPW and mPWPW, respectively. Hence, I added an alias of `PWPW` for `PW91`; and an alias of `mPW91` for `mPWPW`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Alias `MGGA_MS0`, `MGGA_MS1`, `MGGA_MS2`, and `MGGA_MVS` to `MS0`, `MS1`, `MS2`, and `MVS`, respectively.; - [x] Alias `PW91` to `PWPW`; and `mPWPW` to `mPW91`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Alias `MGGA_MS0`, `MGGA_MS1`, `MGGA_MS2`, and `MGGA_MVS` to `MS0`, `MS1`, `MS2`, and `MVS`, respectively.; - [x] Alias `PW91` to `PWPW`; and `mPWPW` to `mPW91`. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3166
https://github.com/psi4/psi4/pull/3167:348,Deployability,release,release,348,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fix for the bug described in [issue #1968](https://github.com/psi4/psi4/issues/1968) about incorrectly loading ECPs for ghosted atoms. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Calculations using ghosted atoms that contain ECPs in the basis set can now be executed properly. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] When loading basis functions we check if we should skip loading ECPs (`skip_ghost_ecps`) and if `true` then we check if an atom is a ghost (`mol->Z(atom) == 0.0`). If yes we do not load ECPs fot it.; - [x] Added optional boolean argument `skip_ghost_ecps` for `construct_basisset_from_pydict` function. The default is `true`, we set it `false` for atomic calculations (like SAD guess). ## Questions; - [x] Are the check runs failing due to the changes in this PR?. ## Checklist; - [x] Minimal working example; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167
https://github.com/psi4/psi4/pull/3167:183,Performance,load,loading,183,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fix for the bug described in [issue #1968](https://github.com/psi4/psi4/issues/1968) about incorrectly loading ECPs for ghosted atoms. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Calculations using ghosted atoms that contain ECPs in the basis set can now be executed properly. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] When loading basis functions we check if we should skip loading ECPs (`skip_ghost_ecps`) and if `true` then we check if an atom is a ghost (`mol->Z(atom) == 0.0`). If yes we do not load ECPs fot it.; - [x] Added optional boolean argument `skip_ghost_ecps` for `construct_basisset_from_pydict` function. The default is `true`, we set it `false` for atomic calculations (like SAD guess). ## Questions; - [x] Are the check runs failing due to the changes in this PR?. ## Checklist; - [x] Minimal working example; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167
https://github.com/psi4/psi4/pull/3167:731,Performance,load,loading,731,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fix for the bug described in [issue #1968](https://github.com/psi4/psi4/issues/1968) about incorrectly loading ECPs for ghosted atoms. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Calculations using ghosted atoms that contain ECPs in the basis set can now be executed properly. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] When loading basis functions we check if we should skip loading ECPs (`skip_ghost_ecps`) and if `true` then we check if an atom is a ghost (`mol->Z(atom) == 0.0`). If yes we do not load ECPs fot it.; - [x] Added optional boolean argument `skip_ghost_ecps` for `construct_basisset_from_pydict` function. The default is `true`, we set it `false` for atomic calculations (like SAD guess). ## Questions; - [x] Are the check runs failing due to the changes in this PR?. ## Checklist; - [x] Minimal working example; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167
https://github.com/psi4/psi4/pull/3167:782,Performance,load,loading,782,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fix for the bug described in [issue #1968](https://github.com/psi4/psi4/issues/1968) about incorrectly loading ECPs for ghosted atoms. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Calculations using ghosted atoms that contain ECPs in the basis set can now be executed properly. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] When loading basis functions we check if we should skip loading ECPs (`skip_ghost_ecps`) and if `true` then we check if an atom is a ghost (`mol->Z(atom) == 0.0`). If yes we do not load ECPs fot it.; - [x] Added optional boolean argument `skip_ghost_ecps` for `construct_basisset_from_pydict` function. The default is `true`, we set it `false` for atomic calculations (like SAD guess). ## Questions; - [x] Are the check runs failing due to the changes in this PR?. ## Checklist; - [x] Minimal working example; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167
https://github.com/psi4/psi4/pull/3167:907,Performance,load,load,907,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fix for the bug described in [issue #1968](https://github.com/psi4/psi4/issues/1968) about incorrectly loading ECPs for ghosted atoms. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Calculations using ghosted atoms that contain ECPs in the basis set can now be executed properly. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] When loading basis functions we check if we should skip loading ECPs (`skip_ghost_ecps`) and if `true` then we check if an atom is a ghost (`mol->Z(atom) == 0.0`). If yes we do not load ECPs fot it.; - [x] Added optional boolean argument `skip_ghost_ecps` for `construct_basisset_from_pydict` function. The default is `true`, we set it `false` for atomic calculations (like SAD guess). ## Questions; - [x] Are the check runs failing due to the changes in this PR?. ## Checklist; - [x] Minimal working example; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167
https://github.com/psi4/psi4/pull/3167:1276,Testability,test,tests,1276,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fix for the bug described in [issue #1968](https://github.com/psi4/psi4/issues/1968) about incorrectly loading ECPs for ghosted atoms. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Calculations using ghosted atoms that contain ECPs in the basis set can now be executed properly. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] When loading basis functions we check if we should skip loading ECPs (`skip_ghost_ecps`) and if `true` then we check if an atom is a ghost (`mol->Z(atom) == 0.0`). If yes we do not load ECPs fot it.; - [x] Added optional boolean argument `skip_ghost_ecps` for `construct_basisset_from_pydict` function. The default is `true`, we set it `false` for atomic calculations (like SAD guess). ## Questions; - [x] Are the check runs failing due to the changes in this PR?. ## Checklist; - [x] Minimal working example; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167
https://github.com/psi4/psi4/pull/3167:1367,Testability,test,tests,1367,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fix for the bug described in [issue #1968](https://github.com/psi4/psi4/issues/1968) about incorrectly loading ECPs for ghosted atoms. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Calculations using ghosted atoms that contain ECPs in the basis set can now be executed properly. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] When loading basis functions we check if we should skip loading ECPs (`skip_ghost_ecps`) and if `true` then we check if an atom is a ghost (`mol->Z(atom) == 0.0`). If yes we do not load ECPs fot it.; - [x] Added optional boolean argument `skip_ghost_ecps` for `construct_basisset_from_pydict` function. The default is `true`, we set it `false` for atomic calculations (like SAD guess). ## Questions; - [x] Are the check runs failing due to the changes in this PR?. ## Checklist; - [x] Minimal working example; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3167
https://github.com/psi4/psi4/pull/3168:115,Availability,error,error,115,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:528,Availability,error,error,528,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:593,Availability,error,error,593,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:647,Availability,error,error,647,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:1022,Availability,error,error,1022,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:482,Deployability,release,release,482,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:653,Integrability,message,message,653,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:1028,Integrability,message,message,1028,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:160,Safety,abort,abort,160,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:199,Safety,abort,abort,199,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:931,Safety,abort,abort,931,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:1067,Safety,abort,abort,1067,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3168:1120,Testability,Test,Tests,1120,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/pull/3169:409,Deployability,release,release,409,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; It looks like `libmints/svd.cc` is unused. Psi4 appears to build just fine without it. It contains what looks like ancient LAPACK code that was auto-translated with f2c. This PR deletes the file. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused file `libmints/svd.cc` is deleted. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3169
https://github.com/psi4/psi4/pull/3169:780,Testability,Test,Tests,780,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; It looks like `libmints/svd.cc` is unused. Psi4 appears to build just fine without it. It contains what looks like ancient LAPACK code that was auto-translated with f2c. This PR deletes the file. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused file `libmints/svd.cc` is deleted. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3169
https://github.com/psi4/psi4/issues/3170:339,Integrability,interface,interface,339,"Hello,. Currently, there is the feature:; ```; set optking {; frozen_dihedral = (""; 1 2 3 4; ""); }; ```. Since one might start from a very reasonable conformer, there are some use cases; where you want to optimize the geometry, but keep the dihedral angles (from rotatable bonds); as close as possible to their initial values. The current interface makes it quite painful to setup this for one molecule.; And I need to do this for many molecules... Regards,; F.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3170
https://github.com/psi4/psi4/issues/3170:205,Performance,optimiz,optimize,205,"Hello,. Currently, there is the feature:; ```; set optking {; frozen_dihedral = (""; 1 2 3 4; ""); }; ```. Since one might start from a very reasonable conformer, there are some use cases; where you want to optimize the geometry, but keep the dihedral angles (from rotatable bonds); as close as possible to their initial values. The current interface makes it quite painful to setup this for one molecule.; And I need to do this for many molecules... Regards,; F.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3170
https://github.com/psi4/psi4/pull/3171:281,Deployability,release,release,281,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. FISAPT itself untested, so logic for disp term may need adjustment. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3171
https://github.com/psi4/psi4/pull/3171:107,Testability,log,logic,107,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. FISAPT itself untested, so logic for disp term may need adjustment. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3171
https://github.com/psi4/psi4/pull/3171:656,Testability,Test,Tests,656,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. FISAPT itself untested, so logic for disp term may need adjustment. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3171
https://github.com/psi4/psi4/pull/3171:730,Testability,test,tests,730,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. FISAPT itself untested, so logic for disp term may need adjustment. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3171
https://github.com/psi4/psi4/pull/3171:821,Testability,test,tests,821,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. FISAPT itself untested, so logic for disp term may need adjustment. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3171
https://github.com/psi4/psi4/pull/3172:284,Deployability,release,release,284,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Added SAPT0-D4 and SAPT0-D4M methods and parameters along with a test. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3172
https://github.com/psi4/psi4/pull/3172:145,Testability,test,test,145,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Added SAPT0-D4 and SAPT0-D4M methods and parameters along with a test. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3172
https://github.com/psi4/psi4/pull/3172:659,Testability,Test,Tests,659,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Added SAPT0-D4 and SAPT0-D4M methods and parameters along with a test. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3172
https://github.com/psi4/psi4/pull/3172:733,Testability,test,tests,733,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Added SAPT0-D4 and SAPT0-D4M methods and parameters along with a test. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3172
https://github.com/psi4/psi4/pull/3172:824,Testability,test,tests,824,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Added SAPT0-D4 and SAPT0-D4M methods and parameters along with a test. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3172
https://github.com/psi4/psi4/pull/3173:336,Deployability,release,release,336,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; In, SAPT(DFT), I removed setting ""DF_INTS_IO"" to ""SAVE"" because it blocked scf_type==""DF"" from accessing MemDF on its own. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3173
https://github.com/psi4/psi4/pull/3173:175,Security,access,accessing,175,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; In, SAPT(DFT), I removed setting ""DF_INTS_IO"" to ""SAVE"" because it blocked scf_type==""DF"" from accessing MemDF on its own. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3173
https://github.com/psi4/psi4/pull/3173:711,Testability,Test,Tests,711,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; In, SAPT(DFT), I removed setting ""DF_INTS_IO"" to ""SAVE"" because it blocked scf_type==""DF"" from accessing MemDF on its own. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3173
https://github.com/psi4/psi4/pull/3173:785,Testability,test,tests,785,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; In, SAPT(DFT), I removed setting ""DF_INTS_IO"" to ""SAVE"" because it blocked scf_type==""DF"" from accessing MemDF on its own. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3173
https://github.com/psi4/psi4/pull/3173:876,Testability,test,tests,876,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; In, SAPT(DFT), I removed setting ""DF_INTS_IO"" to ""SAVE"" because it blocked scf_type==""DF"" from accessing MemDF on its own. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3173
https://github.com/psi4/psi4/pull/3174:260,Availability,ping,pings,260,"## Description; `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. This PR seems way too easy. @brianz98, please let me know if there are issues. Obligatory @fevangelista and @dnascimento13 pings. ## User API & Changelog headlines. - [x] `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes `RelPotentialInt` to expose W0, Wx, Wy, and Wz integrals. ## Questions; - [x] Any objections to changing an existing integral type rather than creating a new one?; - [x] Any documentation edits needed?; - [x] Do any of the users need the derivative integrals?. ## Checklist; - [ ] Are any tests necessary?; - [x] `ctest -L x2c` passes, in addition to standard tests. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3174
https://github.com/psi4/psi4/pull/3174:70,Security,expose,expose,70,"## Description; `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. This PR seems way too easy. @brianz98, please let me know if there are issues. Obligatory @fevangelista and @dnascimento13 pings. ## User API & Changelog headlines. - [x] `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes `RelPotentialInt` to expose W0, Wx, Wy, and Wz integrals. ## Questions; - [x] Any objections to changing an existing integral type rather than creating a new one?; - [x] Any documentation edits needed?; - [x] Do any of the users need the derivative integrals?. ## Checklist; - [ ] Are any tests necessary?; - [x] `ctest -L x2c` passes, in addition to standard tests. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3174
https://github.com/psi4/psi4/pull/3174:362,Security,expose,expose,362,"## Description; `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. This PR seems way too easy. @brianz98, please let me know if there are issues. Obligatory @fevangelista and @dnascimento13 pings. ## User API & Changelog headlines. - [x] `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes `RelPotentialInt` to expose W0, Wx, Wy, and Wz integrals. ## Questions; - [x] Any objections to changing an existing integral type rather than creating a new one?; - [x] Any documentation edits needed?; - [x] Do any of the users need the derivative integrals?. ## Checklist; - [ ] Are any tests necessary?; - [x] `ctest -L x2c` passes, in addition to standard tests. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3174
https://github.com/psi4/psi4/pull/3174:698,Security,expose,expose,698,"## Description; `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. This PR seems way too easy. @brianz98, please let me know if there are issues. Obligatory @fevangelista and @dnascimento13 pings. ## User API & Changelog headlines. - [x] `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes `RelPotentialInt` to expose W0, Wx, Wy, and Wz integrals. ## Questions; - [x] Any objections to changing an existing integral type rather than creating a new one?; - [x] Any documentation edits needed?; - [x] Do any of the users need the derivative integrals?. ## Checklist; - [ ] Are any tests necessary?; - [x] `ctest -L x2c` passes, in addition to standard tests. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3174
https://github.com/psi4/psi4/pull/3174:966,Testability,test,tests,966,"## Description; `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. This PR seems way too easy. @brianz98, please let me know if there are issues. Obligatory @fevangelista and @dnascimento13 pings. ## User API & Changelog headlines. - [x] `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes `RelPotentialInt` to expose W0, Wx, Wy, and Wz integrals. ## Questions; - [x] Any objections to changing an existing integral type rather than creating a new one?; - [x] Any documentation edits needed?; - [x] Do any of the users need the derivative integrals?. ## Checklist; - [ ] Are any tests necessary?; - [x] `ctest -L x2c` passes, in addition to standard tests. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3174
https://github.com/psi4/psi4/pull/3174:1037,Testability,test,tests,1037,"## Description; `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. This PR seems way too easy. @brianz98, please let me know if there are issues. Obligatory @fevangelista and @dnascimento13 pings. ## User API & Changelog headlines. - [x] `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes `RelPotentialInt` to expose W0, Wx, Wy, and Wz integrals. ## Questions; - [x] Any objections to changing an existing integral type rather than creating a new one?; - [x] Any documentation edits needed?; - [x] Do any of the users need the derivative integrals?. ## Checklist; - [ ] Are any tests necessary?; - [x] `ctest -L x2c` passes, in addition to standard tests. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3174
https://github.com/psi4/psi4/pull/3175:66,Availability,redundant,redundant,66,"## Description; Fixes many compiler warnings by no longer passing redundant arguments to Matrix constructors. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixes 83 compiler warnings, 81 of which were coming from `dct`. ## Checklist; - [x] quick tests and dct tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3175
https://github.com/psi4/psi4/pull/3175:66,Safety,redund,redundant,66,"## Description; Fixes many compiler warnings by no longer passing redundant arguments to Matrix constructors. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixes 83 compiler warnings, 81 of which were coming from `dct`. ## Checklist; - [x] quick tests and dct tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3175
https://github.com/psi4/psi4/pull/3175:440,Testability,test,tests,440,"## Description; Fixes many compiler warnings by no longer passing redundant arguments to Matrix constructors. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixes 83 compiler warnings, 81 of which were coming from `dct`. ## Checklist; - [x] quick tests and dct tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3175
https://github.com/psi4/psi4/pull/3175:454,Testability,test,tests,454,"## Description; Fixes many compiler warnings by no longer passing redundant arguments to Matrix constructors. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixes 83 compiler warnings, 81 of which were coming from `dct`. ## Checklist; - [x] quick tests and dct tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3175
https://github.com/psi4/psi4/pull/3177:2045,Availability,redundant,redundant,2045,"rray_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If everyone else is confident that the checks are redundant I _could_ remove them. ## Checklist; - [x] No new features; - [x] No new errors in the full test suite. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3177
https://github.com/psi4/psi4/pull/3177:2128,Availability,error,errors,2128,"rray_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If everyone else is confident that the checks are redundant I _could_ remove them. ## Checklist; - [x] No new features; - [x] No new errors in the full test suite. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3177
https://github.com/psi4/psi4/pull/3177:1439,Deployability,release,release,1439,"rray_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If everyone else is confident that the checks are redundant I _could_ remove them. ## Checklist; - [x] No new features; - [x] No new errors in the full test suite. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3177
https://github.com/psi4/psi4/pull/3177:1894,Safety,hazard,hazards,1894,"rray_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If everyone else is confident that the checks are redundant I _could_ remove them. ## Checklist; - [x] No new features; - [x] No new errors in the full test suite. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3177
https://github.com/psi4/psi4/pull/3177:2045,Safety,redund,redundant,2045,"rray_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If everyone else is confident that the checks are redundant I _could_ remove them. ## Checklist; - [x] No new features; - [x] No new errors in the full test suite. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3177
https://github.com/psi4/psi4/pull/3177:2147,Testability,test,test,2147,"rray_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If everyone else is confident that the checks are redundant I _could_ remove them. ## Checklist; - [x] No new features; - [x] No new errors in the full test suite. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3177
https://github.com/psi4/psi4/pull/3177:610,Usability,simpl,simple,610,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This is the third PR in the `libmoinfo` series, following #3101 and #3155.; Currently, `libmoinfo` is calling the `intvec convert_int_array_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If eve",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3177
https://github.com/psi4/psi4/pull/3177:1796,Usability,simpl,simple,1796,"rray_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If everyone else is confident that the checks are redundant I _could_ remove them. ## Checklist; - [x] No new features; - [x] No new errors in the full test suite. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3177
https://github.com/psi4/psi4/issues/3178:32,Performance,optimiz,optimization,32,Hi; I am interested to run a QM optimization on some small molecules and I am not sure how to add a solvent model during the optimization process. I am not wanting to do the calculation in vaccum. What keywords should I use?; Thanks,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3178
https://github.com/psi4/psi4/issues/3178:125,Performance,optimiz,optimization,125,Hi; I am interested to run a QM optimization on some small molecules and I am not sure how to add a solvent model during the optimization process. I am not wanting to do the calculation in vaccum. What keywords should I use?; Thanks,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3178
https://github.com/psi4/psi4/pull/3179:639,Deployability,release,release,639,"## Description; This PR makes small changes to the `PsiException` class, specifically regarding the printout of the function call stack upon throwing. Now, the number of functions included in the printed call stack during exception printout is tied to a singular variable, instead of being scattered about in multiple places. The goal is to allow easier control of the function call stack size during printout for debugging purposes, if desired. . There are a couple small cleanups here and there as well. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] All separate instances of function call stack printout sizes have been replaced with a single variable definition.; - [X] The `Stack` variable now uses a `std::array` instead of a `std::vector`.; - [X] Uses of `&Stack[0]` have been replaced with `Stack.data()`. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3179
https://github.com/psi4/psi4/pull/3179:263,Modifiability,variab,variable,263,"## Description; This PR makes small changes to the `PsiException` class, specifically regarding the printout of the function call stack upon throwing. Now, the number of functions included in the printed call stack during exception printout is tied to a singular variable, instead of being scattered about in multiple places. The goal is to allow easier control of the function call stack size during printout for debugging purposes, if desired. . There are a couple small cleanups here and there as well. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] All separate instances of function call stack printout sizes have been replaced with a single variable definition.; - [X] The `Stack` variable now uses a `std::array` instead of a `std::vector`.; - [X] Uses of `&Stack[0]` have been replaced with `Stack.data()`. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3179
https://github.com/psi4/psi4/pull/3179:1018,Modifiability,variab,variable,1018,"## Description; This PR makes small changes to the `PsiException` class, specifically regarding the printout of the function call stack upon throwing. Now, the number of functions included in the printed call stack during exception printout is tied to a singular variable, instead of being scattered about in multiple places. The goal is to allow easier control of the function call stack size during printout for debugging purposes, if desired. . There are a couple small cleanups here and there as well. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] All separate instances of function call stack printout sizes have been replaced with a single variable definition.; - [X] The `Stack` variable now uses a `std::array` instead of a `std::vector`.; - [X] Uses of `&Stack[0]` have been replaced with `Stack.data()`. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3179
https://github.com/psi4/psi4/pull/3179:1058,Modifiability,variab,variable,1058,"## Description; This PR makes small changes to the `PsiException` class, specifically regarding the printout of the function call stack upon throwing. Now, the number of functions included in the printed call stack during exception printout is tied to a singular variable, instead of being scattered about in multiple places. The goal is to allow easier control of the function call stack size during printout for debugging purposes, if desired. . There are a couple small cleanups here and there as well. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] All separate instances of function call stack printout sizes have been replaced with a single variable definition.; - [X] The `Stack` variable now uses a `std::array` instead of a `std::vector`.; - [X] Uses of `&Stack[0]` have been replaced with `Stack.data()`. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3179
https://github.com/psi4/psi4/pull/3179:1231,Testability,Test,Tests,1231,"## Description; This PR makes small changes to the `PsiException` class, specifically regarding the printout of the function call stack upon throwing. Now, the number of functions included in the printed call stack during exception printout is tied to a singular variable, instead of being scattered about in multiple places. The goal is to allow easier control of the function call stack size during printout for debugging purposes, if desired. . There are a couple small cleanups here and there as well. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] All separate instances of function call stack printout sizes have been replaced with a single variable definition.; - [X] The `Stack` variable now uses a `std::array` instead of a `std::vector`.; - [X] Uses of `&Stack[0]` have been replaced with `Stack.data()`. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3179
https://github.com/psi4/psi4/pull/3179:1305,Testability,test,tests,1305,"## Description; This PR makes small changes to the `PsiException` class, specifically regarding the printout of the function call stack upon throwing. Now, the number of functions included in the printed call stack during exception printout is tied to a singular variable, instead of being scattered about in multiple places. The goal is to allow easier control of the function call stack size during printout for debugging purposes, if desired. . There are a couple small cleanups here and there as well. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] All separate instances of function call stack printout sizes have been replaced with a single variable definition.; - [X] The `Stack` variable now uses a `std::array` instead of a `std::vector`.; - [X] Uses of `&Stack[0]` have been replaced with `Stack.data()`. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3179
https://github.com/psi4/psi4/pull/3179:1396,Testability,test,tests,1396,"## Description; This PR makes small changes to the `PsiException` class, specifically regarding the printout of the function call stack upon throwing. Now, the number of functions included in the printed call stack during exception printout is tied to a singular variable, instead of being scattered about in multiple places. The goal is to allow easier control of the function call stack size during printout for debugging purposes, if desired. . There are a couple small cleanups here and there as well. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] All separate instances of function call stack printout sizes have been replaced with a single variable definition.; - [X] The `Stack` variable now uses a `std::array` instead of a `std::vector`.; - [X] Uses of `&Stack[0]` have been replaced with `Stack.data()`. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3179
https://github.com/psi4/psi4/pull/3180:371,Testability,log,logs,371,"## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fix a literal one-in-a-million random bug causing Psi4 to [crash](https://dev.azure.com/psi4/psi4/_build/results?buildId=6488&view=logs&j=f31c9f97-4411-58e7-49ac-fc73f645e6b6&t=140ee297-051b-5396-a86d-f0d06cd83763).; ; ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3180
https://github.com/psi4/psi4/issues/3181:98,Availability,error,error,98,"I tried using this code to generate the potential energy curve for the CF molecule and I got this error message: . ```; import psi4; import numpy as np. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1244,Availability,error,error,1244,"occ': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/c",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:2173,Availability,Error,Error,2173,"r message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:2223,Availability,Error,Error,2223,"r message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:2909,Availability,Error,Error,2909,"File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:2963,Availability,Error,Error,2963,"File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:50,Energy Efficiency,energy,energy,50,"I tried using this code to generate the potential energy curve for the CF molecule and I got this error message: . ```; import psi4; import numpy as np. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1012,Energy Efficiency,energy,energy,1012,"he potential energy curve for the CF molecule and I got this error message: . ```; import psi4; import numpy as np. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packag",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1095,Energy Efficiency,ENERGY,ENERGY,1095,"t this error message: . ```; import psi4; import numpy as np. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1147,Energy Efficiency,ENERGY,ENERGY,1147,"py as np. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, supe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1199,Energy Efficiency,ENERGY,ENERGY,1199,"eference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1523,Energy Efficiency,energy,energy,1523,", 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psit",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1549,Energy Efficiency,energy,energy,1549,", 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psit",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:2659,Energy Efficiency,energy,energy,2659,"File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:2717,Energy Efficiency,energy,energy,2717,"File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:2758,Energy Efficiency,energy,energy,2758,"File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:2799,Energy Efficiency,energy,energy,2799,"File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:104,Integrability,message,message,104,"I tried using this code to generate the potential energy curve for the CF molecule and I got this error message: . ```; import psi4; import numpy as np. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1250,Integrability,message,message,1250,"occ': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/c",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1068,Modifiability,variab,variable,1068,"t this error message: . ```; import psi4; import numpy as np. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1120,Modifiability,variab,variable,1120,"py as np. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, supe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3181:1172,Modifiability,variab,variable,1172,"eference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/pull/3182:729,Deployability,release,release,729,"## Description; Here's another JK mini-PR. This one seems to be of interest in multiple future JK-related developments (such as https://github.com/psi4/psi4/pull/3158), so I figured it would be good to add it on its own. This PR changes the behavior of `CompositeJK::name()` so that, instead of returning the value ""CompositeJK"", it returns the names of the underlying `SplitJK` algorithms used. Additionally, using this feature, a new test has been added to `test_compositejk.py`, testing to make sure that proper composite algorithm pairs are called, given an input `SCF_TYPE=J_ALGO + K_ALGO`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Improves behavior of the `CompositeJK::name()` function. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] `CompositeJK::name()` now returns the combined names of the substituent `SplitJK` components rather than ""CompositeJK"".; - [X] Adds new test to ensure proper calling of CompositeJK algorithm pairs. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3182
https://github.com/psi4/psi4/pull/3182:436,Testability,test,test,436,"## Description; Here's another JK mini-PR. This one seems to be of interest in multiple future JK-related developments (such as https://github.com/psi4/psi4/pull/3158), so I figured it would be good to add it on its own. This PR changes the behavior of `CompositeJK::name()` so that, instead of returning the value ""CompositeJK"", it returns the names of the underlying `SplitJK` algorithms used. Additionally, using this feature, a new test has been added to `test_compositejk.py`, testing to make sure that proper composite algorithm pairs are called, given an input `SCF_TYPE=J_ALGO + K_ALGO`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Improves behavior of the `CompositeJK::name()` function. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] `CompositeJK::name()` now returns the combined names of the substituent `SplitJK` components rather than ""CompositeJK"".; - [X] Adds new test to ensure proper calling of CompositeJK algorithm pairs. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3182
https://github.com/psi4/psi4/pull/3182:482,Testability,test,testing,482,"## Description; Here's another JK mini-PR. This one seems to be of interest in multiple future JK-related developments (such as https://github.com/psi4/psi4/pull/3158), so I figured it would be good to add it on its own. This PR changes the behavior of `CompositeJK::name()` so that, instead of returning the value ""CompositeJK"", it returns the names of the underlying `SplitJK` algorithms used. Additionally, using this feature, a new test has been added to `test_compositejk.py`, testing to make sure that proper composite algorithm pairs are called, given an input `SCF_TYPE=J_ALGO + K_ALGO`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Improves behavior of the `CompositeJK::name()` function. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] `CompositeJK::name()` now returns the combined names of the substituent `SplitJK` components rather than ""CompositeJK"".; - [X] Adds new test to ensure proper calling of CompositeJK algorithm pairs. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3182
https://github.com/psi4/psi4/pull/3182:1202,Testability,test,test,1202,"## Description; Here's another JK mini-PR. This one seems to be of interest in multiple future JK-related developments (such as https://github.com/psi4/psi4/pull/3158), so I figured it would be good to add it on its own. This PR changes the behavior of `CompositeJK::name()` so that, instead of returning the value ""CompositeJK"", it returns the names of the underlying `SplitJK` algorithms used. Additionally, using this feature, a new test has been added to `test_compositejk.py`, testing to make sure that proper composite algorithm pairs are called, given an input `SCF_TYPE=J_ALGO + K_ALGO`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Improves behavior of the `CompositeJK::name()` function. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] `CompositeJK::name()` now returns the combined names of the substituent `SplitJK` components rather than ""CompositeJK"".; - [X] Adds new test to ensure proper calling of CompositeJK algorithm pairs. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3182
https://github.com/psi4/psi4/pull/3182:1309,Testability,Test,Tests,1309,"## Description; Here's another JK mini-PR. This one seems to be of interest in multiple future JK-related developments (such as https://github.com/psi4/psi4/pull/3158), so I figured it would be good to add it on its own. This PR changes the behavior of `CompositeJK::name()` so that, instead of returning the value ""CompositeJK"", it returns the names of the underlying `SplitJK` algorithms used. Additionally, using this feature, a new test has been added to `test_compositejk.py`, testing to make sure that proper composite algorithm pairs are called, given an input `SCF_TYPE=J_ALGO + K_ALGO`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Improves behavior of the `CompositeJK::name()` function. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] `CompositeJK::name()` now returns the combined names of the substituent `SplitJK` components rather than ""CompositeJK"".; - [X] Adds new test to ensure proper calling of CompositeJK algorithm pairs. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3182
https://github.com/psi4/psi4/pull/3182:1383,Testability,test,tests,1383,"## Description; Here's another JK mini-PR. This one seems to be of interest in multiple future JK-related developments (such as https://github.com/psi4/psi4/pull/3158), so I figured it would be good to add it on its own. This PR changes the behavior of `CompositeJK::name()` so that, instead of returning the value ""CompositeJK"", it returns the names of the underlying `SplitJK` algorithms used. Additionally, using this feature, a new test has been added to `test_compositejk.py`, testing to make sure that proper composite algorithm pairs are called, given an input `SCF_TYPE=J_ALGO + K_ALGO`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Improves behavior of the `CompositeJK::name()` function. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] `CompositeJK::name()` now returns the combined names of the substituent `SplitJK` components rather than ""CompositeJK"".; - [X] Adds new test to ensure proper calling of CompositeJK algorithm pairs. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3182
https://github.com/psi4/psi4/pull/3182:1474,Testability,test,tests,1474,"## Description; Here's another JK mini-PR. This one seems to be of interest in multiple future JK-related developments (such as https://github.com/psi4/psi4/pull/3158), so I figured it would be good to add it on its own. This PR changes the behavior of `CompositeJK::name()` so that, instead of returning the value ""CompositeJK"", it returns the names of the underlying `SplitJK` algorithms used. Additionally, using this feature, a new test has been added to `test_compositejk.py`, testing to make sure that proper composite algorithm pairs are called, given an input `SCF_TYPE=J_ALGO + K_ALGO`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Improves behavior of the `CompositeJK::name()` function. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] `CompositeJK::name()` now returns the combined names of the substituent `SplitJK` components rather than ""CompositeJK"".; - [X] Adds new test to ensure proper calling of CompositeJK algorithm pairs. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3182
https://github.com/psi4/psi4/pull/3183:239,Availability,down,downcasting,239,"## Description; This PR was motivated by a comment by @andyj10224 in PR https://github.com/psi4/psi4/pull/3150, pointing out that implementing method-specific setters/getters in `SplitJK` could more elegantly and sensibly be performed via downcasting. While the comment in that PR addressed knobs specific to `snLinK`, it is also applicable to other methods within the CompositeJK framework. This PR fixes that, replacing all instances of method-specific setters/getters in the base `SplitJK` class with downcasting to call the needed function at the derived-class level. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Renames `COSK::set_COSX_grid` and `COSK::get_COSX_grid` functions to `COSK::set_grid` and `COSK::get_grid`, respectively.; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions. . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions, localizing their presence to the `COSK` class.; - [X] Replaces utilizations of the above with usage of downcasting in the `CompositeJK::set_COSX_grid` and `CompositeJK::get_COSX_grid` functions. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3183
https://github.com/psi4/psi4/pull/3183:504,Availability,down,downcasting,504,"## Description; This PR was motivated by a comment by @andyj10224 in PR https://github.com/psi4/psi4/pull/3150, pointing out that implementing method-specific setters/getters in `SplitJK` could more elegantly and sensibly be performed via downcasting. While the comment in that PR addressed knobs specific to `snLinK`, it is also applicable to other methods within the CompositeJK framework. This PR fixes that, replacing all instances of method-specific setters/getters in the base `SplitJK` class with downcasting to call the needed function at the derived-class level. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Renames `COSK::set_COSX_grid` and `COSK::get_COSX_grid` functions to `COSK::set_grid` and `COSK::get_grid`, respectively.; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions. . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions, localizing their presence to the `COSK` class.; - [X] Replaces utilizations of the above with usage of downcasting in the `CompositeJK::set_COSX_grid` and `CompositeJK::get_COSX_grid` functions. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3183
https://github.com/psi4/psi4/pull/3183:1365,Availability,down,downcasting,1365,"## Description; This PR was motivated by a comment by @andyj10224 in PR https://github.com/psi4/psi4/pull/3150, pointing out that implementing method-specific setters/getters in `SplitJK` could more elegantly and sensibly be performed via downcasting. While the comment in that PR addressed knobs specific to `snLinK`, it is also applicable to other methods within the CompositeJK framework. This PR fixes that, replacing all instances of method-specific setters/getters in the base `SplitJK` class with downcasting to call the needed function at the derived-class level. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Renames `COSK::set_COSX_grid` and `COSK::get_COSX_grid` functions to `COSK::set_grid` and `COSK::get_grid`, respectively.; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions. . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions, localizing their presence to the `COSK` class.; - [X] Replaces utilizations of the above with usage of downcasting in the `CompositeJK::set_COSX_grid` and `CompositeJK::get_COSX_grid` functions. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3183
https://github.com/psi4/psi4/pull/3183:705,Deployability,release,release,705,"## Description; This PR was motivated by a comment by @andyj10224 in PR https://github.com/psi4/psi4/pull/3150, pointing out that implementing method-specific setters/getters in `SplitJK` could more elegantly and sensibly be performed via downcasting. While the comment in that PR addressed knobs specific to `snLinK`, it is also applicable to other methods within the CompositeJK framework. This PR fixes that, replacing all instances of method-specific setters/getters in the base `SplitJK` class with downcasting to call the needed function at the derived-class level. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Renames `COSK::set_COSX_grid` and `COSK::get_COSX_grid` functions to `COSK::set_grid` and `COSK::get_grid`, respectively.; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions. . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions, localizing their presence to the `COSK` class.; - [X] Replaces utilizations of the above with usage of downcasting in the `CompositeJK::set_COSX_grid` and `CompositeJK::get_COSX_grid` functions. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3183
https://github.com/psi4/psi4/pull/3183:225,Performance,perform,performed,225,"## Description; This PR was motivated by a comment by @andyj10224 in PR https://github.com/psi4/psi4/pull/3150, pointing out that implementing method-specific setters/getters in `SplitJK` could more elegantly and sensibly be performed via downcasting. While the comment in that PR addressed knobs specific to `snLinK`, it is also applicable to other methods within the CompositeJK framework. This PR fixes that, replacing all instances of method-specific setters/getters in the base `SplitJK` class with downcasting to call the needed function at the derived-class level. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Renames `COSK::set_COSX_grid` and `COSK::get_COSX_grid` functions to `COSK::set_grid` and `COSK::get_grid`, respectively.; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions. . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions, localizing their presence to the `COSK` class.; - [X] Replaces utilizations of the above with usage of downcasting in the `CompositeJK::set_COSX_grid` and `CompositeJK::get_COSX_grid` functions. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3183
https://github.com/psi4/psi4/pull/3183:1502,Testability,Test,Tests,1502,"## Description; This PR was motivated by a comment by @andyj10224 in PR https://github.com/psi4/psi4/pull/3150, pointing out that implementing method-specific setters/getters in `SplitJK` could more elegantly and sensibly be performed via downcasting. While the comment in that PR addressed knobs specific to `snLinK`, it is also applicable to other methods within the CompositeJK framework. This PR fixes that, replacing all instances of method-specific setters/getters in the base `SplitJK` class with downcasting to call the needed function at the derived-class level. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Renames `COSK::set_COSX_grid` and `COSK::get_COSX_grid` functions to `COSK::set_grid` and `COSK::get_grid`, respectively.; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions. . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions, localizing their presence to the `COSK` class.; - [X] Replaces utilizations of the above with usage of downcasting in the `CompositeJK::set_COSX_grid` and `CompositeJK::get_COSX_grid` functions. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3183
https://github.com/psi4/psi4/pull/3183:1576,Testability,test,tests,1576,"## Description; This PR was motivated by a comment by @andyj10224 in PR https://github.com/psi4/psi4/pull/3150, pointing out that implementing method-specific setters/getters in `SplitJK` could more elegantly and sensibly be performed via downcasting. While the comment in that PR addressed knobs specific to `snLinK`, it is also applicable to other methods within the CompositeJK framework. This PR fixes that, replacing all instances of method-specific setters/getters in the base `SplitJK` class with downcasting to call the needed function at the derived-class level. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Renames `COSK::set_COSX_grid` and `COSK::get_COSX_grid` functions to `COSK::set_grid` and `COSK::get_grid`, respectively.; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions. . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions, localizing their presence to the `COSK` class.; - [X] Replaces utilizations of the above with usage of downcasting in the `CompositeJK::set_COSX_grid` and `CompositeJK::get_COSX_grid` functions. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3183
https://github.com/psi4/psi4/pull/3183:1667,Testability,test,tests,1667,"## Description; This PR was motivated by a comment by @andyj10224 in PR https://github.com/psi4/psi4/pull/3150, pointing out that implementing method-specific setters/getters in `SplitJK` could more elegantly and sensibly be performed via downcasting. While the comment in that PR addressed knobs specific to `snLinK`, it is also applicable to other methods within the CompositeJK framework. This PR fixes that, replacing all instances of method-specific setters/getters in the base `SplitJK` class with downcasting to call the needed function at the derived-class level. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Renames `COSK::set_COSX_grid` and `COSK::get_COSX_grid` functions to `COSK::set_grid` and `COSK::get_grid`, respectively.; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions. . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions, localizing their presence to the `COSK` class.; - [X] Replaces utilizations of the above with usage of downcasting in the `CompositeJK::set_COSX_grid` and `CompositeJK::get_COSX_grid` functions. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3183
https://github.com/psi4/psi4/issues/3184:1053,Availability,down,downgrade,1053,"tl;dr Psi4 itself needs no changes for numpy v2, but its runtime major version does need to match the compile-time major version. Current conda-package v1.9.1 with _1 needs to be used in a np v1 env. I'll rebuild a _2 soon that can be used with np v2. longer:; Numpy v2 is up on conda-forge and so may show up in an environment near you. The situation wrt psi4 is that it needs either v1 or v2 depending on what it was compiled against. So:. * the conda package -- AVOIDABLE PROBLEM, this is compiled against numpy v1, so constrain your env. I'll do a new build against v2 after qcel is ready.; * an old objdir compiled against a v1 numpy -- no problem, just don't let any new conda commands update the env to v2 numpy. use `numpy=1* -c conda-forge` in any `conda update` or `conda install` commands.; * a fresh objdir where the numpy is v2 -- no problem, psi4 compiles just fine. Might need https://github.com/MolSSI/QCElemental/pull/338; * an old objdir compiled against a v1 numpy that now sees a v2 numpy at runtime -- PROBLEM, see signature below. downgrade the numpy with `conda install numpy=1 -c conda-forge`. The symptom of an incompatible psi4+numpy is the following. ```; !----------------------------------------------------------------------------------!; ! !; ! Following atoms are too close: [(0, np.int64(1), np.float64(0.0)), (0, !; ! np.int64(2), np.float64(0.0)), (1, np.int64(2), np.float64(0.0))] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184
https://github.com/psi4/psi4/issues/3184:692,Deployability,update,update,692,"tl;dr Psi4 itself needs no changes for numpy v2, but its runtime major version does need to match the compile-time major version. Current conda-package v1.9.1 with _1 needs to be used in a np v1 env. I'll rebuild a _2 soon that can be used with np v2. longer:; Numpy v2 is up on conda-forge and so may show up in an environment near you. The situation wrt psi4 is that it needs either v1 or v2 depending on what it was compiled against. So:. * the conda package -- AVOIDABLE PROBLEM, this is compiled against numpy v1, so constrain your env. I'll do a new build against v2 after qcel is ready.; * an old objdir compiled against a v1 numpy -- no problem, just don't let any new conda commands update the env to v2 numpy. use `numpy=1* -c conda-forge` in any `conda update` or `conda install` commands.; * a fresh objdir where the numpy is v2 -- no problem, psi4 compiles just fine. Might need https://github.com/MolSSI/QCElemental/pull/338; * an old objdir compiled against a v1 numpy that now sees a v2 numpy at runtime -- PROBLEM, see signature below. downgrade the numpy with `conda install numpy=1 -c conda-forge`. The symptom of an incompatible psi4+numpy is the following. ```; !----------------------------------------------------------------------------------!; ! !; ! Following atoms are too close: [(0, np.int64(1), np.float64(0.0)), (0, !; ! np.int64(2), np.float64(0.0)), (1, np.int64(2), np.float64(0.0))] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184
https://github.com/psi4/psi4/issues/3184:764,Deployability,update,update,764,"tl;dr Psi4 itself needs no changes for numpy v2, but its runtime major version does need to match the compile-time major version. Current conda-package v1.9.1 with _1 needs to be used in a np v1 env. I'll rebuild a _2 soon that can be used with np v2. longer:; Numpy v2 is up on conda-forge and so may show up in an environment near you. The situation wrt psi4 is that it needs either v1 or v2 depending on what it was compiled against. So:. * the conda package -- AVOIDABLE PROBLEM, this is compiled against numpy v1, so constrain your env. I'll do a new build against v2 after qcel is ready.; * an old objdir compiled against a v1 numpy -- no problem, just don't let any new conda commands update the env to v2 numpy. use `numpy=1* -c conda-forge` in any `conda update` or `conda install` commands.; * a fresh objdir where the numpy is v2 -- no problem, psi4 compiles just fine. Might need https://github.com/MolSSI/QCElemental/pull/338; * an old objdir compiled against a v1 numpy that now sees a v2 numpy at runtime -- PROBLEM, see signature below. downgrade the numpy with `conda install numpy=1 -c conda-forge`. The symptom of an incompatible psi4+numpy is the following. ```; !----------------------------------------------------------------------------------!; ! !; ! Following atoms are too close: [(0, np.int64(1), np.float64(0.0)), (0, !; ! np.int64(2), np.float64(0.0)), (1, np.int64(2), np.float64(0.0))] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184
https://github.com/psi4/psi4/issues/3184:782,Deployability,install,install,782,"tl;dr Psi4 itself needs no changes for numpy v2, but its runtime major version does need to match the compile-time major version. Current conda-package v1.9.1 with _1 needs to be used in a np v1 env. I'll rebuild a _2 soon that can be used with np v2. longer:; Numpy v2 is up on conda-forge and so may show up in an environment near you. The situation wrt psi4 is that it needs either v1 or v2 depending on what it was compiled against. So:. * the conda package -- AVOIDABLE PROBLEM, this is compiled against numpy v1, so constrain your env. I'll do a new build against v2 after qcel is ready.; * an old objdir compiled against a v1 numpy -- no problem, just don't let any new conda commands update the env to v2 numpy. use `numpy=1* -c conda-forge` in any `conda update` or `conda install` commands.; * a fresh objdir where the numpy is v2 -- no problem, psi4 compiles just fine. Might need https://github.com/MolSSI/QCElemental/pull/338; * an old objdir compiled against a v1 numpy that now sees a v2 numpy at runtime -- PROBLEM, see signature below. downgrade the numpy with `conda install numpy=1 -c conda-forge`. The symptom of an incompatible psi4+numpy is the following. ```; !----------------------------------------------------------------------------------!; ! !; ! Following atoms are too close: [(0, np.int64(1), np.float64(0.0)), (0, !; ! np.int64(2), np.float64(0.0)), (1, np.int64(2), np.float64(0.0))] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184
https://github.com/psi4/psi4/issues/3184:1085,Deployability,install,install,1085,"tl;dr Psi4 itself needs no changes for numpy v2, but its runtime major version does need to match the compile-time major version. Current conda-package v1.9.1 with _1 needs to be used in a np v1 env. I'll rebuild a _2 soon that can be used with np v2. longer:; Numpy v2 is up on conda-forge and so may show up in an environment near you. The situation wrt psi4 is that it needs either v1 or v2 depending on what it was compiled against. So:. * the conda package -- AVOIDABLE PROBLEM, this is compiled against numpy v1, so constrain your env. I'll do a new build against v2 after qcel is ready.; * an old objdir compiled against a v1 numpy -- no problem, just don't let any new conda commands update the env to v2 numpy. use `numpy=1* -c conda-forge` in any `conda update` or `conda install` commands.; * a fresh objdir where the numpy is v2 -- no problem, psi4 compiles just fine. Might need https://github.com/MolSSI/QCElemental/pull/338; * an old objdir compiled against a v1 numpy that now sees a v2 numpy at runtime -- PROBLEM, see signature below. downgrade the numpy with `conda install numpy=1 -c conda-forge`. The symptom of an incompatible psi4+numpy is the following. ```; !----------------------------------------------------------------------------------!; ! !; ! Following atoms are too close: [(0, np.int64(1), np.float64(0.0)), (0, !; ! np.int64(2), np.float64(0.0)), (1, np.int64(2), np.float64(0.0))] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184
https://github.com/psi4/psi4/issues/3184:394,Integrability,depend,depending,394,"tl;dr Psi4 itself needs no changes for numpy v2, but its runtime major version does need to match the compile-time major version. Current conda-package v1.9.1 with _1 needs to be used in a np v1 env. I'll rebuild a _2 soon that can be used with np v2. longer:; Numpy v2 is up on conda-forge and so may show up in an environment near you. The situation wrt psi4 is that it needs either v1 or v2 depending on what it was compiled against. So:. * the conda package -- AVOIDABLE PROBLEM, this is compiled against numpy v1, so constrain your env. I'll do a new build against v2 after qcel is ready.; * an old objdir compiled against a v1 numpy -- no problem, just don't let any new conda commands update the env to v2 numpy. use `numpy=1* -c conda-forge` in any `conda update` or `conda install` commands.; * a fresh objdir where the numpy is v2 -- no problem, psi4 compiles just fine. Might need https://github.com/MolSSI/QCElemental/pull/338; * an old objdir compiled against a v1 numpy that now sees a v2 numpy at runtime -- PROBLEM, see signature below. downgrade the numpy with `conda install numpy=1 -c conda-forge`. The symptom of an incompatible psi4+numpy is the following. ```; !----------------------------------------------------------------------------------!; ! !; ! Following atoms are too close: [(0, np.int64(1), np.float64(0.0)), (0, !; ! np.int64(2), np.float64(0.0)), (1, np.int64(2), np.float64(0.0))] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184
https://github.com/psi4/psi4/issues/3184:465,Safety,AVOID,AVOIDABLE,465,"tl;dr Psi4 itself needs no changes for numpy v2, but its runtime major version does need to match the compile-time major version. Current conda-package v1.9.1 with _1 needs to be used in a np v1 env. I'll rebuild a _2 soon that can be used with np v2. longer:; Numpy v2 is up on conda-forge and so may show up in an environment near you. The situation wrt psi4 is that it needs either v1 or v2 depending on what it was compiled against. So:. * the conda package -- AVOIDABLE PROBLEM, this is compiled against numpy v1, so constrain your env. I'll do a new build against v2 after qcel is ready.; * an old objdir compiled against a v1 numpy -- no problem, just don't let any new conda commands update the env to v2 numpy. use `numpy=1* -c conda-forge` in any `conda update` or `conda install` commands.; * a fresh objdir where the numpy is v2 -- no problem, psi4 compiles just fine. Might need https://github.com/MolSSI/QCElemental/pull/338; * an old objdir compiled against a v1 numpy that now sees a v2 numpy at runtime -- PROBLEM, see signature below. downgrade the numpy with `conda install numpy=1 -c conda-forge`. The symptom of an incompatible psi4+numpy is the following. ```; !----------------------------------------------------------------------------------!; ! !; ! Following atoms are too close: [(0, np.int64(1), np.float64(0.0)), (0, !; ! np.int64(2), np.float64(0.0)), (1, np.int64(2), np.float64(0.0))] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3184
https://github.com/psi4/psi4/issues/3185:74,Availability,error,error,74,"hi friends,did you change the code recently?; libscf_solver/hf.cc:772:22: error: qualified-id in declaration before ‘(’ token; 772 | void HF::compute_fcpi() {; | ^. i think that cause of missing ""}"" after line 770 in this file, it is right?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3185
https://github.com/psi4/psi4/pull/3186:747,Availability,error,error,747,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] fix for BrianQC in #3185 as suggested by @wszs. ## CI Fixes; - [x] mac eco: with cmake v3.30.0, FindPython got seemingly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link aga",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:1381,Availability,error,error,1381,"ngly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:1509,Availability,error,error,1509,"t an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:2958,Availability,avail,available,2958," did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: once pb11 no longer restrained to <2.12 (see above), the ""FixedSize"" issue appears (see nitpick-exceptions), and the exceptions formerly emitted as `List` needed `list` counterparts added.; - [x] win azure: headers in np v2 are at `numpy/_core/include` not `numpy/core/include`. We were setting the latter explicitly for this lane, so removed that. Also added `${Python_NumPy_VERSION}` printing for feedback.; - [x] linux eco: dftd4-python now available for py312 (except on windows), so added that back to the package testing.; - [x] cmake: squashed a few warnings by setting policies. it looks like find_package(Boost) for L2 is still needing FindBoost rather than BoostConfig, so that one needs to be OLD for now.; - [x] conda: threading tests weren't running at the conda recipe b/c the trial job hit the block we put in on MemDF in Disk mode. Increased the memory in test_threading so it could run.; - [x] gha: bumped all the actions to the latest version to get rid of node deprecation warnings. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:213,Deployability,release,release,213,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] fix for BrianQC in #3185 as suggested by @wszs. ## CI Fixes; - [x] mac eco: with cmake v3.30.0, FindPython got seemingly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link aga",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:384,Deployability,update,updates,384,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] fix for BrianQC in #3185 as suggested by @wszs. ## CI Fixes; - [x] mac eco: with cmake v3.30.0, FindPython got seemingly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link aga",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:1072,Deployability,release,released,1072,">. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] fix for BrianQC in #3185 as suggested by @wszs. ## CI Fixes; - [x] mac eco: with cmake v3.30.0, FindPython got seemingly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contain",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:549,Energy Efficiency,green,greenlit,549,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] fix for BrianQC in #3185 as suggested by @wszs. ## CI Fixes; - [x] mac eco: with cmake v3.30.0, FindPython got seemingly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link aga",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:474,Testability,test,tested,474,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] fix for BrianQC in #3185 as suggested by @wszs. ## CI Fixes; - [x] mac eco: with cmake v3.30.0, FindPython got seemingly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link aga",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:3033,Testability,test,testing,3033," did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: once pb11 no longer restrained to <2.12 (see above), the ""FixedSize"" issue appears (see nitpick-exceptions), and the exceptions formerly emitted as `List` needed `list` counterparts added.; - [x] win azure: headers in np v2 are at `numpy/_core/include` not `numpy/core/include`. We were setting the latter explicitly for this lane, so removed that. Also added `${Python_NumPy_VERSION}` printing for feedback.; - [x] linux eco: dftd4-python now available for py312 (except on windows), so added that back to the package testing.; - [x] cmake: squashed a few warnings by setting policies. it looks like find_package(Boost) for L2 is still needing FindBoost rather than BoostConfig, so that one needs to be OLD for now.; - [x] conda: threading tests weren't running at the conda recipe b/c the trial job hit the block we put in on MemDF in Disk mode. Increased the memory in test_threading so it could run.; - [x] gha: bumped all the actions to the latest version to get rid of node deprecation warnings. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:3255,Testability,test,tests,3255," did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: once pb11 no longer restrained to <2.12 (see above), the ""FixedSize"" issue appears (see nitpick-exceptions), and the exceptions formerly emitted as `List` needed `list` counterparts added.; - [x] win azure: headers in np v2 are at `numpy/_core/include` not `numpy/core/include`. We were setting the latter explicitly for this lane, so removed that. Also added `${Python_NumPy_VERSION}` printing for feedback.; - [x] linux eco: dftd4-python now available for py312 (except on windows), so added that back to the package testing.; - [x] cmake: squashed a few warnings by setting policies. it looks like find_package(Boost) for L2 is still needing FindBoost rather than BoostConfig, so that one needs to be OLD for now.; - [x] conda: threading tests weren't running at the conda recipe b/c the trial job hit the block we put in on MemDF in Disk mode. Increased the memory in test_threading so it could run.; - [x] gha: bumped all the actions to the latest version to get rid of node deprecation warnings. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:3536,Testability,Test,Tests,3536," did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: once pb11 no longer restrained to <2.12 (see above), the ""FixedSize"" issue appears (see nitpick-exceptions), and the exceptions formerly emitted as `List` needed `list` counterparts added.; - [x] win azure: headers in np v2 are at `numpy/_core/include` not `numpy/core/include`. We were setting the latter explicitly for this lane, so removed that. Also added `${Python_NumPy_VERSION}` printing for feedback.; - [x] linux eco: dftd4-python now available for py312 (except on windows), so added that back to the package testing.; - [x] cmake: squashed a few warnings by setting policies. it looks like find_package(Boost) for L2 is still needing FindBoost rather than BoostConfig, so that one needs to be OLD for now.; - [x] conda: threading tests weren't running at the conda recipe b/c the trial job hit the block we put in on MemDF in Disk mode. Increased the memory in test_threading so it could run.; - [x] gha: bumped all the actions to the latest version to get rid of node deprecation warnings. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:3610,Testability,test,tests,3610," did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: once pb11 no longer restrained to <2.12 (see above), the ""FixedSize"" issue appears (see nitpick-exceptions), and the exceptions formerly emitted as `List` needed `list` counterparts added.; - [x] win azure: headers in np v2 are at `numpy/_core/include` not `numpy/core/include`. We were setting the latter explicitly for this lane, so removed that. Also added `${Python_NumPy_VERSION}` printing for feedback.; - [x] linux eco: dftd4-python now available for py312 (except on windows), so added that back to the package testing.; - [x] cmake: squashed a few warnings by setting policies. it looks like find_package(Boost) for L2 is still needing FindBoost rather than BoostConfig, so that one needs to be OLD for now.; - [x] conda: threading tests weren't running at the conda recipe b/c the trial job hit the block we put in on MemDF in Disk mode. Increased the memory in test_threading so it could run.; - [x] gha: bumped all the actions to the latest version to get rid of node deprecation warnings. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:3701,Testability,test,tests,3701," did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: once pb11 no longer restrained to <2.12 (see above), the ""FixedSize"" issue appears (see nitpick-exceptions), and the exceptions formerly emitted as `List` needed `list` counterparts added.; - [x] win azure: headers in np v2 are at `numpy/_core/include` not `numpy/core/include`. We were setting the latter explicitly for this lane, so removed that. Also added `${Python_NumPy_VERSION}` printing for feedback.; - [x] linux eco: dftd4-python now available for py312 (except on windows), so added that back to the package testing.; - [x] cmake: squashed a few warnings by setting policies. it looks like find_package(Boost) for L2 is still needing FindBoost rather than BoostConfig, so that one needs to be OLD for now.; - [x] conda: threading tests weren't running at the conda recipe b/c the trial job hit the block we put in on MemDF in Disk mode. Increased the memory in test_threading so it could run.; - [x] gha: bumped all the actions to the latest version to get rid of node deprecation warnings. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3186:2913,Usability,feedback,feedback,2913," did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: once pb11 no longer restrained to <2.12 (see above), the ""FixedSize"" issue appears (see nitpick-exceptions), and the exceptions formerly emitted as `List` needed `list` counterparts added.; - [x] win azure: headers in np v2 are at `numpy/_core/include` not `numpy/core/include`. We were setting the latter explicitly for this lane, so removed that. Also added `${Python_NumPy_VERSION}` printing for feedback.; - [x] linux eco: dftd4-python now available for py312 (except on windows), so added that back to the package testing.; - [x] cmake: squashed a few warnings by setting policies. it looks like find_package(Boost) for L2 is still needing FindBoost rather than BoostConfig, so that one needs to be OLD for now.; - [x] conda: threading tests weren't running at the conda recipe b/c the trial job hit the block we put in on MemDF in Disk mode. Increased the memory in test_threading so it could run.; - [x] gha: bumped all the actions to the latest version to get rid of node deprecation warnings. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3186
https://github.com/psi4/psi4/pull/3187:228,Energy Efficiency,reduce,reduce,228,"## Description; This PR implements the grid pruning scheme of Matthews (https://pubs.acs.org/doi/10.1021/acs.jctc.9b01205), applying a pivoted Cholesky decomposition to the S matrix to remove linear dependencies and drastically reduce the number of grid points. Per @PhillCli's comments on #3157, taking the pseudoinverse of the S matrix can be costly, and this PR fixes that problem! The final rank appears to be _mostly_ invariant to grid size, but only to the molecule/basis set (results in tables below). | System | Radial, Spherical Points | Initial Rank | Final Rank |; | ------------- | ------------- | ------------- | ------------- |; | Water/cc-pVDZ | (25, 50) | 2605 | 280 |; | Water/cc-pVDZ | (50, 86) | 8739 | 280 |; | Water/cc-pVTZ | (25, 50) | 2630 | 1184 |; | Water/cc-pVTZ | (50, 86) | 8774 | 1328 |; | Benzene/cc-pVDZ | (25, 50) | 9831 | 3124 |; | Benzene/cc-pVDZ | (50, 86) | 32588 | 3414 |. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Drastically reduction of the rank of the intermediates in a THC factorization. ## Questions; - [x] The pivoted Cholesky algorithm presented by Matthews requires the upper triangular form. I modified the algorithm in matrix.cc to the upper triangular form because `Matrix::pivoted_cholesky` is not called elsewhere. Is this okay?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3187
https://github.com/psi4/psi4/pull/3187:199,Integrability,depend,dependencies,199,"## Description; This PR implements the grid pruning scheme of Matthews (https://pubs.acs.org/doi/10.1021/acs.jctc.9b01205), applying a pivoted Cholesky decomposition to the S matrix to remove linear dependencies and drastically reduce the number of grid points. Per @PhillCli's comments on #3157, taking the pseudoinverse of the S matrix can be costly, and this PR fixes that problem! The final rank appears to be _mostly_ invariant to grid size, but only to the molecule/basis set (results in tables below). | System | Radial, Spherical Points | Initial Rank | Final Rank |; | ------------- | ------------- | ------------- | ------------- |; | Water/cc-pVDZ | (25, 50) | 2605 | 280 |; | Water/cc-pVDZ | (50, 86) | 8739 | 280 |; | Water/cc-pVTZ | (25, 50) | 2630 | 1184 |; | Water/cc-pVTZ | (50, 86) | 8774 | 1328 |; | Benzene/cc-pVDZ | (25, 50) | 9831 | 3124 |; | Benzene/cc-pVDZ | (50, 86) | 32588 | 3414 |. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Drastically reduction of the rank of the intermediates in a THC factorization. ## Questions; - [x] The pivoted Cholesky algorithm presented by Matthews requires the upper triangular form. I modified the algorithm in matrix.cc to the upper triangular form because `Matrix::pivoted_cholesky` is not called elsewhere. Is this okay?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3187
https://github.com/psi4/psi4/pull/3187:1500,Testability,Test,Tests,1500,"## Description; This PR implements the grid pruning scheme of Matthews (https://pubs.acs.org/doi/10.1021/acs.jctc.9b01205), applying a pivoted Cholesky decomposition to the S matrix to remove linear dependencies and drastically reduce the number of grid points. Per @PhillCli's comments on #3157, taking the pseudoinverse of the S matrix can be costly, and this PR fixes that problem! The final rank appears to be _mostly_ invariant to grid size, but only to the molecule/basis set (results in tables below). | System | Radial, Spherical Points | Initial Rank | Final Rank |; | ------------- | ------------- | ------------- | ------------- |; | Water/cc-pVDZ | (25, 50) | 2605 | 280 |; | Water/cc-pVDZ | (50, 86) | 8739 | 280 |; | Water/cc-pVTZ | (25, 50) | 2630 | 1184 |; | Water/cc-pVTZ | (50, 86) | 8774 | 1328 |; | Benzene/cc-pVDZ | (25, 50) | 9831 | 3124 |; | Benzene/cc-pVDZ | (50, 86) | 32588 | 3414 |. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Drastically reduction of the rank of the intermediates in a THC factorization. ## Questions; - [x] The pivoted Cholesky algorithm presented by Matthews requires the upper triangular form. I modified the algorithm in matrix.cc to the upper triangular form because `Matrix::pivoted_cholesky` is not called elsewhere. Is this okay?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3187
https://github.com/psi4/psi4/pull/3187:1574,Testability,test,tests,1574,"## Description; This PR implements the grid pruning scheme of Matthews (https://pubs.acs.org/doi/10.1021/acs.jctc.9b01205), applying a pivoted Cholesky decomposition to the S matrix to remove linear dependencies and drastically reduce the number of grid points. Per @PhillCli's comments on #3157, taking the pseudoinverse of the S matrix can be costly, and this PR fixes that problem! The final rank appears to be _mostly_ invariant to grid size, but only to the molecule/basis set (results in tables below). | System | Radial, Spherical Points | Initial Rank | Final Rank |; | ------------- | ------------- | ------------- | ------------- |; | Water/cc-pVDZ | (25, 50) | 2605 | 280 |; | Water/cc-pVDZ | (50, 86) | 8739 | 280 |; | Water/cc-pVTZ | (25, 50) | 2630 | 1184 |; | Water/cc-pVTZ | (50, 86) | 8774 | 1328 |; | Benzene/cc-pVDZ | (25, 50) | 9831 | 3124 |; | Benzene/cc-pVDZ | (50, 86) | 32588 | 3414 |. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Drastically reduction of the rank of the intermediates in a THC factorization. ## Questions; - [x] The pivoted Cholesky algorithm presented by Matthews requires the upper triangular form. I modified the algorithm in matrix.cc to the upper triangular form because `Matrix::pivoted_cholesky` is not called elsewhere. Is this okay?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3187
https://github.com/psi4/psi4/pull/3187:1665,Testability,test,tests,1665,"## Description; This PR implements the grid pruning scheme of Matthews (https://pubs.acs.org/doi/10.1021/acs.jctc.9b01205), applying a pivoted Cholesky decomposition to the S matrix to remove linear dependencies and drastically reduce the number of grid points. Per @PhillCli's comments on #3157, taking the pseudoinverse of the S matrix can be costly, and this PR fixes that problem! The final rank appears to be _mostly_ invariant to grid size, but only to the molecule/basis set (results in tables below). | System | Radial, Spherical Points | Initial Rank | Final Rank |; | ------------- | ------------- | ------------- | ------------- |; | Water/cc-pVDZ | (25, 50) | 2605 | 280 |; | Water/cc-pVDZ | (50, 86) | 8739 | 280 |; | Water/cc-pVTZ | (25, 50) | 2630 | 1184 |; | Water/cc-pVTZ | (50, 86) | 8774 | 1328 |; | Benzene/cc-pVDZ | (25, 50) | 9831 | 3124 |; | Benzene/cc-pVDZ | (50, 86) | 32588 | 3414 |. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Drastically reduction of the rank of the intermediates in a THC factorization. ## Questions; - [x] The pivoted Cholesky algorithm presented by Matthews requires the upper triangular form. I modified the algorithm in matrix.cc to the upper triangular form because `Matrix::pivoted_cholesky` is not called elsewhere. Is this okay?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3187
https://github.com/psi4/psi4/issues/3188:12,Availability,down,downloaded,12,"Hello, I've downloaded conda and Psi4 into my Ubuntu, along with Jupyter Notebook, but when I go to run the following code into my jupyter-notebook:. ```; import psi4; psi4.__version__. I receive this error:. ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_2200/2591947057.py in <module>; ----> 1 import psi4; 2 psi4.__version__. ModuleNotFoundError: No module named 'psi4'; ```; I have conda installed psi4 and conda -V works properly. When I do Psi4 test I recieve: ""64 passed, 39 skipped, 7746 deselected, 2 xfailed"". The two that have failed are: . psi4conda/lib/python3.10/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp XFAIL (EFP not transm...) [ 32%]; psi4conda/lib/python3.10/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput ...) [ 58%]. Any recommendations on what I can do to resolve these issue(s) or what I can check would be very helpful, thank you!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188
https://github.com/psi4/psi4/issues/3188:201,Availability,error,error,201,"Hello, I've downloaded conda and Psi4 into my Ubuntu, along with Jupyter Notebook, but when I go to run the following code into my jupyter-notebook:. ```; import psi4; psi4.__version__. I receive this error:. ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_2200/2591947057.py in <module>; ----> 1 import psi4; 2 psi4.__version__. ModuleNotFoundError: No module named 'psi4'; ```; I have conda installed psi4 and conda -V works properly. When I do Psi4 test I recieve: ""64 passed, 39 skipped, 7746 deselected, 2 xfailed"". The two that have failed are: . psi4conda/lib/python3.10/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp XFAIL (EFP not transm...) [ 32%]; psi4conda/lib/python3.10/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput ...) [ 58%]. Any recommendations on what I can do to resolve these issue(s) or what I can check would be very helpful, thank you!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188
https://github.com/psi4/psi4/issues/3188:415,Deployability,install,installed,415,"Hello, I've downloaded conda and Psi4 into my Ubuntu, along with Jupyter Notebook, but when I go to run the following code into my jupyter-notebook:. ```; import psi4; psi4.__version__. I receive this error:. ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_2200/2591947057.py in <module>; ----> 1 import psi4; 2 psi4.__version__. ModuleNotFoundError: No module named 'psi4'; ```; I have conda installed psi4 and conda -V works properly. When I do Psi4 test I recieve: ""64 passed, 39 skipped, 7746 deselected, 2 xfailed"". The two that have failed are: . psi4conda/lib/python3.10/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp XFAIL (EFP not transm...) [ 32%]; psi4conda/lib/python3.10/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput ...) [ 58%]. Any recommendations on what I can do to resolve these issue(s) or what I can check would be very helpful, thank you!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188
https://github.com/psi4/psi4/issues/3188:474,Testability,test,test,474,"Hello, I've downloaded conda and Psi4 into my Ubuntu, along with Jupyter Notebook, but when I go to run the following code into my jupyter-notebook:. ```; import psi4; psi4.__version__. I receive this error:. ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_2200/2591947057.py in <module>; ----> 1 import psi4; 2 psi4.__version__. ModuleNotFoundError: No module named 'psi4'; ```; I have conda installed psi4 and conda -V works properly. When I do Psi4 test I recieve: ""64 passed, 39 skipped, 7746 deselected, 2 xfailed"". The two that have failed are: . psi4conda/lib/python3.10/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp XFAIL (EFP not transm...) [ 32%]; psi4conda/lib/python3.10/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput ...) [ 58%]. Any recommendations on what I can do to resolve these issue(s) or what I can check would be very helpful, thank you!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188
https://github.com/psi4/psi4/issues/3188:619,Testability,test,tests,619,"Hello, I've downloaded conda and Psi4 into my Ubuntu, along with Jupyter Notebook, but when I go to run the following code into my jupyter-notebook:. ```; import psi4; psi4.__version__. I receive this error:. ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_2200/2591947057.py in <module>; ----> 1 import psi4; 2 psi4.__version__. ModuleNotFoundError: No module named 'psi4'; ```; I have conda installed psi4 and conda -V works properly. When I do Psi4 test I recieve: ""64 passed, 39 skipped, 7746 deselected, 2 xfailed"". The two that have failed are: . psi4conda/lib/python3.10/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp XFAIL (EFP not transm...) [ 32%]; psi4conda/lib/python3.10/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput ...) [ 58%]. Any recommendations on what I can do to resolve these issue(s) or what I can check would be very helpful, thank you!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188
https://github.com/psi4/psi4/issues/3188:740,Testability,test,tests,740,"Hello, I've downloaded conda and Psi4 into my Ubuntu, along with Jupyter Notebook, but when I go to run the following code into my jupyter-notebook:. ```; import psi4; psi4.__version__. I receive this error:. ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_2200/2591947057.py in <module>; ----> 1 import psi4; 2 psi4.__version__. ModuleNotFoundError: No module named 'psi4'; ```; I have conda installed psi4 and conda -V works properly. When I do Psi4 test I recieve: ""64 passed, 39 skipped, 7746 deselected, 2 xfailed"". The two that have failed are: . psi4conda/lib/python3.10/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp XFAIL (EFP not transm...) [ 32%]; psi4conda/lib/python3.10/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput ...) [ 58%]. Any recommendations on what I can do to resolve these issue(s) or what I can check would be very helpful, thank you!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188
https://github.com/psi4/psi4/issues/3189:203,Energy Efficiency,energy,energy,203,"Here's a minimal reproducible example (`mp_test.py`):. ```python; import multiprocessing as mp; import psi4. def run_psi4():; print(""start""); psi4.geometry(""""""; O; H 1 0.96; H 1 0.96 2 104.5; """"""). psi4.energy(""scf/sto-3g""); print(""done""); return. if __name__ == ""__main__"":; proc = mp.Process(target=run_psi4); # proc.run(); proc.start(); proc.join(); ```. This script doesn't run successfully on an Ubuntu machine, where `multiprocessing` uses `fork` to start new processes - it just dies silently partway through starting out. . Here's the output: ; ```; $ python mp_test.py; start. Scratch directory: /tmp/; => Libint2 <=. Primary basis highest AM E, G, H: 6, 6, 3; Auxiliary basis highest AM E, G, H: 7, 7, 4; Onebody basis highest AM E, G, H: -, -, -; Solid Harmonics ordering: Gaussian. *** tstart() called on 4f210325e2d9; *** at Tue Jul 2 19:27:19 2024. => Loading Basis Set <=. Name: STO-3G; Role: ORBITAL; Keyword: BASIS; atoms 1 entry O line 81 file /opt/conda/share/psi4/basis/sto-3g.gbs; atoms 2-3 entry H line 19 file /opt/conda/share/psi4/basis/sto-3g.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c2v; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -0.065775570547 15.994914619570; H 0.000000000000 -0.759061990794 0.521953018286 1.007825032230; H 0.000000000000 0.759061990794 0.521953018286 1.007825032230. Running in c2v symmetry. Rotational constants: A = 27.26297 B = 14.51533 C = 9.47217 [cm^-1]; Rotational constants: A = 817323.21126 B = 435158.60141 C = 283968.37536 [MHz]; Nuclear repulsion = 9.168193296424349. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nb",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3189
https://github.com/psi4/psi4/issues/3189:1400,Energy Efficiency,charge,charge,1400,"buntu machine, where `multiprocessing` uses `fork` to start new processes - it just dies silently partway through starting out. . Here's the output: ; ```; $ python mp_test.py; start. Scratch directory: /tmp/; => Libint2 <=. Primary basis highest AM E, G, H: 6, 6, 3; Auxiliary basis highest AM E, G, H: 7, 7, 4; Onebody basis highest AM E, G, H: -, -, -; Solid Harmonics ordering: Gaussian. *** tstart() called on 4f210325e2d9; *** at Tue Jul 2 19:27:19 2024. => Loading Basis Set <=. Name: STO-3G; Role: ORBITAL; Keyword: BASIS; atoms 1 entry O line 81 file /opt/conda/share/psi4/basis/sto-3g.gbs; atoms 2-3 entry H line 19 file /opt/conda/share/psi4/basis/sto-3g.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c2v; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -0.065775570547 15.994914619570; H 0.000000000000 -0.759061990794 0.521953018286 1.007825032230; H 0.000000000000 0.759061990794 0.521953018286 1.007825032230. Running in c2v symmetry. Rotational constants: A = 27.26297 B = 14.51533 C = 9.47217 [cm^-1]; Rotational constants: A = 817323.21126 B = 435158.60141 C = 283968.37536 [MHz]; Nuclear repulsion = 9.168193296424349. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12. ==> Primary Basis <==. Basis Set: STO-3G; Blend: STO-3G; Number of shells: 5; Number of basis functions: 7; Number of Cartesian functions: 7; Spherical Harmonics?: true; Max ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3189
https://github.com/psi4/psi4/issues/3189:1941,Energy Efficiency,Charge,Charge,1941,"hare/psi4/basis/sto-3g.gbs; atoms 2-3 entry H line 19 file /opt/conda/share/psi4/basis/sto-3g.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c2v; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -0.065775570547 15.994914619570; H 0.000000000000 -0.759061990794 0.521953018286 1.007825032230; H 0.000000000000 0.759061990794 0.521953018286 1.007825032230. Running in c2v symmetry. Rotational constants: A = 27.26297 B = 14.51533 C = 9.47217 [cm^-1]; Rotational constants: A = 817323.21126 B = 435158.60141 C = 283968.37536 [MHz]; Nuclear repulsion = 9.168193296424349. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12. ==> Primary Basis <==. Basis Set: STO-3G; Blend: STO-3G; Number of shells: 5; Number of basis functions: 7; Number of Cartesian functions: 7; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (STO-3G AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1 entry O line 318 file /opt/conda/share/psi4/basis/def2-universal-jkfit.gbs; atoms 2-3 entry H line 18 file /opt/conda/share/psi4/basis/def2-universal-jkfit.gbs; ```. If I add `mp.set_start_method('spawn', force=True)`, I can get this to work - or I can run this script on macOS, for which `mp` uses `spawn` by default. This code also runs if I uncomment `proc.run()`, which runs the function in the same process instead of creating a new process. . Any advice he",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3189
https://github.com/psi4/psi4/issues/3189:2139,Energy Efficiency,Energy,Energy,2139,"/psi4/basis/sto-3g.gbs; atoms 2-3 entry H line 19 file /opt/conda/share/psi4/basis/sto-3g.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c2v; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -0.065775570547 15.994914619570; H 0.000000000000 -0.759061990794 0.521953018286 1.007825032230; H 0.000000000000 0.759061990794 0.521953018286 1.007825032230. Running in c2v symmetry. Rotational constants: A = 27.26297 B = 14.51533 C = 9.47217 [cm^-1]; Rotational constants: A = 817323.21126 B = 435158.60141 C = 283968.37536 [MHz]; Nuclear repulsion = 9.168193296424349. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12. ==> Primary Basis <==. Basis Set: STO-3G; Blend: STO-3G; Number of shells: 5; Number of basis functions: 7; Number of Cartesian functions: 7; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (STO-3G AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1 entry O line 318 file /opt/conda/share/psi4/basis/def2-universal-jkfit.gbs; atoms 2-3 entry H line 18 file /opt/conda/share/psi4/basis/def2-universal-jkfit.gbs; ```. If I add `mp.set_start_method('spawn', force=True)`, I can get this to work - or I can run this script on macOS, for which `mp` uses `spawn` by default. This code also runs if I uncomment `proc.run()`, which runs the function in the same process instead of creating a new process. . Any advice here?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3189
https://github.com/psi4/psi4/issues/3189:866,Performance,Load,Loading,866,"Here's a minimal reproducible example (`mp_test.py`):. ```python; import multiprocessing as mp; import psi4. def run_psi4():; print(""start""); psi4.geometry(""""""; O; H 1 0.96; H 1 0.96 2 104.5; """"""). psi4.energy(""scf/sto-3g""); print(""done""); return. if __name__ == ""__main__"":; proc = mp.Process(target=run_psi4); # proc.run(); proc.start(); proc.join(); ```. This script doesn't run successfully on an Ubuntu machine, where `multiprocessing` uses `fork` to start new processes - it just dies silently partway through starting out. . Here's the output: ; ```; $ python mp_test.py; start. Scratch directory: /tmp/; => Libint2 <=. Primary basis highest AM E, G, H: 6, 6, 3; Auxiliary basis highest AM E, G, H: 7, 7, 4; Onebody basis highest AM E, G, H: -, -, -; Solid Harmonics ordering: Gaussian. *** tstart() called on 4f210325e2d9; *** at Tue Jul 2 19:27:19 2024. => Loading Basis Set <=. Name: STO-3G; Role: ORBITAL; Keyword: BASIS; atoms 1 entry O line 81 file /opt/conda/share/psi4/basis/sto-3g.gbs; atoms 2-3 entry H line 19 file /opt/conda/share/psi4/basis/sto-3g.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c2v; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -0.065775570547 15.994914619570; H 0.000000000000 -0.759061990794 0.521953018286 1.007825032230; H 0.000000000000 0.759061990794 0.521953018286 1.007825032230. Running in c2v symmetry. Rotational constants: A = 27.26297 B = 14.51533 C = 9.47217 [cm^-1]; Rotational constants: A = 817323.21126 B = 435158.60141 C = 283968.37536 [MHz]; Nuclear repulsion = 9.168193296424349. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nb",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3189
https://github.com/psi4/psi4/issues/3189:2427,Performance,Load,Loading,2427,"/psi4/basis/sto-3g.gbs; atoms 2-3 entry H line 19 file /opt/conda/share/psi4/basis/sto-3g.gbs. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c2v; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -0.065775570547 15.994914619570; H 0.000000000000 -0.759061990794 0.521953018286 1.007825032230; H 0.000000000000 0.759061990794 0.521953018286 1.007825032230. Running in c2v symmetry. Rotational constants: A = 27.26297 B = 14.51533 C = 9.47217 [cm^-1]; Rotational constants: A = 817323.21126 B = 435158.60141 C = 283968.37536 [MHz]; Nuclear repulsion = 9.168193296424349. Charge = 0; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12. ==> Primary Basis <==. Basis Set: STO-3G; Blend: STO-3G; Number of shells: 5; Number of basis functions: 7; Number of Cartesian functions: 7; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (STO-3G AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1 entry O line 318 file /opt/conda/share/psi4/basis/def2-universal-jkfit.gbs; atoms 2-3 entry H line 18 file /opt/conda/share/psi4/basis/def2-universal-jkfit.gbs; ```. If I add `mp.set_start_method('spawn', force=True)`, I can get this to work - or I can run this script on macOS, for which `mp` uses `spawn` by default. This code also runs if I uncomment `proc.run()`, which runs the function in the same process instead of creating a new process. . Any advice here?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3189
https://github.com/psi4/psi4/pull/3190:213,Deployability,release,release,213,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3190
https://github.com/psi4/psi4/pull/3190:588,Testability,Test,Tests,588,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3190
https://github.com/psi4/psi4/pull/3190:662,Testability,test,tests,662,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3190
https://github.com/psi4/psi4/pull/3190:753,Testability,test,tests,753,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3190
https://github.com/psi4/psi4/pull/3191:213,Deployability,release,release,213,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3191
https://github.com/psi4/psi4/pull/3191:588,Testability,Test,Tests,588,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3191
https://github.com/psi4/psi4/pull/3191:662,Testability,test,tests,662,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3191
https://github.com/psi4/psi4/pull/3191:753,Testability,test,tests,753,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3191
https://github.com/psi4/psi4/pull/3192:219,Modifiability,inherit,inheritance,219,"## Description; In preparation of the DLPNO-CCSD(T) code, I have changed the class heirarchy of the DLPNO module. Currently, there is only a `DLPNOMP2` class. However, I have split that class into a `DLPNO -> DLPNOMP2` inheritance heirarchy, to allow for ; `DLPNO -> DLPNOCCSD -> DLPNOCCSD_T` in the future, and potentially `DLPNO -> DLPNOMP2 -> DLPNOMP2_F12`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes class heirarchy of DLPNO module; - [x] Changes the way the DOI grids are handled in DLPNO-MP2, adds separate user options for the DOI grid specifically. ## Questions; - [ ] . ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3192
https://github.com/psi4/psi4/pull/3192:804,Testability,Test,Tests,804,"## Description; In preparation of the DLPNO-CCSD(T) code, I have changed the class heirarchy of the DLPNO module. Currently, there is only a `DLPNOMP2` class. However, I have split that class into a `DLPNO -> DLPNOMP2` inheritance heirarchy, to allow for ; `DLPNO -> DLPNOCCSD -> DLPNOCCSD_T` in the future, and potentially `DLPNO -> DLPNOMP2 -> DLPNOMP2_F12`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes class heirarchy of DLPNO module; - [x] Changes the way the DOI grids are handled in DLPNO-MP2, adds separate user options for the DOI grid specifically. ## Questions; - [ ] . ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3192
https://github.com/psi4/psi4/pull/3192:878,Testability,test,tests,878,"## Description; In preparation of the DLPNO-CCSD(T) code, I have changed the class heirarchy of the DLPNO module. Currently, there is only a `DLPNOMP2` class. However, I have split that class into a `DLPNO -> DLPNOMP2` inheritance heirarchy, to allow for ; `DLPNO -> DLPNOCCSD -> DLPNOCCSD_T` in the future, and potentially `DLPNO -> DLPNOMP2 -> DLPNOMP2_F12`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes class heirarchy of DLPNO module; - [x] Changes the way the DOI grids are handled in DLPNO-MP2, adds separate user options for the DOI grid specifically. ## Questions; - [ ] . ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3192
https://github.com/psi4/psi4/pull/3192:969,Testability,test,tests,969,"## Description; In preparation of the DLPNO-CCSD(T) code, I have changed the class heirarchy of the DLPNO module. Currently, there is only a `DLPNOMP2` class. However, I have split that class into a `DLPNO -> DLPNOMP2` inheritance heirarchy, to allow for ; `DLPNO -> DLPNOCCSD -> DLPNOCCSD_T` in the future, and potentially `DLPNO -> DLPNOMP2 -> DLPNOMP2_F12`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes class heirarchy of DLPNO module; - [x] Changes the way the DOI grids are handled in DLPNO-MP2, adds separate user options for the DOI grid specifically. ## Questions; - [ ] . ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3192
https://github.com/psi4/psi4/pull/3193:213,Deployability,release,release,213,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3193
https://github.com/psi4/psi4/pull/3193:588,Testability,Test,Tests,588,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3193
https://github.com/psi4/psi4/pull/3193:662,Testability,test,tests,662,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3193
https://github.com/psi4/psi4/pull/3193:753,Testability,test,tests,753,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3193
https://github.com/psi4/psi4/pull/3194:1230,Availability,error,error,1230,"r devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->. - [x] fix Eco (W) GHA by recognizing that updating the setup-miniconda version changed the environment path, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.ma",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:886,Deployability,update,updates,886,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->. - [x] fix Eco (W) GHA by recognizing that updating the setup-miniconda version changed the environment path, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEP",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:1321,Energy Efficiency,energy,energy,1321,"fix Eco (W) GHA by recognizing that updating the setup-miniconda version changed the environment path, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x00000001181",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:632,Integrability,depend,dependencies,632,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->. - [x] fix Eco (W) GHA by recognizing that updating the setup-miniconda version changed the environment path, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEP",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:1494,Performance,queue,queue,1494,"h, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:2202,Performance,queue,queue,2202,"out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; frame #1: 0x00000001196d0a7c core.cpython-312-darwin.so`psi::BasisSet::update_l2_shells(this=0x00000001013e5128, embed_normalization=true) at basisset.cc:876:80; ```; - [x] For now GHA has both Intel and Silicon runners, so might as well test both. The Eco runners are also running ctest quick for now to get some regular testing in since those aren't covered by Azure. ; - [x] add adcc and forte tests to smoke. forte not tested in ecosystem yet.; - [x] fix docs GHA by forgiving FixedSize; - [x] fix docs again by restraining sphinx<8 b/c of an interaction with documenting pydantic v1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://ps",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:1188,Security,access,access,1188,"f what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->. - [x] fix Eco (W) GHA by recognizing that updating the setup-miniconda version changed the environment path, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 139",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:1307,Testability,test,tests,1307,"fix Eco (W) GHA by recognizing that updating the setup-miniconda version changed the environment path, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x00000001181",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:2731,Testability,test,test,2731,"ut.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; frame #1: 0x00000001196d0a7c core.cpython-312-darwin.so`psi::BasisSet::update_l2_shells(this=0x00000001013e5128, embed_normalization=true) at basisset.cc:876:80; ```; - [x] For now GHA has both Intel and Silicon runners, so might as well test both. The Eco runners are also running ctest quick for now to get some regular testing in since those aren't covered by Azure. ; - [x] add adcc and forte tests to smoke. forte not tested in ecosystem yet.; - [x] fix docs GHA by forgiving FixedSize; - [x] fix docs again by restraining sphinx<8 b/c of an interaction with documenting pydantic v1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:2815,Testability,test,testing,2815,"ut.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; frame #1: 0x00000001196d0a7c core.cpython-312-darwin.so`psi::BasisSet::update_l2_shells(this=0x00000001013e5128, embed_normalization=true) at basisset.cc:876:80; ```; - [x] For now GHA has both Intel and Silicon runners, so might as well test both. The Eco runners are also running ctest quick for now to get some regular testing in since those aren't covered by Azure. ; - [x] add adcc and forte tests to smoke. forte not tested in ecosystem yet.; - [x] fix docs GHA by forgiving FixedSize; - [x] fix docs again by restraining sphinx<8 b/c of an interaction with documenting pydantic v1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:2890,Testability,test,tests,2890,"ut.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; frame #1: 0x00000001196d0a7c core.cpython-312-darwin.so`psi::BasisSet::update_l2_shells(this=0x00000001013e5128, embed_normalization=true) at basisset.cc:876:80; ```; - [x] For now GHA has both Intel and Silicon runners, so might as well test both. The Eco runners are also running ctest quick for now to get some regular testing in since those aren't covered by Azure. ; - [x] add adcc and forte tests to smoke. forte not tested in ecosystem yet.; - [x] fix docs GHA by forgiving FixedSize; - [x] fix docs again by restraining sphinx<8 b/c of an interaction with documenting pydantic v1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:2916,Testability,test,tested,2916,"ut.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; frame #1: 0x00000001196d0a7c core.cpython-312-darwin.so`psi::BasisSet::update_l2_shells(this=0x00000001013e5128, embed_normalization=true) at basisset.cc:876:80; ```; - [x] For now GHA has both Intel and Silicon runners, so might as well test both. The Eco runners are also running ctest quick for now to get some regular testing in since those aren't covered by Azure. ; - [x] add adcc and forte tests to smoke. forte not tested in ecosystem yet.; - [x] fix docs GHA by forgiving FixedSize; - [x] fix docs again by restraining sphinx<8 b/c of an interaction with documenting pydantic v1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:3102,Testability,Test,Tests,3102,"ut.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; frame #1: 0x00000001196d0a7c core.cpython-312-darwin.so`psi::BasisSet::update_l2_shells(this=0x00000001013e5128, embed_normalization=true) at basisset.cc:876:80; ```; - [x] For now GHA has both Intel and Silicon runners, so might as well test both. The Eco runners are also running ctest quick for now to get some regular testing in since those aren't covered by Azure. ; - [x] add adcc and forte tests to smoke. forte not tested in ecosystem yet.; - [x] fix docs GHA by forgiving FixedSize; - [x] fix docs again by restraining sphinx<8 b/c of an interaction with documenting pydantic v1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:3176,Testability,test,tests,3176,"ut.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; frame #1: 0x00000001196d0a7c core.cpython-312-darwin.so`psi::BasisSet::update_l2_shells(this=0x00000001013e5128, embed_normalization=true) at basisset.cc:876:80; ```; - [x] For now GHA has both Intel and Silicon runners, so might as well test both. The Eco runners are also running ctest quick for now to get some regular testing in since those aren't covered by Azure. ; - [x] add adcc and forte tests to smoke. forte not tested in ecosystem yet.; - [x] fix docs GHA by forgiving FixedSize; - [x] fix docs again by restraining sphinx<8 b/c of an interaction with documenting pydantic v1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3194:3267,Testability,test,tests,3267,"ut.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); * frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; frame #1: 0x00000001196d0a7c core.cpython-312-darwin.so`psi::BasisSet::update_l2_shells(this=0x00000001013e5128, embed_normalization=true) at basisset.cc:876:80; ```; - [x] For now GHA has both Intel and Silicon runners, so might as well test both. The Eco runners are also running ctest quick for now to get some regular testing in since those aren't covered by Azure. ; - [x] add adcc and forte tests to smoke. forte not tested in ecosystem yet.; - [x] fix docs GHA by forgiving FixedSize; - [x] fix docs again by restraining sphinx<8 b/c of an interaction with documenting pydantic v1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3194
https://github.com/psi4/psi4/pull/3196:213,Deployability,release,release,213,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3196
https://github.com/psi4/psi4/pull/3196:588,Testability,Test,Tests,588,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3196
https://github.com/psi4/psi4/pull/3196:662,Testability,test,tests,662,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3196
https://github.com/psi4/psi4/pull/3196:753,Testability,test,tests,753,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3196
https://github.com/psi4/psi4/issues/3198:240,Availability,error,error,240,"https://anaconda.org/conda-forge/psi4/files. There are `osx-64`, `win-64`, `linux-64`, and `osx-arm64` files here - but not a `linux-arm64`. When you try to build Psi4 on `linux-arm64` (for my use case, in a Docker container), you get this error: . ```; > [ 4/15] RUN micromamba install -y -n base -f /tmp/env.yml && micromamba clean --all --yes:; 8.185 error libmamba Could not solve for environment specs; 8.185 The following package could not be installed; 8.185 └─ psi4 >=1.9,<1.10 does not exist (perhaps a typo or a missing channel).; 8.189 critical libmamba Could not solve for environment specs; ```. It seems a lot of the ARM64 considerations were already figured out in #2333 and surrounding work; would it be possible to add ARM support for Linux?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3198
https://github.com/psi4/psi4/issues/3198:354,Availability,error,error,354,"https://anaconda.org/conda-forge/psi4/files. There are `osx-64`, `win-64`, `linux-64`, and `osx-arm64` files here - but not a `linux-arm64`. When you try to build Psi4 on `linux-arm64` (for my use case, in a Docker container), you get this error: . ```; > [ 4/15] RUN micromamba install -y -n base -f /tmp/env.yml && micromamba clean --all --yes:; 8.185 error libmamba Could not solve for environment specs; 8.185 The following package could not be installed; 8.185 └─ psi4 >=1.9,<1.10 does not exist (perhaps a typo or a missing channel).; 8.189 critical libmamba Could not solve for environment specs; ```. It seems a lot of the ARM64 considerations were already figured out in #2333 and surrounding work; would it be possible to add ARM support for Linux?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3198
https://github.com/psi4/psi4/issues/3198:279,Deployability,install,install,279,"https://anaconda.org/conda-forge/psi4/files. There are `osx-64`, `win-64`, `linux-64`, and `osx-arm64` files here - but not a `linux-arm64`. When you try to build Psi4 on `linux-arm64` (for my use case, in a Docker container), you get this error: . ```; > [ 4/15] RUN micromamba install -y -n base -f /tmp/env.yml && micromamba clean --all --yes:; 8.185 error libmamba Could not solve for environment specs; 8.185 The following package could not be installed; 8.185 └─ psi4 >=1.9,<1.10 does not exist (perhaps a typo or a missing channel).; 8.189 critical libmamba Could not solve for environment specs; ```. It seems a lot of the ARM64 considerations were already figured out in #2333 and surrounding work; would it be possible to add ARM support for Linux?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3198
https://github.com/psi4/psi4/issues/3198:449,Deployability,install,installed,449,"https://anaconda.org/conda-forge/psi4/files. There are `osx-64`, `win-64`, `linux-64`, and `osx-arm64` files here - but not a `linux-arm64`. When you try to build Psi4 on `linux-arm64` (for my use case, in a Docker container), you get this error: . ```; > [ 4/15] RUN micromamba install -y -n base -f /tmp/env.yml && micromamba clean --all --yes:; 8.185 error libmamba Could not solve for environment specs; 8.185 The following package could not be installed; 8.185 └─ psi4 >=1.9,<1.10 does not exist (perhaps a typo or a missing channel).; 8.189 critical libmamba Could not solve for environment specs; ```. It seems a lot of the ARM64 considerations were already figured out in #2333 and surrounding work; would it be possible to add ARM support for Linux?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3198
https://github.com/psi4/psi4/issues/3199:152,Availability,down,down,152,"No problem with `conda install psi4`, but the standalone psi4 installers (psi4conda button and curl from vergil in attached screenshot) are temporarily down due to facilities issues. <img width=""751"" alt=""Screenshot 2024-07-26 at 12 17 42 PM"" src=""https://github.com/user-attachments/assets/5a0c462c-895e-4d8e-a7f5-e233ec737aac"">",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3199
https://github.com/psi4/psi4/issues/3199:23,Deployability,install,install,23,"No problem with `conda install psi4`, but the standalone psi4 installers (psi4conda button and curl from vergil in attached screenshot) are temporarily down due to facilities issues. <img width=""751"" alt=""Screenshot 2024-07-26 at 12 17 42 PM"" src=""https://github.com/user-attachments/assets/5a0c462c-895e-4d8e-a7f5-e233ec737aac"">",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3199
https://github.com/psi4/psi4/issues/3199:62,Deployability,install,installers,62,"No problem with `conda install psi4`, but the standalone psi4 installers (psi4conda button and curl from vergil in attached screenshot) are temporarily down due to facilities issues. <img width=""751"" alt=""Screenshot 2024-07-26 at 12 17 42 PM"" src=""https://github.com/user-attachments/assets/5a0c462c-895e-4d8e-a7f5-e233ec737aac"">",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3199
https://github.com/psi4/psi4/issues/3200:373,Availability,fault,fault,373,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:483,Availability,error,error,483,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:4510,Availability,error,errors,4510,":56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== If you believe this happened as a result of a stack; ==98805== overflow in your program's main thread (unlikely but; ==98805== possible), you can try to increase the size of the; ==98805== main thread stack using the --main-stacksize= flag.; ==98805== The main thread stack size used in this run was 8388608.; ==98805== ; ==98805== HEAP SUMMARY:; ==98805== in use at exit: 20,461,418 bytes in 40,150 blocks; ==98805== total heap usage: 393,696 allocs, 353,546 frees, 108,089,532 bytes allocated; ==98805== ; ==98805== LEAK SUMMARY:; ==98805== definitely lost: 0 bytes in 0 blocks; ==98805== indirectly lost: 0 bytes in 0 blocks; ==98805== possibly lost: 480,565 bytes in 454 blocks; ==98805== still reachable: 19,980,817 bytes in 39,694 blocks; ==98805== suppressed: 36 bytes in 2 blocks; ==98805== Rerun with --leak-check=full to see details of leaked memory; ==98805== ; ==98805== For lists of detected and suppressed errors, rerun with: -s; ==98805== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0); Segmentation fault (core dumped); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:4544,Availability,ERROR,ERROR,4544,":56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== If you believe this happened as a result of a stack; ==98805== overflow in your program's main thread (unlikely but; ==98805== possible), you can try to increase the size of the; ==98805== main thread stack using the --main-stacksize= flag.; ==98805== The main thread stack size used in this run was 8388608.; ==98805== ; ==98805== HEAP SUMMARY:; ==98805== in use at exit: 20,461,418 bytes in 40,150 blocks; ==98805== total heap usage: 393,696 allocs, 353,546 frees, 108,089,532 bytes allocated; ==98805== ; ==98805== LEAK SUMMARY:; ==98805== definitely lost: 0 bytes in 0 blocks; ==98805== indirectly lost: 0 bytes in 0 blocks; ==98805== possibly lost: 480,565 bytes in 454 blocks; ==98805== still reachable: 19,980,817 bytes in 39,694 blocks; ==98805== suppressed: 36 bytes in 2 blocks; ==98805== Rerun with --leak-check=full to see details of leaked memory; ==98805== ; ==98805== For lists of detected and suppressed errors, rerun with: -s; ==98805== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0); Segmentation fault (core dumped); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:4561,Availability,error,errors,4561,":56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== If you believe this happened as a result of a stack; ==98805== overflow in your program's main thread (unlikely but; ==98805== possible), you can try to increase the size of the; ==98805== main thread stack using the --main-stacksize= flag.; ==98805== The main thread stack size used in this run was 8388608.; ==98805== ; ==98805== HEAP SUMMARY:; ==98805== in use at exit: 20,461,418 bytes in 40,150 blocks; ==98805== total heap usage: 393,696 allocs, 353,546 frees, 108,089,532 bytes allocated; ==98805== ; ==98805== LEAK SUMMARY:; ==98805== definitely lost: 0 bytes in 0 blocks; ==98805== indirectly lost: 0 bytes in 0 blocks; ==98805== possibly lost: 480,565 bytes in 454 blocks; ==98805== still reachable: 19,980,817 bytes in 39,694 blocks; ==98805== suppressed: 36 bytes in 2 blocks; ==98805== Rerun with --leak-check=full to see details of leaked memory; ==98805== ; ==98805== For lists of detected and suppressed errors, rerun with: -s; ==98805== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0); Segmentation fault (core dumped); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:4621,Availability,fault,fault,4621,":56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== If you believe this happened as a result of a stack; ==98805== overflow in your program's main thread (unlikely but; ==98805== possible), you can try to increase the size of the; ==98805== main thread stack using the --main-stacksize= flag.; ==98805== The main thread stack size used in this run was 8388608.; ==98805== ; ==98805== HEAP SUMMARY:; ==98805== in use at exit: 20,461,418 bytes in 40,150 blocks; ==98805== total heap usage: 393,696 allocs, 353,546 frees, 108,089,532 bytes allocated; ==98805== ; ==98805== LEAK SUMMARY:; ==98805== definitely lost: 0 bytes in 0 blocks; ==98805== indirectly lost: 0 bytes in 0 blocks; ==98805== possibly lost: 480,565 bytes in 454 blocks; ==98805== still reachable: 19,980,817 bytes in 39,694 blocks; ==98805== suppressed: 36 bytes in 2 blocks; ==98805== Rerun with --leak-check=full to see details of leaked memory; ==98805== ; ==98805== For lists of detected and suppressed errors, rerun with: -s; ==98805== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0); Segmentation fault (core dumped); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:4075,Energy Efficiency,allocate,allocated,4075,":56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== If you believe this happened as a result of a stack; ==98805== overflow in your program's main thread (unlikely but; ==98805== possible), you can try to increase the size of the; ==98805== main thread stack using the --main-stacksize= flag.; ==98805== The main thread stack size used in this run was 8388608.; ==98805== ; ==98805== HEAP SUMMARY:; ==98805== in use at exit: 20,461,418 bytes in 40,150 blocks; ==98805== total heap usage: 393,696 allocs, 353,546 frees, 108,089,532 bytes allocated; ==98805== ; ==98805== LEAK SUMMARY:; ==98805== definitely lost: 0 bytes in 0 blocks; ==98805== indirectly lost: 0 bytes in 0 blocks; ==98805== possibly lost: 480,565 bytes in 454 blocks; ==98805== still reachable: 19,980,817 bytes in 39,694 blocks; ==98805== suppressed: 36 bytes in 2 blocks; ==98805== Rerun with --leak-check=full to see details of leaked memory; ==98805== ; ==98805== For lists of detected and suppressed errors, rerun with: -s; ==98805== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0); Segmentation fault (core dumped); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:44,Modifiability,variab,variables,44,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:87,Modifiability,plugin,plugins,87,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:162,Modifiability,plugin,plugin,162,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:201,Modifiability,Config,Configure,201,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:224,Modifiability,plugin,plugin-compile,224,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:1155,Modifiability,plugin,plugin,1155,"reate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== Address 0x18 is not stack'd, malloc'd or (recently) free'd; ==98805== ; ==98",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:2682,Modifiability,plugin,plugin,2682,"InlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== Address 0x18 is not stack'd, malloc'd or (recently) free'd; ==98805== ; ==98805== ; ==98805== Process terminating with default action of signal 11 (SIGSEGV); ==98805== Access not within mapped region at address 0x18; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== If you believe this happened as a result of a stack; ==98805== overflow in y",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:489,Safety,detect,detector,489,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:4486,Safety,detect,detected,4486,":56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== If you believe this happened as a result of a stack; ==98805== overflow in your program's main thread (unlikely but; ==98805== possible), you can try to increase the size of the; ==98805== main thread stack using the --main-stacksize= flag.; ==98805== The main thread stack size used in this run was 8388608.; ==98805== ; ==98805== HEAP SUMMARY:; ==98805== in use at exit: 20,461,418 bytes in 40,150 blocks; ==98805== total heap usage: 393,696 allocs, 353,546 frees, 108,089,532 bytes allocated; ==98805== ; ==98805== LEAK SUMMARY:; ==98805== definitely lost: 0 bytes in 0 blocks; ==98805== indirectly lost: 0 bytes in 0 blocks; ==98805== possibly lost: 480,565 bytes in 454 blocks; ==98805== still reachable: 19,980,817 bytes in 39,694 blocks; ==98805== suppressed: 36 bytes in 2 blocks; ==98805== Rerun with --leak-check=full to see details of leaked memory; ==98805== ; ==98805== For lists of detected and suppressed errors, rerun with: -s; ==98805== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0); Segmentation fault (core dumped); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:75,Security,access,accessed,75,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:2231,Security,Access,Access,2231,"/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== Address 0x18 is not stack'd, malloc'd or (recently) free'd; ==98805== ; ==98805== ; ==98805== Process terminating with default action of signal 11 (SIGSEGV); ==98805== Access not within mapped region at address 0x18; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abst",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:170,Testability,Test,Tested,170,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:974,Testability,test,test,974,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:1045,Testability,test,test,1045,"y that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805==",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:1149,Testability,test,test,1149,"reate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== Address 0x18 is not stack'd, malloc'd or (recently) free'd; ==98805== ; ==98",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:2501,Testability,test,test,2501,"methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== Address 0x18 is not stack'd, malloc'd or (recently) free'd; ==98805== ; ==98805== ; ==98805== Process terminating with default action of signal 11 (SIGSEGV); ==98805== Access not within mapped region at address 0x18; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInline",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:2572,Testability,test,test,2572,"y 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== Address 0x18 is not stack'd, malloc'd or (recently) free'd; ==98805== ; ==98805== ; ==98805== Process terminating with default action of signal 11 (SIGSEGV); ==98805== Access not within mapped region at address 0x18; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805==",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:2676,Testability,test,test,2676,"InlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== Address 0x18 is not stack'd, malloc'd or (recently) free'd; ==98805== ; ==98805== ; ==98805== Process terminating with default action of signal 11 (SIGSEGV); ==98805== Access not within mapped region at address 0x18; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== If you believe this happened as a result of a stack; ==98805== overflow in y",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3202:1645,Availability,error,error,1645,"685693; O 2.81552768 -0.50840706 -1.42180252; O 3.61564541 1.27844179 0.09948727; O 2.95557380 -0.82533526 1.00298083; C 2.03019476 -1.93245912 1.04782605; C -1.66037059 -1.05786431 -0.87382233; C -1.39498496 -1.19960129 -2.34816003; C -2.65299201 -1.76249051 -0.27337471; H -2.37740040 -0.54585648 2.90523863; H 2.38954139 -2.56465364 1.84992540; H 1.02863634 -1.57685304 1.27002537; H 2.04236674 -2.46241236 0.09951447; H -2.15541649 -1.82673633 -2.80763054; H -0.41234738 -1.64107180 -2.50716877; H -1.37758315 -0.22482435 -2.83713913; H -3.27599978 -2.43724084 -0.84607768; S -0.34233722 2.35735393 -1.83532763; C 1.36095190 2.94818139 -1.81407535; H 1.71979201 3.09855604 -0.79815280; H 2.02802634 2.25554347 -2.32132745; H 1.39841688 3.90181231 -2.33199310; H 0.52648693 0.85272557 2.39744759; H -0.38901252 2.05630112 1.52833438; H -1.06736839 1.33094835 2.99083304; }. set {; pcm true; pcm_scf_type total; }. pcm = {; Units = Angstrom; Medium {; SolverType = IEFPCM; Solvent = Water; }. Cavity {; RadiiSet = UFF; Type = GePol; Scaling = False; Area = 0.3; Mode = Implicit; }; }. gradient(""b97-3c""); ```. And here's what happens when I run the calculation:. ```shell; $ psi4 input.dat; PCMSolver fatal error.; In function computeS at line 51 of file /Users/runner/miniforge3/conda-bld/pcmsolver-split_1696645993753/work/src/bi_operators/IBoundaryIntegralOperator.cpp; S matrix is not positive-definite!; Consider changing the average area of the cavity finite elements.; Please report this issue: https://github.com/PCMSolver/pcmsolver/issues; ```. If I delete the PCM sections, the B97-3c gradient runs just fine. The molecule looks normal:. <img width=""600"" alt=""image"" src=""https://github.com/user-attachments/assets/afa2ecd1-9890-4dc5-bf99-a1d7ae898d11"">. All calculations run on a MacBook Pro using Psi4 1.9.1 from conda-forge. (I know the message says to report this to [PCMSolver](https://github.com/PCMSolver/pcmsolver/issues) but that repository hasn't had any updates in 3+ years...)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3202
https://github.com/psi4/psi4/issues/3202:2413,Deployability,update,updates,2413,"685693; O 2.81552768 -0.50840706 -1.42180252; O 3.61564541 1.27844179 0.09948727; O 2.95557380 -0.82533526 1.00298083; C 2.03019476 -1.93245912 1.04782605; C -1.66037059 -1.05786431 -0.87382233; C -1.39498496 -1.19960129 -2.34816003; C -2.65299201 -1.76249051 -0.27337471; H -2.37740040 -0.54585648 2.90523863; H 2.38954139 -2.56465364 1.84992540; H 1.02863634 -1.57685304 1.27002537; H 2.04236674 -2.46241236 0.09951447; H -2.15541649 -1.82673633 -2.80763054; H -0.41234738 -1.64107180 -2.50716877; H -1.37758315 -0.22482435 -2.83713913; H -3.27599978 -2.43724084 -0.84607768; S -0.34233722 2.35735393 -1.83532763; C 1.36095190 2.94818139 -1.81407535; H 1.71979201 3.09855604 -0.79815280; H 2.02802634 2.25554347 -2.32132745; H 1.39841688 3.90181231 -2.33199310; H 0.52648693 0.85272557 2.39744759; H -0.38901252 2.05630112 1.52833438; H -1.06736839 1.33094835 2.99083304; }. set {; pcm true; pcm_scf_type total; }. pcm = {; Units = Angstrom; Medium {; SolverType = IEFPCM; Solvent = Water; }. Cavity {; RadiiSet = UFF; Type = GePol; Scaling = False; Area = 0.3; Mode = Implicit; }; }. gradient(""b97-3c""); ```. And here's what happens when I run the calculation:. ```shell; $ psi4 input.dat; PCMSolver fatal error.; In function computeS at line 51 of file /Users/runner/miniforge3/conda-bld/pcmsolver-split_1696645993753/work/src/bi_operators/IBoundaryIntegralOperator.cpp; S matrix is not positive-definite!; Consider changing the average area of the cavity finite elements.; Please report this issue: https://github.com/PCMSolver/pcmsolver/issues; ```. If I delete the PCM sections, the B97-3c gradient runs just fine. The molecule looks normal:. <img width=""600"" alt=""image"" src=""https://github.com/user-attachments/assets/afa2ecd1-9890-4dc5-bf99-a1d7ae898d11"">. All calculations run on a MacBook Pro using Psi4 1.9.1 from conda-forge. (I know the message says to report this to [PCMSolver](https://github.com/PCMSolver/pcmsolver/issues) but that repository hasn't had any updates in 3+ years...)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3202
https://github.com/psi4/psi4/issues/3202:2288,Integrability,message,message,2288,"685693; O 2.81552768 -0.50840706 -1.42180252; O 3.61564541 1.27844179 0.09948727; O 2.95557380 -0.82533526 1.00298083; C 2.03019476 -1.93245912 1.04782605; C -1.66037059 -1.05786431 -0.87382233; C -1.39498496 -1.19960129 -2.34816003; C -2.65299201 -1.76249051 -0.27337471; H -2.37740040 -0.54585648 2.90523863; H 2.38954139 -2.56465364 1.84992540; H 1.02863634 -1.57685304 1.27002537; H 2.04236674 -2.46241236 0.09951447; H -2.15541649 -1.82673633 -2.80763054; H -0.41234738 -1.64107180 -2.50716877; H -1.37758315 -0.22482435 -2.83713913; H -3.27599978 -2.43724084 -0.84607768; S -0.34233722 2.35735393 -1.83532763; C 1.36095190 2.94818139 -1.81407535; H 1.71979201 3.09855604 -0.79815280; H 2.02802634 2.25554347 -2.32132745; H 1.39841688 3.90181231 -2.33199310; H 0.52648693 0.85272557 2.39744759; H -0.38901252 2.05630112 1.52833438; H -1.06736839 1.33094835 2.99083304; }. set {; pcm true; pcm_scf_type total; }. pcm = {; Units = Angstrom; Medium {; SolverType = IEFPCM; Solvent = Water; }. Cavity {; RadiiSet = UFF; Type = GePol; Scaling = False; Area = 0.3; Mode = Implicit; }; }. gradient(""b97-3c""); ```. And here's what happens when I run the calculation:. ```shell; $ psi4 input.dat; PCMSolver fatal error.; In function computeS at line 51 of file /Users/runner/miniforge3/conda-bld/pcmsolver-split_1696645993753/work/src/bi_operators/IBoundaryIntegralOperator.cpp; S matrix is not positive-definite!; Consider changing the average area of the cavity finite elements.; Please report this issue: https://github.com/PCMSolver/pcmsolver/issues; ```. If I delete the PCM sections, the B97-3c gradient runs just fine. The molecule looks normal:. <img width=""600"" alt=""image"" src=""https://github.com/user-attachments/assets/afa2ecd1-9890-4dc5-bf99-a1d7ae898d11"">. All calculations run on a MacBook Pro using Psi4 1.9.1 from conda-forge. (I know the message says to report this to [PCMSolver](https://github.com/PCMSolver/pcmsolver/issues) but that repository hasn't had any updates in 3+ years...)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3202
https://github.com/psi4/psi4/pull/3203:1157,Availability,error,error,1157," a single list of functionals, which improves code readability and removes the XC functional special case (see below). ## User API & Changelog headlines; - [ ] Changes the Python API surface for the Superfunctional class: A complete list of functionals in a superfunctional can be accessed with `functionals()`. `add_x_functional(fnctl)` and `add_c_functional(fnctl)` were removed in favor of `add_functional(fnctl)`. Also removes `is_libxc_func()` since there is now no distinction. ## Dev notes & details; - [ ] The base `Functional` class now has a `kind()` field. When implemented in the `LibXCFunctional`, this allows one to get the kind of functional from LibXC -- Now, LibXC is treated as the single source of truth for the kind of functional. Accordingly, constants are [imported from LibXC to define these types.](https://github.com/psi4/psi4/blob/b40aa4fdce0996db38bdeafa454af8fb1cef136d/psi4/src/psi4/libfunctional/functional.h#L40-L43) A field is added for ""kinetic"" functionals for future-proofing, but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functional",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:2251,Energy Efficiency,efficient,efficient,2251,", but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python side?; - [ ] GRAC functionals are still split into X and C functionals. The effect of my changes on this needs to be tested, and perhaps the GRAC functionals should be unified. ## Checklist; - [ ] Remove all `TODO`s corresponding to the above questions; - [ ] Double check that I haven't used `x_functionals()` anywhere that I might want XC functionals -- See question 2; - [ ] Double check that I haven't broken GRAC; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I have run all DFT tests on my system, but perhaps you would want to confirm?; - [ ] Edit the tests that use `add_x_functionals` and `add_c_functionals`. ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:1217,Modifiability,inherit,inheritance,1217,"rfunctional class: A complete list of functionals in a superfunctional can be accessed with `functionals()`. `add_x_functional(fnctl)` and `add_c_functional(fnctl)` were removed in favor of `add_functional(fnctl)`. Also removes `is_libxc_func()` since there is now no distinction. ## Dev notes & details; - [ ] The base `Functional` class now has a `kind()` field. When implemented in the `LibXCFunctional`, this allows one to get the kind of functional from LibXC -- Now, LibXC is treated as the single source of truth for the kind of functional. Accordingly, constants are [imported from LibXC to define these types.](https://github.com/psi4/psi4/blob/b40aa4fdce0996db38bdeafa454af8fb1cef136d/psi4/src/psi4/libfunctional/functional.h#L40-L43) A field is added for ""kinetic"" functionals for future-proofing, but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python sid",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:1850,Modifiability,variab,variables,1850,"truth for the kind of functional. Accordingly, constants are [imported from LibXC to define these types.](https://github.com/psi4/psi4/blob/b40aa4fdce0996db38bdeafa454af8fb1cef136d/psi4/src/psi4/libfunctional/functional.h#L40-L43) A field is added for ""kinetic"" functionals for future-proofing, but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python side?; - [ ] GRAC functionals are still split into X and C functionals. The effect of my changes on this needs to be tested, and perhaps the GRAC functionals should be unified. ## Checklist; - [ ] Remove all `TODO`s corresponding to the above questions; - [ ] Double check that I haven't used `x_functionals()` anywhere that I might want XC functionals -- See question 2; - [ ] Double check that I haven't broken GRAC; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:422,Security,access,accessed,422,"## Description; This is part of my summer work that I'm submitting as a PR now. These changes unify exchange and correlation functionals into a single list of functionals, which improves code readability and removes the XC functional special case (see below). ## User API & Changelog headlines; - [ ] Changes the Python API surface for the Superfunctional class: A complete list of functionals in a superfunctional can be accessed with `functionals()`. `add_x_functional(fnctl)` and `add_c_functional(fnctl)` were removed in favor of `add_functional(fnctl)`. Also removes `is_libxc_func()` since there is now no distinction. ## Dev notes & details; - [ ] The base `Functional` class now has a `kind()` field. When implemented in the `LibXCFunctional`, this allows one to get the kind of functional from LibXC -- Now, LibXC is treated as the single source of truth for the kind of functional. Accordingly, constants are [imported from LibXC to define these types.](https://github.com/psi4/psi4/blob/b40aa4fdce0996db38bdeafa454af8fb1cef136d/psi4/src/psi4/libfunctional/functional.h#L40-L43) A field is added for ""kinetic"" functionals for future-proofing, but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:2050,Security,access,accessed,2050,"b1cef136d/psi4/src/psi4/libfunctional/functional.h#L40-L43) A field is added for ""kinetic"" functionals for future-proofing, but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python side?; - [ ] GRAC functionals are still split into X and C functionals. The effect of my changes on this needs to be tested, and perhaps the GRAC functionals should be unified. ## Checklist; - [ ] Remove all `TODO`s corresponding to the above questions; - [ ] Double check that I haven't used `x_functionals()` anywhere that I might want XC functionals -- See question 2; - [ ] Double check that I haven't broken GRAC; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I have run all DFT tests on my system, but perhaps you would want to confirm?; - [ ] Edit",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:2458,Testability,test,tested,2458,", but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python side?; - [ ] GRAC functionals are still split into X and C functionals. The effect of my changes on this needs to be tested, and perhaps the GRAC functionals should be unified. ## Checklist; - [ ] Remove all `TODO`s corresponding to the above questions; - [ ] Double check that I haven't used `x_functionals()` anywhere that I might want XC functionals -- See question 2; - [ ] Double check that I haven't broken GRAC; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I have run all DFT tests on my system, but perhaps you would want to confirm?; - [ ] Edit the tests that use `add_x_functionals` and `add_c_functionals`. ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:2766,Testability,Test,Tests,2766,", but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python side?; - [ ] GRAC functionals are still split into X and C functionals. The effect of my changes on this needs to be tested, and perhaps the GRAC functionals should be unified. ## Checklist; - [ ] Remove all `TODO`s corresponding to the above questions; - [ ] Double check that I haven't used `x_functionals()` anywhere that I might want XC functionals -- See question 2; - [ ] Double check that I haven't broken GRAC; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I have run all DFT tests on my system, but perhaps you would want to confirm?; - [ ] Edit the tests that use `add_x_functionals` and `add_c_functionals`. ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:2840,Testability,test,tests,2840,", but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python side?; - [ ] GRAC functionals are still split into X and C functionals. The effect of my changes on this needs to be tested, and perhaps the GRAC functionals should be unified. ## Checklist; - [ ] Remove all `TODO`s corresponding to the above questions; - [ ] Double check that I haven't used `x_functionals()` anywhere that I might want XC functionals -- See question 2; - [ ] Double check that I haven't broken GRAC; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I have run all DFT tests on my system, but perhaps you would want to confirm?; - [ ] Edit the tests that use `add_x_functionals` and `add_c_functionals`. ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:2931,Testability,test,tests,2931,", but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python side?; - [ ] GRAC functionals are still split into X and C functionals. The effect of my changes on this needs to be tested, and perhaps the GRAC functionals should be unified. ## Checklist; - [ ] Remove all `TODO`s corresponding to the above questions; - [ ] Double check that I haven't used `x_functionals()` anywhere that I might want XC functionals -- See question 2; - [ ] Double check that I haven't broken GRAC; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I have run all DFT tests on my system, but perhaps you would want to confirm?; - [ ] Edit the tests that use `add_x_functionals` and `add_c_functionals`. ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:2960,Testability,test,tests,2960,", but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python side?; - [ ] GRAC functionals are still split into X and C functionals. The effect of my changes on this needs to be tested, and perhaps the GRAC functionals should be unified. ## Checklist; - [ ] Remove all `TODO`s corresponding to the above questions; - [ ] Double check that I haven't used `x_functionals()` anywhere that I might want XC functionals -- See question 2; - [ ] Double check that I haven't broken GRAC; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I have run all DFT tests on my system, but perhaps you would want to confirm?; - [ ] Edit the tests that use `add_x_functionals` and `add_c_functionals`. ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:3035,Testability,test,tests,3035,", but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python side?; - [ ] GRAC functionals are still split into X and C functionals. The effect of my changes on this needs to be tested, and perhaps the GRAC functionals should be unified. ## Checklist; - [ ] Remove all `TODO`s corresponding to the above questions; - [ ] Double check that I haven't used `x_functionals()` anywhere that I might want XC functionals -- See question 2; - [ ] Double check that I haven't broken GRAC; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I have run all DFT tests on my system, but perhaps you would want to confirm?; - [ ] Edit the tests that use `add_x_functionals` and `add_c_functionals`. ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3203:2202,Usability,simpl,simply,2202,", but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functionals as these were previously included in C functionals. These simply create a new filtered vector, which isn't efficient or clean. Perhaps these should be removed in favor of filtering from the Python side?; - [ ] GRAC functionals are still split into X and C functionals. The effect of my changes on this needs to be tested, and perhaps the GRAC functionals should be unified. ## Checklist; - [ ] Remove all `TODO`s corresponding to the above questions; - [ ] Double check that I haven't used `x_functionals()` anywhere that I might want XC functionals -- See question 2; - [ ] Double check that I haven't broken GRAC; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I have run all DFT tests on my system, but perhaps you would want to confirm?; - [ ] Edit the tests that use `add_x_functionals` and `add_c_functionals`. ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3203
https://github.com/psi4/psi4/pull/3204:245,Testability,test,tests,245,## Description; Adds new optking options to `read_options.cc`. Adds soon to be added `OPT_COORDINATES CUSTOM` option. ## User API & Changelog headlines; - [x] Default TS search algorithm is now RS_I_RFO. ## Checklist; - [x] opt16 now by default tests with RS_I_RFO (old algorithm still tested by optking's test suite); - [x] `-L opt`. ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3204
https://github.com/psi4/psi4/pull/3204:286,Testability,test,tested,286,## Description; Adds new optking options to `read_options.cc`. Adds soon to be added `OPT_COORDINATES CUSTOM` option. ## User API & Changelog headlines; - [x] Default TS search algorithm is now RS_I_RFO. ## Checklist; - [x] opt16 now by default tests with RS_I_RFO (old algorithm still tested by optking's test suite); - [x] `-L opt`. ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3204
https://github.com/psi4/psi4/pull/3204:306,Testability,test,test,306,## Description; Adds new optking options to `read_options.cc`. Adds soon to be added `OPT_COORDINATES CUSTOM` option. ## User API & Changelog headlines; - [x] Default TS search algorithm is now RS_I_RFO. ## Checklist; - [x] opt16 now by default tests with RS_I_RFO (old algorithm still tested by optking's test suite); - [x] `-L opt`. ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3204
https://github.com/psi4/psi4/issues/3205:103,Availability,error,error,103,"Trying to run a fluorine-containing molecule (HF) with wB97X-3c in Psi4 1.9.1 results in the following error:. ```sh; psi4.driver.qcdb.exceptions.BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['F']; Basis Sets: [('VDZP', 'VDZP', None)]; File Path: /private/var/folders/_v/ns6m8tr96_qfytmb7tz4gv8r0000gn/T/tmp3ruilqbj, /private/var/folders/_v/ns6m8tr96_qfytmb7tz4gv8r0000gn/T/tmp3ruilqbj, /Users/cwagen/.../share/psi4/basis; Input Blocks:; ```. Looking at where the vDZP basis set is defined in Psi4 ([link](https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/vdzp.gbs)), there's a note at the top that fluorine was removed owing to a missing ECP projector:. ```; !----------------------------------------------------------------------; ! Basis Set Exchange; ! Version v0.9.1+53.gf8c059b.dirty; ! https://www.basissetexchange.org; !----------------------------------------------------------------------; ! Basis set: vDZP; ! Description: Small basis set used in wB97X-3c method; ! Role: orbital; ! Version: 1 (); ! From SuppMat of https://doi.org/10.1063/5.0133026; ! then converted with https://github.com/MolSSI-BSE/basis_set_exchange-historical/commit/f84314b31bc0e30e5a29c274684d6e9ff612466a#diff-7686a8c951e2392d87a59f8d89e5c75f18d2d35c60683ed5b52910076840569c; ! then removed Fluorine b/c the ECP lacks a projector; ! then added with basis_set_exchange.curate.add_basis(name=""vDZP"") to a local repo; ! then converted with `bse get-basis vDZP psi4`; !----------------------------------------------------------------------; ```. Marcel Muller (@marcelmbn), the original author of the wB97X-3c paper, wrote in [an analogous PySCF issue](https://github.com/pyscf/pyscf/pull/2085#issuecomment-1951321264) (pyscf/pyscf#2085) that this issue can be resolved:. > There are two ways to solve this problem (at least as far as I can see):; > Add a ""dummy"" d-type projector with coefficient 0.0, so that the ascending order of pr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3205
https://github.com/psi4/psi4/issues/3205:2433,Deployability,update,update,2433,"to a missing ECP projector:. ```; !----------------------------------------------------------------------; ! Basis Set Exchange; ! Version v0.9.1+53.gf8c059b.dirty; ! https://www.basissetexchange.org; !----------------------------------------------------------------------; ! Basis set: vDZP; ! Description: Small basis set used in wB97X-3c method; ! Role: orbital; ! Version: 1 (); ! From SuppMat of https://doi.org/10.1063/5.0133026; ! then converted with https://github.com/MolSSI-BSE/basis_set_exchange-historical/commit/f84314b31bc0e30e5a29c274684d6e9ff612466a#diff-7686a8c951e2392d87a59f8d89e5c75f18d2d35c60683ed5b52910076840569c; ! then removed Fluorine b/c the ECP lacks a projector; ! then added with basis_set_exchange.curate.add_basis(name=""vDZP"") to a local repo; ! then converted with `bse get-basis vDZP psi4`; !----------------------------------------------------------------------; ```. Marcel Muller (@marcelmbn), the original author of the wB97X-3c paper, wrote in [an analogous PySCF issue](https://github.com/pyscf/pyscf/pull/2085#issuecomment-1951321264) (pyscf/pyscf#2085) that this issue can be resolved:. > There are two ways to solve this problem (at least as far as I can see):; > Add a ""dummy"" d-type projector with coefficient 0.0, so that the ascending order of projectors up to f can be retained.; > Just remove the f projector as it has a 0.0 coefficient. IMHO, this would be the correct option, as a projector with a coefficient of 0.0 is only a technical remnant from the development process.; > I quickly tested both approaches with both TURBOMOLEv7.7.1 and ORCAv5.0.4 and in all cases, the same single-point energy and properties resulted for a simple F_2 molecule. Would it be possible to update the wB97X-3c basis set included in Psi4 to allow F-containing molecules to run? I'm happy to make the PR myself if that would be useful. For reference, here's my HF structure:; ```; 2; title; F 0.48776591 0.00000000 0.00000000; H -0.48776591 0.00000000 0.00000000; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3205
https://github.com/psi4/psi4/issues/3205:2351,Energy Efficiency,energy,energy,2351,"to a missing ECP projector:. ```; !----------------------------------------------------------------------; ! Basis Set Exchange; ! Version v0.9.1+53.gf8c059b.dirty; ! https://www.basissetexchange.org; !----------------------------------------------------------------------; ! Basis set: vDZP; ! Description: Small basis set used in wB97X-3c method; ! Role: orbital; ! Version: 1 (); ! From SuppMat of https://doi.org/10.1063/5.0133026; ! then converted with https://github.com/MolSSI-BSE/basis_set_exchange-historical/commit/f84314b31bc0e30e5a29c274684d6e9ff612466a#diff-7686a8c951e2392d87a59f8d89e5c75f18d2d35c60683ed5b52910076840569c; ! then removed Fluorine b/c the ECP lacks a projector; ! then added with basis_set_exchange.curate.add_basis(name=""vDZP"") to a local repo; ! then converted with `bse get-basis vDZP psi4`; !----------------------------------------------------------------------; ```. Marcel Muller (@marcelmbn), the original author of the wB97X-3c paper, wrote in [an analogous PySCF issue](https://github.com/pyscf/pyscf/pull/2085#issuecomment-1951321264) (pyscf/pyscf#2085) that this issue can be resolved:. > There are two ways to solve this problem (at least as far as I can see):; > Add a ""dummy"" d-type projector with coefficient 0.0, so that the ascending order of projectors up to f can be retained.; > Just remove the f projector as it has a 0.0 coefficient. IMHO, this would be the correct option, as a projector with a coefficient of 0.0 is only a technical remnant from the development process.; > I quickly tested both approaches with both TURBOMOLEv7.7.1 and ORCAv5.0.4 and in all cases, the same single-point energy and properties resulted for a simple F_2 molecule. Would it be possible to update the wB97X-3c basis set included in Psi4 to allow F-containing molecules to run? I'm happy to make the PR myself if that would be useful. For reference, here's my HF structure:; ```; 2; title; F 0.48776591 0.00000000 0.00000000; H -0.48776591 0.00000000 0.00000000; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3205
https://github.com/psi4/psi4/issues/3205:2247,Testability,test,tested,2247,"to a missing ECP projector:. ```; !----------------------------------------------------------------------; ! Basis Set Exchange; ! Version v0.9.1+53.gf8c059b.dirty; ! https://www.basissetexchange.org; !----------------------------------------------------------------------; ! Basis set: vDZP; ! Description: Small basis set used in wB97X-3c method; ! Role: orbital; ! Version: 1 (); ! From SuppMat of https://doi.org/10.1063/5.0133026; ! then converted with https://github.com/MolSSI-BSE/basis_set_exchange-historical/commit/f84314b31bc0e30e5a29c274684d6e9ff612466a#diff-7686a8c951e2392d87a59f8d89e5c75f18d2d35c60683ed5b52910076840569c; ! then removed Fluorine b/c the ECP lacks a projector; ! then added with basis_set_exchange.curate.add_basis(name=""vDZP"") to a local repo; ! then converted with `bse get-basis vDZP psi4`; !----------------------------------------------------------------------; ```. Marcel Muller (@marcelmbn), the original author of the wB97X-3c paper, wrote in [an analogous PySCF issue](https://github.com/pyscf/pyscf/pull/2085#issuecomment-1951321264) (pyscf/pyscf#2085) that this issue can be resolved:. > There are two ways to solve this problem (at least as far as I can see):; > Add a ""dummy"" d-type projector with coefficient 0.0, so that the ascending order of projectors up to f can be retained.; > Just remove the f projector as it has a 0.0 coefficient. IMHO, this would be the correct option, as a projector with a coefficient of 0.0 is only a technical remnant from the development process.; > I quickly tested both approaches with both TURBOMOLEv7.7.1 and ORCAv5.0.4 and in all cases, the same single-point energy and properties resulted for a simple F_2 molecule. Would it be possible to update the wB97X-3c basis set included in Psi4 to allow F-containing molecules to run? I'm happy to make the PR myself if that would be useful. For reference, here's my HF structure:; ```; 2; title; F 0.48776591 0.00000000 0.00000000; H -0.48776591 0.00000000 0.00000000; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3205
https://github.com/psi4/psi4/issues/3205:2388,Usability,simpl,simple,2388,"to a missing ECP projector:. ```; !----------------------------------------------------------------------; ! Basis Set Exchange; ! Version v0.9.1+53.gf8c059b.dirty; ! https://www.basissetexchange.org; !----------------------------------------------------------------------; ! Basis set: vDZP; ! Description: Small basis set used in wB97X-3c method; ! Role: orbital; ! Version: 1 (); ! From SuppMat of https://doi.org/10.1063/5.0133026; ! then converted with https://github.com/MolSSI-BSE/basis_set_exchange-historical/commit/f84314b31bc0e30e5a29c274684d6e9ff612466a#diff-7686a8c951e2392d87a59f8d89e5c75f18d2d35c60683ed5b52910076840569c; ! then removed Fluorine b/c the ECP lacks a projector; ! then added with basis_set_exchange.curate.add_basis(name=""vDZP"") to a local repo; ! then converted with `bse get-basis vDZP psi4`; !----------------------------------------------------------------------; ```. Marcel Muller (@marcelmbn), the original author of the wB97X-3c paper, wrote in [an analogous PySCF issue](https://github.com/pyscf/pyscf/pull/2085#issuecomment-1951321264) (pyscf/pyscf#2085) that this issue can be resolved:. > There are two ways to solve this problem (at least as far as I can see):; > Add a ""dummy"" d-type projector with coefficient 0.0, so that the ascending order of projectors up to f can be retained.; > Just remove the f projector as it has a 0.0 coefficient. IMHO, this would be the correct option, as a projector with a coefficient of 0.0 is only a technical remnant from the development process.; > I quickly tested both approaches with both TURBOMOLEv7.7.1 and ORCAv5.0.4 and in all cases, the same single-point energy and properties resulted for a simple F_2 molecule. Would it be possible to update the wB97X-3c basis set included in Psi4 to allow F-containing molecules to run? I'm happy to make the PR myself if that would be useful. For reference, here's my HF structure:; ```; 2; title; F 0.48776591 0.00000000 0.00000000; H -0.48776591 0.00000000 0.00000000; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3205
https://github.com/psi4/psi4/pull/3206:362,Deployability,release,release,362,"The Debugging section was lacking anything useful, so here's a bit on how to debug Psi4 with gdb, since it may not be entirely obvious to all users. ## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206
https://github.com/psi4/psi4/pull/3206:737,Testability,Test,Tests,737,"The Debugging section was lacking anything useful, so here's a bit on how to debug Psi4 with gdb, since it may not be entirely obvious to all users. ## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206
https://github.com/psi4/psi4/pull/3206:811,Testability,test,tests,811,"The Debugging section was lacking anything useful, so here's a bit on how to debug Psi4 with gdb, since it may not be entirely obvious to all users. ## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206
https://github.com/psi4/psi4/pull/3206:902,Testability,test,tests,902,"The Debugging section was lacking anything useful, so here's a bit on how to debug Psi4 with gdb, since it may not be entirely obvious to all users. ## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3206
https://github.com/psi4/psi4/issues/3207:467,Energy Efficiency,energy,energy,467,"Memory usage seems to climb upon repeating calculations in the same process. Here's my test script:. ```; import os; import psi4; import psutil. def check_resources():; process = psutil.Process(os.getpid()); return f""Memory used by process: {process.memory_info().rss / (1024 ** 2):.2f} MB"". cyanamide = psi4.geometry(""""""; C 0.000 0.239 0.000; N -0.044 1.395 0.000; N 0.134 -1.155 0.000; H -0.315 -1.556 0.837; H -0.315 -1.556 -0.837; """"""). for n in range(21):; psi4.energy(""r2scan-3c""); psi4.core.clean(). with open(""psi4.log"", ""a"") as f2:; f2.write(f""{n}: {check_resources()}\n""); ```. Here's what I get:. ```; 0: Memory used by process: 498.48 MB; 1: Memory used by process: 463.73 MB; 2: Memory used by process: 538.73 MB; 3: Memory used by process: 610.47 MB; 4: Memory used by process: 726.72 MB; 5: Memory used by process: 788.34 MB; 6: Memory used by process: 848.44 MB; 7: Memory used by process: 904.81 MB; 8: Memory used by process: 912.50 MB; 9: Memory used by process: 912.62 MB; 10: Memory used by process: 1016.02 MB; 11: Memory used by process: 1022.06 MB; 12: Memory used by process: 1037.52 MB; 13: Memory used by process: 1037.52 MB; 14: Memory used by process: 1036.77 MB; 15: Memory used by process: 1039.41 MB; 16: Memory used by process: 1039.16 MB; 17: Memory used by process: 1039.16 MB; 18: Memory used by process: 1039.16 MB; 19: Memory used by process: 1092.38 MB; 20: Memory used by process: 1094.72 MB; ```. After the first call, only about 500 MB of memory have been claimed; after 10 calls, this has crept up to over 1 GB. This could cause issues e.g. in an *ab initio* MD context, or simply in a lengthy optimization...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3207
https://github.com/psi4/psi4/issues/3207:1637,Performance,optimiz,optimization,1637,"Memory usage seems to climb upon repeating calculations in the same process. Here's my test script:. ```; import os; import psi4; import psutil. def check_resources():; process = psutil.Process(os.getpid()); return f""Memory used by process: {process.memory_info().rss / (1024 ** 2):.2f} MB"". cyanamide = psi4.geometry(""""""; C 0.000 0.239 0.000; N -0.044 1.395 0.000; N 0.134 -1.155 0.000; H -0.315 -1.556 0.837; H -0.315 -1.556 -0.837; """"""). for n in range(21):; psi4.energy(""r2scan-3c""); psi4.core.clean(). with open(""psi4.log"", ""a"") as f2:; f2.write(f""{n}: {check_resources()}\n""); ```. Here's what I get:. ```; 0: Memory used by process: 498.48 MB; 1: Memory used by process: 463.73 MB; 2: Memory used by process: 538.73 MB; 3: Memory used by process: 610.47 MB; 4: Memory used by process: 726.72 MB; 5: Memory used by process: 788.34 MB; 6: Memory used by process: 848.44 MB; 7: Memory used by process: 904.81 MB; 8: Memory used by process: 912.50 MB; 9: Memory used by process: 912.62 MB; 10: Memory used by process: 1016.02 MB; 11: Memory used by process: 1022.06 MB; 12: Memory used by process: 1037.52 MB; 13: Memory used by process: 1037.52 MB; 14: Memory used by process: 1036.77 MB; 15: Memory used by process: 1039.41 MB; 16: Memory used by process: 1039.16 MB; 17: Memory used by process: 1039.16 MB; 18: Memory used by process: 1039.16 MB; 19: Memory used by process: 1092.38 MB; 20: Memory used by process: 1094.72 MB; ```. After the first call, only about 500 MB of memory have been claimed; after 10 calls, this has crept up to over 1 GB. This could cause issues e.g. in an *ab initio* MD context, or simply in a lengthy optimization...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3207
https://github.com/psi4/psi4/issues/3207:87,Testability,test,test,87,"Memory usage seems to climb upon repeating calculations in the same process. Here's my test script:. ```; import os; import psi4; import psutil. def check_resources():; process = psutil.Process(os.getpid()); return f""Memory used by process: {process.memory_info().rss / (1024 ** 2):.2f} MB"". cyanamide = psi4.geometry(""""""; C 0.000 0.239 0.000; N -0.044 1.395 0.000; N 0.134 -1.155 0.000; H -0.315 -1.556 0.837; H -0.315 -1.556 -0.837; """"""). for n in range(21):; psi4.energy(""r2scan-3c""); psi4.core.clean(). with open(""psi4.log"", ""a"") as f2:; f2.write(f""{n}: {check_resources()}\n""); ```. Here's what I get:. ```; 0: Memory used by process: 498.48 MB; 1: Memory used by process: 463.73 MB; 2: Memory used by process: 538.73 MB; 3: Memory used by process: 610.47 MB; 4: Memory used by process: 726.72 MB; 5: Memory used by process: 788.34 MB; 6: Memory used by process: 848.44 MB; 7: Memory used by process: 904.81 MB; 8: Memory used by process: 912.50 MB; 9: Memory used by process: 912.62 MB; 10: Memory used by process: 1016.02 MB; 11: Memory used by process: 1022.06 MB; 12: Memory used by process: 1037.52 MB; 13: Memory used by process: 1037.52 MB; 14: Memory used by process: 1036.77 MB; 15: Memory used by process: 1039.41 MB; 16: Memory used by process: 1039.16 MB; 17: Memory used by process: 1039.16 MB; 18: Memory used by process: 1039.16 MB; 19: Memory used by process: 1092.38 MB; 20: Memory used by process: 1094.72 MB; ```. After the first call, only about 500 MB of memory have been claimed; after 10 calls, this has crept up to over 1 GB. This could cause issues e.g. in an *ab initio* MD context, or simply in a lengthy optimization...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3207
https://github.com/psi4/psi4/issues/3207:523,Testability,log,log,523,"Memory usage seems to climb upon repeating calculations in the same process. Here's my test script:. ```; import os; import psi4; import psutil. def check_resources():; process = psutil.Process(os.getpid()); return f""Memory used by process: {process.memory_info().rss / (1024 ** 2):.2f} MB"". cyanamide = psi4.geometry(""""""; C 0.000 0.239 0.000; N -0.044 1.395 0.000; N 0.134 -1.155 0.000; H -0.315 -1.556 0.837; H -0.315 -1.556 -0.837; """"""). for n in range(21):; psi4.energy(""r2scan-3c""); psi4.core.clean(). with open(""psi4.log"", ""a"") as f2:; f2.write(f""{n}: {check_resources()}\n""); ```. Here's what I get:. ```; 0: Memory used by process: 498.48 MB; 1: Memory used by process: 463.73 MB; 2: Memory used by process: 538.73 MB; 3: Memory used by process: 610.47 MB; 4: Memory used by process: 726.72 MB; 5: Memory used by process: 788.34 MB; 6: Memory used by process: 848.44 MB; 7: Memory used by process: 904.81 MB; 8: Memory used by process: 912.50 MB; 9: Memory used by process: 912.62 MB; 10: Memory used by process: 1016.02 MB; 11: Memory used by process: 1022.06 MB; 12: Memory used by process: 1037.52 MB; 13: Memory used by process: 1037.52 MB; 14: Memory used by process: 1036.77 MB; 15: Memory used by process: 1039.41 MB; 16: Memory used by process: 1039.16 MB; 17: Memory used by process: 1039.16 MB; 18: Memory used by process: 1039.16 MB; 19: Memory used by process: 1092.38 MB; 20: Memory used by process: 1094.72 MB; ```. After the first call, only about 500 MB of memory have been claimed; after 10 calls, this has crept up to over 1 GB. This could cause issues e.g. in an *ab initio* MD context, or simply in a lengthy optimization...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3207
https://github.com/psi4/psi4/issues/3207:1617,Usability,simpl,simply,1617,"Memory usage seems to climb upon repeating calculations in the same process. Here's my test script:. ```; import os; import psi4; import psutil. def check_resources():; process = psutil.Process(os.getpid()); return f""Memory used by process: {process.memory_info().rss / (1024 ** 2):.2f} MB"". cyanamide = psi4.geometry(""""""; C 0.000 0.239 0.000; N -0.044 1.395 0.000; N 0.134 -1.155 0.000; H -0.315 -1.556 0.837; H -0.315 -1.556 -0.837; """"""). for n in range(21):; psi4.energy(""r2scan-3c""); psi4.core.clean(). with open(""psi4.log"", ""a"") as f2:; f2.write(f""{n}: {check_resources()}\n""); ```. Here's what I get:. ```; 0: Memory used by process: 498.48 MB; 1: Memory used by process: 463.73 MB; 2: Memory used by process: 538.73 MB; 3: Memory used by process: 610.47 MB; 4: Memory used by process: 726.72 MB; 5: Memory used by process: 788.34 MB; 6: Memory used by process: 848.44 MB; 7: Memory used by process: 904.81 MB; 8: Memory used by process: 912.50 MB; 9: Memory used by process: 912.62 MB; 10: Memory used by process: 1016.02 MB; 11: Memory used by process: 1022.06 MB; 12: Memory used by process: 1037.52 MB; 13: Memory used by process: 1037.52 MB; 14: Memory used by process: 1036.77 MB; 15: Memory used by process: 1039.41 MB; 16: Memory used by process: 1039.16 MB; 17: Memory used by process: 1039.16 MB; 18: Memory used by process: 1039.16 MB; 19: Memory used by process: 1092.38 MB; 20: Memory used by process: 1094.72 MB; ```. After the first call, only about 500 MB of memory have been claimed; after 10 calls, this has crept up to over 1 GB. This could cause issues e.g. in an *ab initio* MD context, or simply in a lengthy optimization...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3207
https://github.com/psi4/psi4/pull/3208:262,Availability,ping,ping,262,"## Description; In preparation for allowing `detci` to support symmetry broken displacements for frequencies, this PR streamlines the active space setting logic used by `detci`. Nothing should have changed except function signatures and code clarity. Obligatory ping to @fevangelista, since this touches on active space specifications. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Streamline `ras_set`; - [x] Adds `Dimension::copy` @jturney ; - [x] Fewer raw pointers, more `Dimension` . ## Checklist; - [x] `ctest -L ci` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3208
https://github.com/psi4/psi4/pull/3208:155,Testability,log,logic,155,"## Description; In preparation for allowing `detci` to support symmetry broken displacements for frequencies, this PR streamlines the active space setting logic used by `detci`. Nothing should have changed except function signatures and code clarity. Obligatory ping to @fevangelista, since this touches on active space specifications. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Streamline `ras_set`; - [x] Adds `Dimension::copy` @jturney ; - [x] Fewer raw pointers, more `Dimension` . ## Checklist; - [x] `ctest -L ci` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3208
https://github.com/psi4/psi4/pull/3209:442,Deployability,release,release,442,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Adds optking keywords missed in #3204. For users, if these options are needed with an older version of Psi4, they can be passed through `psi4.optimize(..., 'optimizer_keywords'=)` to optking. Features require `optking >= 0.3.0`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Adds shortcut for freezing all dihedrals in a molecule `freeze_all_dihedrals` and `unfreeze_dihedrals` . ## Checklist; - [x] Ran -L opt subset; - [x] keywords checked explicitly in optking's tests . ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3209
https://github.com/psi4/psi4/pull/3209:222,Performance,optimiz,optimize,222,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Adds optking keywords missed in #3204. For users, if these options are needed with an older version of Psi4, they can be passed through `psi4.optimize(..., 'optimizer_keywords'=)` to optking. Features require `optking >= 0.3.0`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Adds shortcut for freezing all dihedrals in a molecule `freeze_all_dihedrals` and `unfreeze_dihedrals` . ## Checklist; - [x] Ran -L opt subset; - [x] keywords checked explicitly in optking's tests . ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3209
https://github.com/psi4/psi4/pull/3209:673,Testability,test,tests,673,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Adds optking keywords missed in #3204. For users, if these options are needed with an older version of Psi4, they can be passed through `psi4.optimize(..., 'optimizer_keywords'=)` to optking. Features require `optking >= 0.3.0`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Adds shortcut for freezing all dihedrals in a molecule `freeze_all_dihedrals` and `unfreeze_dihedrals` . ## Checklist; - [x] Ran -L opt subset; - [x] keywords checked explicitly in optking's tests . ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3209
https://github.com/psi4/psi4/pull/3210:213,Deployability,release,release,213,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3210
https://github.com/psi4/psi4/pull/3210:588,Testability,Test,Tests,588,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3210
https://github.com/psi4/psi4/pull/3210:662,Testability,test,tests,662,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3210
https://github.com/psi4/psi4/pull/3210:753,Testability,test,tests,753,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3210
https://github.com/psi4/psi4/issues/3211:200,Energy Efficiency,charge,charges,200,"In [`oeprops.cc`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/oeprop.cc#L1415), the function `compute_mulliken_charges()` is defined, which adds a vector of atom-centered Mulliken charges to the wavefunction's array variables:. ```c; void OEProp::compute_mulliken_charges() {; PAC::SharedStdVector Qa, Qb, apcs;; std::tie(Qa, Qb, apcs) = pac_.compute_mulliken_charges(true);; wfn_->set_atomic_point_charges(apcs);. auto vec_apcs = std::make_shared<Matrix>(""Mulliken Charges: (a.u.)"", 1, apcs->size());; for (size_t i = 0; i < apcs->size(); i++) {; vec_apcs->set(0, i, (*apcs)[i]);; }; wfn_->set_array_variable(""MULLIKEN CHARGES"", vec_apcs);; }; ```. It would be useful to also get spin densities here, which would just be `Qa - Qb`. Would it also be possible to add an array variable `MULLIKEN SPIN DENSITIES` which contains this value? (also perhaps for Lowdin populations too)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3211
https://github.com/psi4/psi4/issues/3211:486,Energy Efficiency,Charge,Charges,486,"In [`oeprops.cc`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/oeprop.cc#L1415), the function `compute_mulliken_charges()` is defined, which adds a vector of atom-centered Mulliken charges to the wavefunction's array variables:. ```c; void OEProp::compute_mulliken_charges() {; PAC::SharedStdVector Qa, Qb, apcs;; std::tie(Qa, Qb, apcs) = pac_.compute_mulliken_charges(true);; wfn_->set_atomic_point_charges(apcs);. auto vec_apcs = std::make_shared<Matrix>(""Mulliken Charges: (a.u.)"", 1, apcs->size());; for (size_t i = 0; i < apcs->size(); i++) {; vec_apcs->set(0, i, (*apcs)[i]);; }; wfn_->set_array_variable(""MULLIKEN CHARGES"", vec_apcs);; }; ```. It would be useful to also get spin densities here, which would just be `Qa - Qb`. Would it also be possible to add an array variable `MULLIKEN SPIN DENSITIES` which contains this value? (also perhaps for Lowdin populations too)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3211
https://github.com/psi4/psi4/issues/3211:640,Energy Efficiency,CHARGE,CHARGES,640,"In [`oeprops.cc`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/oeprop.cc#L1415), the function `compute_mulliken_charges()` is defined, which adds a vector of atom-centered Mulliken charges to the wavefunction's array variables:. ```c; void OEProp::compute_mulliken_charges() {; PAC::SharedStdVector Qa, Qb, apcs;; std::tie(Qa, Qb, apcs) = pac_.compute_mulliken_charges(true);; wfn_->set_atomic_point_charges(apcs);. auto vec_apcs = std::make_shared<Matrix>(""Mulliken Charges: (a.u.)"", 1, apcs->size());; for (size_t i = 0; i < apcs->size(); i++) {; vec_apcs->set(0, i, (*apcs)[i]);; }; wfn_->set_array_variable(""MULLIKEN CHARGES"", vec_apcs);; }; ```. It would be useful to also get spin densities here, which would just be `Qa - Qb`. Would it also be possible to add an array variable `MULLIKEN SPIN DENSITIES` which contains this value? (also perhaps for Lowdin populations too)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3211
https://github.com/psi4/psi4/issues/3211:236,Modifiability,variab,variables,236,"In [`oeprops.cc`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/oeprop.cc#L1415), the function `compute_mulliken_charges()` is defined, which adds a vector of atom-centered Mulliken charges to the wavefunction's array variables:. ```c; void OEProp::compute_mulliken_charges() {; PAC::SharedStdVector Qa, Qb, apcs;; std::tie(Qa, Qb, apcs) = pac_.compute_mulliken_charges(true);; wfn_->set_atomic_point_charges(apcs);. auto vec_apcs = std::make_shared<Matrix>(""Mulliken Charges: (a.u.)"", 1, apcs->size());; for (size_t i = 0; i < apcs->size(); i++) {; vec_apcs->set(0, i, (*apcs)[i]);; }; wfn_->set_array_variable(""MULLIKEN CHARGES"", vec_apcs);; }; ```. It would be useful to also get spin densities here, which would just be `Qa - Qb`. Would it also be possible to add an array variable `MULLIKEN SPIN DENSITIES` which contains this value? (also perhaps for Lowdin populations too)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3211
https://github.com/psi4/psi4/issues/3211:795,Modifiability,variab,variable,795,"In [`oeprops.cc`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/oeprop.cc#L1415), the function `compute_mulliken_charges()` is defined, which adds a vector of atom-centered Mulliken charges to the wavefunction's array variables:. ```c; void OEProp::compute_mulliken_charges() {; PAC::SharedStdVector Qa, Qb, apcs;; std::tie(Qa, Qb, apcs) = pac_.compute_mulliken_charges(true);; wfn_->set_atomic_point_charges(apcs);. auto vec_apcs = std::make_shared<Matrix>(""Mulliken Charges: (a.u.)"", 1, apcs->size());; for (size_t i = 0; i < apcs->size(); i++) {; vec_apcs->set(0, i, (*apcs)[i]);; }; wfn_->set_array_variable(""MULLIKEN CHARGES"", vec_apcs);; }; ```. It would be useful to also get spin densities here, which would just be `Qa - Qb`. Would it also be possible to add an array variable `MULLIKEN SPIN DENSITIES` which contains this value? (also perhaps for Lowdin populations too)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3211
https://github.com/psi4/psi4/pull/3212:36,Testability,test,tests,36,"## Description; Approve if you like tests that pass. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed a test that https://github.com/psi4/psi4/pull/3138 broke; - [x] Explains a magic number in said test . ## Checklist; - [x] All tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3212
https://github.com/psi4/psi4/pull/3212:301,Testability,test,test,301,"## Description; Approve if you like tests that pass. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed a test that https://github.com/psi4/psi4/pull/3138 broke; - [x] Explains a magic number in said test . ## Checklist; - [x] All tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3212
https://github.com/psi4/psi4/pull/3212:395,Testability,test,test,395,"## Description; Approve if you like tests that pass. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed a test that https://github.com/psi4/psi4/pull/3138 broke; - [x] Explains a magic number in said test . ## Checklist; - [x] All tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3212
https://github.com/psi4/psi4/pull/3212:426,Testability,test,tests,426,"## Description; Approve if you like tests that pass. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed a test that https://github.com/psi4/psi4/pull/3138 broke; - [x] Explains a magic number in said test . ## Checklist; - [x] All tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3212
https://github.com/psi4/psi4/issues/3213:5437,Availability,error,error,5437,"vs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 1570, in update_geometry; self.set_point_group(self.find_point_group()); ^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2423, in find_point_group; pg = self.find_highest_point_group(tol) # D2h subgroup; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2523, in find_highest_point_group; return PointGroup(pg_bits); ^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1530, in __init__; self.constructor_bits(*args); File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1573, in constructor_bits; self.symb = self.bits_to_basic_name(self.PYbits); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1755, in bits_to_basic_name; raise ValidationError('Unrecognized point group bits: %d\n' % (bits)). psi4.driver.qcdb.exceptions.ValidationError: Unrecognized point group bits: 80. Printing out the relevant lines from the Psithon --> Python processed input file:; H -0.3913180530 -0.8282585144 -0.5761431456; H 0.0839750469 -0.2910425067 1.0389058590; H 0.9764814973 0.2730248868 -0.3781855106; """"""); core.IO.set_default_namespace(""""); --> energy(""BP86/sto-3g""). !------------------------------------!; ! !; ! Unrecognized point group bits: 80 !; ! !; !------------------------------------!. Psi4 stopped on: Friday, 30 August 2024 04:55PM; Psi4 wall time for execution: 0:00:00.03. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3213
https://github.com/psi4/psi4/issues/3213:362,Energy Efficiency,energy,energy,362,"When running Psi4 1.9.1, the following structure causes Psi4 to crash, but shifting it a little bit makes things work fine. ```; molecule {; C 0.0000000182 -0.0000000013 0.0000000175; H -0.6691384315 0.8462762237 -0.0845771730; H -0.3913180530 -0.8282585144 -0.5761431456; H 0.0839750469 -0.2910425067 1.0389058590; H 0.9764814973 0.2730248868 -0.3781855106; }. energy(""BP86/sto-3g""); ```. Traceback; ```; Traceback (most recent call last):; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 1778, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/p4util/python_helpers.py"", line 217, in _core_wavefunction_build; basis = core.BasisSet.build(mol, ""ORBITAL"", basis, quiet=quiet); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/p4util/python_helpers.py"", line 157, in _pybuild_basis; bs, basisdict = qcdb.BasisSet.pyconstruct(mol.to_dict(),; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/per",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3213
https://github.com/psi4/psi4/issues/3213:714,Energy Efficiency,energy,energy,714,"When running Psi4 1.9.1, the following structure causes Psi4 to crash, but shifting it a little bit makes things work fine. ```; molecule {; C 0.0000000182 -0.0000000013 0.0000000175; H -0.6691384315 0.8462762237 -0.0845771730; H -0.3913180530 -0.8282585144 -0.5761431456; H 0.0839750469 -0.2910425067 1.0389058590; H 0.9764814973 0.2730248868 -0.3781855106; }. energy(""BP86/sto-3g""); ```. Traceback; ```; Traceback (most recent call last):; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 1778, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/p4util/python_helpers.py"", line 217, in _core_wavefunction_build; basis = core.BasisSet.build(mol, ""ORBITAL"", basis, quiet=quiet); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/p4util/python_helpers.py"", line 157, in _pybuild_basis; bs, basisdict = qcdb.BasisSet.pyconstruct(mol.to_dict(),; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/per",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3213
https://github.com/psi4/psi4/issues/3213:740,Energy Efficiency,energy,energy,740,"When running Psi4 1.9.1, the following structure causes Psi4 to crash, but shifting it a little bit makes things work fine. ```; molecule {; C 0.0000000182 -0.0000000013 0.0000000175; H -0.6691384315 0.8462762237 -0.0845771730; H -0.3913180530 -0.8282585144 -0.5761431456; H 0.0839750469 -0.2910425067 1.0389058590; H 0.9764814973 0.2730248868 -0.3781855106; }. energy(""BP86/sto-3g""); ```. Traceback; ```; Traceback (most recent call last):; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/procrouting/proc.py"", line 1778, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/p4util/python_helpers.py"", line 217, in _core_wavefunction_build; basis = core.BasisSet.build(mol, ""ORBITAL"", basis, quiet=quiet); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/p4util/python_helpers.py"", line 157, in _pybuild_basis; bs, basisdict = qcdb.BasisSet.pyconstruct(mol.to_dict(),; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/per",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3213
https://github.com/psi4/psi4/issues/3213:5170,Energy Efficiency,energy,energy,5170,"vs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 1570, in update_geometry; self.set_point_group(self.find_point_group()); ^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2423, in find_point_group; pg = self.find_highest_point_group(tol) # D2h subgroup; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2523, in find_highest_point_group; return PointGroup(pg_bits); ^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1530, in __init__; self.constructor_bits(*args); File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1573, in constructor_bits; self.symb = self.bits_to_basic_name(self.PYbits); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1755, in bits_to_basic_name; raise ValidationError('Unrecognized point group bits: %d\n' % (bits)). psi4.driver.qcdb.exceptions.ValidationError: Unrecognized point group bits: 80. Printing out the relevant lines from the Psithon --> Python processed input file:; H -0.3913180530 -0.8282585144 -0.5761431456; H 0.0839750469 -0.2910425067 1.0389058590; H 0.9764814973 0.2730248868 -0.3781855106; """"""); core.IO.set_default_namespace(""""); --> energy(""BP86/sto-3g""). !------------------------------------!; ! !; ! Unrecognized point group bits: 80 !; ! !; !------------------------------------!. Psi4 stopped on: Friday, 30 August 2024 04:55PM; Psi4 wall time for execution: 0:00:00.03. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3213
https://github.com/psi4/psi4/issues/3213:4766,Security,Validat,ValidationError,4766,"vs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 1570, in update_geometry; self.set_point_group(self.find_point_group()); ^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2423, in find_point_group; pg = self.find_highest_point_group(tol) # D2h subgroup; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2523, in find_highest_point_group; return PointGroup(pg_bits); ^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1530, in __init__; self.constructor_bits(*args); File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1573, in constructor_bits; self.symb = self.bits_to_basic_name(self.PYbits); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1755, in bits_to_basic_name; raise ValidationError('Unrecognized point group bits: %d\n' % (bits)). psi4.driver.qcdb.exceptions.ValidationError: Unrecognized point group bits: 80. Printing out the relevant lines from the Psithon --> Python processed input file:; H -0.3913180530 -0.8282585144 -0.5761431456; H 0.0839750469 -0.2910425067 1.0389058590; H 0.9764814973 0.2730248868 -0.3781855106; """"""); core.IO.set_default_namespace(""""); --> energy(""BP86/sto-3g""). !------------------------------------!; ! !; ! Unrecognized point group bits: 80 !; ! !; !------------------------------------!. Psi4 stopped on: Friday, 30 August 2024 04:55PM; Psi4 wall time for execution: 0:00:00.03. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3213
https://github.com/psi4/psi4/issues/3213:4859,Security,Validat,ValidationError,4859,"vs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 1570, in update_geometry; self.set_point_group(self.find_point_group()); ^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2423, in find_point_group; pg = self.find_highest_point_group(tol) # D2h subgroup; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2523, in find_highest_point_group; return PointGroup(pg_bits); ^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1530, in __init__; self.constructor_bits(*args); File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1573, in constructor_bits; self.symb = self.bits_to_basic_name(self.PYbits); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1755, in bits_to_basic_name; raise ValidationError('Unrecognized point group bits: %d\n' % (bits)). psi4.driver.qcdb.exceptions.ValidationError: Unrecognized point group bits: 80. Printing out the relevant lines from the Psithon --> Python processed input file:; H -0.3913180530 -0.8282585144 -0.5761431456; H 0.0839750469 -0.2910425067 1.0389058590; H 0.9764814973 0.2730248868 -0.3781855106; """"""); core.IO.set_default_namespace(""""); --> energy(""BP86/sto-3g""). !------------------------------------!; ! !; ! Unrecognized point group bits: 80 !; ! !; !------------------------------------!. Psi4 stopped on: Friday, 30 August 2024 04:55PM; Psi4 wall time for execution: 0:00:00.03. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3213
https://github.com/psi4/psi4/issues/3214:118,Availability,error,error,118,"A fresh compile of psi4 1.9.1 on Fedora (yay, finally updating from 1.3.2!) fails to run; all the tests fail with the error; ```; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Exit Status: overall (1); ```; which suggests that there is critical path code that is accessing a `std::vector` out-of-bounds. All Fedora packages are compiled with the following default optimization flags; ```; -O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Wno-complain-wrong-lang -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -march=x86-64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214
https://github.com/psi4/psi4/issues/3214:592,Performance,optimiz,optimization,592,"A fresh compile of psi4 1.9.1 on Fedora (yay, finally updating from 1.3.2!) fails to run; all the tests fail with the error; ```; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Exit Status: overall (1); ```; which suggests that there is critical path code that is accessing a `std::vector` out-of-bounds. All Fedora packages are compiled with the following default optimization flags; ```; -O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Wno-complain-wrong-lang -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -march=x86-64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214
https://github.com/psi4/psi4/issues/3214:491,Security,access,accessing,491,"A fresh compile of psi4 1.9.1 on Fedora (yay, finally updating from 1.3.2!) fails to run; all the tests fail with the error; ```; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Exit Status: overall (1); ```; which suggests that there is critical path code that is accessing a `std::vector` out-of-bounds. All Fedora packages are compiled with the following default optimization flags; ```; -O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Wno-complain-wrong-lang -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -march=x86-64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214
https://github.com/psi4/psi4/issues/3214:740,Security,secur,security,740,"A fresh compile of psi4 1.9.1 on Fedora (yay, finally updating from 1.3.2!) fails to run; all the tests fail with the error; ```; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Exit Status: overall (1); ```; which suggests that there is critical path code that is accessing a `std::vector` out-of-bounds. All Fedora packages are compiled with the following default optimization flags; ```; -O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Wno-complain-wrong-lang -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -march=x86-64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214
https://github.com/psi4/psi4/issues/3214:98,Testability,test,tests,98,"A fresh compile of psi4 1.9.1 on Fedora (yay, finally updating from 1.3.2!) fails to run; all the tests fail with the error; ```; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Exit Status: overall (1); ```; which suggests that there is critical path code that is accessing a `std::vector` out-of-bounds. All Fedora packages are compiled with the following default optimization flags; ```; -O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Wno-complain-wrong-lang -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -march=x86-64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214
https://github.com/psi4/psi4/issues/3214:364,Testability,Assert,Assertion,364,"A fresh compile of psi4 1.9.1 on Fedora (yay, finally updating from 1.3.2!) fails to run; all the tests fail with the error; ```; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Exit Status: overall (1); ```; which suggests that there is critical path code that is accessing a `std::vector` out-of-bounds. All Fedora packages are compiled with the following default optimization flags; ```; -O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Wno-complain-wrong-lang -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -march=x86-64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3214
https://github.com/psi4/psi4/pull/3215:106,Availability,error,error,106,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes the buffer overflow error described in #3214 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3215
https://github.com/psi4/psi4/pull/3215:266,Deployability,release,release,266,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes the buffer overflow error described in #3214 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3215
https://github.com/psi4/psi4/pull/3215:641,Testability,Test,Tests,641,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes the buffer overflow error described in #3214 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3215
https://github.com/psi4/psi4/pull/3215:715,Testability,test,tests,715,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes the buffer overflow error described in #3214 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3215
https://github.com/psi4/psi4/pull/3215:806,Testability,test,tests,806,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes the buffer overflow error described in #3214 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3215
https://github.com/psi4/psi4/pull/3216:124,Availability,avail,available,124,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; On the Fedora build system, `python` is not available which causes tests to fail.; This patch fixes this issue for good. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3216
https://github.com/psi4/psi4/pull/3216:168,Deployability,patch,patch,168,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; On the Fedora build system, `python` is not available which causes tests to fail.; This patch fixes this issue for good. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3216
https://github.com/psi4/psi4/pull/3216:334,Deployability,release,release,334,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; On the Fedora build system, `python` is not available which causes tests to fail.; This patch fixes this issue for good. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3216
https://github.com/psi4/psi4/pull/3216:147,Testability,test,tests,147,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; On the Fedora build system, `python` is not available which causes tests to fail.; This patch fixes this issue for good. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3216
https://github.com/psi4/psi4/pull/3216:709,Testability,Test,Tests,709,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; On the Fedora build system, `python` is not available which causes tests to fail.; This patch fixes this issue for good. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3216
https://github.com/psi4/psi4/pull/3216:783,Testability,test,tests,783,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; On the Fedora build system, `python` is not available which causes tests to fail.; This patch fixes this issue for good. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3216
https://github.com/psi4/psi4/pull/3216:874,Testability,test,tests,874,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; On the Fedora build system, `python` is not available which causes tests to fail.; This patch fixes this issue for good. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3216
https://github.com/psi4/psi4/issues/3217:562,Availability,fault,fault,562,"Dear Developers,. I would like to perform counterpoise-corrected DBOC computations at the CCSD level, using psi4-1.9.1. For this purpose, I wrote the following input:. ```; molecule dimer {; 0 1; N 1.608094757 -0.561155368 0.000000000; N 2.389700473 0.210989439 0.000000000; --; 0 1; N -2.389700473 -0.210989439 0.000000000; N -1.608094757 0.561155368 0.000000000; }. set globals {; cfour_dboc on; basis cc-pvdz; d_convergence 11; }. e_cp = energy('c4-ccsd',bsse_type='cp', return_total_data=True); ```. When I tried to run this input, I received a segmentation fault, without any further information. If I replace `c4-ccsd` with `c4-hf`, then there occurs another segmentation fault, which is more verbose than the previous one:. `QcdbException: Psi4/Cfour gradients with ghost atoms no longer supported. Use QCEngine or QCDB where they are.`. There is a simple warning, as well, which I am not sure what to do with:. `Using qcdb.align.B787instead ofqcelemental.molutil.B787 is deprecated, and as soon as 1.5 it will stop working`. Could you please help me how to modify this input for a successful execution?. Thank you in advance for your help. Best regards,. Roland",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3217
https://github.com/psi4/psi4/issues/3217:678,Availability,fault,fault,678,"Dear Developers,. I would like to perform counterpoise-corrected DBOC computations at the CCSD level, using psi4-1.9.1. For this purpose, I wrote the following input:. ```; molecule dimer {; 0 1; N 1.608094757 -0.561155368 0.000000000; N 2.389700473 0.210989439 0.000000000; --; 0 1; N -2.389700473 -0.210989439 0.000000000; N -1.608094757 0.561155368 0.000000000; }. set globals {; cfour_dboc on; basis cc-pvdz; d_convergence 11; }. e_cp = energy('c4-ccsd',bsse_type='cp', return_total_data=True); ```. When I tried to run this input, I received a segmentation fault, without any further information. If I replace `c4-ccsd` with `c4-hf`, then there occurs another segmentation fault, which is more verbose than the previous one:. `QcdbException: Psi4/Cfour gradients with ghost atoms no longer supported. Use QCEngine or QCDB where they are.`. There is a simple warning, as well, which I am not sure what to do with:. `Using qcdb.align.B787instead ofqcelemental.molutil.B787 is deprecated, and as soon as 1.5 it will stop working`. Could you please help me how to modify this input for a successful execution?. Thank you in advance for your help. Best regards,. Roland",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3217
https://github.com/psi4/psi4/issues/3217:441,Energy Efficiency,energy,energy,441,"Dear Developers,. I would like to perform counterpoise-corrected DBOC computations at the CCSD level, using psi4-1.9.1. For this purpose, I wrote the following input:. ```; molecule dimer {; 0 1; N 1.608094757 -0.561155368 0.000000000; N 2.389700473 0.210989439 0.000000000; --; 0 1; N -2.389700473 -0.210989439 0.000000000; N -1.608094757 0.561155368 0.000000000; }. set globals {; cfour_dboc on; basis cc-pvdz; d_convergence 11; }. e_cp = energy('c4-ccsd',bsse_type='cp', return_total_data=True); ```. When I tried to run this input, I received a segmentation fault, without any further information. If I replace `c4-ccsd` with `c4-hf`, then there occurs another segmentation fault, which is more verbose than the previous one:. `QcdbException: Psi4/Cfour gradients with ghost atoms no longer supported. Use QCEngine or QCDB where they are.`. There is a simple warning, as well, which I am not sure what to do with:. `Using qcdb.align.B787instead ofqcelemental.molutil.B787 is deprecated, and as soon as 1.5 it will stop working`. Could you please help me how to modify this input for a successful execution?. Thank you in advance for your help. Best regards,. Roland",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3217
https://github.com/psi4/psi4/issues/3217:34,Performance,perform,perform,34,"Dear Developers,. I would like to perform counterpoise-corrected DBOC computations at the CCSD level, using psi4-1.9.1. For this purpose, I wrote the following input:. ```; molecule dimer {; 0 1; N 1.608094757 -0.561155368 0.000000000; N 2.389700473 0.210989439 0.000000000; --; 0 1; N -2.389700473 -0.210989439 0.000000000; N -1.608094757 0.561155368 0.000000000; }. set globals {; cfour_dboc on; basis cc-pvdz; d_convergence 11; }. e_cp = energy('c4-ccsd',bsse_type='cp', return_total_data=True); ```. When I tried to run this input, I received a segmentation fault, without any further information. If I replace `c4-ccsd` with `c4-hf`, then there occurs another segmentation fault, which is more verbose than the previous one:. `QcdbException: Psi4/Cfour gradients with ghost atoms no longer supported. Use QCEngine or QCDB where they are.`. There is a simple warning, as well, which I am not sure what to do with:. `Using qcdb.align.B787instead ofqcelemental.molutil.B787 is deprecated, and as soon as 1.5 it will stop working`. Could you please help me how to modify this input for a successful execution?. Thank you in advance for your help. Best regards,. Roland",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3217
https://github.com/psi4/psi4/issues/3217:856,Usability,simpl,simple,856,"Dear Developers,. I would like to perform counterpoise-corrected DBOC computations at the CCSD level, using psi4-1.9.1. For this purpose, I wrote the following input:. ```; molecule dimer {; 0 1; N 1.608094757 -0.561155368 0.000000000; N 2.389700473 0.210989439 0.000000000; --; 0 1; N -2.389700473 -0.210989439 0.000000000; N -1.608094757 0.561155368 0.000000000; }. set globals {; cfour_dboc on; basis cc-pvdz; d_convergence 11; }. e_cp = energy('c4-ccsd',bsse_type='cp', return_total_data=True); ```. When I tried to run this input, I received a segmentation fault, without any further information. If I replace `c4-ccsd` with `c4-hf`, then there occurs another segmentation fault, which is more verbose than the previous one:. `QcdbException: Psi4/Cfour gradients with ghost atoms no longer supported. Use QCEngine or QCDB where they are.`. There is a simple warning, as well, which I am not sure what to do with:. `Using qcdb.align.B787instead ofqcelemental.molutil.B787 is deprecated, and as soon as 1.5 it will stop working`. Could you please help me how to modify this input for a successful execution?. Thank you in advance for your help. Best regards,. Roland",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3217
https://github.com/psi4/psi4/issues/3218:264,Energy Efficiency,energy,energy,264,"I'm attempting to compute the energies of halogens, and keep having convergence problems with B97-3c. Using the below input works with any reasonable functional/basis combination, but not B97-3c. ```python; molecule {; 0 2; Br; }. set reference UHF. # Successful; energy(""HF/6-31G*""); energy(""B3LYP/6-31G*""); energy(""HF-3C""); energy(""B97-3/def2-mTZVP""); energy(""r2SCAN-3c""); energy(""wB97X-3c""). # Fails; energy(""B97-3c""); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3218
https://github.com/psi4/psi4/issues/3218:285,Energy Efficiency,energy,energy,285,"I'm attempting to compute the energies of halogens, and keep having convergence problems with B97-3c. Using the below input works with any reasonable functional/basis combination, but not B97-3c. ```python; molecule {; 0 2; Br; }. set reference UHF. # Successful; energy(""HF/6-31G*""); energy(""B3LYP/6-31G*""); energy(""HF-3C""); energy(""B97-3/def2-mTZVP""); energy(""r2SCAN-3c""); energy(""wB97X-3c""). # Fails; energy(""B97-3c""); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3218
https://github.com/psi4/psi4/issues/3218:309,Energy Efficiency,energy,energy,309,"I'm attempting to compute the energies of halogens, and keep having convergence problems with B97-3c. Using the below input works with any reasonable functional/basis combination, but not B97-3c. ```python; molecule {; 0 2; Br; }. set reference UHF. # Successful; energy(""HF/6-31G*""); energy(""B3LYP/6-31G*""); energy(""HF-3C""); energy(""B97-3/def2-mTZVP""); energy(""r2SCAN-3c""); energy(""wB97X-3c""). # Fails; energy(""B97-3c""); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3218
https://github.com/psi4/psi4/issues/3218:326,Energy Efficiency,energy,energy,326,"I'm attempting to compute the energies of halogens, and keep having convergence problems with B97-3c. Using the below input works with any reasonable functional/basis combination, but not B97-3c. ```python; molecule {; 0 2; Br; }. set reference UHF. # Successful; energy(""HF/6-31G*""); energy(""B3LYP/6-31G*""); energy(""HF-3C""); energy(""B97-3/def2-mTZVP""); energy(""r2SCAN-3c""); energy(""wB97X-3c""). # Fails; energy(""B97-3c""); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3218
https://github.com/psi4/psi4/issues/3218:354,Energy Efficiency,energy,energy,354,"I'm attempting to compute the energies of halogens, and keep having convergence problems with B97-3c. Using the below input works with any reasonable functional/basis combination, but not B97-3c. ```python; molecule {; 0 2; Br; }. set reference UHF. # Successful; energy(""HF/6-31G*""); energy(""B3LYP/6-31G*""); energy(""HF-3C""); energy(""B97-3/def2-mTZVP""); energy(""r2SCAN-3c""); energy(""wB97X-3c""). # Fails; energy(""B97-3c""); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3218
https://github.com/psi4/psi4/issues/3218:375,Energy Efficiency,energy,energy,375,"I'm attempting to compute the energies of halogens, and keep having convergence problems with B97-3c. Using the below input works with any reasonable functional/basis combination, but not B97-3c. ```python; molecule {; 0 2; Br; }. set reference UHF. # Successful; energy(""HF/6-31G*""); energy(""B3LYP/6-31G*""); energy(""HF-3C""); energy(""B97-3/def2-mTZVP""); energy(""r2SCAN-3c""); energy(""wB97X-3c""). # Fails; energy(""B97-3c""); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3218
https://github.com/psi4/psi4/issues/3218:404,Energy Efficiency,energy,energy,404,"I'm attempting to compute the energies of halogens, and keep having convergence problems with B97-3c. Using the below input works with any reasonable functional/basis combination, but not B97-3c. ```python; molecule {; 0 2; Br; }. set reference UHF. # Successful; energy(""HF/6-31G*""); energy(""B3LYP/6-31G*""); energy(""HF-3C""); energy(""B97-3/def2-mTZVP""); energy(""r2SCAN-3c""); energy(""wB97X-3c""). # Fails; energy(""B97-3c""); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3218
https://github.com/psi4/psi4/pull/3219:333,Deployability,release,release,333,"## Description; Currently, DIIS files are dumped to working directory for ambit tensors. This PR moves these temporary files to the scratch directory, which seems a better place to store these files. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; I just prepend the full path before filename. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3219
https://github.com/psi4/psi4/pull/3219:698,Testability,Test,Tests,698,"## Description; Currently, DIIS files are dumped to working directory for ambit tensors. This PR moves these temporary files to the scratch directory, which seems a better place to store these files. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; I just prepend the full path before filename. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3219
https://github.com/psi4/psi4/pull/3219:772,Testability,test,tests,772,"## Description; Currently, DIIS files are dumped to working directory for ambit tensors. This PR moves these temporary files to the scratch directory, which seems a better place to store these files. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; I just prepend the full path before filename. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3219
https://github.com/psi4/psi4/pull/3219:863,Testability,test,tests,863,"## Description; Currently, DIIS files are dumped to working directory for ambit tensors. This PR moves these temporary files to the scratch directory, which seems a better place to store these files. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; I just prepend the full path before filename. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3219
https://github.com/psi4/psi4/pull/3220:371,Deployability,release,release,371,"## Description; Initial draft. Next step is going to be ensure more backwards compatibility... This will involve more complicated manipulations of the current module, probably. Mark III of this refactor is going to use this code in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3220
https://github.com/psi4/psi4/pull/3220:194,Modifiability,refactor,refactor,194,"## Description; Initial draft. Next step is going to be ensure more backwards compatibility... This will involve more complicated manipulations of the current module, probably. Mark III of this refactor is going to use this code in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3220
https://github.com/psi4/psi4/pull/3220:746,Testability,Test,Tests,746,"## Description; Initial draft. Next step is going to be ensure more backwards compatibility... This will involve more complicated manipulations of the current module, probably. Mark III of this refactor is going to use this code in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3220
https://github.com/psi4/psi4/pull/3220:820,Testability,test,tests,820,"## Description; Initial draft. Next step is going to be ensure more backwards compatibility... This will involve more complicated manipulations of the current module, probably. Mark III of this refactor is going to use this code in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3220
https://github.com/psi4/psi4/pull/3220:911,Testability,test,tests,911,"## Description; Initial draft. Next step is going to be ensure more backwards compatibility... This will involve more complicated manipulations of the current module, probably. Mark III of this refactor is going to use this code in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3220
https://github.com/psi4/psi4/issues/3221:82,Availability,down,downloads,82,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:9184,Availability,Toler,Tolerance,9184,"l: VDZP; Number of shells: 28; Number of ECP primitives: 28; Number of ECP core electrons: 14; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97X-V range-separated functional. => Exact (HF) Exchange <=. 0.8330 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 239042; Total Blocks = 1831; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 9 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-8, 10-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.162 GiB; user supplied 0.162 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 166; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 4.4477; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:9807,Availability,Mask,Mask,9807,"0 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 239042; Total Blocks = 1831; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 9 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-8, 10-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.162 GiB; user supplied 0.162 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 166; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 4.4477; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.0% of DFT collocation blocks in 0.161 [GiB]. Minimum eigenvalue in the overlap matrix is 5.5610928795E-04.; Reciprocal condition number of the overlap matrix is 9.8342984140E-05.; Using symmetric orthogonalization. ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo ; -------------------------; A 111 111 ; -------------------------; Total 111 111; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -39.70316824232670 -3.97032e+01 0.00000e+00 ; @DF-RKS iter 1: -43.27234536758360 -3.56918e+00 3.69413e-03 ADIIS/DIIS; @",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:21582,Availability,Toler,Tolerance,21582,"l: VDZP; Number of shells: 28; Number of ECP primitives: 28; Number of ECP core electrons: 14; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97X-V range-separated functional. => Exact (HF) Exchange <=. 0.8330 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 238643; Total Blocks = 1822; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 3-8 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 2, 9-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.163 GiB; user supplied 0.163 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 167; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 3.8471; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:22202,Availability,Mask,Mask,22202,"8330 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 238643; Total Blocks = 1822; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 3-8 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 2, 9-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.163 GiB; user supplied 0.163 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 167; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 3.8471; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.0% of DFT collocation blocks in 0.155 [GiB]. Minimum eigenvalue in the overlap matrix is 5.5224744543E-04.; Reciprocal condition number of the overlap matrix is 8.7845130506E-05.; Using symmetric orthogonalization. ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo ; -------------------------; A 111 111 ; -------------------------; Total 111 111; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -40.20742626722070 -4.02074e+01 0.00000e+00 ; @DF-RKS iter 1: -41.85372076056422 -1.64629e+00 4.64946e-03 DIIS/ADIIS; @",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:3053,Deployability,release,release,3053,"49203508; C -3.871661805455 -0.281870364655 -0.036170796492 ; H -4.492551805455 0.418709635345 -0.600540796492 ; H -4.386761805455 -1.069870364655 0.519199203508 ; }. energy(""wb97x-3c""); ```. Input file for heptatriyne:; ```; molecule {; C -3.385689447328 -1.019909032022 -1.749453831407 ; H -4.303799447328 -1.298729032022 -2.222123831407; C -2.336629447328 -0.701769032022 -1.209473831407 ; C -1.177199447328 -0.351139032022 -0.612463831407 ; C -0.119169447328 -0.031909032022 -0.066563831407 ; C 1.038150552672 0.314670967978 0.533526168593 ; C 2.088230552672 0.627260967978 1.081186168593; C 3.329350552672 0.995630967978 1.729406168593 ; H 3.940040552672 1.640920967978 1.078936168593 ; H 3.139820552672 1.543830967978 2.665426168593 ; H 3.926960552672 0.104360967978 1.976426168593 ; }. energy(""wb97x-3c""); ```. Output file for H2C-C5-CH2:; ```. -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.9.1 release. Git: Rev {} zzzzzzz . D. G. A. Smith, L. A. Burns, A. C. Simmonett, R. M. Parrish,; M. C. Schieber, R. Galvelis, P. Kraus, H. Kruse, R. Di Remigio,; A. Alenaizan, A. M. James, S. Lehtola, J. P. Misiewicz, M. Scheurer,; R. A. Shaw, J. B. Schriber, Y. Xie, Z. L. Glick, D. A. Sirianni,; J. S. O'Brien, J. M. Waldrop, A. Kumar, E. G. Hohenstein,; B. P. Pritchard, B. R. Brooks, H. F. Schaefer III, A. Yu. Sokolov,; K. Patkowski, A. E. DePrince III, U. Bozkaya, R. A. King,; F. A. Evangelista, J. M. Turney, T. D. Crawford, C. D. Sherrill,; J. Chem. Phys. 152(18) 184108 (2020). https://doi.org/10.1063/5.0006002. Additional Code Authors; E. T. Seidl, C. L. Janssen, E. F. Valeev, M. L. Leininger,; J. F. Gonthier, R. M. Richard, H. R. McAlexander, M. Saitow, X. Wang,; P. Verma, M. H. Lechner, A. Jiang, S. Behnle, A. G. Heide,; M. F. Herbst, and D. L. Poole. Previous Authors, Complete List of Code Contributors,; and Citations for Specific Modules; https://github.com/psi4/psi4/blob/master/codem",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:15459,Deployability,release,release,15459,"------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -0.0030364 0.0030278 -0.0000086; Dipole Y : 0.0588791 -0.0477754 0.0111036; Dipole Z : -0.0335702 0.0272773 -0.0062929; Magnitude : 0.0127629. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:17:38 2024; Module time:; 	user time = 9.63 seconds = 0.16 minutes; 	system time = 0.15 seconds = 0.00 minutes; 	total time = 10 seconds = 0.17 minutes; Total time:; 	user time = 9.63 seconds = 0.16 minutes; 	system time = 0.15 seconds = 0.00 minutes; 	total time = 10 seconds = 0.17 minutes. Psi4 stopped on: Monday, 16 September 2024 10:17PM; Psi4 wall time for execution: 0:00:10.01. *** Psi4 exiting successfully. Buy a developer a beer!; ```. Output file for heptatriyne:; ```. -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.9.1 release. Git: Rev {} zzzzzzz . D. G. A. Smith, L. A. Burns, A. C. Simmonett, R. M. Parrish,; M. C. Schieber, R. Galvelis, P. Kraus, H. Kruse, R. Di Remigio,; A. Alenaizan, A. M. James, S. Lehtola, J. P. Misiewicz, M. Scheurer,; R. A. Shaw, J. B. Schriber, Y. Xie, Z. L. Glick, D. A. Sirianni,; J. S. O'Brien, J. M. Waldrop, A. Kumar, E. G. Hohenstein,; B. P. Pritchard, B. R. Brooks, H. F. Schaefer III, A. Yu. Sokolov,; K. Patkowski, A. E. DePrince III, U. Bozkaya, R. A. King,; F. A. Evangelista, J. M. Turney, T. D. Crawford, C. D. Sherrill,; J. Chem. Phys. 152(18) 184108 (2020). https://doi.org/10.1063/5.0006002. Additional Code Authors; E. T. Seidl, C. L. Janssen, E. F. Valeev, M. L. Leininger,; J. F. Gonthier, R. M. Richard, H. R. McAlexander, M. Saitow, X. Wang,; P. Verma, M. H. Lechner, A. Jiang, S. Behnle, A. G. Heide,; M. F. Herbst, and D. L. Poole. Previous Authors, Complete List of Code Contributors,; and Citations for Specific Modules; https://github.com/psi4/psi4/blob/master/codem",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:147,Energy Efficiency,energy,energy,147,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:426,Energy Efficiency,energy,energy,426,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:498,Energy Efficiency,energy,energy,498,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:703,Energy Efficiency,energy,energy,703,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:959,Energy Efficiency,energy,energy,959,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:2223,Energy Efficiency,energy,energy,2223,"57 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -0.694370796492 ; H 4.393828194545 0.864729635345 0.797449203508; C -3.871661805455 -0.281870364655 -0.036170796492 ; H -4.492551805455 0.418709635345 -0.600540796492 ; H -4.386761805455 -1.069870364655 0.519199203508 ; }. energy(""wb97x-3c""); ```. Input file for heptatriyne:; ```; molecule {; C -3.385689447328 -1.019909032022 -1.749453831407 ; H -4.303799447328 -1.298729032022 -2.222123831407; C -2.336629447328 -0.701769032022 -1.209473831407 ; C -1.177199447328 -0.351139032022 -0.612463831407 ; C -0.119169447328 -0.031909032022 -0.066563831407 ; C 1.038150552672 0.314670967978 0.533526168593 ; C 2.088230552672 0.627260967978 1.081186168593; C 3.329350552672 0.995630967978 1.729406168593 ; H 3.940040552672 1.640920967978 1.078936168593 ; H 3.139820552672 1.543830967978 2.665426168593 ; H 3.926960552672 0.104360967978 1.976426168593 ; }. energy(""wb97x-3c""); ```. Output file for H2C-C5-CH2:; ```. -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.9.1 release. Git: Rev {} zzzzzzz . D. G. A. Smith, L. A. Burns, A. C. Simmonett, R. M. Parrish,; M. C. Schieber, R. Galvelis, P. Kraus, H. Kruse, R. Di Remigio,; A. Alenaizan, A. M. Jame",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:2849,Energy Efficiency,energy,energy,2849,"203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -0.694370796492 ; H 4.393828194545 0.864729635345 0.797449203508; C -3.871661805455 -0.281870364655 -0.036170796492 ; H -4.492551805455 0.418709635345 -0.600540796492 ; H -4.386761805455 -1.069870364655 0.519199203508 ; }. energy(""wb97x-3c""); ```. Input file for heptatriyne:; ```; molecule {; C -3.385689447328 -1.019909032022 -1.749453831407 ; H -4.303799447328 -1.298729032022 -2.222123831407; C -2.336629447328 -0.701769032022 -1.209473831407 ; C -1.177199447328 -0.351139032022 -0.612463831407 ; C -0.119169447328 -0.031909032022 -0.066563831407 ; C 1.038150552672 0.314670967978 0.533526168593 ; C 2.088230552672 0.627260967978 1.081186168593; C 3.329350552672 0.995630967978 1.729406168593 ; H 3.940040552672 1.640920967978 1.078936168593 ; H 3.139820552672 1.543830967978 2.665426168593 ; H 3.926960552672 0.104360967978 1.976426168593 ; }. energy(""wb97x-3c""); ```. Output file for H2C-C5-CH2:; ```. -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.9.1 release. Git: Rev {} zzzzzzz . D. G. A. Smith, L. A. Burns, A. C. Simmonett, R. M. Parrish,; M. C. Schieber, R. Galvelis, P. Kraus, H. Kruse, R. Di Remigio,; A. Alenaizan, A. M. James, S. Lehtola, J. P. Misiewicz, M. Scheurer,; R. A. Shaw, J. B. Schriber, Y. Xie, Z. L. Glick, D. A. Sirianni,; J. S. O'Brien, J. M. Waldrop, A. Kumar, E. G. Hohenstein,; B. P. Pritchard, B. R. Brooks, H. F. Schaefer III, A. Yu. Sokolov,; K. Patkowski, A. E. DePrince III, U. Bozkaya, R. A. King,; F. A. Evangelista, J. M. Turney, T. D. Crawford, C. D. Sherrill,; J. Chem. Phys. 152(18) 184108 (2020). https://doi.org/10.1063/5.0006002. Additional Code Authors; E. T. Seidl, C. L. Janssen, E. F. Valeev, M. L. Leininger,; J. F. Gonthier, R. M. Richard, H. R. McAlexander, M. Saitow, X. Wang,; P. Verma, M. H. Lechner, A. Jiang",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:5108,Energy Efficiency,energy,energy,5108,"troduction.html#citing-psifour. -----------------------------------------------------------------------. Psi4 started on: Monday, 16 September 2024 10:17PM. Process ID: 23320; Host: agincourt.lan; PSIDATADIR: /Users/cwagen/.../.pixi/envs/dev/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -0.694370796492 ; H 4.393828194545 0.864729635345 0.797449203508; C -3.871661805455 -0.281870364655 -0.036170796492 ; H -4.492551805455 0.418709635345 -0.600540796492 ; H -4.386761805455 -1.069870364655 0.519199203508 ; }. energy(""wb97x-3c""); --------------------------------------------------------------------------. Scratch directory: /tmp/; => Libint2 <=. Primary basis highest AM E, G, H: 6, 6, 3; Auxiliary basis highest AM E, G, H: 7, 7, 4; Onebody basis highest AM E, G, H: -, -, -; Solid Harmonics ordering: Gaussian. *** tstart() called on agincourt.lan; *** at Mon Sep 16 22:17:28 2024. => Loading Basis Set <=. Name: VDZP; Role: ORBITAL; Keyword: BASIS; atoms 1-6, 9 entry C line 117 (ECP: line 2345) file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs ; atoms 7-8, 10-11 entry H line 22 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs . !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!. => WB97X3C: Empirical Dispersion <=. Grimme's -D4 (BJ-damping) Dispersion Correction with ATM; Caldeweyher, E.; Ehlert, S.; Hansen, A.; Neugebauer, H.; Spicher, S.; Bannwarth, C.; Grimmme, S., J. Chem. Phys. 150, 154122 (2019). a1 = 0.246400; a2 = 4.737000; alp = 16.000000; s6 = 1.000000; s8 = 0.000000; s9 = 1.0",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:6532,Energy Efficiency,charge,charge,6532," Keyword: BASIS; atoms 1-6, 9 entry C line 117 (ECP: line 2345) file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs ; atoms 7-8, 10-11 entry H line 22 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs . !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!. => WB97X3C: Empirical Dispersion <=. Grimme's -D4 (BJ-damping) Dispersion Correction with ATM; Caldeweyher, E.; Ehlert, S.; Hansen, A.; Neugebauer, H.; Spicher, S.; Bannwarth, C.; Grimmme, S., J. Chem. Phys. 150, 154122 (2019). a1 = 0.246400; a2 = 4.737000; alp = 16.000000; s6 = 1.000000; s8 = 0.000000; s9 = 1.000000; ga = 3.000000; gc = 2.000000; wf = 6.000000. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C1. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; C -2.556271805455 -0.181690364655 -0.026620796492 12.000000000000; C -1.282011805455 -0.085620364655 -0.016410796492 12.000000000000; C -0.000441805455 0.006819635345 -0.003870796492 12.000000000000; C 1.281348194545 0.095909635345 0.010599203508 12.000000000000; C 2.556298194545 0.180969635345 0.026599203508 12.000000000000; C 3.872538194545 0.268679635345 0.044049203508 12.000000000000; H 4.487898194545 -0.251640364655 -0.694370796492 1.007825032230; H 4.393828194545 0.864729635345 0.797449203508 1.007825032230; C -3.871661805455 -0.281870364655 -0.036170796492 12.000000000000; H -4.492551805455 0.418709635345 -0.600540796492 1.007825032230; H -4.386761805455 -1.069870364655 0.519199203508 1.007825032230. Running in c1 symmetry. Rotational constants: A = 4.80078 B = 0.02632 C = 0.02632 [cm^-1]; Rotational constants: A = 143923.76944 B = 788.91243 C = 7",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:7591,Energy Efficiency,Charge,Charge,7591,"------ ----------------- -----------------; C -2.556271805455 -0.181690364655 -0.026620796492 12.000000000000; C -1.282011805455 -0.085620364655 -0.016410796492 12.000000000000; C -0.000441805455 0.006819635345 -0.003870796492 12.000000000000; C 1.281348194545 0.095909635345 0.010599203508 12.000000000000; C 2.556298194545 0.180969635345 0.026599203508 12.000000000000; C 3.872538194545 0.268679635345 0.044049203508 12.000000000000; H 4.487898194545 -0.251640364655 -0.694370796492 1.007825032230; H 4.393828194545 0.864729635345 0.797449203508 1.007825032230; C -3.871661805455 -0.281870364655 -0.036170796492 12.000000000000; H -4.492551805455 0.418709635345 -0.600540796492 1.007825032230; H -4.386761805455 -1.069870364655 0.519199203508 1.007825032230. Running in c1 symmetry. Rotational constants: A = 4.80078 B = 0.02632 C = 0.02632 [cm^-1]; Rotational constants: A = 143923.76944 B = 788.91243 C = 788.90743 [MHz]; Nuclear repulsion = 93.753880150339768. Charge = 0; Multiplicity = 1; Electrons = 32; Nalpha = 16; Nbeta = 16. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12. ==> Primary Basis <==. Basis Set: VDZP; Blend: VDZP; Number of shells: 47; Number of basis functions: 111; Number of Cartesian functions: 118; Spherical Harmonics?: true; Max angular momentum: 2. Core potential: VDZP; Number of shells: 28; Number of ECP primitives: 28; Number of ECP core electrons: 14; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hy",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:7791,Energy Efficiency,Energy,Energy,7791,"0; C -0.000441805455 0.006819635345 -0.003870796492 12.000000000000; C 1.281348194545 0.095909635345 0.010599203508 12.000000000000; C 2.556298194545 0.180969635345 0.026599203508 12.000000000000; C 3.872538194545 0.268679635345 0.044049203508 12.000000000000; H 4.487898194545 -0.251640364655 -0.694370796492 1.007825032230; H 4.393828194545 0.864729635345 0.797449203508 1.007825032230; C -3.871661805455 -0.281870364655 -0.036170796492 12.000000000000; H -4.492551805455 0.418709635345 -0.600540796492 1.007825032230; H -4.386761805455 -1.069870364655 0.519199203508 1.007825032230. Running in c1 symmetry. Rotational constants: A = 4.80078 B = 0.02632 C = 0.02632 [cm^-1]; Rotational constants: A = 143923.76944 B = 788.91243 C = 788.90743 [MHz]; Nuclear repulsion = 93.753880150339768. Charge = 0; Multiplicity = 1; Electrons = 32; Nalpha = 16; Nbeta = 16. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12. ==> Primary Basis <==. Basis Set: VDZP; Blend: VDZP; Number of shells: 47; Number of basis functions: 111; Number of Cartesian functions: 118; Spherical Harmonics?: true; Max angular momentum: 2. Core potential: VDZP; Number of shells: 28; Number of ECP primitives: 28; Number of ECP core electrons: 14; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97X-V range-separated functional. => Exact (HF) Exchange <=. 0.8330 HF,LR [omega = 0.3000]; 0",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:10609,Energy Efficiency,Energy,Energy,10609,"==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 166; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 4.4477; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.0% of DFT collocation blocks in 0.161 [GiB]. Minimum eigenvalue in the overlap matrix is 5.5610928795E-04.; Reciprocal condition number of the overlap matrix is 9.8342984140E-05.; Using symmetric orthogonalization. ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo ; -------------------------; A 111 111 ; -------------------------; Total 111 111; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -39.70316824232670 -3.97032e+01 0.00000e+00 ; @DF-RKS iter 1: -43.27234536758360 -3.56918e+00 3.69413e-03 ADIIS/DIIS; @DF-RKS iter 2: -43.35383639315761 -8.14910e-02 2.43782e-03 ADIIS/DIIS; @DF-RKS iter 3: -43.38733837751467 -3.35020e-02 1.10466e-03 ADIIS/DIIS; @DF-RKS iter 4: -43.39730753466733 -9.96916e-03 3.77682e-04 ADIIS/DIIS; @DF-RKS iter 5: -43.39937943728395 -2.07190e-03 2.05445e-04 ADIIS/DIIS; @DF-RKS iter 6: -43.40044782166130 -1.06838e-03 1.11750e-04 ADIIS/DIIS; @DF-RKS iter 7: -43.40150886235944 -1.06104e-03 1.08271e-04 ADIIS/DIIS; @DF-RKS iter 8: -43.40259319327883 -1.08433e-03 1.03266e-04 ADIIS/DIIS; @DF-RKS iter 9: -43.40562867052822 -3.03548e-03 8.61300e-05 DIIS; @DF-RKS iter 10: -43.40705815490672 -1.42948e-03 4.81672e-05 DIIS; @DF-RKS iter 11: -43.40726807149662 -2.09917e-04 3.05961e-05 DIIS; @DF-RKS iter 12: -43.40746692997944 -1.98858e-04 1.72184e-05 DIIS; @DF-RKS iter 13: -43.40747472236222 -7.79238e-06 6.59771e-06 DIIS; @DF-RKS ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:11879,Energy Efficiency,Energy,Energy,11879,e-02 1.10466e-03 ADIIS/DIIS; @DF-RKS iter 4: -43.39730753466733 -9.96916e-03 3.77682e-04 ADIIS/DIIS; @DF-RKS iter 5: -43.39937943728395 -2.07190e-03 2.05445e-04 ADIIS/DIIS; @DF-RKS iter 6: -43.40044782166130 -1.06838e-03 1.11750e-04 ADIIS/DIIS; @DF-RKS iter 7: -43.40150886235944 -1.06104e-03 1.08271e-04 ADIIS/DIIS; @DF-RKS iter 8: -43.40259319327883 -1.08433e-03 1.03266e-04 ADIIS/DIIS; @DF-RKS iter 9: -43.40562867052822 -3.03548e-03 8.61300e-05 DIIS; @DF-RKS iter 10: -43.40705815490672 -1.42948e-03 4.81672e-05 DIIS; @DF-RKS iter 11: -43.40726807149662 -2.09917e-04 3.05961e-05 DIIS; @DF-RKS iter 12: -43.40746692997944 -1.98858e-04 1.72184e-05 DIIS; @DF-RKS iter 13: -43.40747472236222 -7.79238e-06 6.59771e-06 DIIS; @DF-RKS iter 14: -43.40748116314034 -6.44078e-06 3.82428e-06 DIIS; @DF-RKS iter 15: -43.40748185746369 -6.94323e-07 1.86119e-06 DIIS; @DF-RKS iter 16: -43.40748201260618 -1.55142e-07 1.54127e-06 DIIS; @DF-RKS iter 17: -43.40748214051649 -1.27910e-07 7.09491e-07 DIIS; Energy and wave function converged. ==> Post-Iterations <==. Electrons on quadrature grid:; Ntotal = 32.0000039846 ; deviation = 3.985e-06 . Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; 29A 0.211551 30A 0.216394 31A 0.278756 ; 32A 0.285132 33A 0.285433 34A 0.307461 ; 35A 0.324830 36A 0.340649 37A 0.340734 ; 38A 0.350696 39A 0.410719 40A 0.411116 ; 41A 0.412113 42A 0.412296 43A 0.475230 ; 44A 0.475508 45A 0.504350 46A 0.504767 ; 47A 0.605740 48A 0.607010 49A 0.653648 ; 50A 0.665432 51A 0.712798 52A 0.728207 ; 53A 0.728722 54A 0.731604 55A 0.750409 ; 56A 0.785076 57A 0.814891 58A ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:13718,Energy Efficiency,Energy,Energy,13718,"4350 46A 0.504767 ; 47A 0.605740 48A 0.607010 49A 0.653648 ; 50A 0.665432 51A 0.712798 52A 0.728207 ; 53A 0.728722 54A 0.731604 55A 0.750409 ; 56A 0.785076 57A 0.814891 58A 0.822500 ; 59A 0.837421 60A 0.837786 61A 0.896368 ; 62A 0.911715 63A 0.939819 64A 1.013440 ; 65A 1.043686 66A 1.043717 67A 1.079379 ; 68A 1.110213 69A 1.243320 70A 1.248770 ; 71A 1.249096 72A 1.325143 73A 1.325198 ; 74A 1.395025 75A 1.397495 76A 1.442305 ; 77A 1.442695 78A 1.456897 79A 1.504332 ; 80A 1.639667 81A 1.641352 82A 1.668110 ; 83A 1.705574 84A 1.784410 85A 1.840841 ; 86A 1.841701 87A 1.932164 88A 2.090833 ; 89A 2.093816 90A 2.132735 91A 2.154837 ; 92A 2.180250 93A 2.253444 94A 2.481160 ; 95A 2.481328 96A 2.496342 97A 2.793920 ; 98A 2.848632 99A 2.969349 100A 2.969418 ; 101A 3.337134 102A 3.399821 103A 3.400315 ; 104A 3.528082 105A 4.155988 106A 5.476938 ; 107A 5.786400 108A 6.199146 109A 7.337445 ; 110A 8.481836 111A 8.867663 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -43.40748214051649. => Energetics <=. Nuclear Repulsion Energy = 93.7538801503397679; One-Electron Energy = -245.6257702779177521; Two-Electron Energy = 115.6223560816475100; DFT Exchange-Correlation Energy = -7.1485657255274635; Empirical Dispersion Energy = -0.0093823690585561; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -43.4074821405164926. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -0.0030364 0.0030278 -0.0000086; Dipole Y : 0.0588791 -0.0477754 0.0111036; Dipole Z : -0.0335702 0.0272773 -0.0062929; Magnitude : 0.0127629. -------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:13782,Energy Efficiency,Energy,Energy,13782,"0A 0.665432 51A 0.712798 52A 0.728207 ; 53A 0.728722 54A 0.731604 55A 0.750409 ; 56A 0.785076 57A 0.814891 58A 0.822500 ; 59A 0.837421 60A 0.837786 61A 0.896368 ; 62A 0.911715 63A 0.939819 64A 1.013440 ; 65A 1.043686 66A 1.043717 67A 1.079379 ; 68A 1.110213 69A 1.243320 70A 1.248770 ; 71A 1.249096 72A 1.325143 73A 1.325198 ; 74A 1.395025 75A 1.397495 76A 1.442305 ; 77A 1.442695 78A 1.456897 79A 1.504332 ; 80A 1.639667 81A 1.641352 82A 1.668110 ; 83A 1.705574 84A 1.784410 85A 1.840841 ; 86A 1.841701 87A 1.932164 88A 2.090833 ; 89A 2.093816 90A 2.132735 91A 2.154837 ; 92A 2.180250 93A 2.253444 94A 2.481160 ; 95A 2.481328 96A 2.496342 97A 2.793920 ; 98A 2.848632 99A 2.969349 100A 2.969418 ; 101A 3.337134 102A 3.399821 103A 3.400315 ; 104A 3.528082 105A 4.155988 106A 5.476938 ; 107A 5.786400 108A 6.199146 109A 7.337445 ; 110A 8.481836 111A 8.867663 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -43.40748214051649. => Energetics <=. Nuclear Repulsion Energy = 93.7538801503397679; One-Electron Energy = -245.6257702779177521; Two-Electron Energy = 115.6223560816475100; DFT Exchange-Correlation Energy = -7.1485657255274635; Empirical Dispersion Energy = -0.0093823690585561; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -43.4074821405164926. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -0.0030364 0.0030278 -0.0000086; Dipole Y : 0.0588791 -0.0477754 0.0111036; Dipole Z : -0.0335702 0.0272773 -0.0062929; Magnitude : 0.0127629. ------------------------------------------------------------------------------------. *",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:13825,Energy Efficiency,Energy,Energy,13825,"; 53A 0.728722 54A 0.731604 55A 0.750409 ; 56A 0.785076 57A 0.814891 58A 0.822500 ; 59A 0.837421 60A 0.837786 61A 0.896368 ; 62A 0.911715 63A 0.939819 64A 1.013440 ; 65A 1.043686 66A 1.043717 67A 1.079379 ; 68A 1.110213 69A 1.243320 70A 1.248770 ; 71A 1.249096 72A 1.325143 73A 1.325198 ; 74A 1.395025 75A 1.397495 76A 1.442305 ; 77A 1.442695 78A 1.456897 79A 1.504332 ; 80A 1.639667 81A 1.641352 82A 1.668110 ; 83A 1.705574 84A 1.784410 85A 1.840841 ; 86A 1.841701 87A 1.932164 88A 2.090833 ; 89A 2.093816 90A 2.132735 91A 2.154837 ; 92A 2.180250 93A 2.253444 94A 2.481160 ; 95A 2.481328 96A 2.496342 97A 2.793920 ; 98A 2.848632 99A 2.969349 100A 2.969418 ; 101A 3.337134 102A 3.399821 103A 3.400315 ; 104A 3.528082 105A 4.155988 106A 5.476938 ; 107A 5.786400 108A 6.199146 109A 7.337445 ; 110A 8.481836 111A 8.867663 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -43.40748214051649. => Energetics <=. Nuclear Repulsion Energy = 93.7538801503397679; One-Electron Energy = -245.6257702779177521; Two-Electron Energy = 115.6223560816475100; DFT Exchange-Correlation Energy = -7.1485657255274635; Empirical Dispersion Energy = -0.0093823690585561; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -43.4074821405164926. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -0.0030364 0.0030278 -0.0000086; Dipole Y : 0.0588791 -0.0477754 0.0111036; Dipole Z : -0.0335702 0.0272773 -0.0062929; Magnitude : 0.0127629. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:13870,Energy Efficiency,Energy,Energy,13870,"A 0.785076 57A 0.814891 58A 0.822500 ; 59A 0.837421 60A 0.837786 61A 0.896368 ; 62A 0.911715 63A 0.939819 64A 1.013440 ; 65A 1.043686 66A 1.043717 67A 1.079379 ; 68A 1.110213 69A 1.243320 70A 1.248770 ; 71A 1.249096 72A 1.325143 73A 1.325198 ; 74A 1.395025 75A 1.397495 76A 1.442305 ; 77A 1.442695 78A 1.456897 79A 1.504332 ; 80A 1.639667 81A 1.641352 82A 1.668110 ; 83A 1.705574 84A 1.784410 85A 1.840841 ; 86A 1.841701 87A 1.932164 88A 2.090833 ; 89A 2.093816 90A 2.132735 91A 2.154837 ; 92A 2.180250 93A 2.253444 94A 2.481160 ; 95A 2.481328 96A 2.496342 97A 2.793920 ; 98A 2.848632 99A 2.969349 100A 2.969418 ; 101A 3.337134 102A 3.399821 103A 3.400315 ; 104A 3.528082 105A 4.155988 106A 5.476938 ; 107A 5.786400 108A 6.199146 109A 7.337445 ; 110A 8.481836 111A 8.867663 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -43.40748214051649. => Energetics <=. Nuclear Repulsion Energy = 93.7538801503397679; One-Electron Energy = -245.6257702779177521; Two-Electron Energy = 115.6223560816475100; DFT Exchange-Correlation Energy = -7.1485657255274635; Empirical Dispersion Energy = -0.0093823690585561; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -43.4074821405164926. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -0.0030364 0.0030278 -0.0000086; Dipole Y : 0.0588791 -0.0477754 0.0111036; Dipole Z : -0.0335702 0.0272773 -0.0062929; Magnitude : 0.0127629. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:17:38 2024; Module time:; 	use",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:13926,Energy Efficiency,Energy,Energy,13926,"21 60A 0.837786 61A 0.896368 ; 62A 0.911715 63A 0.939819 64A 1.013440 ; 65A 1.043686 66A 1.043717 67A 1.079379 ; 68A 1.110213 69A 1.243320 70A 1.248770 ; 71A 1.249096 72A 1.325143 73A 1.325198 ; 74A 1.395025 75A 1.397495 76A 1.442305 ; 77A 1.442695 78A 1.456897 79A 1.504332 ; 80A 1.639667 81A 1.641352 82A 1.668110 ; 83A 1.705574 84A 1.784410 85A 1.840841 ; 86A 1.841701 87A 1.932164 88A 2.090833 ; 89A 2.093816 90A 2.132735 91A 2.154837 ; 92A 2.180250 93A 2.253444 94A 2.481160 ; 95A 2.481328 96A 2.496342 97A 2.793920 ; 98A 2.848632 99A 2.969349 100A 2.969418 ; 101A 3.337134 102A 3.399821 103A 3.400315 ; 104A 3.528082 105A 4.155988 106A 5.476938 ; 107A 5.786400 108A 6.199146 109A 7.337445 ; 110A 8.481836 111A 8.867663 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -43.40748214051649. => Energetics <=. Nuclear Repulsion Energy = 93.7538801503397679; One-Electron Energy = -245.6257702779177521; Two-Electron Energy = 115.6223560816475100; DFT Exchange-Correlation Energy = -7.1485657255274635; Empirical Dispersion Energy = -0.0093823690585561; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -43.4074821405164926. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -0.0030364 0.0030278 -0.0000086; Dipole Y : 0.0588791 -0.0477754 0.0111036; Dipole Z : -0.0335702 0.0272773 -0.0062929; Magnitude : 0.0127629. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:17:38 2024; Module time:; 	user time = 9.63 seconds = 0.16 minutes; 	system time",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:13977,Energy Efficiency,Energy,Energy,13977,"819 64A 1.013440 ; 65A 1.043686 66A 1.043717 67A 1.079379 ; 68A 1.110213 69A 1.243320 70A 1.248770 ; 71A 1.249096 72A 1.325143 73A 1.325198 ; 74A 1.395025 75A 1.397495 76A 1.442305 ; 77A 1.442695 78A 1.456897 79A 1.504332 ; 80A 1.639667 81A 1.641352 82A 1.668110 ; 83A 1.705574 84A 1.784410 85A 1.840841 ; 86A 1.841701 87A 1.932164 88A 2.090833 ; 89A 2.093816 90A 2.132735 91A 2.154837 ; 92A 2.180250 93A 2.253444 94A 2.481160 ; 95A 2.481328 96A 2.496342 97A 2.793920 ; 98A 2.848632 99A 2.969349 100A 2.969418 ; 101A 3.337134 102A 3.399821 103A 3.400315 ; 104A 3.528082 105A 4.155988 106A 5.476938 ; 107A 5.786400 108A 6.199146 109A 7.337445 ; 110A 8.481836 111A 8.867663 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -43.40748214051649. => Energetics <=. Nuclear Repulsion Energy = 93.7538801503397679; One-Electron Energy = -245.6257702779177521; Two-Electron Energy = 115.6223560816475100; DFT Exchange-Correlation Energy = -7.1485657255274635; Empirical Dispersion Energy = -0.0093823690585561; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -43.4074821405164926. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -0.0030364 0.0030278 -0.0000086; Dipole Y : 0.0588791 -0.0477754 0.0111036; Dipole Z : -0.0335702 0.0272773 -0.0062929; Magnitude : 0.0127629. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:17:38 2024; Module time:; 	user time = 9.63 seconds = 0.16 minutes; 	system time = 0.15 seconds = 0.00 minutes; 	total time = 10 seco",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:14021,Energy Efficiency,Energy,Energy,14021,"A 1.079379 ; 68A 1.110213 69A 1.243320 70A 1.248770 ; 71A 1.249096 72A 1.325143 73A 1.325198 ; 74A 1.395025 75A 1.397495 76A 1.442305 ; 77A 1.442695 78A 1.456897 79A 1.504332 ; 80A 1.639667 81A 1.641352 82A 1.668110 ; 83A 1.705574 84A 1.784410 85A 1.840841 ; 86A 1.841701 87A 1.932164 88A 2.090833 ; 89A 2.093816 90A 2.132735 91A 2.154837 ; 92A 2.180250 93A 2.253444 94A 2.481160 ; 95A 2.481328 96A 2.496342 97A 2.793920 ; 98A 2.848632 99A 2.969349 100A 2.969418 ; 101A 3.337134 102A 3.399821 103A 3.400315 ; 104A 3.528082 105A 4.155988 106A 5.476938 ; 107A 5.786400 108A 6.199146 109A 7.337445 ; 110A 8.481836 111A 8.867663 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -43.40748214051649. => Energetics <=. Nuclear Repulsion Energy = 93.7538801503397679; One-Electron Energy = -245.6257702779177521; Two-Electron Energy = 115.6223560816475100; DFT Exchange-Correlation Energy = -7.1485657255274635; Empirical Dispersion Energy = -0.0093823690585561; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -43.4074821405164926. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -0.0030364 0.0030278 -0.0000086; Dipole Y : 0.0588791 -0.0477754 0.0111036; Dipole Z : -0.0335702 0.0272773 -0.0062929; Magnitude : 0.0127629. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:17:38 2024; Module time:; 	user time = 9.63 seconds = 0.16 minutes; 	system time = 0.15 seconds = 0.00 minutes; 	total time = 10 seconds = 0.17 minutes; Total time:; 	user time = 9",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:14056,Energy Efficiency,Energy,Energy,14056,"0A 1.248770 ; 71A 1.249096 72A 1.325143 73A 1.325198 ; 74A 1.395025 75A 1.397495 76A 1.442305 ; 77A 1.442695 78A 1.456897 79A 1.504332 ; 80A 1.639667 81A 1.641352 82A 1.668110 ; 83A 1.705574 84A 1.784410 85A 1.840841 ; 86A 1.841701 87A 1.932164 88A 2.090833 ; 89A 2.093816 90A 2.132735 91A 2.154837 ; 92A 2.180250 93A 2.253444 94A 2.481160 ; 95A 2.481328 96A 2.496342 97A 2.793920 ; 98A 2.848632 99A 2.969349 100A 2.969418 ; 101A 3.337134 102A 3.399821 103A 3.400315 ; 104A 3.528082 105A 4.155988 106A 5.476938 ; 107A 5.786400 108A 6.199146 109A 7.337445 ; 110A 8.481836 111A 8.867663 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -43.40748214051649. => Energetics <=. Nuclear Repulsion Energy = 93.7538801503397679; One-Electron Energy = -245.6257702779177521; Two-Electron Energy = 115.6223560816475100; DFT Exchange-Correlation Energy = -7.1485657255274635; Empirical Dispersion Energy = -0.0093823690585561; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -43.4074821405164926. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -0.0030364 0.0030278 -0.0000086; Dipole Y : 0.0588791 -0.0477754 0.0111036; Dipole Z : -0.0335702 0.0272773 -0.0062929; Magnitude : 0.0127629. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:17:38 2024; Module time:; 	user time = 9.63 seconds = 0.16 minutes; 	system time = 0.15 seconds = 0.00 minutes; 	total time = 10 seconds = 0.17 minutes; Total time:; 	user time = 9.63 seconds = 0.16 minutes; 	system time",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:17511,Energy Efficiency,energy,energy,17511,"/introduction.html#citing-psifour. -----------------------------------------------------------------------. Psi4 started on: Monday, 16 September 2024 10:19PM. Process ID: 23934; Host: agincourt.lan; PSIDATADIR: /Users/cwagen/.../.pixi/envs/dev/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; molecule {; C -3.385689447328 -1.019909032022 -1.749453831407 ; H -4.303799447328 -1.298729032022 -2.222123831407; C -2.336629447328 -0.701769032022 -1.209473831407 ; C -1.177199447328 -0.351139032022 -0.612463831407 ; C -0.119169447328 -0.031909032022 -0.066563831407 ; C 1.038150552672 0.314670967978 0.533526168593 ; C 2.088230552672 0.627260967978 1.081186168593; C 3.329350552672 0.995630967978 1.729406168593 ; H 3.940040552672 1.640920967978 1.078936168593 ; H 3.139820552672 1.543830967978 2.665426168593 ; H 3.926960552672 0.104360967978 1.976426168593 ; }. energy(""wb97x-3c""); --------------------------------------------------------------------------. Scratch directory: /tmp/; => Libint2 <=. Primary basis highest AM E, G, H: 6, 6, 3; Auxiliary basis highest AM E, G, H: 7, 7, 4; Onebody basis highest AM E, G, H: -, -, -; Solid Harmonics ordering: Gaussian. *** tstart() called on agincourt.lan; *** at Mon Sep 16 22:19:36 2024. => Loading Basis Set <=. Name: VDZP; Role: ORBITAL; Keyword: BASIS; atoms 1, 3-8 entry C line 117 (ECP: line 2345) file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs ; atoms 2, 9-11 entry H line 22 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs . !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!. => WB97X3C: Empirical Dispersion <=. Grimme's -D4 (BJ-damping) Dispersion Correction with ATM; Caldeweyher, E.; Ehlert, S.; Hansen, A.; Neugebauer, H.; Spicher, S.; Bannwarth, C.; Grimmme, S., J. Chem. Phys. 150, 154122 (2019). a1 = 0.246400; a2 = 4.737000; alp = 16.000000; s6 = 1.000000; s8 = 0.000000; s9 = 1.0000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:18932,Energy Efficiency,charge,charge,18932,"AL; Keyword: BASIS; atoms 1, 3-8 entry C line 117 (ECP: line 2345) file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs ; atoms 2, 9-11 entry H line 22 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs . !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!. => WB97X3C: Empirical Dispersion <=. Grimme's -D4 (BJ-damping) Dispersion Correction with ATM; Caldeweyher, E.; Ehlert, S.; Hansen, A.; Neugebauer, H.; Spicher, S.; Bannwarth, C.; Grimmme, S., J. Chem. Phys. 150, 154122 (2019). a1 = 0.246400; a2 = 4.737000; alp = 16.000000; s6 = 1.000000; s8 = 0.000000; s9 = 1.000000; ga = 3.000000; gc = 2.000000; wf = 6.000000. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C1. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; C -3.385689447328 -1.019909032022 -1.749453831407 12.000000000000; H -4.303799447328 -1.298729032022 -2.222123831407 1.007825032230; C -2.336629447328 -0.701769032022 -1.209473831407 12.000000000000; C -1.177199447328 -0.351139032022 -0.612463831407 12.000000000000; C -0.119169447328 -0.031909032022 -0.066563831407 12.000000000000; C 1.038150552672 0.314670967978 0.533526168593 12.000000000000; C 2.088230552672 0.627260967978 1.081186168593 12.000000000000; C 3.329350552672 0.995630967978 1.729406168593 12.000000000000; H 3.940040552672 1.640920967978 1.078936168593 1.007825032230; H 3.139820552672 1.543830967978 2.665426168593 1.007825032230; H 3.926960552672 0.104360967978 1.976426168593 1.007825032230. Running in c1 symmetry. Rotational constants: A = 5.27900 B = 0.02592 C = 0.02592 [cm^-1]; Rotational constants: A = 158260.38795 B = 777.17946 C = 777",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:19989,Energy Efficiency,Charge,Charge,19989,"-------- ----------------- -----------------; C -3.385689447328 -1.019909032022 -1.749453831407 12.000000000000; H -4.303799447328 -1.298729032022 -2.222123831407 1.007825032230; C -2.336629447328 -0.701769032022 -1.209473831407 12.000000000000; C -1.177199447328 -0.351139032022 -0.612463831407 12.000000000000; C -0.119169447328 -0.031909032022 -0.066563831407 12.000000000000; C 1.038150552672 0.314670967978 0.533526168593 12.000000000000; C 2.088230552672 0.627260967978 1.081186168593 12.000000000000; C 3.329350552672 0.995630967978 1.729406168593 12.000000000000; H 3.940040552672 1.640920967978 1.078936168593 1.007825032230; H 3.139820552672 1.543830967978 2.665426168593 1.007825032230; H 3.926960552672 0.104360967978 1.976426168593 1.007825032230. Running in c1 symmetry. Rotational constants: A = 5.27900 B = 0.02592 C = 0.02592 [cm^-1]; Rotational constants: A = 158260.38795 B = 777.17946 C = 777.17689 [MHz]; Nuclear repulsion = 93.454945691663795. Charge = 0; Multiplicity = 1; Electrons = 32; Nalpha = 16; Nbeta = 16. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12. ==> Primary Basis <==. Basis Set: VDZP; Blend: VDZP; Number of shells: 47; Number of basis functions: 111; Number of Cartesian functions: 118; Spherical Harmonics?: true; Max angular momentum: 2. Core potential: VDZP; Number of shells: 28; Number of ECP primitives: 28; Number of ECP core electrons: 14; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hy",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:20189,Energy Efficiency,Energy,Energy,20189,"30; C -2.336629447328 -0.701769032022 -1.209473831407 12.000000000000; C -1.177199447328 -0.351139032022 -0.612463831407 12.000000000000; C -0.119169447328 -0.031909032022 -0.066563831407 12.000000000000; C 1.038150552672 0.314670967978 0.533526168593 12.000000000000; C 2.088230552672 0.627260967978 1.081186168593 12.000000000000; C 3.329350552672 0.995630967978 1.729406168593 12.000000000000; H 3.940040552672 1.640920967978 1.078936168593 1.007825032230; H 3.139820552672 1.543830967978 2.665426168593 1.007825032230; H 3.926960552672 0.104360967978 1.976426168593 1.007825032230. Running in c1 symmetry. Rotational constants: A = 5.27900 B = 0.02592 C = 0.02592 [cm^-1]; Rotational constants: A = 158260.38795 B = 777.17946 C = 777.17689 [MHz]; Nuclear repulsion = 93.454945691663795. Charge = 0; Multiplicity = 1; Electrons = 32; Nalpha = 16; Nbeta = 16. ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12. ==> Primary Basis <==. Basis Set: VDZP; Blend: VDZP; Number of shells: 47; Number of basis functions: 111; Number of Cartesian functions: 118; Spherical Harmonics?: true; Max angular momentum: 2. Core potential: VDZP; Number of shells: 28; Number of ECP primitives: 28; Number of ECP core electrons: 14; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97X-V range-separated functional. => Exact (HF) Exchange <=. 0.8330 HF,LR [omega = 0.3000]; 0",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:23004,Energy Efficiency,Energy,Energy,23004,"==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 167; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 3.8471; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.0% of DFT collocation blocks in 0.155 [GiB]. Minimum eigenvalue in the overlap matrix is 5.5224744543E-04.; Reciprocal condition number of the overlap matrix is 8.7845130506E-05.; Using symmetric orthogonalization. ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo ; -------------------------; A 111 111 ; -------------------------; Total 111 111; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -40.20742626722070 -4.02074e+01 0.00000e+00 ; @DF-RKS iter 1: -41.85372076056422 -1.64629e+00 4.64946e-03 DIIS/ADIIS; @DF-RKS iter 2: -42.00985523463992 -1.56134e-01 2.18407e-03 DIIS/ADIIS; @DF-RKS iter 3: -42.04248981983608 -3.26346e-02 7.08822e-04 DIIS/ADIIS; @DF-RKS iter 4: -42.04528563064348 -2.79581e-03 3.01721e-04 DIIS/ADIIS; @DF-RKS iter 5: -42.04589556301210 -6.09932e-04 8.40052e-05 DIIS; @DF-RKS iter 6: -42.04594641312401 -5.08501e-05 2.29544e-05 DIIS; @DF-RKS iter 7: -42.04595101061475 -4.59749e-06 8.73466e-06 DIIS; @DF-RKS iter 8: -42.04595193846246 -9.27848e-07 1.83903e-06 DIIS; @DF-RKS iter 9: -42.04595197043621 -3.19738e-08 1.16291e-06 DIIS; @DF-RKS iter 10: -42.04595197988089 -9.44468e-09 3.03360e-07 DIIS; Energy and wave function converged. ==> Post-Iterations <==. Electrons on quadrature grid:; Ntotal = 31.9999968368 ; deviation = -3.163e-06 . Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -0.966068 2A -0.941808 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:23781,Energy Efficiency,Energy,Energy,23781,"mic UHF (no occupation information). -------------------------; Irrep Nso Nmo ; -------------------------; A 111 111 ; -------------------------; Total 111 111; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -40.20742626722070 -4.02074e+01 0.00000e+00 ; @DF-RKS iter 1: -41.85372076056422 -1.64629e+00 4.64946e-03 DIIS/ADIIS; @DF-RKS iter 2: -42.00985523463992 -1.56134e-01 2.18407e-03 DIIS/ADIIS; @DF-RKS iter 3: -42.04248981983608 -3.26346e-02 7.08822e-04 DIIS/ADIIS; @DF-RKS iter 4: -42.04528563064348 -2.79581e-03 3.01721e-04 DIIS/ADIIS; @DF-RKS iter 5: -42.04589556301210 -6.09932e-04 8.40052e-05 DIIS; @DF-RKS iter 6: -42.04594641312401 -5.08501e-05 2.29544e-05 DIIS; @DF-RKS iter 7: -42.04595101061475 -4.59749e-06 8.73466e-06 DIIS; @DF-RKS iter 8: -42.04595193846246 -9.27848e-07 1.83903e-06 DIIS; @DF-RKS iter 9: -42.04595197043621 -3.19738e-08 1.16291e-06 DIIS; @DF-RKS iter 10: -42.04595197988089 -9.44468e-09 3.03360e-07 DIIS; Energy and wave function converged. ==> Post-Iterations <==. Electrons on quadrature grid:; Ntotal = 31.9999968368 ; deviation = -3.163e-06 . Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -0.966068 2A -0.941808 3A -0.903357 ; 4A -0.853002 5A -0.775302 6A -0.704610 ; 7A -0.641487 8A -0.595780 9A -0.563657 ; 10A -0.563636 11A -0.491248 12A -0.491246 ; 13A -0.424650 14A -0.424646 15A -0.331443 ; 16A -0.331440 . Virtual: . 17A 0.011949 18A 0.011950 19A 0.074448 ; 20A 0.093735 21A 0.124628 22A 0.124636 ; 23A 0.164111 24A 0.164124 25A 0.219904 ; 26A 0.229389 27A 0.270058 28A 0.300970 ; 29A 0.300989 30A 0.319492 31A 0.330008 ; 32A 0.369535 33A 0.369543 34A 0.380424 ; 35A 0.399089 36A 0.423400 37A 0.423423 ; 38A 0.446420 39A 0.446494 40A 0.494266 ; 41A 0.508497 42A 0.508502 43A 0.538949 ; 44A 0.538953 45A 0.610836 46A 0.610855 ; 47A 0.630158 48A 0.718603 49A 0.718620 ; 50A 0.736912 51A 0.819908 52A 0.820049 ; 53A 0.841985 54A 0.842142 55A 0.861839 ; 56A 0.915524 57A 0.915721 58A 0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:25618,Energy Efficiency,Energy,Energy,25618,"0836 46A 0.610855 ; 47A 0.630158 48A 0.718603 49A 0.718620 ; 50A 0.736912 51A 0.819908 52A 0.820049 ; 53A 0.841985 54A 0.842142 55A 0.861839 ; 56A 0.915524 57A 0.915721 58A 0.916478 ; 59A 0.958476 60A 0.958532 61A 0.986377 ; 62A 1.033004 63A 1.062720 64A 1.062956 ; 65A 1.089893 66A 1.194156 67A 1.194624 ; 68A 1.260967 69A 1.272575 70A 1.297678 ; 71A 1.297926 72A 1.359441 73A 1.359571 ; 74A 1.502783 75A 1.503340 76A 1.596335 ; 77A 1.617548 78A 1.617829 79A 1.669742 ; 80A 1.669811 81A 1.778057 82A 1.778197 ; 83A 1.861590 84A 1.904708 85A 1.905302 ; 86A 1.932619 87A 1.933506 88A 1.984745 ; 89A 2.223699 90A 2.225628 91A 2.225668 ; 92A 2.494202 93A 2.559162 94A 2.559231 ; 95A 2.694381 96A 2.694493 97A 2.699523 ; 98A 2.989001 99A 2.989072 100A 3.239982 ; 101A 3.409966 102A 3.418072 103A 3.418110 ; 104A 3.811009 105A 4.348714 106A 5.581608 ; 107A 6.661779 108A 7.322224 109A 7.404171 ; 110A 8.435277 111A 8.975985 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -42.04595197988089. => Energetics <=. Nuclear Repulsion Energy = 93.4549456916637951; One-Electron Energy = -246.7432156290641103; Two-Electron Energy = 118.6378186354417608; DFT Exchange-Correlation Energy = -7.3862953798450999; Empirical Dispersion Energy = -0.0092052980772349; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -42.0459519798808898. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -7.8209495 8.4115446 0.5905951; Dipole Y : -2.3244093 2.4977096 0.1733003; Dipole Z : -4.0798888 4.3904336 0.3105448; Magnitude : 0.6894009. ---------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:25682,Energy Efficiency,Energy,Energy,25682,"0A 0.736912 51A 0.819908 52A 0.820049 ; 53A 0.841985 54A 0.842142 55A 0.861839 ; 56A 0.915524 57A 0.915721 58A 0.916478 ; 59A 0.958476 60A 0.958532 61A 0.986377 ; 62A 1.033004 63A 1.062720 64A 1.062956 ; 65A 1.089893 66A 1.194156 67A 1.194624 ; 68A 1.260967 69A 1.272575 70A 1.297678 ; 71A 1.297926 72A 1.359441 73A 1.359571 ; 74A 1.502783 75A 1.503340 76A 1.596335 ; 77A 1.617548 78A 1.617829 79A 1.669742 ; 80A 1.669811 81A 1.778057 82A 1.778197 ; 83A 1.861590 84A 1.904708 85A 1.905302 ; 86A 1.932619 87A 1.933506 88A 1.984745 ; 89A 2.223699 90A 2.225628 91A 2.225668 ; 92A 2.494202 93A 2.559162 94A 2.559231 ; 95A 2.694381 96A 2.694493 97A 2.699523 ; 98A 2.989001 99A 2.989072 100A 3.239982 ; 101A 3.409966 102A 3.418072 103A 3.418110 ; 104A 3.811009 105A 4.348714 106A 5.581608 ; 107A 6.661779 108A 7.322224 109A 7.404171 ; 110A 8.435277 111A 8.975985 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -42.04595197988089. => Energetics <=. Nuclear Repulsion Energy = 93.4549456916637951; One-Electron Energy = -246.7432156290641103; Two-Electron Energy = 118.6378186354417608; DFT Exchange-Correlation Energy = -7.3862953798450999; Empirical Dispersion Energy = -0.0092052980772349; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -42.0459519798808898. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -7.8209495 8.4115446 0.5905951; Dipole Y : -2.3244093 2.4977096 0.1733003; Dipole Z : -4.0798888 4.3904336 0.3105448; Magnitude : 0.6894009. ------------------------------------------------------------------------------------. ***",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:25725,Energy Efficiency,Energy,Energy,25725,"; 53A 0.841985 54A 0.842142 55A 0.861839 ; 56A 0.915524 57A 0.915721 58A 0.916478 ; 59A 0.958476 60A 0.958532 61A 0.986377 ; 62A 1.033004 63A 1.062720 64A 1.062956 ; 65A 1.089893 66A 1.194156 67A 1.194624 ; 68A 1.260967 69A 1.272575 70A 1.297678 ; 71A 1.297926 72A 1.359441 73A 1.359571 ; 74A 1.502783 75A 1.503340 76A 1.596335 ; 77A 1.617548 78A 1.617829 79A 1.669742 ; 80A 1.669811 81A 1.778057 82A 1.778197 ; 83A 1.861590 84A 1.904708 85A 1.905302 ; 86A 1.932619 87A 1.933506 88A 1.984745 ; 89A 2.223699 90A 2.225628 91A 2.225668 ; 92A 2.494202 93A 2.559162 94A 2.559231 ; 95A 2.694381 96A 2.694493 97A 2.699523 ; 98A 2.989001 99A 2.989072 100A 3.239982 ; 101A 3.409966 102A 3.418072 103A 3.418110 ; 104A 3.811009 105A 4.348714 106A 5.581608 ; 107A 6.661779 108A 7.322224 109A 7.404171 ; 110A 8.435277 111A 8.975985 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -42.04595197988089. => Energetics <=. Nuclear Repulsion Energy = 93.4549456916637951; One-Electron Energy = -246.7432156290641103; Two-Electron Energy = 118.6378186354417608; DFT Exchange-Correlation Energy = -7.3862953798450999; Empirical Dispersion Energy = -0.0092052980772349; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -42.0459519798808898. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -7.8209495 8.4115446 0.5905951; Dipole Y : -2.3244093 2.4977096 0.1733003; Dipole Z : -4.0798888 4.3904336 0.3105448; Magnitude : 0.6894009. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:25770,Energy Efficiency,Energy,Energy,25770,"A 0.915524 57A 0.915721 58A 0.916478 ; 59A 0.958476 60A 0.958532 61A 0.986377 ; 62A 1.033004 63A 1.062720 64A 1.062956 ; 65A 1.089893 66A 1.194156 67A 1.194624 ; 68A 1.260967 69A 1.272575 70A 1.297678 ; 71A 1.297926 72A 1.359441 73A 1.359571 ; 74A 1.502783 75A 1.503340 76A 1.596335 ; 77A 1.617548 78A 1.617829 79A 1.669742 ; 80A 1.669811 81A 1.778057 82A 1.778197 ; 83A 1.861590 84A 1.904708 85A 1.905302 ; 86A 1.932619 87A 1.933506 88A 1.984745 ; 89A 2.223699 90A 2.225628 91A 2.225668 ; 92A 2.494202 93A 2.559162 94A 2.559231 ; 95A 2.694381 96A 2.694493 97A 2.699523 ; 98A 2.989001 99A 2.989072 100A 3.239982 ; 101A 3.409966 102A 3.418072 103A 3.418110 ; 104A 3.811009 105A 4.348714 106A 5.581608 ; 107A 6.661779 108A 7.322224 109A 7.404171 ; 110A 8.435277 111A 8.975985 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -42.04595197988089. => Energetics <=. Nuclear Repulsion Energy = 93.4549456916637951; One-Electron Energy = -246.7432156290641103; Two-Electron Energy = 118.6378186354417608; DFT Exchange-Correlation Energy = -7.3862953798450999; Empirical Dispersion Energy = -0.0092052980772349; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -42.0459519798808898. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -7.8209495 8.4115446 0.5905951; Dipole Y : -2.3244093 2.4977096 0.1733003; Dipole Z : -4.0798888 4.3904336 0.3105448; Magnitude : 0.6894009. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:19:42 2024; Module time:; 	user ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:25826,Energy Efficiency,Energy,Energy,25826,"76 60A 0.958532 61A 0.986377 ; 62A 1.033004 63A 1.062720 64A 1.062956 ; 65A 1.089893 66A 1.194156 67A 1.194624 ; 68A 1.260967 69A 1.272575 70A 1.297678 ; 71A 1.297926 72A 1.359441 73A 1.359571 ; 74A 1.502783 75A 1.503340 76A 1.596335 ; 77A 1.617548 78A 1.617829 79A 1.669742 ; 80A 1.669811 81A 1.778057 82A 1.778197 ; 83A 1.861590 84A 1.904708 85A 1.905302 ; 86A 1.932619 87A 1.933506 88A 1.984745 ; 89A 2.223699 90A 2.225628 91A 2.225668 ; 92A 2.494202 93A 2.559162 94A 2.559231 ; 95A 2.694381 96A 2.694493 97A 2.699523 ; 98A 2.989001 99A 2.989072 100A 3.239982 ; 101A 3.409966 102A 3.418072 103A 3.418110 ; 104A 3.811009 105A 4.348714 106A 5.581608 ; 107A 6.661779 108A 7.322224 109A 7.404171 ; 110A 8.435277 111A 8.975985 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -42.04595197988089. => Energetics <=. Nuclear Repulsion Energy = 93.4549456916637951; One-Electron Energy = -246.7432156290641103; Two-Electron Energy = 118.6378186354417608; DFT Exchange-Correlation Energy = -7.3862953798450999; Empirical Dispersion Energy = -0.0092052980772349; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -42.0459519798808898. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -7.8209495 8.4115446 0.5905951; Dipole Y : -2.3244093 2.4977096 0.1733003; Dipole Z : -4.0798888 4.3904336 0.3105448; Magnitude : 0.6894009. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:19:42 2024; Module time:; 	user time = 6.43 seconds = 0.11 minutes; 	system time =",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:25877,Energy Efficiency,Energy,Energy,25877,"720 64A 1.062956 ; 65A 1.089893 66A 1.194156 67A 1.194624 ; 68A 1.260967 69A 1.272575 70A 1.297678 ; 71A 1.297926 72A 1.359441 73A 1.359571 ; 74A 1.502783 75A 1.503340 76A 1.596335 ; 77A 1.617548 78A 1.617829 79A 1.669742 ; 80A 1.669811 81A 1.778057 82A 1.778197 ; 83A 1.861590 84A 1.904708 85A 1.905302 ; 86A 1.932619 87A 1.933506 88A 1.984745 ; 89A 2.223699 90A 2.225628 91A 2.225668 ; 92A 2.494202 93A 2.559162 94A 2.559231 ; 95A 2.694381 96A 2.694493 97A 2.699523 ; 98A 2.989001 99A 2.989072 100A 3.239982 ; 101A 3.409966 102A 3.418072 103A 3.418110 ; 104A 3.811009 105A 4.348714 106A 5.581608 ; 107A 6.661779 108A 7.322224 109A 7.404171 ; 110A 8.435277 111A 8.975985 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -42.04595197988089. => Energetics <=. Nuclear Repulsion Energy = 93.4549456916637951; One-Electron Energy = -246.7432156290641103; Two-Electron Energy = 118.6378186354417608; DFT Exchange-Correlation Energy = -7.3862953798450999; Empirical Dispersion Energy = -0.0092052980772349; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -42.0459519798808898. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -7.8209495 8.4115446 0.5905951; Dipole Y : -2.3244093 2.4977096 0.1733003; Dipole Z : -4.0798888 4.3904336 0.3105448; Magnitude : 0.6894009. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:19:42 2024; Module time:; 	user time = 6.43 seconds = 0.11 minutes; 	system time = 0.11 seconds = 0.00 minutes; 	total time = 6 seconds",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:25921,Energy Efficiency,Energy,Energy,25921,"A 1.194624 ; 68A 1.260967 69A 1.272575 70A 1.297678 ; 71A 1.297926 72A 1.359441 73A 1.359571 ; 74A 1.502783 75A 1.503340 76A 1.596335 ; 77A 1.617548 78A 1.617829 79A 1.669742 ; 80A 1.669811 81A 1.778057 82A 1.778197 ; 83A 1.861590 84A 1.904708 85A 1.905302 ; 86A 1.932619 87A 1.933506 88A 1.984745 ; 89A 2.223699 90A 2.225628 91A 2.225668 ; 92A 2.494202 93A 2.559162 94A 2.559231 ; 95A 2.694381 96A 2.694493 97A 2.699523 ; 98A 2.989001 99A 2.989072 100A 3.239982 ; 101A 3.409966 102A 3.418072 103A 3.418110 ; 104A 3.811009 105A 4.348714 106A 5.581608 ; 107A 6.661779 108A 7.322224 109A 7.404171 ; 110A 8.435277 111A 8.975985 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -42.04595197988089. => Energetics <=. Nuclear Repulsion Energy = 93.4549456916637951; One-Electron Energy = -246.7432156290641103; Two-Electron Energy = 118.6378186354417608; DFT Exchange-Correlation Energy = -7.3862953798450999; Empirical Dispersion Energy = -0.0092052980772349; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -42.0459519798808898. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -7.8209495 8.4115446 0.5905951; Dipole Y : -2.3244093 2.4977096 0.1733003; Dipole Z : -4.0798888 4.3904336 0.3105448; Magnitude : 0.6894009. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:19:42 2024; Module time:; 	user time = 6.43 seconds = 0.11 minutes; 	system time = 0.11 seconds = 0.00 minutes; 	total time = 6 seconds = 0.10 minutes; Total time:; 	user time = 6.43",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:25956,Energy Efficiency,Energy,Energy,25956,"0A 1.297678 ; 71A 1.297926 72A 1.359441 73A 1.359571 ; 74A 1.502783 75A 1.503340 76A 1.596335 ; 77A 1.617548 78A 1.617829 79A 1.669742 ; 80A 1.669811 81A 1.778057 82A 1.778197 ; 83A 1.861590 84A 1.904708 85A 1.905302 ; 86A 1.932619 87A 1.933506 88A 1.984745 ; 89A 2.223699 90A 2.225628 91A 2.225668 ; 92A 2.494202 93A 2.559162 94A 2.559231 ; 95A 2.694381 96A 2.694493 97A 2.699523 ; 98A 2.989001 99A 2.989072 100A 3.239982 ; 101A 3.409966 102A 3.418072 103A 3.418110 ; 104A 3.811009 105A 4.348714 106A 5.581608 ; 107A 6.661779 108A 7.322224 109A 7.404171 ; 110A 8.435277 111A 8.975985 . Final Occupation by Irrep:; A ; DOCC [ 16 ]; NA [ 16 ]; NB [ 16 ]. @DF-RKS Final Energy: -42.04595197988089. => Energetics <=. Nuclear Repulsion Energy = 93.4549456916637951; One-Electron Energy = -246.7432156290641103; Two-Electron Energy = 118.6378186354417608; DFT Exchange-Correlation Energy = -7.3862953798450999; Empirical Dispersion Energy = -0.0092052980772349; VV10 Nonlocal Energy = 0.0000000000000000; Total Energy = -42.0459519798808898. Computation Completed. Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]. Properties computed using the SCF density matrix. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electronic (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417464519 to convert [e a0] to [Debye]; Dipole X : -7.8209495 8.4115446 0.5905951; Dipole Y : -2.3244093 2.4977096 0.1733003; Dipole Z : -4.0798888 4.3904336 0.3105448; Magnitude : 0.6894009. ------------------------------------------------------------------------------------. *** tstop() called on agincourt.lan at Mon Sep 16 22:19:42 2024; Module time:; 	user time = 6.43 seconds = 0.11 minutes; 	system time = 0.11 seconds = 0.00 minutes; 	total time = 6 seconds = 0.10 minutes; Total time:; 	user time = 6.43 seconds = 0.11 minutes; 	system time = ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:322,Integrability,message,message,322,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:5486,Performance,Load,Loading,5486,"------------------------------------------; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -0.694370796492 ; H 4.393828194545 0.864729635345 0.797449203508; C -3.871661805455 -0.281870364655 -0.036170796492 ; H -4.492551805455 0.418709635345 -0.600540796492 ; H -4.386761805455 -1.069870364655 0.519199203508 ; }. energy(""wb97x-3c""); --------------------------------------------------------------------------. Scratch directory: /tmp/; => Libint2 <=. Primary basis highest AM E, G, H: 6, 6, 3; Auxiliary basis highest AM E, G, H: 7, 7, 4; Onebody basis highest AM E, G, H: -, -, -; Solid Harmonics ordering: Gaussian. *** tstart() called on agincourt.lan; *** at Mon Sep 16 22:17:28 2024. => Loading Basis Set <=. Name: VDZP; Role: ORBITAL; Keyword: BASIS; atoms 1-6, 9 entry C line 117 (ECP: line 2345) file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs ; atoms 7-8, 10-11 entry H line 22 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs . !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!. => WB97X3C: Empirical Dispersion <=. Grimme's -D4 (BJ-damping) Dispersion Correction with ATM; Caldeweyher, E.; Ehlert, S.; Hansen, A.; Neugebauer, H.; Spicher, S.; Bannwarth, C.; Grimmme, S., J. Chem. Phys. 150, 154122 (2019). a1 = 0.246400; a2 = 4.737000; alp = 16.000000; s6 = 1.000000; s8 = 0.000000; s9 = 1.000000; ga = 3.000000; gc = 2.000000; wf = 6.000000. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full poin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:9209,Performance,Load,Loading,9209," Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97X-V range-separated functional. => Exact (HF) Exchange <=. 0.8330 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 239042; Total Blocks = 1831; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 9 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-8, 10-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.162 GiB; user supplied 0.162 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 166; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 4.4477; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.0% of DFT collocation blocks in 0.161 [GiB]. Minimum eigenvalue in the overlap matrix is 5.5610928795E-04.; Reciprocal condit",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:10083,Performance,Cache,Cached,10083," 302; Total Points = 239042; Total Blocks = 1831; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 9 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-8, 10-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.162 GiB; user supplied 0.162 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 166; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 4.4477; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.0% of DFT collocation blocks in 0.161 [GiB]. Minimum eigenvalue in the overlap matrix is 5.5610928795E-04.; Reciprocal condition number of the overlap matrix is 9.8342984140E-05.; Using symmetric orthogonalization. ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo ; -------------------------; A 111 111 ; -------------------------; Total 111 111; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -39.70316824232670 -3.97032e+01 0.00000e+00 ; @DF-RKS iter 1: -43.27234536758360 -3.56918e+00 3.69413e-03 ADIIS/DIIS; @DF-RKS iter 2: -43.35383639315761 -8.14910e-02 2.43782e-03 ADIIS/DIIS; @DF-RKS iter 3: -43.38733837751467 -3.35020e-02 1.10466e-03 ADIIS/DIIS; @DF-RKS iter 4: -43.39730753466733 -9.96916e-03 3.77682e-04 ADIIS/DIIS; @DF-RKS iter 5: -43.39937943728395 -2.07190e-03 2.05445e-04 ADIIS/DIIS; @DF-RKS iter 6: -43.4004478",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:17889,Performance,Load,Loading,17889,"---------------------------------------------; molecule {; C -3.385689447328 -1.019909032022 -1.749453831407 ; H -4.303799447328 -1.298729032022 -2.222123831407; C -2.336629447328 -0.701769032022 -1.209473831407 ; C -1.177199447328 -0.351139032022 -0.612463831407 ; C -0.119169447328 -0.031909032022 -0.066563831407 ; C 1.038150552672 0.314670967978 0.533526168593 ; C 2.088230552672 0.627260967978 1.081186168593; C 3.329350552672 0.995630967978 1.729406168593 ; H 3.940040552672 1.640920967978 1.078936168593 ; H 3.139820552672 1.543830967978 2.665426168593 ; H 3.926960552672 0.104360967978 1.976426168593 ; }. energy(""wb97x-3c""); --------------------------------------------------------------------------. Scratch directory: /tmp/; => Libint2 <=. Primary basis highest AM E, G, H: 6, 6, 3; Auxiliary basis highest AM E, G, H: 7, 7, 4; Onebody basis highest AM E, G, H: -, -, -; Solid Harmonics ordering: Gaussian. *** tstart() called on agincourt.lan; *** at Mon Sep 16 22:19:36 2024. => Loading Basis Set <=. Name: VDZP; Role: ORBITAL; Keyword: BASIS; atoms 1, 3-8 entry C line 117 (ECP: line 2345) file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs ; atoms 2, 9-11 entry H line 22 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/vdzp.gbs . !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!. => WB97X3C: Empirical Dispersion <=. Grimme's -D4 (BJ-damping) Dispersion Correction with ATM; Caldeweyher, E.; Ehlert, S.; Hansen, A.; Neugebauer, H.; Spicher, S.; Bannwarth, C.; Grimmme, S., J. Chem. Phys. 150, 154122 (2019). a1 = 0.246400; a2 = 4.737000; alp = 16.000000; s6 = 1.000000; s8 = 0.000000; s9 = 1.000000; ga = 3.000000; gc = 2.000000; wf = 6.000000. ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RKS Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point g",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:21607,Performance,Load,Loading,21607," Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97X-V range-separated functional. => Exact (HF) Exchange <=. 0.8330 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 238643; Total Blocks = 1822; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 3-8 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 2, 9-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.163 GiB; user supplied 0.163 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 167; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 3.8471; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.0% of DFT collocation blocks in 0.155 [GiB]. Minimum eigenvalue in the overlap matrix is 5.5224744543E-04.; Reciprocal condition",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:22478,Performance,Cache,Cached,22478,"s = 302; Total Points = 238643; Total Blocks = 1822; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 3-8 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 2, 9-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.163 GiB; user supplied 0.163 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 167; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 3.8471; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.0% of DFT collocation blocks in 0.155 [GiB]. Minimum eigenvalue in the overlap matrix is 5.5224744543E-04.; Reciprocal condition number of the overlap matrix is 8.7845130506E-05.; Using symmetric orthogonalization. ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo ; -------------------------; A 111 111 ; -------------------------; Total 111 111; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -40.20742626722070 -4.02074e+01 0.00000e+00 ; @DF-RKS iter 1: -41.85372076056422 -1.64629e+00 4.64946e-03 DIIS/ADIIS; @DF-RKS iter 2: -42.00985523463992 -1.56134e-01 2.18407e-03 DIIS/ADIIS; @DF-RKS iter 3: -42.04248981983608 -3.26346e-02 7.08822e-04 DIIS/ADIIS; @DF-RKS iter 4: -42.04528563064348 -2.79581e-03 3.01721e-04 DIIS/ADIIS; @DF-RKS iter 5: -42.04589556301210 -6.09932e-04 8.40052e-05 DIIS; @DF-RKS iter 6: -42.0459464131240",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:573,Safety,predict,predicted,573,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/issues/3221:0,Testability,Test,Test,0,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3221
https://github.com/psi4/psi4/pull/3222:1148,Availability,avail,available,1148,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3222
https://github.com/psi4/psi4/pull/3222:752,Deployability,release,release,752,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3222
https://github.com/psi4/psi4/pull/3222:482,Energy Efficiency,energy,energy,482,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3222
https://github.com/psi4/psi4/pull/3222:331,Modifiability,extend,extended,331,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3222
https://github.com/psi4/psi4/pull/3222:525,Modifiability,variab,variables,525,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3222
https://github.com/psi4/psi4/pull/3222:588,Testability,test,tests,588,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3222
https://github.com/psi4/psi4/pull/3222:1354,Testability,Test,Tests,1354,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3222
https://github.com/psi4/psi4/pull/3222:1428,Testability,test,tests,1428,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3222
https://github.com/psi4/psi4/pull/3222:1519,Testability,test,tests,1519,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3222
https://github.com/psi4/psi4/issues/3223:323,Energy Efficiency,energy,energy,323,"I am trying to run Psi4 on [Summit](https://docs.olcf.ornl.gov/systems/summit_user_guide.html) and as there are no conda builds for `ppc64le`, I had to manually compile it on Summit. When running `ωB97M-D3BJ/def2-TZVPPD` for an Arginine molecule, I get vastly different energies in the SCF steps locally and final converge energy and gradients. I have attached the Psi4 output files for both the local run and the one on Summit and I was hoping to get some advice on what could be going on here. Also, the run time on Summit takes incredibly long (6 hours) vs about 5 minutes on my laptop, even with 128 threads and 512GB of RAM allocated on a single node calculation. Any idea why this might be the case?. [Arginine_output_local.txt](https://github.com/user-attachments/files/17094043/Arginine_output_local.txt); [Arginine_output_summit.txt](https://github.com/user-attachments/files/17094044/Arginine_output_summit.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223
https://github.com/psi4/psi4/issues/3223:629,Energy Efficiency,allocate,allocated,629,"I am trying to run Psi4 on [Summit](https://docs.olcf.ornl.gov/systems/summit_user_guide.html) and as there are no conda builds for `ppc64le`, I had to manually compile it on Summit. When running `ωB97M-D3BJ/def2-TZVPPD` for an Arginine molecule, I get vastly different energies in the SCF steps locally and final converge energy and gradients. I have attached the Psi4 output files for both the local run and the one on Summit and I was hoping to get some advice on what could be going on here. Also, the run time on Summit takes incredibly long (6 hours) vs about 5 minutes on my laptop, even with 128 threads and 512GB of RAM allocated on a single node calculation. Any idea why this might be the case?. [Arginine_output_local.txt](https://github.com/user-attachments/files/17094043/Arginine_output_local.txt); [Arginine_output_summit.txt](https://github.com/user-attachments/files/17094044/Arginine_output_summit.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3223
https://github.com/psi4/psi4/pull/3224:213,Deployability,release,release,213,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Einsums v0.6 needs gcc 11 or clang 16. don't want to bump psi4 requirements for opt'l dep, so bump gcc from 10->11 and don't build w/clang (currently 11). note that azure matrix vars like this _must_ be all caps to register. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3224
https://github.com/psi4/psi4/pull/3226:481,Availability,avail,available,481,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:697,Deployability,Update,Updates,697,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:44,Energy Efficiency,charge,charges,44,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:370,Energy Efficiency,charge,charges,370,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:465,Energy Efficiency,CHARGE,CHARGES,465,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:561,Energy Efficiency,charge,charges,561,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:620,Energy Efficiency,charge,charges,620,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:681,Energy Efficiency,CHARGE,CHARGES,681,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:658,Modifiability,variab,variable,658,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:97,Security,expose,exposed,97,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:386,Security,expose,exposed,386,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:606,Security,expose,exposes,606,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:118,Testability,Test,Tests,118,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:163,Testability,test,tests,163,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:718,Testability,test,tests,718,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:745,Testability,Test,Tests,745,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:819,Testability,test,tests,819,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3226:910,Testability,test,tests,910,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/issues/3227:327,Availability,down,down,327,"My collaborators are trying to compute the SCF energy with an external one-electron potential added to the Fock matrix (this potential does NOT result from a set of point charges). We were trying to use the `wfn.push_back_external_potential()` functionality to accomplish this, but the external potential is ignored. I tracked down the issue to [this line in `scf_iterator.py`](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L312) which erases the provided external potential, resulting in only potentials from `PCM/DDX/PE`, added immediately afterwards, being allowed. The problem is completely fixed (at least in our case) by commenting out the aforementioned line of code. I will submit a one-liner PR to do this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3227
https://github.com/psi4/psi4/issues/3227:47,Energy Efficiency,energy,energy,47,"My collaborators are trying to compute the SCF energy with an external one-electron potential added to the Fock matrix (this potential does NOT result from a set of point charges). We were trying to use the `wfn.push_back_external_potential()` functionality to accomplish this, but the external potential is ignored. I tracked down the issue to [this line in `scf_iterator.py`](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L312) which erases the provided external potential, resulting in only potentials from `PCM/DDX/PE`, added immediately afterwards, being allowed. The problem is completely fixed (at least in our case) by commenting out the aforementioned line of code. I will submit a one-liner PR to do this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3227
https://github.com/psi4/psi4/issues/3227:171,Energy Efficiency,charge,charges,171,"My collaborators are trying to compute the SCF energy with an external one-electron potential added to the Fock matrix (this potential does NOT result from a set of point charges). We were trying to use the `wfn.push_back_external_potential()` functionality to accomplish this, but the external potential is ignored. I tracked down the issue to [this line in `scf_iterator.py`](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L312) which erases the provided external potential, resulting in only potentials from `PCM/DDX/PE`, added immediately afterwards, being allowed. The problem is completely fixed (at least in our case) by commenting out the aforementioned line of code. I will submit a one-liner PR to do this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3227
https://github.com/psi4/psi4/pull/3228:476,Testability,Test,Tests,476,## Description; <!-- Provide a brief description of the PR's purpose here. -->; A one-line change to enable an SCF calculation with an arbitrary one-electron matrix `X` added to the Fock matrix via `wfn.push_back_external_potential(X)`. Fixes #3227. ## Questions; - [x] Is this the right way to accomplish this goal (computing SCF with an extra 1-electron operator added to the Fock matrix)?; - [x] Does this mess up PCM/DDX/PE in any way? (It shouldn't). ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228
https://github.com/psi4/psi4/pull/3228:550,Testability,test,tests,550,## Description; <!-- Provide a brief description of the PR's purpose here. -->; A one-line change to enable an SCF calculation with an arbitrary one-electron matrix `X` added to the Fock matrix via `wfn.push_back_external_potential(X)`. Fixes #3227. ## Questions; - [x] Is this the right way to accomplish this goal (computing SCF with an extra 1-electron operator added to the Fock matrix)?; - [x] Does this mess up PCM/DDX/PE in any way? (It shouldn't). ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228
https://github.com/psi4/psi4/pull/3228:641,Testability,test,tests,641,## Description; <!-- Provide a brief description of the PR's purpose here. -->; A one-line change to enable an SCF calculation with an arbitrary one-electron matrix `X` added to the Fock matrix via `wfn.push_back_external_potential(X)`. Fixes #3227. ## Questions; - [x] Is this the right way to accomplish this goal (computing SCF with an extra 1-electron operator added to the Fock matrix)?; - [x] Does this mess up PCM/DDX/PE in any way? (It shouldn't). ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3228
https://github.com/psi4/psi4/pull/3229:2240,Deployability,release,release,2240," [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to `to_dict` in Molecule and `energy` in Driver, and uses that in `ip_fitting` not to post both of them out. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] removed noise from stdout while running `ip_tunning`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] silences plain `print` from `Molecule.to_dict()` - `qcel.molparse.from_arrays` and warning around setting charge/multiplicity when running `ip_fitting`. This shouldn't change other code paths. ## Questions; - [ ] Do psi have any tests that test stdout with pytest?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3229:194,Energy Efficiency,charge,charge,194,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Running ip_tunning clogs stdout by emitting non-silenced printouts, and red-herring warnings.; `ip_tune` does set charge/multiplicity via `set_molecular_charge` and `set_multiplicity`:; * https://github.com/psi4/psi4/blob/master/psi4/driver/frac.py#L609; * https://github.com/psi4/psi4/blob/master/psi4/driver/frac.py#L610C5-L610C37. so it should be safe to keep them out. An example:; ```log; ...; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3229:2028,Energy Efficiency,energy,energy,2028,"asses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to `to_dict` in Molecule and `energy` in Driver, and uses that in `ip_fitting` not to post both of them out. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] removed noise from stdout while running `ip_tunning`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] silences plain `print` from `Molecule.to_dict()` - `qcel.molparse.from_arrays` and warning around setting charge/multiplicity when running `ip_fitting`. This shouldn't change other code paths. ## Questions; - [ ] Do psi have any tests that test stdout with pytest?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## St",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3229:2680,Energy Efficiency,charge,charge,2680," [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to `to_dict` in Molecule and `energy` in Driver, and uses that in `ip_fitting` not to post both of them out. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] removed noise from stdout while running `ip_tunning`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] silences plain `print` from `Molecule.to_dict()` - `qcel.molparse.from_arrays` and warning around setting charge/multiplicity when running `ip_fitting`. This shouldn't change other code paths. ## Questions; - [ ] Do psi have any tests that test stdout with pytest?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3229:430,Safety,safe,safe,430,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Running ip_tunning clogs stdout by emitting non-silenced printouts, and red-herring warnings.; `ip_tune` does set charge/multiplicity via `set_molecular_charge` and `set_multiplicity`:; * https://github.com/psi4/psi4/blob/master/psi4/driver/frac.py#L609; * https://github.com/psi4/psi4/blob/master/psi4/driver/frac.py#L610C5-L610C37. so it should be safe to keep them out. An example:; ```log; ...; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3229:469,Testability,log,log,469,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Running ip_tunning clogs stdout by emitting non-silenced printouts, and red-herring warnings.; `ip_tune` does set charge/multiplicity via `set_molecular_charge` and `set_multiplicity`:; * https://github.com/psi4/psi4/blob/master/psi4/driver/frac.py#L609; * https://github.com/psi4/psi4/blob/master/psi4/driver/frac.py#L610C5-L610C37. so it should be safe to keep them out. An example:; ```log; ...; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3229:2803,Testability,test,tests,2803," [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to `to_dict` in Molecule and `energy` in Driver, and uses that in `ip_fitting` not to post both of them out. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] removed noise from stdout while running `ip_tunning`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] silences plain `print` from `Molecule.to_dict()` - `qcel.molparse.from_arrays` and warning around setting charge/multiplicity when running `ip_fitting`. This shouldn't change other code paths. ## Questions; - [ ] Do psi have any tests that test stdout with pytest?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3229:2814,Testability,test,test,2814," [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to `to_dict` in Molecule and `energy` in Driver, and uses that in `ip_fitting` not to post both of them out. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] removed noise from stdout while running `ip_tunning`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] silences plain `print` from `Molecule.to_dict()` - `qcel.molparse.from_arrays` and warning around setting charge/multiplicity when running `ip_fitting`. This shouldn't change other code paths. ## Questions; - [ ] Do psi have any tests that test stdout with pytest?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3229:2860,Testability,Test,Tests,2860," [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to `to_dict` in Molecule and `energy` in Driver, and uses that in `ip_fitting` not to post both of them out. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] removed noise from stdout while running `ip_tunning`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] silences plain `print` from `Molecule.to_dict()` - `qcel.molparse.from_arrays` and warning around setting charge/multiplicity when running `ip_fitting`. This shouldn't change other code paths. ## Questions; - [ ] Do psi have any tests that test stdout with pytest?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3229:2934,Testability,test,tests,2934," [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to `to_dict` in Molecule and `energy` in Driver, and uses that in `ip_fitting` not to post both of them out. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] removed noise from stdout while running `ip_tunning`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] silences plain `print` from `Molecule.to_dict()` - `qcel.molparse.from_arrays` and warning around setting charge/multiplicity when running `ip_fitting`. This shouldn't change other code paths. ## Questions; - [ ] Do psi have any tests that test stdout with pytest?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3229:3025,Testability,test,tests,3025," [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to `to_dict` in Molecule and `energy` in Driver, and uses that in `ip_fitting` not to post both of them out. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] removed noise from stdout while running `ip_tunning`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] silences plain `print` from `Molecule.to_dict()` - `qcel.molparse.from_arrays` and warning around setting charge/multiplicity when running `ip_fitting`. This shouldn't change other code paths. ## Questions; - [ ] Do psi have any tests that test stdout with pytest?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3229
https://github.com/psi4/psi4/pull/3231:80,Deployability,Update,Updates,80,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Updates CMakeLists to pull libxc 7.0.0. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3231
https://github.com/psi4/psi4/pull/3231:253,Deployability,release,release,253,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Updates CMakeLists to pull libxc 7.0.0. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3231
https://github.com/psi4/psi4/pull/3231:628,Testability,Test,Tests,628,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Updates CMakeLists to pull libxc 7.0.0. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3231
https://github.com/psi4/psi4/pull/3231:702,Testability,test,tests,702,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Updates CMakeLists to pull libxc 7.0.0. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3231
https://github.com/psi4/psi4/pull/3231:793,Testability,test,tests,793,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Updates CMakeLists to pull libxc 7.0.0. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3231
https://github.com/psi4/psi4/pull/3232:624,Deployability,release,release,624,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I have added an option to compute the necessary GRAC shifts for SAPT(DFT) automatically. I added a little extra logic to ""try harder"" at converging cations to hopefully fail less often if this option is specified. These changes will enable more users to call SAPT(DFT) more routinely in their workflows without having to consider acquiring GRAC shifts externally through their own logic or tabulated sources. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Automatically computes SAPT(DFT) GRAC shifts for monomer A and/or B; - [ ] Logic for trying extra options with level shifts to attempt to converge more cations in approximating the ionization potential. ## Questions; - [ ] Perhaps I should add a more challenging pytest in which the first cation SCF convergence attempt fails but the iterative options approach succeeds. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3232
https://github.com/psi4/psi4/pull/3232:354,Integrability,rout,routinely,354,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I have added an option to compute the necessary GRAC shifts for SAPT(DFT) automatically. I added a little extra logic to ""try harder"" at converging cations to hopefully fail less often if this option is specified. These changes will enable more users to call SAPT(DFT) more routinely in their workflows without having to consider acquiring GRAC shifts externally through their own logic or tabulated sources. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Automatically computes SAPT(DFT) GRAC shifts for monomer A and/or B; - [ ] Logic for trying extra options with level shifts to attempt to converge more cations in approximating the ionization potential. ## Questions; - [ ] Perhaps I should add a more challenging pytest in which the first cation SCF convergence attempt fails but the iterative options approach succeeds. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3232
https://github.com/psi4/psi4/pull/3232:192,Testability,log,logic,192,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I have added an option to compute the necessary GRAC shifts for SAPT(DFT) automatically. I added a little extra logic to ""try harder"" at converging cations to hopefully fail less often if this option is specified. These changes will enable more users to call SAPT(DFT) more routinely in their workflows without having to consider acquiring GRAC shifts externally through their own logic or tabulated sources. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Automatically computes SAPT(DFT) GRAC shifts for monomer A and/or B; - [ ] Logic for trying extra options with level shifts to attempt to converge more cations in approximating the ionization potential. ## Questions; - [ ] Perhaps I should add a more challenging pytest in which the first cation SCF convergence attempt fails but the iterative options approach succeeds. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3232
https://github.com/psi4/psi4/pull/3232:461,Testability,log,logic,461,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I have added an option to compute the necessary GRAC shifts for SAPT(DFT) automatically. I added a little extra logic to ""try harder"" at converging cations to hopefully fail less often if this option is specified. These changes will enable more users to call SAPT(DFT) more routinely in their workflows without having to consider acquiring GRAC shifts externally through their own logic or tabulated sources. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Automatically computes SAPT(DFT) GRAC shifts for monomer A and/or B; - [ ] Logic for trying extra options with level shifts to attempt to converge more cations in approximating the ionization potential. ## Questions; - [ ] Perhaps I should add a more challenging pytest in which the first cation SCF convergence attempt fails but the iterative options approach succeeds. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3232
https://github.com/psi4/psi4/pull/3232:997,Testability,Log,Logic,997,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I have added an option to compute the necessary GRAC shifts for SAPT(DFT) automatically. I added a little extra logic to ""try harder"" at converging cations to hopefully fail less often if this option is specified. These changes will enable more users to call SAPT(DFT) more routinely in their workflows without having to consider acquiring GRAC shifts externally through their own logic or tabulated sources. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Automatically computes SAPT(DFT) GRAC shifts for monomer A and/or B; - [ ] Logic for trying extra options with level shifts to attempt to converge more cations in approximating the ionization potential. ## Questions; - [ ] Perhaps I should add a more challenging pytest in which the first cation SCF convergence attempt fails but the iterative options approach succeeds. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3232
https://github.com/psi4/psi4/pull/3232:1313,Testability,Test,Tests,1313,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I have added an option to compute the necessary GRAC shifts for SAPT(DFT) automatically. I added a little extra logic to ""try harder"" at converging cations to hopefully fail less often if this option is specified. These changes will enable more users to call SAPT(DFT) more routinely in their workflows without having to consider acquiring GRAC shifts externally through their own logic or tabulated sources. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Automatically computes SAPT(DFT) GRAC shifts for monomer A and/or B; - [ ] Logic for trying extra options with level shifts to attempt to converge more cations in approximating the ionization potential. ## Questions; - [ ] Perhaps I should add a more challenging pytest in which the first cation SCF convergence attempt fails but the iterative options approach succeeds. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3232
https://github.com/psi4/psi4/pull/3232:1387,Testability,test,tests,1387,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I have added an option to compute the necessary GRAC shifts for SAPT(DFT) automatically. I added a little extra logic to ""try harder"" at converging cations to hopefully fail less often if this option is specified. These changes will enable more users to call SAPT(DFT) more routinely in their workflows without having to consider acquiring GRAC shifts externally through their own logic or tabulated sources. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Automatically computes SAPT(DFT) GRAC shifts for monomer A and/or B; - [ ] Logic for trying extra options with level shifts to attempt to converge more cations in approximating the ionization potential. ## Questions; - [ ] Perhaps I should add a more challenging pytest in which the first cation SCF convergence attempt fails but the iterative options approach succeeds. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3232
https://github.com/psi4/psi4/pull/3232:1478,Testability,test,tests,1478,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I have added an option to compute the necessary GRAC shifts for SAPT(DFT) automatically. I added a little extra logic to ""try harder"" at converging cations to hopefully fail less often if this option is specified. These changes will enable more users to call SAPT(DFT) more routinely in their workflows without having to consider acquiring GRAC shifts externally through their own logic or tabulated sources. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Automatically computes SAPT(DFT) GRAC shifts for monomer A and/or B; - [ ] Logic for trying extra options with level shifts to attempt to converge more cations in approximating the ionization potential. ## Questions; - [ ] Perhaps I should add a more challenging pytest in which the first cation SCF convergence attempt fails but the iterative options approach succeeds. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3232
https://github.com/psi4/psi4/pull/3233:307,Availability,redundant,redundant,307,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] I think CI is hitting a brownout to deprecate the non-redundant mambaforge, so completing the switch. I've done it at other repos; - [x] windows nightly builds are in great demand, I don't have much more to delete to create space for them, and I'm tired of build always looking like it's failing at master. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3233
https://github.com/psi4/psi4/pull/3233:213,Deployability,release,release,213,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] I think CI is hitting a brownout to deprecate the non-redundant mambaforge, so completing the switch. I've done it at other repos; - [x] windows nightly builds are in great demand, I don't have much more to delete to create space for them, and I'm tired of build always looking like it's failing at master. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3233
https://github.com/psi4/psi4/pull/3233:307,Safety,redund,redundant,307,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] I think CI is hitting a brownout to deprecate the non-redundant mambaforge, so completing the switch. I've done it at other repos; - [x] windows nightly builds are in great demand, I don't have much more to delete to create space for them, and I'm tired of build always looking like it's failing at master. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3233
https://github.com/psi4/psi4/pull/3234:825,Availability,failure,failure,825,"## Description; Sets up Ruff to replace yapf & isort. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Should not affect end-users,; - [x] Will affect open PRs once `main` is re-formatted and ruff is enforced on the CI level, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] aligns code formatting convention to [Ruff](https://docs.astral.sh/ruff/formatter/), replacing yapf & isort,. ## Questions; - [ ] Should pre-commit run in the CI? It could run to let know PR might not be following the style, but the failure might not be blocking. It's something like a warning for a maintainer/PR issuer. ## Checklist; - [x] No new tests are required for that,; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3234
https://github.com/psi4/psi4/pull/3234:187,Deployability,release,release,187,"## Description; Sets up Ruff to replace yapf & isort. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Should not affect end-users,; - [x] Will affect open PRs once `main` is re-formatted and ruff is enforced on the CI level, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] aligns code formatting convention to [Ruff](https://docs.astral.sh/ruff/formatter/), replacing yapf & isort,. ## Questions; - [ ] Should pre-commit run in the CI? It could run to let know PR might not be following the style, but the failure might not be blocking. It's something like a warning for a maintainer/PR issuer. ## Checklist; - [x] No new tests are required for that,; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3234
https://github.com/psi4/psi4/pull/3234:941,Testability,test,tests,941,"## Description; Sets up Ruff to replace yapf & isort. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Should not affect end-users,; - [x] Will affect open PRs once `main` is re-formatted and ruff is enforced on the CI level, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] aligns code formatting convention to [Ruff](https://docs.astral.sh/ruff/formatter/), replacing yapf & isort,. ## Questions; - [ ] Should pre-commit run in the CI? It could run to let know PR might not be following the style, but the failure might not be blocking. It's something like a warning for a maintainer/PR issuer. ## Checklist; - [x] No new tests are required for that,; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3234
https://github.com/psi4/psi4/pull/3234:1011,Testability,test,tests,1011,"## Description; Sets up Ruff to replace yapf & isort. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Should not affect end-users,; - [x] Will affect open PRs once `main` is re-formatted and ruff is enforced on the CI level, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] aligns code formatting convention to [Ruff](https://docs.astral.sh/ruff/formatter/), replacing yapf & isort,. ## Questions; - [ ] Should pre-commit run in the CI? It could run to let know PR might not be following the style, but the failure might not be blocking. It's something like a warning for a maintainer/PR issuer. ## Checklist; - [x] No new tests are required for that,; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3234
https://github.com/psi4/psi4/pull/3234:1102,Testability,test,tests,1102,"## Description; Sets up Ruff to replace yapf & isort. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Should not affect end-users,; - [x] Will affect open PRs once `main` is re-formatted and ruff is enforced on the CI level, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] aligns code formatting convention to [Ruff](https://docs.astral.sh/ruff/formatter/), replacing yapf & isort,. ## Questions; - [ ] Should pre-commit run in the CI? It could run to let know PR might not be following the style, but the failure might not be blocking. It's something like a warning for a maintainer/PR issuer. ## Checklist; - [x] No new tests are required for that,; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3234
https://github.com/psi4/psi4/issues/3235:1343,Availability,down,down-electron,1343,"tility by Mike Deible and Vladimir Konjkov, which can convert files written in the quasi-standard MOLDEN format into casino’s gwfn.data format.; But in the case of a multideterminant wave function additional data described in [CASINO documentation](https://casinoqmc.net/casino_manual_dir/casino_manual.pdf) **7.4.5 Excitations and multideterminant-expansion coefficients** are required.; The data has the following form and is written to a file **correlation.data**. ```; START MDET; Title; multideterminant WFN generated from Psi4 output data. ! some title; ! empty string or ignored; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the re",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3235:1515,Availability,down,down-electron,1515,"tility by Mike Deible and Vladimir Konjkov, which can convert files written in the quasi-standard MOLDEN format into casino’s gwfn.data format.; But in the case of a multideterminant wave function additional data described in [CASINO documentation](https://casinoqmc.net/casino_manual_dir/casino_manual.pdf) **7.4.5 Excitations and multideterminant-expansion coefficients** are required.; The data has the following form and is written to a file **correlation.data**. ```; START MDET; Title; multideterminant WFN generated from Psi4 output data. ! some title; ! empty string or ignored; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the re",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3235:1923,Availability,down,down-electrons,1923,"RT MDET; Title; multideterminant WFN generated from Psi4 output data. ! some title; ! empty string or ignored; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the requested orbital.; ; Thus, if the MSCF calculation is performed for CASINO, it is necessary simultaneously with the molden file create correlation.data. If PSI4 using configuration state function (**CSF**), then group of determinants for each **CSF** should be labeled for simultaneous optimization like the 2nd and 3rd determinants in the example above. The opt-flag for all determinants except the first one should be equal to 1. PSI4 [output](https://github.com/user-attachme",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3235:2533,Deployability,configurat,configuration,2533,"d; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the requested orbital.; ; Thus, if the MSCF calculation is performed for CASINO, it is necessary simultaneously with the molden file create correlation.data. If PSI4 using configuration state function (**CSF**), then group of determinants for each **CSF** should be labeled for simultaneous optimization like the 2nd and 3rd determinants in the example above. The opt-flag for all determinants except the first one should be equal to 1. PSI4 [output](https://github.com/user-attachments/files/17463891/output.txt) on the basis of which the above-described file could be generated. Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3235:2533,Modifiability,config,configuration,2533,"d; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the requested orbital.; ; Thus, if the MSCF calculation is performed for CASINO, it is necessary simultaneously with the molden file create correlation.data. If PSI4 using configuration state function (**CSF**), then group of determinants for each **CSF** should be labeled for simultaneous optimization like the 2nd and 3rd determinants in the example above. The opt-flag for all determinants except the first one should be equal to 1. PSI4 [output](https://github.com/user-attachments/files/17463891/output.txt) on the basis of which the above-described file could be generated. Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3235:96,Performance,perform,performing,96,"Hello PSI4 developers. [CASINO](https://en.wikipedia.org/wiki/CASINO) is well known program for performing quantum Monte Carlo (QMC) electronic structure calculations. Third-party codes are required to generate trial wave function. Support for Gaussian basis set quantum chemistry code is provided through the **[molden2qmc](https://github.com/Konjkov/molden2qmc)** utility by Mike Deible and Vladimir Konjkov, which can convert files written in the quasi-standard MOLDEN format into casino’s gwfn.data format.; But in the case of a multideterminant wave function additional data described in [CASINO documentation](https://casinoqmc.net/casino_manual_dir/casino_manual.pdf) **7.4.5 Excitations and multideterminant-expansion coefficients** are required.; The data has the following form and is written to a file **correlation.data**. ```; START MDET; Title; multideterminant WFN generated from Psi4 output data. ! some title; ! empty string or ignored; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3235:1028,Performance,optimiz,optimization,1028,"O](https://en.wikipedia.org/wiki/CASINO) is well known program for performing quantum Monte Carlo (QMC) electronic structure calculations. Third-party codes are required to generate trial wave function. Support for Gaussian basis set quantum chemistry code is provided through the **[molden2qmc](https://github.com/Konjkov/molden2qmc)** utility by Mike Deible and Vladimir Konjkov, which can convert files written in the quasi-standard MOLDEN format into casino’s gwfn.data format.; But in the case of a multideterminant wave function additional data described in [CASINO documentation](https://casinoqmc.net/casino_manual_dir/casino_manual.pdf) **7.4.5 Excitations and multideterminant-expansion coefficients** are required.; The data has the following form and is written to a file **correlation.data**. ```; START MDET; Title; multideterminant WFN generated from Psi4 output data. ! some title; ! empty string or ignored; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3235:1126,Performance,optimiz,optimization,1126,"onte Carlo (QMC) electronic structure calculations. Third-party codes are required to generate trial wave function. Support for Gaussian basis set quantum chemistry code is provided through the **[molden2qmc](https://github.com/Konjkov/molden2qmc)** utility by Mike Deible and Vladimir Konjkov, which can convert files written in the quasi-standard MOLDEN format into casino’s gwfn.data format.; But in the case of a multideterminant wave function additional data described in [CASINO documentation](https://casinoqmc.net/casino_manual_dir/casino_manual.pdf) **7.4.5 Excitations and multideterminant-expansion coefficients** are required.; The data has the following form and is written to a file **correlation.data**. ```; START MDET; Title; multideterminant WFN generated from Psi4 output data. ! some title; ! empty string or ignored; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3235:1202,Performance,optimiz,optimization,1202,"tility by Mike Deible and Vladimir Konjkov, which can convert files written in the quasi-standard MOLDEN format into casino’s gwfn.data format.; But in the case of a multideterminant wave function additional data described in [CASINO documentation](https://casinoqmc.net/casino_manual_dir/casino_manual.pdf) **7.4.5 Excitations and multideterminant-expansion coefficients** are required.; The data has the following form and is written to a file **correlation.data**. ```; START MDET; Title; multideterminant WFN generated from Psi4 output data. ! some title; ! empty string or ignored; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the re",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3235:2420,Performance,perform,performed,2420,"d; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the requested orbital.; ; Thus, if the MSCF calculation is performed for CASINO, it is necessary simultaneously with the molden file create correlation.data. If PSI4 using configuration state function (**CSF**), then group of determinants for each **CSF** should be labeled for simultaneous optimization like the 2nd and 3rd determinants in the example above. The opt-flag for all determinants except the first one should be equal to 1. PSI4 [output](https://github.com/user-attachments/files/17463891/output.txt) on the basis of which the above-described file could be generated. Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3235:2652,Performance,optimiz,optimization,2652,"d; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the requested orbital.; ; Thus, if the MSCF calculation is performed for CASINO, it is necessary simultaneously with the molden file create correlation.data. If PSI4 using configuration state function (**CSF**), then group of determinants for each **CSF** should be labeled for simultaneous optimization like the 2nd and 3rd determinants in the example above. The opt-flag for all determinants except the first one should be equal to 1. PSI4 [output](https://github.com/user-attachments/files/17463891/output.txt) on the basis of which the above-described file could be generated. Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3235
https://github.com/psi4/psi4/issues/3236:1331,Availability,error,error,1331,"Related issue: [2577](https://github.com/psi4/psi4/issues/2577). Using a similar script as the previous reporter (using Psi4 1.9.1 and this build; `conda install -n $VENV_PSI4 psi4 numpy scipy dftd3-python dftd4-python gcp-correction python=$PYTHON_VERSION -c conda-forge`); ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check'}); mol = psi4.geometry(""""""; 0 1; O; """""");; psi4.energy('wB97X-D3BJ/def2-TZVPD', molecule=mol); ```. I get the NYI message:; `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`. Is the implementation of stability check for DFT on the roadmap for the near future? This would be very helpful especially when running UKS as we have observed that open shell systems often have instabilities in the SCF. . I also tried with `PBE/6-31G` and still get this exception. However, this [merged PR](https://github.com/psi4/psi4/pull/2849) implemented stability check for GGA functionals - is this a bug? The NYI message looks like it's triggered for every DFT functional ([see this line](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L578)), whereas [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/subclass_methods.py#L129) the program only raises the error if the functional is meta or needs vv10.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236
https://github.com/psi4/psi4/issues/3236:154,Deployability,install,install,154,"Related issue: [2577](https://github.com/psi4/psi4/issues/2577). Using a similar script as the previous reporter (using Psi4 1.9.1 and this build; `conda install -n $VENV_PSI4 psi4 numpy scipy dftd3-python dftd4-python gcp-correction python=$PYTHON_VERSION -c conda-forge`); ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check'}); mol = psi4.geometry(""""""; 0 1; O; """""");; psi4.energy('wB97X-D3BJ/def2-TZVPD', molecule=mol); ```. I get the NYI message:; `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`. Is the implementation of stability check for DFT on the roadmap for the near future? This would be very helpful especially when running UKS as we have observed that open shell systems often have instabilities in the SCF. . I also tried with `PBE/6-31G` and still get this exception. However, this [merged PR](https://github.com/psi4/psi4/pull/2849) implemented stability check for GGA functionals - is this a bug? The NYI message looks like it's triggered for every DFT functional ([see this line](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L578)), whereas [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/subclass_methods.py#L129) the program only raises the error if the functional is meta or needs vv10.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236
https://github.com/psi4/psi4/issues/3236:409,Energy Efficiency,energy,energy,409,"Related issue: [2577](https://github.com/psi4/psi4/issues/2577). Using a similar script as the previous reporter (using Psi4 1.9.1 and this build; `conda install -n $VENV_PSI4 psi4 numpy scipy dftd3-python dftd4-python gcp-correction python=$PYTHON_VERSION -c conda-forge`); ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check'}); mol = psi4.geometry(""""""; 0 1; O; """""");; psi4.energy('wB97X-D3BJ/def2-TZVPD', molecule=mol); ```. I get the NYI message:; `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`. Is the implementation of stability check for DFT on the roadmap for the near future? This would be very helpful especially when running UKS as we have observed that open shell systems often have instabilities in the SCF. . I also tried with `PBE/6-31G` and still get this exception. However, this [merged PR](https://github.com/psi4/psi4/pull/2849) implemented stability check for GGA functionals - is this a bug? The NYI message looks like it's triggered for every DFT functional ([see this line](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L578)), whereas [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/subclass_methods.py#L129) the program only raises the error if the functional is meta or needs vv10.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236
https://github.com/psi4/psi4/issues/3236:475,Integrability,message,message,475,"Related issue: [2577](https://github.com/psi4/psi4/issues/2577). Using a similar script as the previous reporter (using Psi4 1.9.1 and this build; `conda install -n $VENV_PSI4 psi4 numpy scipy dftd3-python dftd4-python gcp-correction python=$PYTHON_VERSION -c conda-forge`); ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check'}); mol = psi4.geometry(""""""; 0 1; O; """""");; psi4.energy('wB97X-D3BJ/def2-TZVPD', molecule=mol); ```. I get the NYI message:; `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`. Is the implementation of stability check for DFT on the roadmap for the near future? This would be very helpful especially when running UKS as we have observed that open shell systems often have instabilities in the SCF. . I also tried with `PBE/6-31G` and still get this exception. However, this [merged PR](https://github.com/psi4/psi4/pull/2849) implemented stability check for GGA functionals - is this a bug? The NYI message looks like it's triggered for every DFT functional ([see this line](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L578)), whereas [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/subclass_methods.py#L129) the program only raises the error if the functional is meta or needs vv10.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236
https://github.com/psi4/psi4/issues/3236:1014,Integrability,message,message,1014,"Related issue: [2577](https://github.com/psi4/psi4/issues/2577). Using a similar script as the previous reporter (using Psi4 1.9.1 and this build; `conda install -n $VENV_PSI4 psi4 numpy scipy dftd3-python dftd4-python gcp-correction python=$PYTHON_VERSION -c conda-forge`); ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check'}); mol = psi4.geometry(""""""; 0 1; O; """""");; psi4.energy('wB97X-D3BJ/def2-TZVPD', molecule=mol); ```. I get the NYI message:; `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`. Is the implementation of stability check for DFT on the roadmap for the near future? This would be very helpful especially when running UKS as we have observed that open shell systems often have instabilities in the SCF. . I also tried with `PBE/6-31G` and still get this exception. However, this [merged PR](https://github.com/psi4/psi4/pull/2849) implemented stability check for GGA functionals - is this a bug? The NYI message looks like it's triggered for every DFT functional ([see this line](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L578)), whereas [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/subclass_methods.py#L129) the program only raises the error if the functional is meta or needs vv10.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236
https://github.com/psi4/psi4/issues/3236:516,Security,Validat,ValidationError,516,"Related issue: [2577](https://github.com/psi4/psi4/issues/2577). Using a similar script as the previous reporter (using Psi4 1.9.1 and this build; `conda install -n $VENV_PSI4 psi4 numpy scipy dftd3-python dftd4-python gcp-correction python=$PYTHON_VERSION -c conda-forge`); ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check'}); mol = psi4.geometry(""""""; 0 1; O; """""");; psi4.energy('wB97X-D3BJ/def2-TZVPD', molecule=mol); ```. I get the NYI message:; `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`. Is the implementation of stability check for DFT on the roadmap for the near future? This would be very helpful especially when running UKS as we have observed that open shell systems often have instabilities in the SCF. . I also tried with `PBE/6-31G` and still get this exception. However, this [merged PR](https://github.com/psi4/psi4/pull/2849) implemented stability check for GGA functionals - is this a bug? The NYI message looks like it's triggered for every DFT functional ([see this line](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L578)), whereas [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/subclass_methods.py#L129) the program only raises the error if the functional is meta or needs vv10.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3236
https://github.com/psi4/psi4/pull/3239:505,Deployability,integrat,integration,505,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This pull request fixes the functionality of the EMBPOT perturbation to the core Hamiltonian in SCF calculations and adds appropriate gradients for the EMBPOT potential. The EMBPOT perturbation works by reading x, y, z, w, and v coordinates from a file (`EMBPOT`) during the call to `HF::form_H()`. The core Hamiltonian of the `HF` object is then modified to include a contribution that is calculated by performing numerical integration of the basis over the EMBPOT coordinates, weights, and potentials. This functionality assumed that the values of phi calculated in the `BasisSet::compute_phi()` routine are always in a cartesian basis and not in a spherical basis, which was true up until the fix in #2210, which was included in the 1.4 release. Accordingly, an unnecessary AO to SO transformation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:820,Deployability,release,release,820,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This pull request fixes the functionality of the EMBPOT perturbation to the core Hamiltonian in SCF calculations and adds appropriate gradients for the EMBPOT potential. The EMBPOT perturbation works by reading x, y, z, w, and v coordinates from a file (`EMBPOT`) during the call to `HF::form_H()`. The core Hamiltonian of the `HF` object is then modified to include a contribution that is calculated by performing numerical integration of the basis over the EMBPOT coordinates, weights, and potentials. This functionality assumed that the values of phi calculated in the `BasisSet::compute_phi()` routine are always in a cartesian basis and not in a spherical basis, which was true up until the fix in #2210, which was included in the 1.4 release. Accordingly, an unnecessary AO to SO transformation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:1409,Deployability,release,release,1409," the `HF` object is then modified to include a contribution that is calculated by performing numerical integration of the basis over the EMBPOT coordinates, weights, and potentials. This functionality assumed that the values of phi calculated in the `BasisSet::compute_phi()` routine are always in a cartesian basis and not in a spherical basis, which was true up until the fix in #2210, which was included in the 1.4 release. Accordingly, an unnecessary AO to SO transformation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed the EMBPOT functionality in `HF::form_H()` by removing AO to SO transformation and supplying an appropriately sized vector to the `BasisSet::compute_phi()` call.; - [x] Added function `MintsHelper::embpot_grad()` to ca",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:1905,Energy Efficiency,energy,energy,1905,"ation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed the EMBPOT functionality in `HF::form_H()` by removing AO to SO transformation and supplying an appropriately sized vector to the `BasisSet::compute_phi()` call.; - [x] Added function `MintsHelper::embpot_grad()` to calculate the component of the gradient from the EMBPOT perturbation. ## Checklist; - [x] Added test `embpot1` to compare energies and gradients computed by including embedded point charges analytically, through the `external_potentials` keyword, and numerically, through the EMBPOT functionality.; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:2583,Energy Efficiency,charge,charges,2583,"the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed the EMBPOT functionality in `HF::form_H()` by removing AO to SO transformation and supplying an appropriately sized vector to the `BasisSet::compute_phi()` call.; - [x] Added function `MintsHelper::embpot_grad()` to calculate the component of the gradient from the EMBPOT perturbation. ## Checklist; - [x] Added test `embpot1` to compare energies and gradients computed by including embedded point charges analytically, through the `external_potentials` keyword, and numerically, through the EMBPOT functionality.; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:505,Integrability,integrat,integration,505,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This pull request fixes the functionality of the EMBPOT perturbation to the core Hamiltonian in SCF calculations and adds appropriate gradients for the EMBPOT potential. The EMBPOT perturbation works by reading x, y, z, w, and v coordinates from a file (`EMBPOT`) during the call to `HF::form_H()`. The core Hamiltonian of the `HF` object is then modified to include a contribution that is calculated by performing numerical integration of the basis over the EMBPOT coordinates, weights, and potentials. This functionality assumed that the values of phi calculated in the `BasisSet::compute_phi()` routine are always in a cartesian basis and not in a spherical basis, which was true up until the fix in #2210, which was included in the 1.4 release. Accordingly, an unnecessary AO to SO transformation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:678,Integrability,rout,routine,678,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This pull request fixes the functionality of the EMBPOT perturbation to the core Hamiltonian in SCF calculations and adds appropriate gradients for the EMBPOT potential. The EMBPOT perturbation works by reading x, y, z, w, and v coordinates from a file (`EMBPOT`) during the call to `HF::form_H()`. The core Hamiltonian of the `HF` object is then modified to include a contribution that is calculated by performing numerical integration of the basis over the EMBPOT coordinates, weights, and potentials. This functionality assumed that the values of phi calculated in the `BasisSet::compute_phi()` routine are always in a cartesian basis and not in a spherical basis, which was true up until the fix in #2210, which was included in the 1.4 release. Accordingly, an unnecessary AO to SO transformation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:914,Integrability,rout,routine,914,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This pull request fixes the functionality of the EMBPOT perturbation to the core Hamiltonian in SCF calculations and adds appropriate gradients for the EMBPOT potential. The EMBPOT perturbation works by reading x, y, z, w, and v coordinates from a file (`EMBPOT`) during the call to `HF::form_H()`. The core Hamiltonian of the `HF` object is then modified to include a contribution that is calculated by performing numerical integration of the basis over the EMBPOT coordinates, weights, and potentials. This functionality assumed that the values of phi calculated in the `BasisSet::compute_phi()` routine are always in a cartesian basis and not in a spherical basis, which was true up until the fix in #2210, which was included in the 1.4 release. Accordingly, an unnecessary AO to SO transformation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:484,Performance,perform,performing,484,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This pull request fixes the functionality of the EMBPOT perturbation to the core Hamiltonian in SCF calculations and adds appropriate gradients for the EMBPOT potential. The EMBPOT perturbation works by reading x, y, z, w, and v coordinates from a file (`EMBPOT`) during the call to `HF::form_H()`. The core Hamiltonian of the `HF` object is then modified to include a contribution that is calculated by performing numerical integration of the basis over the EMBPOT coordinates, weights, and potentials. This functionality assumed that the values of phi calculated in the `BasisSet::compute_phi()` routine are always in a cartesian basis and not in a spherical basis, which was true up until the fix in #2210, which was included in the 1.4 release. Accordingly, an unnecessary AO to SO transformation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:2497,Testability,test,test,2497,"the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed the EMBPOT functionality in `HF::form_H()` by removing AO to SO transformation and supplying an appropriately sized vector to the `BasisSet::compute_phi()` call.; - [x] Added function `MintsHelper::embpot_grad()` to calculate the component of the gradient from the EMBPOT perturbation. ## Checklist; - [x] Added test `embpot1` to compare energies and gradients computed by including embedded point charges analytically, through the `external_potentials` keyword, and numerically, through the EMBPOT functionality.; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:2740,Testability,test,tests,2740,"the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed the EMBPOT functionality in `HF::form_H()` by removing AO to SO transformation and supplying an appropriately sized vector to the `BasisSet::compute_phi()` call.; - [x] Added function `MintsHelper::embpot_grad()` to calculate the component of the gradient from the EMBPOT perturbation. ## Checklist; - [x] Added test `embpot1` to compare energies and gradients computed by including embedded point charges analytically, through the `external_potentials` keyword, and numerically, through the EMBPOT functionality.; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/pull/3239:2831,Testability,test,tests,2831,"the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed the EMBPOT functionality in `HF::form_H()` by removing AO to SO transformation and supplying an appropriately sized vector to the `BasisSet::compute_phi()` call.; - [x] Added function `MintsHelper::embpot_grad()` to calculate the component of the gradient from the EMBPOT perturbation. ## Checklist; - [x] Added test `embpot1` to compare energies and gradients computed by including embedded point charges analytically, through the `external_potentials` keyword, and numerically, through the EMBPOT functionality.; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3239
https://github.com/psi4/psi4/issues/3240:62,Availability,error,error,62,"When using a custom basis set, `MBIS_VOLUME_RATIOS` throws an error, all other properties seem to work fine. It also works fine if the basis set is included in the call to `psi4.energy`. Using conda version of psi4 1.9.1 on Linux. Input:; ```python; import psi4. h2o = psi4.geometry(""""""; H 0 0 0; O 0 0 1; H 0 1 1; """""",""h2o""). def basisspec_psi4_MyBasis(mol, role):; mol.set_basis_all_atoms(""sto-3g"", role=role); return {}. psi4.qcdb.libmintsbasisset.basishorde[""MYBASIS""] = basisspec_psi4_MyBasis; psi4.core.set_global_option(""BASIS"", ""mybasis""). _, wfn = psi4.energy('hf', return_wfn=True, molecule=h2o). psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); ```. Error:; ```; QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['H']; Basis Sets: [('BASISSPEC_PSI4_MYBASIS', 'BASISSPEC_PSI4_MYBASIS', None)]; File Path: /home/jevandezande/tmp/psi4/basis, /home/jevandezande/tmp/psi4/basis, /home/jevandezande/progs/mamba/envs/peregrine/share/psi4/basis; Input Blocks:. Traceback (most recent call last):; File ""/home/jevandezande/tmp/psi4/basis/a.py"", line 18, in <module>; psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/util.py"", line 85, in oeprop; free_atom_volumes(wfn); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/prop_util.py"", line 119, in free_atom_volumes; at_e, at_wfn = psi4.energy(method, return_wfn=True); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3240
https://github.com/psi4/psi4/issues/3240:652,Availability,Error,Error,652,"When using a custom basis set, `MBIS_VOLUME_RATIOS` throws an error, all other properties seem to work fine. It also works fine if the basis set is included in the call to `psi4.energy`. Using conda version of psi4 1.9.1 on Linux. Input:; ```python; import psi4. h2o = psi4.geometry(""""""; H 0 0 0; O 0 0 1; H 0 1 1; """""",""h2o""). def basisspec_psi4_MyBasis(mol, role):; mol.set_basis_all_atoms(""sto-3g"", role=role); return {}. psi4.qcdb.libmintsbasisset.basishorde[""MYBASIS""] = basisspec_psi4_MyBasis; psi4.core.set_global_option(""BASIS"", ""mybasis""). _, wfn = psi4.energy('hf', return_wfn=True, molecule=h2o). psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); ```. Error:; ```; QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['H']; Basis Sets: [('BASISSPEC_PSI4_MYBASIS', 'BASISSPEC_PSI4_MYBASIS', None)]; File Path: /home/jevandezande/tmp/psi4/basis, /home/jevandezande/tmp/psi4/basis, /home/jevandezande/progs/mamba/envs/peregrine/share/psi4/basis; Input Blocks:. Traceback (most recent call last):; File ""/home/jevandezande/tmp/psi4/basis/a.py"", line 18, in <module>; psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/util.py"", line 85, in oeprop; free_atom_volumes(wfn); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/prop_util.py"", line 119, in free_atom_volumes; at_e, at_wfn = psi4.energy(method, return_wfn=True); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3240
https://github.com/psi4/psi4/issues/3240:178,Energy Efficiency,energy,energy,178,"When using a custom basis set, `MBIS_VOLUME_RATIOS` throws an error, all other properties seem to work fine. It also works fine if the basis set is included in the call to `psi4.energy`. Using conda version of psi4 1.9.1 on Linux. Input:; ```python; import psi4. h2o = psi4.geometry(""""""; H 0 0 0; O 0 0 1; H 0 1 1; """""",""h2o""). def basisspec_psi4_MyBasis(mol, role):; mol.set_basis_all_atoms(""sto-3g"", role=role); return {}. psi4.qcdb.libmintsbasisset.basishorde[""MYBASIS""] = basisspec_psi4_MyBasis; psi4.core.set_global_option(""BASIS"", ""mybasis""). _, wfn = psi4.energy('hf', return_wfn=True, molecule=h2o). psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); ```. Error:; ```; QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['H']; Basis Sets: [('BASISSPEC_PSI4_MYBASIS', 'BASISSPEC_PSI4_MYBASIS', None)]; File Path: /home/jevandezande/tmp/psi4/basis, /home/jevandezande/tmp/psi4/basis, /home/jevandezande/progs/mamba/envs/peregrine/share/psi4/basis; Input Blocks:. Traceback (most recent call last):; File ""/home/jevandezande/tmp/psi4/basis/a.py"", line 18, in <module>; psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/util.py"", line 85, in oeprop; free_atom_volumes(wfn); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/prop_util.py"", line 119, in free_atom_volumes; at_e, at_wfn = psi4.energy(method, return_wfn=True); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3240
https://github.com/psi4/psi4/issues/3240:562,Energy Efficiency,energy,energy,562,"When using a custom basis set, `MBIS_VOLUME_RATIOS` throws an error, all other properties seem to work fine. It also works fine if the basis set is included in the call to `psi4.energy`. Using conda version of psi4 1.9.1 on Linux. Input:; ```python; import psi4. h2o = psi4.geometry(""""""; H 0 0 0; O 0 0 1; H 0 1 1; """""",""h2o""). def basisspec_psi4_MyBasis(mol, role):; mol.set_basis_all_atoms(""sto-3g"", role=role); return {}. psi4.qcdb.libmintsbasisset.basishorde[""MYBASIS""] = basisspec_psi4_MyBasis; psi4.core.set_global_option(""BASIS"", ""mybasis""). _, wfn = psi4.energy('hf', return_wfn=True, molecule=h2o). psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); ```. Error:; ```; QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['H']; Basis Sets: [('BASISSPEC_PSI4_MYBASIS', 'BASISSPEC_PSI4_MYBASIS', None)]; File Path: /home/jevandezande/tmp/psi4/basis, /home/jevandezande/tmp/psi4/basis, /home/jevandezande/progs/mamba/envs/peregrine/share/psi4/basis; Input Blocks:. Traceback (most recent call last):; File ""/home/jevandezande/tmp/psi4/basis/a.py"", line 18, in <module>; psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/util.py"", line 85, in oeprop; free_atom_volumes(wfn); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/prop_util.py"", line 119, in free_atom_volumes; at_e, at_wfn = psi4.energy(method, return_wfn=True); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3240
https://github.com/psi4/psi4/issues/3240:1500,Energy Efficiency,energy,energy,1500,"y('hf', return_wfn=True, molecule=h2o). psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); ```. Error:; ```; QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['H']; Basis Sets: [('BASISSPEC_PSI4_MYBASIS', 'BASISSPEC_PSI4_MYBASIS', None)]; File Path: /home/jevandezande/tmp/psi4/basis, /home/jevandezande/tmp/psi4/basis, /home/jevandezande/progs/mamba/envs/peregrine/share/psi4/basis; Input Blocks:. Traceback (most recent call last):; File ""/home/jevandezande/tmp/psi4/basis/a.py"", line 18, in <module>; psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/util.py"", line 85, in oeprop; free_atom_volumes(wfn); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/prop_util.py"", line 119, in free_atom_volumes; at_e, at_wfn = psi4.energy(method, return_wfn=True); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 1778, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/python_helpers.py"", line 217, in _core_wavefunction_build; basis = core.BasisSet.build(",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3240
https://github.com/psi4/psi4/issues/3240:1689,Energy Efficiency,energy,energy,1689," ['H']; Basis Sets: [('BASISSPEC_PSI4_MYBASIS', 'BASISSPEC_PSI4_MYBASIS', None)]; File Path: /home/jevandezande/tmp/psi4/basis, /home/jevandezande/tmp/psi4/basis, /home/jevandezande/progs/mamba/envs/peregrine/share/psi4/basis; Input Blocks:. Traceback (most recent call last):; File ""/home/jevandezande/tmp/psi4/basis/a.py"", line 18, in <module>; psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/util.py"", line 85, in oeprop; free_atom_volumes(wfn); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/prop_util.py"", line 119, in free_atom_volumes; at_e, at_wfn = psi4.energy(method, return_wfn=True); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 1778, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/python_helpers.py"", line 217, in _core_wavefunction_build; basis = core.BasisSet.build(mol, ""ORBITAL"", basis, quiet=quiet); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/python_helpers.py"", line 157, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3240
https://github.com/psi4/psi4/issues/3240:1715,Energy Efficiency,energy,energy,1715," ['H']; Basis Sets: [('BASISSPEC_PSI4_MYBASIS', 'BASISSPEC_PSI4_MYBASIS', None)]; File Path: /home/jevandezande/tmp/psi4/basis, /home/jevandezande/tmp/psi4/basis, /home/jevandezande/progs/mamba/envs/peregrine/share/psi4/basis; Input Blocks:. Traceback (most recent call last):; File ""/home/jevandezande/tmp/psi4/basis/a.py"", line 18, in <module>; psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/util.py"", line 85, in oeprop; free_atom_volumes(wfn); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/prop_util.py"", line 119, in free_atom_volumes; at_e, at_wfn = psi4.energy(method, return_wfn=True); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 1778, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/python_helpers.py"", line 217, in _core_wavefunction_build; basis = core.BasisSet.build(mol, ""ORBITAL"", basis, quiet=quiet); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/python_helpers.py"", line 157, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3240
https://github.com/psi4/psi4/issues/3241:272,Availability,fault,fault,272,"Using `psi4.set_output_file()` command to set the output file location does not close the file when `psi4.core.close_outfile()` is invoked.; This causes the open files to accumulate when running in a loop. ; Finally, as the number of open files > ulimit (1024), a segment fault core dump error is thrown. . (previously I Increased this limit temporarily by using `ulimit -n 4096`, however I was unable to track the exact source of the error.). Fix : **Replacing `psi4.set_output_file()` with `psi4.core.set_output_file()` did the trick for me.**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3241
https://github.com/psi4/psi4/issues/3241:288,Availability,error,error,288,"Using `psi4.set_output_file()` command to set the output file location does not close the file when `psi4.core.close_outfile()` is invoked.; This causes the open files to accumulate when running in a loop. ; Finally, as the number of open files > ulimit (1024), a segment fault core dump error is thrown. . (previously I Increased this limit temporarily by using `ulimit -n 4096`, however I was unable to track the exact source of the error.). Fix : **Replacing `psi4.set_output_file()` with `psi4.core.set_output_file()` did the trick for me.**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3241
https://github.com/psi4/psi4/issues/3241:435,Availability,error,error,435,"Using `psi4.set_output_file()` command to set the output file location does not close the file when `psi4.core.close_outfile()` is invoked.; This causes the open files to accumulate when running in a loop. ; Finally, as the number of open files > ulimit (1024), a segment fault core dump error is thrown. . (previously I Increased this limit temporarily by using `ulimit -n 4096`, however I was unable to track the exact source of the error.). Fix : **Replacing `psi4.set_output_file()` with `psi4.core.set_output_file()` did the trick for me.**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3241
https://github.com/psi4/psi4/issues/3242:481,Availability,error,error,481,"With the following input file:; ```; memory 500 mb; set basis cc-pVDZ. molecule mol {; 4. O 0.0 0.0 0.0; H 0.0 0.0 0.96; H 0.76 0.76 0.0; H -0.76 0.76 0.0; }. set optking {; # Freeze the dihedral angle between atoms 1, 2, 3, and 4 at 90 degrees; frozen_dihedral = [(1, 2, 3, 4, 100.0)]; }. # Perform the optimization with the frozen dihedral constraint; optimize('b3lyp'); ```; running psi4 v1.9.1 gives me a segfault: 'psi4 inp.dat' terminated by signal SIGSEGV (Address boundary error); I have tried a few other ways using keywords: fixed_dihedral, and ranged_dihedral, no luck. Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3242
https://github.com/psi4/psi4/issues/3242:292,Performance,Perform,Perform,292,"With the following input file:; ```; memory 500 mb; set basis cc-pVDZ. molecule mol {; 4. O 0.0 0.0 0.0; H 0.0 0.0 0.96; H 0.76 0.76 0.0; H -0.76 0.76 0.0; }. set optking {; # Freeze the dihedral angle between atoms 1, 2, 3, and 4 at 90 degrees; frozen_dihedral = [(1, 2, 3, 4, 100.0)]; }. # Perform the optimization with the frozen dihedral constraint; optimize('b3lyp'); ```; running psi4 v1.9.1 gives me a segfault: 'psi4 inp.dat' terminated by signal SIGSEGV (Address boundary error); I have tried a few other ways using keywords: fixed_dihedral, and ranged_dihedral, no luck. Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3242
https://github.com/psi4/psi4/issues/3242:304,Performance,optimiz,optimization,304,"With the following input file:; ```; memory 500 mb; set basis cc-pVDZ. molecule mol {; 4. O 0.0 0.0 0.0; H 0.0 0.0 0.96; H 0.76 0.76 0.0; H -0.76 0.76 0.0; }. set optking {; # Freeze the dihedral angle between atoms 1, 2, 3, and 4 at 90 degrees; frozen_dihedral = [(1, 2, 3, 4, 100.0)]; }. # Perform the optimization with the frozen dihedral constraint; optimize('b3lyp'); ```; running psi4 v1.9.1 gives me a segfault: 'psi4 inp.dat' terminated by signal SIGSEGV (Address boundary error); I have tried a few other ways using keywords: fixed_dihedral, and ranged_dihedral, no luck. Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3242
https://github.com/psi4/psi4/issues/3242:354,Performance,optimiz,optimize,354,"With the following input file:; ```; memory 500 mb; set basis cc-pVDZ. molecule mol {; 4. O 0.0 0.0 0.0; H 0.0 0.0 0.96; H 0.76 0.76 0.0; H -0.76 0.76 0.0; }. set optking {; # Freeze the dihedral angle between atoms 1, 2, 3, and 4 at 90 degrees; frozen_dihedral = [(1, 2, 3, 4, 100.0)]; }. # Perform the optimization with the frozen dihedral constraint; optimize('b3lyp'); ```; running psi4 v1.9.1 gives me a segfault: 'psi4 inp.dat' terminated by signal SIGSEGV (Address boundary error); I have tried a few other ways using keywords: fixed_dihedral, and ranged_dihedral, no luck. Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3242
https://github.com/psi4/psi4/issues/6:12,Performance,optimiz,optimization,12,Segfault in optimization,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/6
https://github.com/psi4/psi4/issues/12:13,Availability,fault,fault,13,Segmentation fault in CCSD for N and F atoms,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/13:0,Testability,Test,Tests,0,Tests fail on Fedora rawhide,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/14:21,Deployability,install,installation,21,Sphinx documentation installation overwrites files in source tree (samples/),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/14
https://github.com/psi4/psi4/issues/18:22,Availability,failure,failures,22,Geometry optimization failures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:9,Performance,optimiz,optimization,9,Geometry optimization failures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/pull/20:24,Modifiability,variab,variable,24,thread pool: fix unsafe variable change,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/20
https://github.com/psi4/psi4/pull/20:17,Safety,unsafe,unsafe,17,thread pool: fix unsafe variable change,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/20
https://github.com/psi4/psi4/issues/32:65,Integrability,depend,dependency,65,Saving orbital file can crash if # of MO's changes due to linear dependency shift,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/32
https://github.com/psi4/psi4/pull/33:9,Testability,test,test,9,Nonsense test of pull requests.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/33
https://github.com/psi4/psi4/issues/34:24,Energy Efficiency,energy,energy,24,PSIO_ERROR during fnocc energy calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/35:10,Integrability,interface,interface,10,psi4 mrcc interface PSIO_ERROR,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/35
https://github.com/psi4/psi4/issues/37:12,Deployability,update,update,12,SAPT output update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/37
https://github.com/psi4/psi4/issues/56:5,Availability,error,error,5,"PSIO error in ""make tests""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:20,Testability,test,tests,20,"PSIO error in ""make tests""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/60:38,Integrability,contract,contraction,38,Molden format issue (normalization of contraction coefficients of D and higher),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/60
https://github.com/psi4/psi4/issues/66:9,Performance,optimiz,optimization,9,Geometry optimization,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/66
https://github.com/psi4/psi4/issues/74:12,Modifiability,plugin,plugin,12,sointegrals plugin not working?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/74
https://github.com/psi4/psi4/issues/78:0,Modifiability,Plugin,Plugin,0,Plugin examples gone,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/78
https://github.com/psi4/psi4/issues/79:22,Availability,error,error,22,Python argument types error with embedded basis set data,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/79
https://github.com/psi4/psi4/issues/82:6,Availability,Error,Error,6,CMake Error Overhaul,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/82
https://github.com/psi4/psi4/issues/85:11,Availability,failure,failure,11,HEAD build failure with gcc 4.4.6,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/85
https://github.com/psi4/psi4/issues/90:9,Modifiability,plugin,plugins,9,Building plugins fails,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/pull/91:26,Deployability,install,installed,26,Build plugins without psi installed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/91
https://github.com/psi4/psi4/pull/91:6,Modifiability,plugin,plugins,6,Build plugins without psi installed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/91
https://github.com/psi4/psi4/issues/96:7,Availability,error,error,7,symbol error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/96
https://github.com/psi4/psi4/issues/103:0,Performance,optimiz,optimize,0,optimize('uhf') doesn't realize it has analytic gradients,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/103
https://github.com/psi4/psi4/issues/106:18,Performance,optimiz,optimization,18,Open-shell DF-MP2 optimization clarifications,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/106
https://github.com/psi4/psi4/issues/107:7,Testability,test,testing,7,df-mp2 testing non-closed-shell,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/107
https://github.com/psi4/psi4/issues/108:0,Testability,test,test,0,test case coverage,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/108
https://github.com/psi4/psi4/issues/116:10,Testability,test,test,10,Cube file test case and documentation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/116
https://github.com/psi4/psi4/issues/117:34,Energy Efficiency,energy,energy,34,separate reference from method in energy arguments,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/117
https://github.com/psi4/psi4/issues/118:10,Energy Efficiency,adapt,adaptable,10,implement adaptable reference for closed/open-shell,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/118
https://github.com/psi4/psi4/issues/118:10,Modifiability,adapt,adaptable,10,implement adaptable reference for closed/open-shell,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/118
https://github.com/psi4/psi4/issues/120:12,Testability,test,test,12,fix failing test case fnocc1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/120
https://github.com/psi4/psi4/issues/121:12,Testability,test,test,12,fix failing test case fnocc2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/121
https://github.com/psi4/psi4/issues/122:12,Testability,test,test,12,fix failing test case large_atoms,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/122
https://github.com/psi4/psi4/issues/123:30,Energy Efficiency,energy,energy-large,30,fix failing test case fd-freq-energy-large,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/123
https://github.com/psi4/psi4/issues/123:12,Testability,test,test,12,fix failing test case fd-freq-energy-large,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/123
https://github.com/psi4/psi4/issues/124:12,Testability,test,test,12,fix failing test case psithon2 and dftd3-psithon2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/124
https://github.com/psi4/psi4/issues/125:12,Testability,test,test,12,fix failing test case opt-lindep-change,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/125
https://github.com/psi4/psi4/issues/126:12,Testability,test,test,12,fix failing test case cepa3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/126
https://github.com/psi4/psi4/issues/127:12,Testability,test,test,12,fix failing test case dfomp2-grad1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/127
https://github.com/psi4/psi4/issues/128:12,Testability,test,test,12,fix failing test case dfomp2-grad2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/128
https://github.com/psi4/psi4/issues/129:12,Testability,test,test,12,fix failing test case frac,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/129
https://github.com/psi4/psi4/issues/130:12,Testability,test,test,12,fix failing test case cc54,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/130
https://github.com/psi4/psi4/issues/132:12,Testability,test,test,12,fix failing test case cc55,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/132
https://github.com/psi4/psi4/issues/133:12,Testability,test,test,12,fix failing test case cepa3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/133
https://github.com/psi4/psi4/issues/136:11,Testability,test,test,11,Review all test cases in manual for accuracy,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/136
https://github.com/psi4/psi4/issues/138:38,Availability,failure,failure,38,Segfault after mrcc-optfreq test case failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/138
https://github.com/psi4/psi4/issues/138:28,Testability,test,test,28,Segfault after mrcc-optfreq test case failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/138
https://github.com/psi4/psi4/issues/139:22,Modifiability,plugin,plugin,22,fix failing test case plugin skeleton,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/139
https://github.com/psi4/psi4/issues/139:12,Testability,test,test,12,fix failing test case plugin skeleton,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/139
https://github.com/psi4/psi4/pull/141:4,Testability,test,test,4,x2c test added,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/141
https://github.com/psi4/psi4/issues/143:0,Deployability,Update,Update,0,Update DCFT info in user manual,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/143
https://github.com/psi4/psi4/pull/147:8,Safety,redund,redundancies,8,Removed redundancies in OCC manual entries,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/147
https://github.com/psi4/psi4/issues/148:15,Testability,test,test,15,"All ROHF-based test cases are failing, e.g. cc10",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/148
https://github.com/psi4/psi4/issues/153:18,Performance,Optimiz,Optimization,18,crash in Geometry Optimization,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/157:12,Availability,fault,faults,12,Libthce seg faults on generation of DF integrals for porphyrin radical calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/157
https://github.com/psi4/psi4/issues/162:10,Modifiability,plugin,plugins,10,Compiling plugins without source,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/162
https://github.com/psi4/psi4/issues/163:21,Safety,detect,detected,21,Python 3 library not detected correctly by cmake,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/163
https://github.com/psi4/psi4/pull/172:15,Modifiability,Config,ConfigPython,15,Tweaking cmake ConfigPython,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/172
https://github.com/psi4/psi4/issues/173:29,Energy Efficiency,energy,energy,29,using libERD leads to 2e-int energy = 0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/173
https://github.com/psi4/psi4/pull/174:8,Modifiability,plugin,plugins,8,Compile plugins without access to source directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/174
https://github.com/psi4/psi4/pull/174:24,Security,access,access,24,Compile plugins without access to source directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/174
https://github.com/psi4/psi4/issues/185:5,Performance,optimiz,optimized,5,OMP2 optimized orbitals dump to molden file,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/185
https://github.com/psi4/psi4/issues/188:0,Availability,Error,Error,0,Error when making libmints,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/188
https://github.com/psi4/psi4/issues/189:10,Availability,error,error,10,submodule error on fresh clone,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/189
https://github.com/psi4/psi4/issues/190:6,Testability,test,test,6,dfomp test cases failing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/190
https://github.com/psi4/psi4/pull/192:0,Testability,Test,Testing,0,Testing with multiple invocations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/192
https://github.com/psi4/psi4/pull/200:28,Security,hash,hash,28,Replace deprecated defined(%hash) with exists(),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/200
https://github.com/psi4/psi4/issues/201:0,Availability,Error,Error,0,Error when compiling on a supercomputer; ld: cannot find -lboost_mpi-1_57,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/pull/202:15,Testability,test,test,15,temporary fork test.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/202
https://github.com/psi4/psi4/issues/205:12,Availability,error,error,12,Compilation error (missing PsiAPI),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/205
https://github.com/psi4/psi4/issues/206:12,Availability,error,error,12,Compilation error (libfrag),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/pull/208:21,Performance,optimiz,optimization,21,Cartesian-constraint optimization test cases,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/208
https://github.com/psi4/psi4/pull/208:34,Testability,test,test,34,Cartesian-constraint optimization test cases,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/208
https://github.com/psi4/psi4/issues/210:5,Energy Efficiency,energy,energy,5,ROHF energy inconsistency,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/214:6,Modifiability,plugin,plugin-makefile,6,--new-plugin-makefile does not work properly with conda,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/214
https://github.com/psi4/psi4/issues/215:0,Deployability,install,install,0,install headers properly,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/215
https://github.com/psi4/psi4/issues/216:19,Modifiability,plugin,plugin,19,naive Makefile for plugin from binary,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/pull/218:5,Deployability,install,install,5,Also install general headers in include directory #215,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/218
https://github.com/psi4/psi4/issues/221:19,Modifiability,plugin,plugin,19,psio changes break plugin,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/221
https://github.com/psi4/psi4/issues/229:23,Deployability,install,installation,23,"Question about plugin ""installation""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:15,Modifiability,plugin,plugin,15,"Question about plugin ""installation""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/230:16,Testability,test,tests,16,Coupled cluster tests failing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/pull/237:0,Energy Efficiency,Reduce,Reduced,0,Reduced the number of travis CI cases,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/237
https://github.com/psi4/psi4/issues/238:18,Deployability,release,release,18,C++11 support for release 1.0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/238
https://github.com/psi4/psi4/issues/244:20,Energy Efficiency,energy,energy,20,inconsistent cd-mp2 energy,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/pull/246:21,Deployability,update,update,21,Wavefunction passing update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/248:33,Deployability,update,update,33,Stability bugfix and SAPT output update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/248
https://github.com/psi4/psi4/pull/250:0,Deployability,Update,Updates,0,Updates README.md with corrected Travis CI URL.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/250
https://github.com/psi4/psi4/issues/253:7,Testability,test,tests,7,Failed tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/pull/254:17,Usability,guid,guidelines,17,Added some rough guidelines to describe the new PR/commit workflow.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/254
https://github.com/psi4/psi4/pull/255:15,Testability,test,test,15,modified opt10 test to run faster,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/255
https://github.com/psi4/psi4/issues/256:4,Availability,fault,fault,4,seg.fault with dft and soscf,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/256
https://github.com/psi4/psi4/pull/257:17,Testability,test,tests,17,Adding a few IRC tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/257
https://github.com/psi4/psi4/pull/258:31,Availability,error,error,31,SOSCF: Now correctly throws an error for RKS/UKS SOSOCF updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/258
https://github.com/psi4/psi4/pull/258:56,Deployability,update,updates,56,SOSCF: Now correctly throws an error for RKS/UKS SOSOCF updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/258
https://github.com/psi4/psi4/issues/259:33,Deployability,release,release,33,Wavefunction pass issues for 1.0 release,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/260:7,Availability,error,error,7,OEProp error on Mac,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/pull/265:20,Integrability,interface,interface,20,Adds Ambit external interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/265
https://github.com/psi4/psi4/issues/266:4,Availability,error,error,4,run error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/266
https://github.com/psi4/psi4/pull/270:30,Testability,test,tests,30,"cepa(0), dfocc, mp2 fixes and tests",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/270
https://github.com/psi4/psi4/pull/272:28,Safety,avoid,avoid,28,Removed the VERSION file to avoid confusion. Resolves #271.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/272
https://github.com/psi4/psi4/issues/274:22,Availability,error,error,22,libmints/matrix class error?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/274
https://github.com/psi4/psi4/pull/275:0,Deployability,Update,Updates,0,Updates Ambit version and Psi4's configuration of it,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/275
https://github.com/psi4/psi4/pull/275:33,Deployability,configurat,configuration,33,Updates Ambit version and Psi4's configuration of it,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/275
https://github.com/psi4/psi4/pull/275:33,Modifiability,config,configuration,33,Updates Ambit version and Psi4's configuration of it,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/275
https://github.com/psi4/psi4/pull/276:31,Availability,error,error,31,Matrix::gemm was not reporting error for matrices with different number of irreps,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/276
https://github.com/psi4/psi4/pull/277:0,Deployability,install,install,0,install fixes and improvements,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/277
https://github.com/psi4/psi4/pull/280:40,Testability,test,test,40,Fixed ROHF stability analysis and added test.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/280
https://github.com/psi4/psi4/issues/282:26,Availability,avail,available,26,MP4 open-shell method not available,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/282
https://github.com/psi4/psi4/pull/283:21,Availability,toler,tolerence,21,Reduced atom overlap tolerence to 0.1 to fix #195,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/283
https://github.com/psi4/psi4/pull/283:0,Energy Efficiency,Reduce,Reduced,0,Reduced atom overlap tolerence to 0.1 to fix #195,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/283
https://github.com/psi4/psi4/issues/289:6,Deployability,install,install,6,conda install needs ncurses as dependency,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/289
https://github.com/psi4/psi4/issues/289:31,Integrability,depend,dependency,31,conda install needs ncurses as dependency,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/289
https://github.com/psi4/psi4/issues/290:10,Testability,test,test,10,opt-irc-2 test case adjustment,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/290
https://github.com/psi4/psi4/issues/291:19,Testability,test,test,19,pywrap-opt-sowreap test failing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/291
https://github.com/psi4/psi4/pull/292:4,Energy Efficiency,energy,energy,4,Fix energy return value of optimize() for IRC jobs.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/292
https://github.com/psi4/psi4/pull/292:27,Performance,optimiz,optimize,27,Fix energy return value of optimize() for IRC jobs.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/292
https://github.com/psi4/psi4/issues/308:0,Modifiability,plug-in,plug-in,0,plug-in compilation problem,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/308
https://github.com/psi4/psi4/pull/309:27,Modifiability,plugin,plugins,27,more wavefunction-pass for plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/309
https://github.com/psi4/psi4/pull/315:48,Deployability,release,release,48,Refreshed all tests/*/output.ref's for the Psi4 release.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/315
https://github.com/psi4/psi4/pull/315:14,Testability,test,tests,14,Refreshed all tests/*/output.ref's for the Psi4 release.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/315
https://github.com/psi4/psi4/pull/316:40,Availability,error,error,40,CIWave: Fixes strange ICC 2015 compiler error with certain vectorization options,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/316
https://github.com/psi4/psi4/issues/317:0,Deployability,update,update,0,update sapt fitting basis sets,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/317
https://github.com/psi4/psi4/pull/320:0,Deployability,Update,Update,0,Update contributors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/320
https://github.com/psi4/psi4/pull/328:26,Performance,optimiz,optimizations,26,"Improved fixed-coordinate optimizations, PES scans.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/328
https://github.com/psi4/psi4/pull/329:17,Availability,error,error,17,Fixes os.environ error in setup,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/329
https://github.com/psi4/psi4/pull/334:27,Energy Efficiency,charge,charge,27,Making Mulliken and Lowdin charge output more consistent,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/334
https://github.com/psi4/psi4/pull/338:0,Deployability,Update,Update,0,Update PCMSolver to v1.1.1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/338
https://github.com/psi4/psi4/pull/348:7,Deployability,update,updates,7,thermo updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/348
https://github.com/psi4/psi4/issues/356:0,Testability,test,test,0,test properties,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/356
https://github.com/psi4/psi4/pull/360:0,Deployability,Update,Update,0,"Update docstrings in driver.py, fix psi4/#249",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/360
https://github.com/psi4/psi4/pull/365:4,Integrability,Wrap,Wrapper,4,CBS Wrapper and general driver cleanup,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/365
https://github.com/psi4/psi4/pull/366:22,Modifiability,plugin,plugin,22,Document Makefile for plugin from binary,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/366
https://github.com/psi4/psi4/issues/367:9,Deployability,Release,Release,9,Psi4 1.0 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/pull/370:0,Modifiability,plugin,plugins,0,plugins to binary,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/370
https://github.com/psi4/psi4/issues/371:4,Energy Efficiency,energy,energy,4,NaN energy for a reasonable sized DF-SCF computation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/371
https://github.com/psi4/psi4/pull/372:15,Deployability,update,updates,15,CIWavefunction updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/372
https://github.com/psi4/psi4/pull/388:0,Deployability,Update,Updated,0,Updated ChemPS2 to v1.7,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/388
https://github.com/psi4/psi4/issues/391:9,Testability,test,test,9,cdomp2-2 test case fails,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/394:25,Energy Efficiency,energy,energy,25,Check convergence of FCI energy/residual,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/394
https://github.com/psi4/psi4/issues/396:0,Availability,Error,Error,0,Error with make -j on MacBook Air,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/396
https://github.com/psi4/psi4/issues/398:9,Availability,error,error,9,Compiler error PK_workers.cc file with the Intel 14 compiler,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/398
https://github.com/psi4/psi4/pull/400:6,Deployability,update,update,6,A SAD update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/400
https://github.com/psi4/psi4/issues/404:12,Availability,failure,failure,12,Compilation failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/404
https://github.com/psi4/psi4/issues/407:8,Availability,error,error,8,PsiUtil error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/407
https://github.com/psi4/psi4/issues/410:44,Deployability,install,installation,44,Build directory used in INCLUDES instead of installation directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/410
https://github.com/psi4/psi4/pull/412:0,Deployability,Release,Release,0,Release tweaks,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/412
https://github.com/psi4/psi4/issues/415:11,Deployability,install,install,11,psi4so has install rule even when it's not built,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/415
https://github.com/psi4/psi4/pull/425:0,Availability,rollback,rollback,0,rollback detect dynamic Boost,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/425
https://github.com/psi4/psi4/pull/425:0,Deployability,rollback,rollback,0,rollback detect dynamic Boost,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/425
https://github.com/psi4/psi4/pull/425:9,Safety,detect,detect,9,rollback detect dynamic Boost,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/425
https://github.com/psi4/psi4/pull/430:14,Modifiability,plugin,plugins,14,externals and plugins prep for 1.0rc2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/430
https://github.com/psi4/psi4/pull/432:14,Performance,optimiz,optimizations,14,interfragment optimizations with 3 test cases,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/432
https://github.com/psi4/psi4/pull/432:35,Testability,test,test,35,interfragment optimizations with 3 test cases,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/432
https://github.com/psi4/psi4/pull/434:0,Deployability,Update,Update,0,Update PCMSolver to its version 1.1.3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/434
https://github.com/psi4/psi4/pull/435:0,Energy Efficiency,reduce,reduce,0,reduce sapt6 test for travis's sake,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/435
https://github.com/psi4/psi4/pull/435:13,Testability,test,test,13,reduce sapt6 test for travis's sake,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/435
https://github.com/psi4/psi4/pull/436:18,Modifiability,plugin,plugin,18,Don't build ambit plugin if it's not found.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/436
https://github.com/psi4/psi4/pull/440:0,Deployability,Update,Update,0,Update PCMSolver to its v1.1.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/440
https://github.com/psi4/psi4/pull/442:6,Modifiability,rewrite,rewrite,6,CMake rewrite,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/442
https://github.com/psi4/psi4/issues/444:10,Availability,error,error,10,Compiling error: lib/libmints/matrix.cc (icpc 16.0.3),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/444
https://github.com/psi4/psi4/pull/445:11,Testability,Test,Testing,11,Mac-Psinet Testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/445
https://github.com/psi4/psi4/pull/446:9,Testability,test,test,9,Distelli test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/446
https://github.com/psi4/psi4/pull/449:14,Testability,test,testing,14,More distelli testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/449
https://github.com/psi4/psi4/issues/455:25,Availability,error,error,25,composite method wrapper error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/455
https://github.com/psi4/psi4/issues/455:17,Integrability,wrap,wrapper,17,composite method wrapper error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/455
https://github.com/psi4/psi4/pull/456:4,Integrability,wrap,wrapper,4,CBS wrapper fix,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/456
https://github.com/psi4/psi4/issues/460:0,Deployability,install,install,0,install fails due to eternal loop,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/460
https://github.com/psi4/psi4/issues/463:13,Availability,fault,fault,13,Segmentation fault in test opt-irc-1 and opt-irc-2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/463
https://github.com/psi4/psi4/issues/463:22,Testability,test,test,22,Segmentation fault in test opt-irc-1 and opt-irc-2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/463
https://github.com/psi4/psi4/issues/464:5,Availability,error,error,5,PSIO error in dmrg calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/464
https://github.com/psi4/psi4/pull/469:11,Integrability,wrap,wrapper,11,LGTM & CBS wrapper fix,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/469
https://github.com/psi4/psi4/issues/474:6,Availability,down,down,6,scale down dmrg/caspt2-n2 test case,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/474
https://github.com/psi4/psi4/issues/474:26,Testability,test,test,26,scale down dmrg/caspt2-n2 test case,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/474
https://github.com/psi4/psi4/pull/482:14,Deployability,update,updates,14,General MCSCF updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/482
https://github.com/psi4/psi4/issues/484:11,Availability,error,error,11,Unexpected error when using basis_guess with basis set,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/484
https://github.com/psi4/psi4/issues/485:9,Deployability,Release,Release,9,Psi4 1.1 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/485
https://github.com/psi4/psi4/issues/487:26,Deployability,install,installation,26,Problem with curl flag in installation instructions,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/487
https://github.com/psi4/psi4/pull/489:0,Modifiability,Plugin,Plugins,0,Plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/489
https://github.com/psi4/psi4/pull/490:0,Deployability,Patch,Patch,0,Patch to allow the plugin code to work with PYMOD paths,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/490
https://github.com/psi4/psi4/pull/490:19,Modifiability,plugin,plugin,19,Patch to allow the plugin code to work with PYMOD paths,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/490
https://github.com/psi4/psi4/pull/495:26,Availability,error,error,26,Resolved potential syntax error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/495
https://github.com/psi4/psi4/pull/499:0,Deployability,Update,Update,0,Update WmnieSD.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/499
https://github.com/psi4/psi4/issues/502:8,Testability,test,test,8,EOM-CC3 test case for multiple states of different symmetry,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/502
https://github.com/psi4/psi4/issues/503:19,Modifiability,plugin,plugin,19,Auto-generation of plugin template failing?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/503
https://github.com/psi4/psi4/issues/508:5,Availability,down,down,5,wind down psi4/psi4private,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/508
https://github.com/psi4/psi4/issues/522:12,Availability,error,error,12,compilation error with intel 2017,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/522
https://github.com/psi4/psi4/issues/523:9,Availability,error,error,9,EOM-CCSD error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/523
https://github.com/psi4/psi4/pull/532:46,Modifiability,plugin,plugin,46,Prevents the user from using C++ keywords for plugin names.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/532
https://github.com/psi4/psi4/pull/533:12,Deployability,integrat,integration,12,WIP: Simint integration in Psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/533
https://github.com/psi4/psi4/pull/533:12,Integrability,integrat,integration,12,WIP: Simint integration in Psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/533
https://github.com/psi4/psi4/pull/535:37,Performance,optimiz,optimization,37,bug fix of prevention of zero target optimization values by the evil atof(),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/535
https://github.com/psi4/psi4/issues/536:8,Availability,error,error,8,Compile error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/536
https://github.com/psi4/psi4/pull/538:13,Testability,test,test,13,Fix for cc14 test case,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/538
https://github.com/psi4/psi4/pull/543:38,Modifiability,plugin,plugins,38,WIP: Adds compiler flags from Psi4 to plugins.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/543
https://github.com/psi4/psi4/pull/544:33,Energy Efficiency,reduce,reduce,33,Eliminate unused psimrcc file to reduce compile time #525,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/544
https://github.com/psi4/psi4/pull/551:8,Deployability,Patch,Patches,8,CIWave: Patches up zero indexing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/551
https://github.com/psi4/psi4/issues/552:14,Availability,Error,Error,14,Psi4 Run Time Error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/552
https://github.com/psi4/psi4/pull/553:0,Deployability,Update,Update,0,Update .codecov.yml,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/553
https://github.com/psi4/psi4/pull/554:10,Modifiability,plugin,plugins,10,"pybind11, plugins, externals, and targets",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/554
https://github.com/psi4/psi4/pull/557:15,Deployability,update,update,15,pybind11 2.0.0 update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/557
https://github.com/psi4/psi4/issues/565:0,Availability,Failure,Failure,0,Failure on compiling plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/565
https://github.com/psi4/psi4/issues/565:21,Modifiability,plugin,plugins,21,Failure on compiling plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/565
https://github.com/psi4/psi4/pull/566:17,Deployability,patch,patches,17,CIWave: Minor CI patches.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/566
https://github.com/psi4/psi4/pull/569:0,Modifiability,plugin,plugins,0,plugins testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/569
https://github.com/psi4/psi4/pull/569:8,Testability,test,testing,8,plugins testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/569
https://github.com/psi4/psi4/pull/571:0,Modifiability,Refactor,Refactoring,0,Refactoring of Dimension class,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/571
https://github.com/psi4/psi4/pull/572:9,Usability,usab,usable,9,make DKH usable again,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/572
https://github.com/psi4/psi4/pull/574:13,Modifiability,Refactor,Refactoring,13,Duplicate of Refactoring of Dimension Class,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/574
https://github.com/psi4/psi4/pull/576:23,Availability,outage,outage,23,fix short-term CheMPS2 outage,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/576
https://github.com/psi4/psi4/issues/577:25,Availability,error,error,25,pybind11 2.0.0 compiling error with gcc 5.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/577
https://github.com/psi4/psi4/pull/578:0,Deployability,update,update,0,update copyright to 2017,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/578
https://github.com/psi4/psi4/pull/579:0,Deployability,Update,Update,0,Update base compiler version detection with Intel compiler and clang.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/579
https://github.com/psi4/psi4/pull/579:29,Safety,detect,detection,29,Update base compiler version detection with Intel compiler and clang.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/579
https://github.com/psi4/psi4/issues/580:22,Deployability,release,release,22,Source tarball with a release number,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/580
https://github.com/psi4/psi4/issues/581:13,Availability,error,errors,13,"Release 1.0, errors when running setup script",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/581
https://github.com/psi4/psi4/issues/581:0,Deployability,Release,Release,0,"Release 1.0, errors when running setup script",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/581
https://github.com/psi4/psi4/pull/582:0,Modifiability,Plugin,Plugin,0,Plugin fix,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/582
https://github.com/psi4/psi4/pull/585:6,Testability,test,test,6,Added test case for dgasmith's orbital rotation code,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/585
https://github.com/psi4/psi4/issues/596:20,Availability,error,error,20,Integrals threading error messages,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/596
https://github.com/psi4/psi4/issues/596:26,Integrability,message,messages,26,Integrals threading error messages,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/596
https://github.com/psi4/psi4/issues/598:37,Deployability,toggle,toggled,37,Frozen natural orbitals shouldn't be toggled with nat_orbs true,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/598
https://github.com/psi4/psi4/pull/601:0,Deployability,Update,Updates,0,Updates vmd_cube.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/601
https://github.com/psi4/psi4/pull/602:0,Safety,Sanity check,Sanity check,0,Sanity check socc and docc arrays to avoid segfaults.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/602
https://github.com/psi4/psi4/pull/602:37,Safety,avoid,avoid,37,Sanity check socc and docc arrays to avoid segfaults.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/602
https://github.com/psi4/psi4/pull/607:0,Safety,Safe,Safer,0,Safer memory operations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/607
https://github.com/psi4/psi4/issues/608:6,Deployability,release,release,6,1.1.0 release eta,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/608
https://github.com/psi4/psi4/pull/609:14,Integrability,synchroniz,synchronization,14,Fixing thread synchronization in AIOHandler.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/609
https://github.com/psi4/psi4/pull/610:25,Energy Efficiency,power,power,25,CIWave: Fixes occasional power issue with the MCSCF DIIS object,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/610
https://github.com/psi4/psi4/pull/616:0,Deployability,Update,Update,0,Update CI and MCSCF sections of manual,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/616
https://github.com/psi4/psi4/issues/618:33,Energy Efficiency,charge,charges,33,MP2 Gradient Incorrect with QMMM charges,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/618
https://github.com/psi4/psi4/pull/624:4,Modifiability,Plugin,Plugin,4,Fix Plugin Testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/624
https://github.com/psi4/psi4/pull/624:11,Testability,Test,Testing,11,Fix Plugin Testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/624
https://github.com/psi4/psi4/pull/625:7,Deployability,Integrat,Integration,7,"Simint Integration, Continued",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/625
https://github.com/psi4/psi4/pull/625:7,Integrability,Integrat,Integration,7,"Simint Integration, Continued",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/625
https://github.com/psi4/psi4/issues/629:6,Availability,error,error,6,"Build error(s) with intel 2017 compilers, gcc 5.4",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/629
https://github.com/psi4/psi4/issues/631:6,Availability,error,error,6,Build error with gcc 7.0.1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/631
https://github.com/psi4/psi4/pull/634:0,Deployability,Update,Updates,0,Updates MRCC interface to allow perturbative methods with ROHF reference.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/634
https://github.com/psi4/psi4/pull/634:13,Integrability,interface,interface,13,Updates MRCC interface to allow perturbative methods with ROHF reference.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/634
https://github.com/psi4/psi4/pull/636:0,Deployability,Update,Updates,0,Updates CodeCov YAML.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/636
https://github.com/psi4/psi4/issues/639:23,Integrability,wrap,wrappers,23,Inconsistency in numpy wrappers,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/639
https://github.com/psi4/psi4/issues/642:27,Energy Efficiency,energy,energy,27,Access to terms in the MP2 energy from Python,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/642
https://github.com/psi4/psi4/issues/642:0,Security,Access,Access,0,Access to terms in the MP2 energy from Python,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/642
https://github.com/psi4/psi4/pull/643:52,Availability,avail,available,52,DF-MP2: Put energies in variables_ so that they are available in Python,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/643
https://github.com/psi4/psi4/pull/654:0,Testability,test,tests,0,"tests, uuid, rpath",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/654
https://github.com/psi4/psi4/pull/658:0,Safety,Avoid,Avoid,0,Avoid Psithon processing of literal expressions and comments. Fixes #655,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/658
https://github.com/psi4/psi4/pull/659:6,Modifiability,plugin,plugins,6,"conda plugins, psiapi docs, py36",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/659
https://github.com/psi4/psi4/issues/662:0,Availability,Error,Error,0,Error with X2C and Decontracted Basis Set Input,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/662
https://github.com/psi4/psi4/pull/674:4,Testability,test,test,4,Fix test for non-Lebedev numbers in dft_spherical_points value,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/674
https://github.com/psi4/psi4/issues/675:17,Availability,error,error,17,undefined symbol error when running test.in,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/675
https://github.com/psi4/psi4/issues/675:36,Testability,test,test,36,undefined symbol error when running test.in,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/675
https://github.com/psi4/psi4/issues/680:4,Availability,fault,fault,4,"Seg fault in optking when ""frag_mode multi"" used with linear bends present",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/680
https://github.com/psi4/psi4/pull/684:0,Deployability,Update,Update,0,Update LICENSE to permit newer GPL,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/684
https://github.com/psi4/psi4/issues/691:16,Testability,test,test,16,dkh license and test case,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/691
https://github.com/psi4/psi4/pull/698:48,Modifiability,enhance,enhancements,48,"DFT overhaul, ECPs, SAPT(DFT), EP2, performance enhancements",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/698
https://github.com/psi4/psi4/pull/698:36,Performance,perform,performance,36,"DFT overhaul, ECPs, SAPT(DFT), EP2, performance enhancements",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/698
https://github.com/psi4/psi4/pull/701:13,Availability,failure,failure,13,Fix PCM test failure in psi4 --test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/701
https://github.com/psi4/psi4/pull/701:8,Testability,test,test,8,Fix PCM test failure in psi4 --test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/701
https://github.com/psi4/psi4/pull/701:31,Testability,test,test,31,Fix PCM test failure in psi4 --test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/701
https://github.com/psi4/psi4/pull/703:10,Modifiability,plugin,plugin,10,Mac-conda-plugin and other docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/703
https://github.com/psi4/psi4/pull/706:40,Energy Efficiency,energy,energy,40,Fixing integral overflow problem in (T) energy code,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/706
https://github.com/psi4/psi4/issues/708:10,Availability,checkpoint,checkpoint,10,Formatted checkpoint files don't work,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/708
https://github.com/psi4/psi4/pull/709:26,Deployability,update,updates,26,docs conda and docs build updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/709
https://github.com/psi4/psi4/issues/710:7,Testability,test,test,7,Failed test on Linux,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/710
https://github.com/psi4/psi4/pull/712:56,Modifiability,variab,variables,56,adds t1/d1 diagnostics computed in fnocc to psi4 global variables,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/712
https://github.com/psi4/psi4/pull/715:5,Testability,test,test,5,Cepa test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/715
https://github.com/psi4/psi4/pull/720:0,Security,Expose,Expose,0,Expose P::e.options in Python.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/720
https://github.com/psi4/psi4/pull/726:9,Availability,mainten,maintenance,9,"Post 1.1 maintenance, mainly testing and MINAO",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/726
https://github.com/psi4/psi4/pull/726:29,Testability,test,testing,29,"Post 1.1 maintenance, mainly testing and MINAO",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/726
https://github.com/psi4/psi4/pull/728:0,Deployability,Update,Update,0,"Update cc-pVXZ and add cc-pwCVXZ for Li, Be, Na, Mg",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/728
https://github.com/psi4/psi4/pull/730:20,Integrability,interface,interface,20,Rehabilitates Cfour interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/730
https://github.com/psi4/psi4/pull/736:8,Availability,mainten,maintenance,8,General maintenance,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/736
https://github.com/psi4/psi4/pull/739:34,Integrability,wrap,wrap,34,Fix possible unsigned subtraction wrap around.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/739
https://github.com/psi4/psi4/pull/742:10,Deployability,Update,Updates,10,DF_Helper Updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/742
https://github.com/psi4/psi4/issues/744:0,Availability,ERROR,ERROR,0,ERROR: ERI - Libint cannot handle angular momentum this high (6) for first derivatives.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/744
https://github.com/psi4/psi4/pull/745:0,Deployability,Update,Updated,0,Updated citation and description for PBE0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/745
https://github.com/psi4/psi4/pull/747:7,Deployability,update,update,7,Proper update of post-scf wave-functions for fchk interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/747
https://github.com/psi4/psi4/pull/747:50,Integrability,interface,interface,50,Proper update of post-scf wave-functions for fchk interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/747
https://github.com/psi4/psi4/pull/750:0,Deployability,Update,Update,0,Update numpy_helper.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/750
https://github.com/psi4/psi4/pull/751:6,Deployability,update,update,6,Numpy update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/751
https://github.com/psi4/psi4/issues/752:11,Usability,Guid,Guide,11,Psi4 Style Guide,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/752
https://github.com/psi4/psi4/pull/762:41,Safety,avoid,avoid,41,Implemented skip_timer functions to help avoid timer clutter.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/762
https://github.com/psi4/psi4/issues/763:49,Deployability,release,release,49,How can I match conda package to source code and release notes?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/763
https://github.com/psi4/psi4/issues/764:11,Availability,error,error,11,CI runtime error in conda package,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/764
https://github.com/psi4/psi4/pull/766:0,Deployability,Update,Update,0,"Update samples, force py27+",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/766
https://github.com/psi4/psi4/issues/768:19,Availability,error,errors,19,install and import errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/768
https://github.com/psi4/psi4/issues/768:0,Deployability,install,install,0,install and import errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/768
https://github.com/psi4/psi4/pull/772:24,Integrability,interface,interface,24,Changes to psi4 for MDT interface.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/772
https://github.com/psi4/psi4/issues/775:0,Availability,Error,Error,0,Error about pybind11 in cmake while creating a new psi4 plugin,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/775
https://github.com/psi4/psi4/issues/775:56,Modifiability,plugin,plugin,56,Error about pybind11 in cmake while creating a new psi4 plugin,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/775
https://github.com/psi4/psi4/pull/783:16,Testability,test,test,16,Bypass `props2` test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/783
https://github.com/psi4/psi4/issues/785:8,Availability,error,error,8,linking error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/785
https://github.com/psi4/psi4/issues/786:9,Availability,error,error,9,eom-ccsd error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/786
https://github.com/psi4/psi4/issues/789:13,Availability,error,error,13,OPTKING PSIO error: optimization data write failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/789
https://github.com/psi4/psi4/issues/789:44,Availability,failure,failure,44,OPTKING PSIO error: optimization data write failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/789
https://github.com/psi4/psi4/issues/789:20,Performance,optimiz,optimization,20,OPTKING PSIO error: optimization data write failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/789
https://github.com/psi4/psi4/issues/792:13,Modifiability,inherit,inheritance,13,Docs : class inheritance diagrams are broken,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/792
https://github.com/psi4/psi4/pull/799:4,Testability,log,logic,4,Dft logic,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/799
https://github.com/psi4/psi4/issues/800:22,Availability,failure,failure,22,OPTKING: Optimization failure not throwing PsiException,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/800
https://github.com/psi4/psi4/issues/800:9,Performance,Optimiz,Optimization,9,OPTKING: Optimization failure not throwing PsiException,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/800
https://github.com/psi4/psi4/pull/805:8,Testability,Log,Logic,8,New DFT Logic Documentation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/805
https://github.com/psi4/psi4/pull/808:23,Testability,test,tests,23,FIX: Tightens up a few tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/808
https://github.com/psi4/psi4/pull/809:7,Deployability,integrat,integration,7,Set up integration with Danger.Systems,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/809
https://github.com/psi4/psi4/pull/809:7,Integrability,integrat,integration,7,Set up integration with Danger.Systems,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/809
https://github.com/psi4/psi4/pull/811:0,Deployability,Patch,Patch,0,Patch failing tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/811
https://github.com/psi4/psi4/pull/811:14,Testability,test,tests,14,Patch failing tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/811
https://github.com/psi4/psi4/pull/819:0,Deployability,Update,Update,0,Update pcmsolver.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/819
https://github.com/psi4/psi4/issues/820:10,Deployability,install,installation,10,symlinked installation fails (partially),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/820
https://github.com/psi4/psi4/pull/831:0,Deployability,Update,Update,0,Update DFT docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/831
https://github.com/psi4/psi4/pull/839:22,Usability,Simpl,Simplifications,22,DFT Hessians and Grad Simplifications,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/839
https://github.com/psi4/psi4/pull/840:0,Deployability,Patch,Patches,0,Patches up wiggles in SAPT(DFT) FDDS Dispersion,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/840
https://github.com/psi4/psi4/pull/841:26,Testability,test,test,26,Fix cookbook-rohf-orb-rot test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/841
https://github.com/psi4/psi4/issues/843:51,Energy Efficiency,energy,energy,51,Incorrect ghosting behavior for Iodine interaction energy calculations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/843
https://github.com/psi4/psi4/pull/845:11,Security,sanitiz,sanitizer,11,Re-enables sanitizer flags with the CMake superbuild,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/845
https://github.com/psi4/psi4/pull/850:8,Modifiability,Plugin,Plugin,8,SNS-MP2 Plugin Addition,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/850
https://github.com/psi4/psi4/issues/852:6,Availability,failure,failure,6,Build failure (version 1.1): cannot initialize return object of type ...,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/852
https://github.com/psi4/psi4/issues/853:6,Availability,failure,failure,6,"Build failure (current rev. f03a896): undefined reference to `pow', etc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/853
https://github.com/psi4/psi4/issues/854:29,Deployability,install,installed,29,Bundled packages sholdn't be installed as part of psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/854
https://github.com/psi4/psi4/issues/855:23,Deployability,install,installed,23,Stray .cmake files are installed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/855
https://github.com/psi4/psi4/issues/863:24,Availability,fault,fault,24,SCAN/libXC segmentation fault,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/863
https://github.com/psi4/psi4/pull/864:18,Energy Efficiency,adapt,adaptive,18,CUBEPROP: Compute adaptive isocontour range for cube files,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/864
https://github.com/psi4/psi4/pull/864:18,Modifiability,adapt,adaptive,18,CUBEPROP: Compute adaptive isocontour range for cube files,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/864
https://github.com/psi4/psi4/issues/868:11,Integrability,depend,dependencies,11,X2C linear dependencies?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/868
https://github.com/psi4/psi4/issues/874:63,Modifiability,plugin,plugin,63,Incorrect normalization in SO basis overlap integrals from the plugin template,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/874
https://github.com/psi4/psi4/pull/880:10,Testability,test,tests,10,Added new tests for libXC,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/880
https://github.com/psi4/psi4/pull/881:37,Availability,error,errors,37,Get useful info back after optimizer errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/881
https://github.com/psi4/psi4/pull/881:27,Performance,optimiz,optimizer,27,Get useful info back after optimizer errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/881
https://github.com/psi4/psi4/issues/883:21,Modifiability,variab,variables,21,Localization of Psi4 variables to Wavefunction objects,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/883
https://github.com/psi4/psi4/pull/889:20,Availability,error,error,20,DFT: Fix VV10 timer error and quickens test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/889
https://github.com/psi4/psi4/pull/889:39,Testability,test,test,39,DFT: Fix VV10 timer error and quickens test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/889
https://github.com/psi4/psi4/issues/890:14,Availability,error,error,14,simint header error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/890
https://github.com/psi4/psi4/pull/891:0,Deployability,Update,Update,0,Update memory docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/891
https://github.com/psi4/psi4/issues/893:23,Performance,optimiz,optimizations,23,MP2.5 and MP3 geometry optimizations crash for 2 electron systems,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/893
https://github.com/psi4/psi4/pull/894:8,Availability,redundant,redundant,8,removed redundant code in rhf hessian test file,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/894
https://github.com/psi4/psi4/pull/894:8,Safety,redund,redundant,8,removed redundant code in rhf hessian test file,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/894
https://github.com/psi4/psi4/pull/894:38,Testability,test,test,38,removed redundant code in rhf hessian test file,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/894
https://github.com/psi4/psi4/issues/905:19,Testability,test,tests,19,v2rdm_casscf-v2rdm tests failing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/905
https://github.com/psi4/psi4/pull/906:43,Testability,test,test,43,Fixes wB97 & wB97X SAD occupations in dft1 test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/906
https://github.com/psi4/psi4/issues/910:18,Availability,error,error,18,SAPT(DFT) : Units error in output,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/910
https://github.com/psi4/psi4/issues/915:5,Integrability,interface,interface,5,MRCC interface fails for quadruplet,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/915
https://github.com/psi4/psi4/issues/923:12,Availability,error,error,12,Compilation error with icc 18.0.1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/923
https://github.com/psi4/psi4/issues/927:9,Energy Efficiency,energy,energy,9,a bug in energy() function,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/927
https://github.com/psi4/psi4/pull/930:62,Deployability,update,updated,62,CI: Turns off v2RDM and PCM in Travis until conda modules are updated.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/930
https://github.com/psi4/psi4/issues/936:24,Availability,error,error,24,samples/sapt3/input.dat error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/936
https://github.com/psi4/psi4/issues/940:28,Security,access,accessible,28,Normal mode vectors are not accessible via Python API,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/940
https://github.com/psi4/psi4/issues/943:24,Testability,test,test,24,migrate coupled-cluster test cases to independence,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/943
https://github.com/psi4/psi4/issues/944:15,Availability,Error,Error,15,File Not Found Error for scratch json_out file,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/944
https://github.com/psi4/psi4/pull/945:0,Testability,test,testing,0,testing whether DSD trouble is just in my build,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/945
https://github.com/psi4/psi4/pull/946:17,Testability,test,tests,17,fix up some full tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/946
https://github.com/psi4/psi4/issues/948:0,Security,Validat,ValidationError,0,ValidationError: Unrecognized point group bits: 96,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/948
https://github.com/psi4/psi4/issues/959:9,Deployability,Release,Release,9,Psi4 1.2 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/959
https://github.com/psi4/psi4/issues/960:9,Deployability,Release,Release,9,Psi4 1.2 Release Candidate and Release Dates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960
https://github.com/psi4/psi4/issues/960:31,Deployability,Release,Release,31,Psi4 1.2 Release Candidate and Release Dates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/960
https://github.com/psi4/psi4/issues/971:32,Modifiability,plugin,plugins,32,missing symbol for JK object in plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/971
https://github.com/psi4/psi4/pull/974:0,Safety,Avoid,Avoid,0,Avoid hungarian,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/974
https://github.com/psi4/psi4/pull/975:14,Modifiability,refactor,refactor,14,N-Body driver refactor (fixes #885),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/975
https://github.com/psi4/psi4/pull/984:0,Deployability,Update,Updates,0,Updates license copyright end year 2017 -> 2018,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/984
https://github.com/psi4/psi4/pull/985:18,Usability,clear,clear,18,appease numpy and clear thermo,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/985
https://github.com/psi4/psi4/pull/988:0,Deployability,Update,Update,0,Update PCMSolver,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/988
https://github.com/psi4/psi4/pull/990:20,Deployability,Update,Update,20,Molecule Mass and Z Update for Ghosts,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/990
https://github.com/psi4/psi4/pull/992:0,Modifiability,Plugin,Plugins,0,Plugins psiapi,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/992
https://github.com/psi4/psi4/issues/994:35,Testability,test,test,35,FT97 instability in dft-custom-gga test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/994
https://github.com/psi4/psi4/pull/995:27,Testability,log,logic,27,CC one electron properties logic,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/995
https://github.com/psi4/psi4/pull/997:8,Modifiability,plugin,plugin,8,enables plugin gpu_dfcc as external plugin compiled with psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997
https://github.com/psi4/psi4/pull/997:36,Modifiability,plugin,plugin,36,enables plugin gpu_dfcc as external plugin compiled with psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/997
https://github.com/psi4/psi4/pull/998:6,Testability,test,testing,6,conda testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/998
https://github.com/psi4/psi4/pull/1002:32,Energy Efficiency,green,green,32,Disable CC46 to keep full tests green on 1.2rc1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1002
https://github.com/psi4/psi4/pull/1002:26,Testability,test,tests,26,Disable CC46 to keep full tests green on 1.2rc1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1002
https://github.com/psi4/psi4/pull/1011:8,Deployability,Update,Update,8,QC JSON Update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1011
https://github.com/psi4/psi4/pull/1012:9,Testability,log,logic,9,MP2 DFJK logic fix and DFJK docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1012
https://github.com/psi4/psi4/issues/1013:12,Availability,failure,failure,12,Compilation failure with GCC 8,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1013
https://github.com/psi4/psi4/issues/1021:38,Availability,down,downstream,38,New SCF types unrecognized by several downstream modules,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1021
https://github.com/psi4/psi4/pull/1022:8,Deployability,update,update,8,Samples update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1022
https://github.com/psi4/psi4/pull/1023:14,Testability,log,logic,14,Additional JK logic,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1023
https://github.com/psi4/psi4/pull/1026:26,Modifiability,plugin,plugins,26,export boys localizer for plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1026
https://github.com/psi4/psi4/pull/1028:0,Security,Expose,Expose,0,Expose class Slice as PSI_API.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1028
https://github.com/psi4/psi4/pull/1030:23,Deployability,release,release,23,JSON/gCP/DeepDiff v1.2 release tweaks,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1030
https://github.com/psi4/psi4/pull/1031:31,Testability,test,testing,31,BLAS+OpenMP revamp & threading testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1031
https://github.com/psi4/psi4/pull/1032:22,Modifiability,plugin,plugins,22,fix local options for plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1032
https://github.com/psi4/psi4/issues/1036:7,Availability,error,error,7,Import error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1036
https://github.com/psi4/psi4/issues/1041:31,Safety,detect,detection,31,Problem with new BLAS / OpenMP detection,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1041
https://github.com/psi4/psi4/pull/1050:0,Deployability,Update,Update,0,Update location of the FCHKWriter to core,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1050
https://github.com/psi4/psi4/issues/1051:50,Integrability,depend,dependent,50,Basis functions evaluating to zero at grid points dependent on delta in BasisExtents,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1051
https://github.com/psi4/psi4/pull/1057:18,Integrability,interface,interface,18,Implementation of interface to i-pi to enable molecular dynamics simulations with psi,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1057
https://github.com/psi4/psi4/pull/1061:0,Security,Expose,Expose,0,Expose wavefunction and amplitudes to python,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1061
https://github.com/psi4/psi4/issues/1063:25,Availability,failure,failure,25,v2rdm_casscf compilation failure: another OpenMP issue,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1063
https://github.com/psi4/psi4/issues/1082:35,Performance,optimiz,optimization,35,Optking assign Mn to P in Writting optimization data to binary file step,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1082
https://github.com/psi4/psi4/pull/1085:0,Deployability,Update,Update,0,Update dftd3.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1085
https://github.com/psi4/psi4/pull/1086:8,Deployability,patch,patch,8,Andysim patch 1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1086
https://github.com/psi4/psi4/issues/1088:13,Availability,fault,fault,13,Psi4 1.2 seg fault,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1088
https://github.com/psi4/psi4/issues/1095:21,Performance,optimiz,optimization,21,problematic geometry optimization with DF-SCF,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1095
https://github.com/psi4/psi4/pull/1096:38,Modifiability,rewrite,rewrite,38,JK_Grad: Fix for disk paging after wK rewrite,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1096
https://github.com/psi4/psi4/pull/1098:0,Usability,clear,clear,0,clear filesystem from FISAPT,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1098
https://github.com/psi4/psi4/pull/1099:9,Testability,test,testing,9,CI: stop testing py27. insufficient conda pkgs to add py37,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1099
https://github.com/psi4/psi4/pull/1104:25,Integrability,message,messages,25,DFH: suppress DFH memory messages during SAD guess,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1104
https://github.com/psi4/psi4/issues/1110:21,Integrability,depend,depending,21,odd DF-CCSD problems depending on molecule input method,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1110
https://github.com/psi4/psi4/issues/1118:11,Safety,detect,detection,11,MathOpenMP detection,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1118
https://github.com/psi4/psi4/pull/1120:46,Performance,optimiz,optimize,46,Locally working optking 3.0 call through psi4.optimize(),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1120
https://github.com/psi4/psi4/pull/1121:11,Deployability,update,update,11,shields.io update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1121
https://github.com/psi4/psi4/pull/1123:6,Testability,test,tests,6,Added tests for nbody-cbs compatibility,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1123
https://github.com/psi4/psi4/pull/1124:0,Deployability,Update,Update,0,Update dependencies for Windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1124
https://github.com/psi4/psi4/pull/1124:7,Integrability,depend,dependencies,7,Update dependencies for Windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1124
https://github.com/psi4/psi4/pull/1130:24,Availability,Error,Error,24,SCF: Add SCFConvergence Error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1130
https://github.com/psi4/psi4/issues/1132:5,Integrability,interface,interface,5,Psi4 interface to MRCC and threading,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1132
https://github.com/psi4/psi4/pull/1147:17,Testability,stub,stub,17,doc: add missing stub files for programmers' manual,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1147
https://github.com/psi4/psi4/issues/1149:5,Energy Efficiency,energy,energy,5,Have energy derivatives intercept missing analytic methods on auto,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1149
https://github.com/psi4/psi4/pull/1151:0,Modifiability,refactor,refactor,0,refactor empirical dispersion,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1151
https://github.com/psi4/psi4/pull/1160:23,Integrability,wrap,wrapper,23,fmt: clang-format MRCC wrapper,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1160
https://github.com/psi4/psi4/pull/1161:23,Integrability,wrap,wrapper,23,fmt: clang-format MRCC wrapper,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1161
https://github.com/psi4/psi4/pull/1166:23,Integrability,interface,interface,23,fmt: clang-format GDMA interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1166
https://github.com/psi4/psi4/issues/1177:19,Safety,detect,detection,19,incorrect symmetry detection for cubane (Oh),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1177
https://github.com/psi4/psi4/pull/1180:28,Integrability,wrap,wrapper,28,Fix a file deleting in JSON wrapper,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1180
https://github.com/psi4/psi4/pull/1182:14,Deployability,configurat,configuration,14,Improve build configuration for MSVC,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1182
https://github.com/psi4/psi4/pull/1182:14,Modifiability,config,configuration,14,Improve build configuration for MSVC,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1182
https://github.com/psi4/psi4/pull/1183:5,Testability,test,tests,5,Port tests to Windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1183
https://github.com/psi4/psi4/pull/1185:13,Deployability,configurat,configuration,13,Add Appveyor configuration to compile and tests on Windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1185
https://github.com/psi4/psi4/pull/1185:13,Modifiability,config,configuration,13,Add Appveyor configuration to compile and tests on Windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1185
https://github.com/psi4/psi4/pull/1185:42,Testability,test,tests,42,Add Appveyor configuration to compile and tests on Windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1185
https://github.com/psi4/psi4/issues/1196:25,Availability,Error,Error,25,Simplify Input-File Side Error Info,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1196
https://github.com/psi4/psi4/issues/1196:0,Usability,Simpl,Simplify,0,Simplify Input-File Side Error Info,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1196
https://github.com/psi4/psi4/pull/1198:0,Deployability,Update,Update,0,Update .travis.yml,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1198
https://github.com/psi4/psi4/pull/1199:22,Integrability,depend,dependency,22,Remove direct pthread dependency,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1199
https://github.com/psi4/psi4/pull/1214:51,Availability,Error,Error,51,Supply Processed Input File in Response to Py-side Error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1214
https://github.com/psi4/psi4/pull/1216:0,Deployability,Update,Update,0,Update appveyor.yml,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1216
https://github.com/psi4/psi4/pull/1217:0,Deployability,Update,Update,0,Update oeprop.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1217
https://github.com/psi4/psi4/pull/1219:13,Modifiability,variab,variable,13,Fix undefine variable in psi::CIvect::dcalc2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1219
https://github.com/psi4/psi4/pull/1220:20,Availability,error,error,20,Fix vector indexing error in psi::IntegralTransform::process_spaces,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1220
https://github.com/psi4/psi4/pull/1233:9,Performance,Cache,Cache,9,DFT Grid Cache and VV10 Gradients,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1233
https://github.com/psi4/psi4/pull/1237:17,Availability,error,error,17,Fix vector index error in psi::PKMgrDisk::batch_sizing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1237
https://github.com/psi4/psi4/pull/1238:19,Security,access,access,19,Fix invalid memory access in psi::sapt::SAPTDFInts and psi::sapt::Iterator,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1238
https://github.com/psi4/psi4/pull/1239:35,Testability,test,tests,35,Fix fsapt-allterms and fsapt-terms tests on Windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1239
https://github.com/psi4/psi4/issues/1242:8,Integrability,interface,interface,8,CheMPS2 interface missing value for DMRG_SCF_ACTIVE_SPACE,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1242
https://github.com/psi4/psi4/issues/1247:16,Modifiability,Rewrite,Rewrite,16,Coupled Cluster Rewrite,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1247
https://github.com/psi4/psi4/pull/1248:16,Availability,error,errors,16,Fix some memory errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1248
https://github.com/psi4/psi4/pull/1249:0,Energy Efficiency,Reduce,Reduce,0,Reduce the number of tests on Appveyor,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1249
https://github.com/psi4/psi4/pull/1249:21,Testability,test,tests,21,Reduce the number of tests on Appveyor,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1249
https://github.com/psi4/psi4/pull/1250:11,Availability,error,error,11,Fix memory error in psi::detci::CIWavefunction,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1250
https://github.com/psi4/psi4/pull/1257:17,Modifiability,inherit,inherits,17,ENH: CCLambdaWfn inherits from CCEnergyWfn,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1257
https://github.com/psi4/psi4/issues/1258:48,Integrability,interface,interface,48,Range separations not handled properly in libxc interface for range separated functionals,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1258
https://github.com/psi4/psi4/pull/1263:0,Deployability,Update,Update,0,Update prog_style_c.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1263
https://github.com/psi4/psi4/issues/1266:12,Testability,Test,Test,12,Missing DFT Test coverage,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1266
https://github.com/psi4/psi4/issues/1271:18,Availability,Error,Error,18,Calcium Basis Set Error?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1271
https://github.com/psi4/psi4/issues/1272:14,Availability,Error,Errors,14,Gaussian FCHK Errors and Inefficiencies,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1272
https://github.com/psi4/psi4/pull/1273:35,Modifiability,rewrite,rewrite,35,[WIP] Coupled cluster wavefunction rewrite,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1273
https://github.com/psi4/psi4/pull/1276:12,Testability,test,test,12,"Fix ""psi4 --test"" on Windows",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1276
https://github.com/psi4/psi4/pull/1285:0,Deployability,patch,patch,0,patch for conda-builds,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1285
https://github.com/psi4/psi4/issues/1288:5,Availability,Error,Error,5,PSIO Error Using ODC after OMP2/OLCCD on UHF Reference,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1288
https://github.com/psi4/psi4/pull/1294:0,Deployability,Update,Update,0,Update timer.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1294
https://github.com/psi4/psi4/issues/1298:16,Performance,optimiz,optimization,16,full_hess_every optimization corruption,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1298
https://github.com/psi4/psi4/issues/1301:0,Deployability,Install,Installs,0,Installs pseudopotentials twice,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1301
https://github.com/psi4/psi4/issues/1306:38,Performance,Optimiz,Optimization,38,File 1 Retained After full_hess_every Optimization,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1306
https://github.com/psi4/psi4/pull/1307:16,Testability,test,tests,16,dummy PR to see tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1307
https://github.com/psi4/psi4/pull/1310:13,Usability,clear,clears,13,"Fixes #1309, clears DCT files correctly.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1310
https://github.com/psi4/psi4/pull/1317:27,Availability,redundant,redundant-void-arg,27,clang-tidy apply modernize-redundant-void-arg fixes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1317
https://github.com/psi4/psi4/pull/1317:27,Safety,redund,redundant-void-arg,27,clang-tidy apply modernize-redundant-void-arg fixes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1317
https://github.com/psi4/psi4/pull/1327:10,Deployability,update,updates,10,Small PCM updates after scfitertopy,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1327
https://github.com/psi4/psi4/issues/1328:5,Availability,Error,Error,5,PSIO Error During SAPT,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1328
https://github.com/psi4/psi4/issues/1331:32,Security,Access,Access,32,Improve Vibrational Information Access,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1331
https://github.com/psi4/psi4/issues/1332:16,Availability,Error,Errors,16,Catch Basis Set Errors in Parse Step,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1332
https://github.com/psi4/psi4/pull/1337:25,Availability,error,error,25,Raise no-stability-check error early,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1337
https://github.com/psi4/psi4/issues/1338:16,Availability,Failure,Failures,16,ECP Convergence Failures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1338
https://github.com/psi4/psi4/pull/1342:9,Modifiability,config,configure,9,Resolves configure issue in libqt wrt lapack,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1342
https://github.com/psi4/psi4/pull/1344:18,Security,access,access,18,Provide Read-only access to T1/T2 python side,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1344
https://github.com/psi4/psi4/pull/1348:11,Modifiability,config,config,11,Fix OpenMP config for clang-cl on Windonws,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1348
https://github.com/psi4/psi4/pull/1350:0,Energy Efficiency,Charge,Charge-aware,0,Charge-aware frozen core,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1350
https://github.com/psi4/psi4/pull/1351:0,Modifiability,Refactor,Refactor,0,Refactor Recursive Driver Into Distributed Driver,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1351
https://github.com/psi4/psi4/issues/1354:5,Availability,Fault,Faulty,5,DCT: Faulty Advice from Output File... Any Good Replacements?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1354
https://github.com/psi4/psi4/issues/1356:15,Energy Efficiency,energy,energy,15,PBEh-3c: wrong energy passed into findif/gradient,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1356
https://github.com/psi4/psi4/pull/1363:21,Testability,test,test,21,"Make failing ""psi4 --test"" to return non-zero status",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1363
https://github.com/psi4/psi4/pull/1365:13,Testability,test,tests,13,faster nbody tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1365
https://github.com/psi4/psi4/issues/1366:4,Availability,fault,fault,4,seg fault possibly caused by or related to collocation grid cache build,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1366
https://github.com/psi4/psi4/issues/1366:60,Performance,cache,cache,60,seg fault possibly caused by or related to collocation grid cache build,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1366
https://github.com/psi4/psi4/issues/1367:22,Deployability,update,updated,22,raw_input() calls not updated now Python3 is mandatory + other issues with ixyz2database.py script,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1367
https://github.com/psi4/psi4/pull/1369:9,Deployability,patch,patch,9,JSON CLI patch,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1369
https://github.com/psi4/psi4/pull/1387:27,Deployability,update,update,27,DFT: Fixes parallel atomic update collocation_build bug,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1387
https://github.com/psi4/psi4/pull/1393:31,Security,access,access,31,Regularize Wfn and P::e psivar access for scalars and arrays,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1393
https://github.com/psi4/psi4/pull/1395:0,Deployability,update,updates,0,updates scripts for py3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1395
https://github.com/psi4/psi4/pull/1399:0,Deployability,Update,Update,0,Update Windows tests on Azure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1399
https://github.com/psi4/psi4/pull/1399:15,Testability,test,tests,15,Update Windows tests on Azure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1399
https://github.com/psi4/psi4/pull/1400:47,Modifiability,plugin,plugins,47,Expose good chunks of libmints and libciomr to plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1400
https://github.com/psi4/psi4/pull/1400:0,Security,Expose,Expose,0,Expose good chunks of libmints and libciomr to plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1400
https://github.com/psi4/psi4/pull/1402:0,Deployability,Update,Update,0,Update syntax for PsiPEP002,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1402
https://github.com/psi4/psi4/issues/1406:9,Deployability,Release,Release,9,Psi4 1.3 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1406
https://github.com/psi4/psi4/pull/1409:24,Testability,test,test,24,Add opt-full-hess-every test only when MAX_AM_ERI is high enough,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1409
https://github.com/psi4/psi4/pull/1410:31,Testability,test,test,31,Fix path handling and psithon2 test on Windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1410
https://github.com/psi4/psi4/pull/1416:0,Deployability,Update,Update,0,Update pyversions in conda install docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1416
https://github.com/psi4/psi4/pull/1416:27,Deployability,install,install,27,Update pyversions in conda install docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1416
https://github.com/psi4/psi4/pull/1421:9,Deployability,update,update,9,QCSchema update and SCF properties,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1421
https://github.com/psi4/psi4/pull/1422:19,Security,access,access,19,Fix invalid memory access in psi::cceom::get_moinfo,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1422
https://github.com/psi4/psi4/pull/1423:14,Modifiability,config,config,14,Travis: conda config settings are not saved in cache,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1423
https://github.com/psi4/psi4/pull/1423:47,Performance,cache,cache,47,Travis: conda config settings are not saved in cache,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1423
https://github.com/psi4/psi4/issues/1425:8,Deployability,install,installation,8,SNS MP2 installation fails,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1425
https://github.com/psi4/psi4/pull/1427:13,Availability,error,error,13,Fix a memory error in psi::MOInfo::read_mo_spaces,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1427
https://github.com/psi4/psi4/issues/1433:33,Testability,test,test,33,Convergence problem in dfmp2-ecp test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1433
https://github.com/psi4/psi4/pull/1435:4,Performance,race condition,race condition,4,Fix race condition in maximum orbital gradient of parallel ODCT.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1435
https://github.com/psi4/psi4/pull/1440:11,Availability,error,error,11,Fix memory error in psi::MultipolePropCalc::compute_mo_extents,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1440
https://github.com/psi4/psi4/pull/1441:22,Security,access,access,22,Fix an invalid memory access in psi::CIWavefunction::sem_iter,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1441
https://github.com/psi4/psi4/pull/1442:17,Availability,error,error,17,Fix a filesystem error in psi.driver.cbs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1442
https://github.com/psi4/psi4/pull/1446:46,Performance,cache,cache,46,JK Memory estimates and tighter bounds on DFT cache,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1446
https://github.com/psi4/psi4/pull/1454:0,Safety,avoid,avoid,0,avoid overload_cast,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1454
https://github.com/psi4/psi4/issues/1457:29,Testability,test,testsuite,29,Segfaults in DFHelper during testsuite,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1457
https://github.com/psi4/psi4/pull/1460:24,Availability,error,error,24,Implement DIIS absolute error criterion,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1460
https://github.com/psi4/psi4/issues/1461:20,Availability,failure,failure,20,cdomp2-2 test suite failure with ATLAS,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1461
https://github.com/psi4/psi4/issues/1461:9,Testability,test,test,9,cdomp2-2 test suite failure with ATLAS,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1461
https://github.com/psi4/psi4/issues/1462:16,Availability,failure,failures,16,SAPT test suite failures on big-endian architectures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1462
https://github.com/psi4/psi4/issues/1462:5,Testability,test,test,5,SAPT test suite failures on big-endian architectures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1462
https://github.com/psi4/psi4/issues/1465:21,Availability,error,errors,21,fcidump.py np.einsum errors on some architectures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1465
https://github.com/psi4/psi4/issues/1467:12,Testability,test,test,12,CH4 Hessian test is non-deterministic,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1467
https://github.com/psi4/psi4/pull/1469:19,Security,access,access,19,Fix invalid memory access in psi::IntegralTransform::presort_so_tei,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1469
https://github.com/psi4/psi4/issues/1474:60,Performance,Optimiz,Optimization,60,Td Molecule Breaks Symmetry-Alignment with Ref. Axes During Optimization,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1474
https://github.com/psi4/psi4/pull/1475:33,Availability,checkpoint,checkpoint,33,Fix inconsistencies in formatted checkpoint files,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1475
https://github.com/psi4/psi4/pull/1476:11,Availability,error,error,11,Fix memory error in psi::ccresponse::roa,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1476
https://github.com/psi4/psi4/pull/1480:11,Availability,error,error,11,Fix memory error in MOInfoBase::convert_int_array_to_vector,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1480
https://github.com/psi4/psi4/pull/1484:16,Integrability,depend,dependent,16,prototype basis-dependent basis guess,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1484
https://github.com/psi4/psi4/pull/1488:11,Availability,error,error,11,Fix memory error in psi::IntegralTransform::process_spaces,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1488
https://github.com/psi4/psi4/pull/1489:19,Security,access,access,19,Fix invalid memory access in psi::ROHF::Hx,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1489
https://github.com/psi4/psi4/pull/1493:14,Energy Efficiency,energy,energy,14,Fix SAD guess energy printout,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1493
https://github.com/psi4/psi4/issues/1496:17,Deployability,Release,Release,17,add a HOWTO Make Release page in docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1496
https://github.com/psi4/psi4/issues/1509:14,Energy Efficiency,Energy,Energy,14,DFOCC's Final Energy Dependent on Whether User Energy Convergence Criteria Met,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1509
https://github.com/psi4/psi4/issues/1509:47,Energy Efficiency,Energy,Energy,47,DFOCC's Final Energy Dependent on Whether User Energy Convergence Criteria Met,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1509
https://github.com/psi4/psi4/issues/1509:21,Integrability,Depend,Dependent,21,DFOCC's Final Energy Dependent on Whether User Energy Convergence Criteria Met,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1509
https://github.com/psi4/psi4/pull/1513:0,Deployability,Update,Update,0,Update dfmp2.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1513
https://github.com/psi4/psi4/pull/1517:0,Deployability,Update,Update,0,Update GCC version for third Travis build,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1517
https://github.com/psi4/psi4/pull/1518:20,Integrability,Message,Messages,20,Add Not Implemented Messages in DCT,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1518
https://github.com/psi4/psi4/pull/1519:0,Deployability,Update,Update,0,Update git repository for libxc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1519
https://github.com/psi4/psi4/pull/1520:7,Modifiability,inherit,inheritance,7,openmp inheritance for plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1520
https://github.com/psi4/psi4/pull/1520:23,Modifiability,plugin,plugins,23,openmp inheritance for plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1520
https://github.com/psi4/psi4/pull/1521:13,Availability,error,error,13,Fix a memory error in psi::MOInfo::read_mo_spaces,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1521
https://github.com/psi4/psi4/pull/1522:16,Testability,test,tests,16,"Remove ""failing tests"" which do not fail anymore on Azure",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1522
https://github.com/psi4/psi4/issues/1533:21,Deployability,update,update,21,"Alert: After a conda update on linux, psi4 segfaults ... don't panic",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1533
https://github.com/psi4/psi4/pull/1537:0,Deployability,release,release,0,release cleanup,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1537
https://github.com/psi4/psi4/pull/1538:22,Performance,cache,cache,22,Try stages to warm up cache,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1538
https://github.com/psi4/psi4/pull/1539:7,Performance,optimiz,optimized,7,Enable optimized builds on Azure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1539
https://github.com/psi4/psi4/issues/1541:9,Energy Efficiency,charge,charge,9,external charge field interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1541
https://github.com/psi4/psi4/issues/1541:22,Integrability,interface,interface,22,external charge field interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1541
https://github.com/psi4/psi4/pull/1543:6,Testability,test,tests,6,Azure tests (wip),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1543
https://github.com/psi4/psi4/issues/1545:8,Energy Efficiency,energy,energy,8,Asinine energy with DF-FNO-CCSD(T) energy,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1545
https://github.com/psi4/psi4/issues/1545:35,Energy Efficiency,energy,energy,35,Asinine energy with DF-FNO-CCSD(T) energy,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1545
https://github.com/psi4/psi4/pull/1549:0,Deployability,Update,Update,0,Update scf-dipder test case,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1549
https://github.com/psi4/psi4/pull/1549:18,Testability,test,test,18,Update scf-dipder test case,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1549
https://github.com/psi4/psi4/pull/1552:20,Testability,test,test,20,Remove third Travis test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1552
https://github.com/psi4/psi4/pull/1558:0,Deployability,Update,Update,0,Update to include an auxiliary basis for def2-mSVP,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1558
https://github.com/psi4/psi4/pull/1559:14,Deployability,update,updates,14,"Dunning basis updates for Li, Be, Na, Mg",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1559
https://github.com/psi4/psi4/pull/1561:0,Deployability,update,update,0,update addon build commits,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1561
https://github.com/psi4/psi4/issues/1562:10,Deployability,Release,Release,10,Psi4 v1.4 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1562
https://github.com/psi4/psi4/pull/1563:0,Deployability,Update,Update,0,Update README.md,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1563
https://github.com/psi4/psi4/issues/1565:7,Availability,error,error,7,Syntax error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1565
https://github.com/psi4/psi4/pull/1569:0,Availability,down,download,0,download externals through url instead of git clone,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1569
https://github.com/psi4/psi4/pull/1571:0,Deployability,Update,Update,0,Update MKL and fix building,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1571
https://github.com/psi4/psi4/issues/1574:0,Availability,Error,Error,0,Error in normalization of h basis functions,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1574
https://github.com/psi4/psi4/pull/1578:0,Deployability,update,update,0,update run_json and wfn qcvars,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1578
https://github.com/psi4/psi4/pull/1580:20,Integrability,message,messages,20,Add DF-DCFT warning messages.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1580
https://github.com/psi4/psi4/issues/1582:9,Deployability,install,install,9,qcengine install fails,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1582
https://github.com/psi4/psi4/issues/1586:10,Deployability,install,install,10,unable to install on ubuntu,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1586
https://github.com/psi4/psi4/pull/1607:14,Performance,load,load,14,"explicitly np.load(..., allow_pickle=True) since we're building objects",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1607
https://github.com/psi4/psi4/pull/1637:0,Security,Validat,Validate,0,Validate DOCC/SOCC; Cleanup Occupation Code in HF,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1637
https://github.com/psi4/psi4/pull/1642:26,Modifiability,plugin,plugin,26,Fix cmake changes causing plugin link problems on Mac,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1642
https://github.com/psi4/psi4/pull/1644:34,Testability,test,testing,34,"qcelemental for alignment, which, testing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1644
https://github.com/psi4/psi4/pull/1662:6,Testability,test,test,6,fixes test: dft-pruning,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1662
https://github.com/psi4/psi4/pull/1674:4,Availability,error,error,4,fix error string checking for pytest 5,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1674
https://github.com/psi4/psi4/pull/1676:7,Integrability,interoperab,interoperability,7,Enable interoperability via The MolSSI Driver Interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1676
https://github.com/psi4/psi4/pull/1676:46,Integrability,Interface,Interface,46,Enable interoperability via The MolSSI Driver Interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1676
https://github.com/psi4/psi4/issues/1678:9,Usability,Simpl,Simplify,9,Document/Simplify Orbital Guess from Wavefunction,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1678
https://github.com/psi4/psi4/issues/1679:9,Availability,failure,failure,9,DF-MP2.5 failure for large inputs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1679
https://github.com/psi4/psi4/pull/1680:8,Modifiability,plugin,plugin,8,Fix SCF plugin python file,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1680
https://github.com/psi4/psi4/issues/1684:14,Availability,Failure,Failure,14,SAPT(DFT) SCF Failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1684
https://github.com/psi4/psi4/pull/1688:10,Availability,down,download,10,Fix libxc download location,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1688
https://github.com/psi4/psi4/pull/1689:0,Deployability,Update,Update,0,Update detci.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1689
https://github.com/psi4/psi4/pull/1690:0,Deployability,Update,Update,0,Update mpl.py for py3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1690
https://github.com/psi4/psi4/issues/1693:7,Availability,failure,failure,7,CASSCF failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1693
https://github.com/psi4/psi4/pull/1697:34,Deployability,update,updates,34,dep version and FindPythonLibsNew updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1697
https://github.com/psi4/psi4/pull/1701:4,Testability,test,tests,4,Add tests for weird basis sets,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1701
https://github.com/psi4/psi4/issues/1705:24,Deployability,install,installed,24,Psi4 Cannot find Pytest installed in Conda,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1705
https://github.com/psi4/psi4/pull/1707:17,Energy Efficiency,energy,energy,17,adds missing mp3 energy variables to dfocc and occ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1707
https://github.com/psi4/psi4/pull/1707:24,Modifiability,variab,variables,24,adds missing mp3 energy variables to dfocc and occ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1707
https://github.com/psi4/psi4/issues/1710:6,Integrability,interface,interface,6,DFTD4 interface in Psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1710
https://github.com/psi4/psi4/issues/1716:16,Availability,Failure,Failure,16,SCF Convergence Failure: ECPs and ROHF-SOSCF,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1716
https://github.com/psi4/psi4/pull/1720:14,Integrability,interface,interface,14,new Multipole interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1720
https://github.com/psi4/psi4/issues/1726:20,Integrability,Contract,Contractions,20,Reorder dfocc:dfmp2 Contractions to Remove Bottleneck,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1726
https://github.com/psi4/psi4/issues/1726:43,Performance,Bottleneck,Bottleneck,43,Reorder dfocc:dfmp2 Contractions to Remove Bottleneck,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1726
https://github.com/psi4/psi4/pull/1727:0,Deployability,update,update,0,update slack link,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1727
https://github.com/psi4/psi4/pull/1730:0,Deployability,Update,Update,0,Update schema_wrapper.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1730
https://github.com/psi4/psi4/pull/1731:4,Usability,simpl,simple,4,Add simple print statements for scratch directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1731
https://github.com/psi4/psi4/issues/1736:22,Modifiability,Refactor,Refactor,22,Correlated Derivative Refactor: Planning,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1736
https://github.com/psi4/psi4/pull/1739:0,Deployability,Update,Update,0,Update basissets.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1739
https://github.com/psi4/psi4/pull/1743:0,Deployability,Update,Update,0,Update def2-qzvpp.gbs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1743
https://github.com/psi4/psi4/pull/1744:0,Deployability,Integrat,Integrating,0,Integrating adcc with Psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1744
https://github.com/psi4/psi4/pull/1744:0,Integrability,Integrat,Integrating,0,Integrating adcc with Psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1744
https://github.com/psi4/psi4/pull/1745:9,Modifiability,Refactor,Refactor,9,Gradient Refactor,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1745
https://github.com/psi4/psi4/issues/1757:5,Energy Efficiency,charge,charges,5,QMMM charges seem to have no effect,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1757
https://github.com/psi4/psi4/pull/1765:7,Testability,test,test,7,orthog test fixes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1765
https://github.com/psi4/psi4/issues/1768:10,Deployability,Release,Release,10,Psi4 v1.5 Release Notes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1768
https://github.com/psi4/psi4/issues/1784:38,Safety,Sanity Check,Sanity Check,38,CFOUR Driver with Displacements Fails Sanity Check,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1784
https://github.com/psi4/psi4/pull/1785:17,Modifiability,Variab,Variables,17,Clean manager.cc Variables: OCC's Open-Heart Surgery II,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1785
https://github.com/psi4/psi4/issues/1788:38,Availability,fault,fault,38,psi4 installation failed-Segmentation fault (core dumped),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1788
https://github.com/psi4/psi4/issues/1788:5,Deployability,install,installation,5,psi4 installation failed-Segmentation fault (core dumped),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1788
https://github.com/psi4/psi4/pull/1789:14,Security,Sanitiz,Sanitize,14,"Condense MP2, Sanitize Spin Scaling: OCC's Open-Heart Surgery III",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1789
https://github.com/psi4/psi4/issues/1792:13,Availability,fault,fault,13,Segmentation fault after installation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1792
https://github.com/psi4/psi4/issues/1792:25,Deployability,install,installation,25,Segmentation fault after installation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1792
https://github.com/psi4/psi4/issues/1793:7,Testability,test,tests,7,Broken tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1793
https://github.com/psi4/psi4/issues/1794:13,Availability,Error,Error,13,Psi4 Runtime Error inside Jupyter Notebook,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1794
https://github.com/psi4/psi4/pull/1803:10,Availability,error,error,10,Fixed the error in E(30)ind (1677),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1803
https://github.com/psi4/psi4/pull/1805:4,Performance,perform,performance,4,Fix performance issue in DF SCF Hessians,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1805
https://github.com/psi4/psi4/pull/1806:16,Deployability,patch,patchup,16,def2 systematic patchup,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1806
https://github.com/psi4/psi4/pull/1811:19,Availability,error,error,19,Correct copy-paste error message,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1811
https://github.com/psi4/psi4/pull/1811:25,Integrability,message,message,25,Correct copy-paste error message,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1811
https://github.com/psi4/psi4/pull/1813:10,Integrability,Interface,Interface,10,GeomeTRIC Interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1813
https://github.com/psi4/psi4/issues/1820:15,Integrability,rout,routine,15,omp_set_nested routine deprecated,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1820
https://github.com/psi4/psi4/pull/1821:0,Security,expose,exposes,0,exposes useful functions from detci and libpsio classes to python,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1821
https://github.com/psi4/psi4/pull/1824:0,Usability,Simpl,Simplify,0,Simplify partial Cholesky with Gershgorin theorem,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1824
https://github.com/psi4/psi4/pull/1826:0,Deployability,Install,Install,0,Install adcc from main label,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1826
https://github.com/psi4/psi4/pull/1827:41,Deployability,update,update,41,"Small adcc amendments (Use main channel, update fallback version)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1827
https://github.com/psi4/psi4/issues/1830:4,Availability,fault,faults,4,seg faults in usapt0 solver,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1830
https://github.com/psi4/psi4/issues/1833:5,Deployability,integrat,integration,5,cct3 integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1833
https://github.com/psi4/psi4/issues/1833:5,Integrability,integrat,integration,5,cct3 integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1833
https://github.com/psi4/psi4/issues/1834:16,Deployability,integrat,integration,16,hybrid dft-sapt integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1834
https://github.com/psi4/psi4/issues/1834:16,Integrability,integrat,integration,16,hybrid dft-sapt integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1834
https://github.com/psi4/psi4/issues/1836:5,Integrability,interface,interface,5,user interface to tddft,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1836
https://github.com/psi4/psi4/issues/1837:7,Deployability,integrat,integration,7,psixas integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1837
https://github.com/psi4/psi4/issues/1837:7,Integrability,integrat,integration,7,psixas integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1837
https://github.com/psi4/psi4/issues/1838:7,Deployability,integrat,integration,7,fockci integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1838
https://github.com/psi4/psi4/issues/1838:7,Integrability,integrat,integration,7,fockci integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1838
https://github.com/psi4/psi4/issues/1839:9,Deployability,integrat,integration,9,psiembed integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1839
https://github.com/psi4/psi4/issues/1839:9,Integrability,integrat,integration,9,psiembed integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1839
https://github.com/psi4/psi4/issues/1840:19,Availability,down,downloads,19,expand psicode.org/downloads,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1840
https://github.com/psi4/psi4/issues/1841:5,Testability,test,tests,5,full tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1841
https://github.com/psi4/psi4/pull/1842:0,Deployability,Update,Update,0,Update Cholesky manual references,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1842
https://github.com/psi4/psi4/pull/1844:16,Integrability,depend,dependencies,16,Very bad linear dependencies may lead to NaN or infinite condition no,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1844
https://github.com/psi4/psi4/pull/1846:5,Testability,Test,Test,5,"Heal Test Suite, Orbital Convergence: OCC's Open-Heart Surgery VI",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1846
https://github.com/psi4/psi4/pull/1848:28,Testability,test,tests,28,Temporarily disable adcc in tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1848
https://github.com/psi4/psi4/pull/1854:0,Energy Efficiency,Adapt,Adapt,0,Adapt PSIMRCC to compute_energy standard,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1854
https://github.com/psi4/psi4/pull/1854:0,Modifiability,Adapt,Adapt,0,Adapt PSIMRCC to compute_energy standard,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1854
https://github.com/psi4/psi4/pull/1855:23,Modifiability,plugin,plugin,23,Addition of psi4fockci plugin,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1855
https://github.com/psi4/psi4/pull/1858:33,Availability,error,error,33,Bandaid over 1851... Segfault to error message.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1858
https://github.com/psi4/psi4/pull/1858:39,Integrability,message,message,39,Bandaid over 1851... Segfault to error message.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1858
https://github.com/psi4/psi4/pull/1862:34,Availability,error,error,34,enhances the visibility of psi4's error messages,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1862
https://github.com/psi4/psi4/pull/1862:40,Integrability,message,messages,40,enhances the visibility of psi4's error messages,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1862
https://github.com/psi4/psi4/pull/1862:0,Modifiability,enhance,enhances,0,enhances the visibility of psi4's error messages,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1862
https://github.com/psi4/psi4/issues/1866:9,Deployability,Release,Release,9,New MRCC Release Broke Psi Interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1866
https://github.com/psi4/psi4/issues/1866:27,Integrability,Interface,Interface,27,New MRCC Release Broke Psi Interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1866
https://github.com/psi4/psi4/issues/1867:4,Availability,Error,Error,4,New Error Printing Bungles Newlines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1867
https://github.com/psi4/psi4/pull/1868:7,Availability,error,error,7,update error message box: preserve newlines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1868
https://github.com/psi4/psi4/pull/1868:0,Deployability,update,update,0,update error message box: preserve newlines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1868
https://github.com/psi4/psi4/pull/1868:13,Integrability,message,message,13,update error message box: preserve newlines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1868
https://github.com/psi4/psi4/pull/1869:0,Deployability,update,update,0,update slack link,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1869
https://github.com/psi4/psi4/issues/1878:22,Deployability,release,release,22,inconsistency between release and developer version ?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1878
https://github.com/psi4/psi4/issues/1881:29,Energy Efficiency,charge,charges,29,Unit inconsistency with QMMM charges,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1881
https://github.com/psi4/psi4/pull/1882:0,Deployability,Update,Update,0,Update Ca_subset/Cb_subset docs.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1882
https://github.com/psi4/psi4/pull/1885:14,Integrability,interface,interface,14,TDSCF psithon interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1885
https://github.com/psi4/psi4/pull/1892:6,Deployability,update,updates,6,Small updates to adcc integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1892
https://github.com/psi4/psi4/pull/1892:22,Deployability,integrat,integration,22,Small updates to adcc integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1892
https://github.com/psi4/psi4/pull/1892:22,Integrability,integrat,integration,22,Small updates to adcc integration,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1892
https://github.com/psi4/psi4/pull/1894:0,Deployability,Update,Update,0,Update Ca/Cb_subset docs; Add get_opdm/get_tpdm docs.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1894
https://github.com/psi4/psi4/issues/1897:37,Energy Efficiency,energy,energy,37,CBS hessian behaves differently than energy and grad,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1897
https://github.com/psi4/psi4/issues/1902:7,Availability,error,error,7,--test error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1902
https://github.com/psi4/psi4/issues/1902:2,Testability,test,test,2,--test error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1902
https://github.com/psi4/psi4/issues/1908:10,Energy Efficiency,energy,energy,10,Wrong X2C energy when using cartesian functions,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1908
https://github.com/psi4/psi4/pull/1914:0,Deployability,Update,Update,0,Update to adcc 0.15.0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1914
https://github.com/psi4/psi4/pull/1917:7,Modifiability,flexible,flexible,7,Expose flexible cube generation to Python,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1917
https://github.com/psi4/psi4/pull/1917:0,Security,Expose,Expose,0,Expose flexible cube generation to Python,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1917
https://github.com/psi4/psi4/issues/1920:0,Availability,Error,Error,0,Error Extraction Mangles Message,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1920
https://github.com/psi4/psi4/issues/1920:25,Integrability,Message,Message,25,Error Extraction Mangles Message,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1920
https://github.com/psi4/psi4/issues/1921:19,Performance,optimiz,optimization,19,"Transition complex optimization (PSI4, V1.3.2)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1921
https://github.com/psi4/psi4/pull/1922:0,Deployability,Update,Update,0,Update CPPE,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1922
https://github.com/psi4/psi4/issues/1924:8,Safety,Abort,Aborts,8,OPTKING Aborts,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1924
https://github.com/psi4/psi4/pull/1927:27,Modifiability,variab,variable,27,cast int to list for array variable,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1927
https://github.com/psi4/psi4/pull/1929:24,Integrability,depend,dependency,24,convert MDI to optional dependency,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1929
https://github.com/psi4/psi4/issues/1931:24,Availability,Failure,Failure,24,EOM-CC3 Diagonalization Failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1931
https://github.com/psi4/psi4/pull/1933:28,Availability,alive,alive,28,Keep _default_psio_manager_ alive for Process::Environment,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1933
https://github.com/psi4/psi4/pull/1934:9,Modifiability,plugin,plugin,9,add cct3 plugin,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1934
https://github.com/psi4/psi4/issues/1939:55,Availability,error,error,55,"PCM fails with symmetry group coordinates, need to add error message for this to help user",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1939
https://github.com/psi4/psi4/issues/1939:61,Integrability,message,message,61,"PCM fails with symmetry group coordinates, need to add error message for this to help user",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1939
https://github.com/psi4/psi4/pull/1942:39,Integrability,interface,interface,39,Add point group information to FCIDUMP interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1942
https://github.com/psi4/psi4/issues/1943:13,Testability,test,test,13,dft-cut-dens test fails with gcc5,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1943
https://github.com/psi4/psi4/pull/1946:18,Energy Efficiency,charge,charge,18,Threaded external charge potential,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1946
https://github.com/psi4/psi4/issues/1947:9,Performance,optimiz,optimization,9,geometry optimization converges prematurely,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1947
https://github.com/psi4/psi4/pull/1951:39,Integrability,interface,interface,39,Add point group information to FCIDUMP interface (2),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1951
https://github.com/psi4/psi4/pull/1958:0,Testability,test,testing,0,testing label for c1-incapable tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1958
https://github.com/psi4/psi4/pull/1958:31,Testability,test,tests,31,testing label for c1-incapable tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1958
https://github.com/psi4/psi4/issues/1959:1,Availability,Error,Error,1,"""Error writing to file"" PSi0_error 12",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1959
https://github.com/psi4/psi4/issues/1960:22,Security,access,access,22,dftd3 crash trying to access home directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1960
https://github.com/psi4/psi4/pull/1961:11,Energy Efficiency,Charge,Charge,11,Added MBIS Charge Partitioning Scheme,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1961
https://github.com/psi4/psi4/issues/1965:17,Availability,error,errors,17,too obscure PSIO errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1965
https://github.com/psi4/psi4/pull/1977:33,Integrability,interface,interface,33,Include ghost atoms in PCMsolver interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1977
https://github.com/psi4/psi4/issues/1979:0,Deployability,Install,Installing,0,Installing Psi4 in Conda with Python3.8,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1979
https://github.com/psi4/psi4/pull/1982:12,Safety,sanity check,sanity check,12,Add missing sanity check.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/1982
https://github.com/psi4/psi4/issues/1984:6,Availability,Error,Error,6,Fatal Error in core.so,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1984
https://github.com/psi4/psi4/issues/1987:22,Availability,error,error,22,QCEngine wavefunction error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1987
https://github.com/psi4/psi4/issues/1998:24,Availability,error,error,24,Dipole polarizabilities error when linear dependencies are removed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1998
https://github.com/psi4/psi4/issues/1998:42,Integrability,depend,dependencies,42,Dipole polarizabilities error when linear dependencies are removed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/1998
https://github.com/psi4/psi4/issues/2007:28,Integrability,rout,routines,28,Parallelization of integral routines for PE/EFP,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2007
https://github.com/psi4/psi4/issues/2009:6,Modifiability,plugin,plugin,6,"[cct3 plugin] crash will different molecules in same input, e.g. in NBody calculations",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2009
https://github.com/psi4/psi4/issues/2010:27,Performance,optimiz,optimization,27,Segfault in RI-HF geometry optimization,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2010
https://github.com/psi4/psi4/pull/2013:6,Deployability,patch,patches,6,minor patches for fnocc and dfocc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2013
https://github.com/psi4/psi4/pull/2018:14,Modifiability,config,config,14,Windows Azure config,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2018
https://github.com/psi4/psi4/issues/2019:11,Availability,Error,Error,11,Write PSIO Error Information to Output File,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2019
https://github.com/psi4/psi4/issues/2020:27,Performance,optimiz,optimization,27,Run crashing at the end of optimization,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2020
https://github.com/psi4/psi4/issues/2023:6,Safety,detect,detection,6,XHOST detection fails,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2023
https://github.com/psi4/psi4/issues/2024:5,Deployability,install,installation,5,psi4 installation via conda interacts poorly with ambertools>=20 on MacOS,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2024
https://github.com/psi4/psi4/pull/2025:3,Deployability,Update,Updates,3,PE Updates: FMM and PE(ECP),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2025
https://github.com/psi4/psi4/pull/2030:20,Availability,error,errors,20,Better visible PSIO errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2030
https://github.com/psi4/psi4/pull/2034:14,Deployability,update,updates,14,miscellaneous updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2034
https://github.com/psi4/psi4/pull/2037:47,Testability,test,tests,47,"auto apply fix_com when needed, qcschema smoke tests",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2037
https://github.com/psi4/psi4/pull/2043:15,Integrability,depend,dependent,15,CCSD frequency-dependent first hyperpolarizabilities,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2043
https://github.com/psi4/psi4/pull/2053:0,Performance,Optimiz,Optimize,0,Optimize linalg::triplet matrix multiply,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2053
https://github.com/psi4/psi4/pull/2056:6,Energy Efficiency,Charge,Charge,6,[MBIS/Charge Partitioning Feature] Added The Calculation of Atomic Volumes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2056
https://github.com/psi4/psi4/issues/2057:0,Deployability,Update,Update,0,Update to libxc 5.1.0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2057
https://github.com/psi4/psi4/pull/2058:9,Testability,test,testing,9,"fix fchk testing, v2rdm4 for L2, and test comments",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2058
https://github.com/psi4/psi4/pull/2058:37,Testability,test,test,37,"fix fchk testing, v2rdm4 for L2, and test comments",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2058
https://github.com/psi4/psi4/pull/2059:5,Deployability,update,updates,5,2020 updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2059
https://github.com/psi4/psi4/issues/2060:65,Deployability,install,installed,65,PSI4 cmake build does not seem to check if python development is installed.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2060
https://github.com/psi4/psi4/pull/2068:40,Deployability,upgrade,upgrade,40,Fix diffuse external potential after L2 upgrade,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2068
https://github.com/psi4/psi4/issues/2075:0,Usability,Undo,Undocumented,0,Undocumented `DETCI` Convention,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2075
https://github.com/psi4/psi4/pull/2081:12,Integrability,rout,routines,12,Add SAPT0-D routines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2081
https://github.com/psi4/psi4/pull/2083:31,Availability,error,errors,31,cleaner print for module level errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2083
https://github.com/psi4/psi4/issues/2084:8,Availability,error,error,8,forrtl: error (76): Abort trap signal,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084
https://github.com/psi4/psi4/issues/2084:20,Safety,Abort,Abort,20,forrtl: error (76): Abort trap signal,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2084
https://github.com/psi4/psi4/issues/2087:5,Deployability,Update,Update,5,Docs Update: NumPy Interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2087
https://github.com/psi4/psi4/issues/2087:19,Integrability,Interface,Interface,19,Docs Update: NumPy Interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2087
https://github.com/psi4/psi4/pull/2088:18,Security,expose,expose,18,Create and Python-expose functions for the DF deriv integrals,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2088
https://github.com/psi4/psi4/pull/2089:0,Deployability,Update,Update,0,"Update to ""Interface to Numpy""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2089
https://github.com/psi4/psi4/pull/2089:11,Integrability,Interface,Interface,11,"Update to ""Interface to Numpy""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2089
https://github.com/psi4/psi4/pull/2094:12,Testability,test,test,12,remove time test for multithread,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2094
https://github.com/psi4/psi4/pull/2096:21,Availability,down,downstream,21,new python detection downstream,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2096
https://github.com/psi4/psi4/pull/2096:11,Safety,detect,detection,11,new python detection downstream,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2096
https://github.com/psi4/psi4/pull/2098:0,Deployability,Update,Update,0,Update detci.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2098
https://github.com/psi4/psi4/pull/2099:12,Modifiability,plugin,plugin,12,test module plugin on windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2099
https://github.com/psi4/psi4/pull/2099:0,Testability,test,test,0,test module plugin on windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2099
https://github.com/psi4/psi4/issues/2102:8,Availability,error,error,8,Runtime error while running DMRG calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2102
https://github.com/psi4/psi4/pull/2103:18,Deployability,toggle,toggle,18,try shared/module toggle,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2103
https://github.com/psi4/psi4/pull/2104:15,Modifiability,plugin,plugins,15,strategy 2 for plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2104
https://github.com/psi4/psi4/issues/2105:5,Deployability,Update,Update,5,Docs Update: Molecule Reading,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2105
https://github.com/psi4/psi4/issues/2109:14,Availability,mainten,maintenance,14,Documentation maintenance for 1.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2109
https://github.com/psi4/psi4/pull/2111:13,Integrability,rout,routines,13,Simplify EFP routines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2111
https://github.com/psi4/psi4/pull/2111:0,Usability,Simpl,Simplify,0,Simplify EFP routines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2111
https://github.com/psi4/psi4/issues/2117:0,Performance,Optimiz,Optimization,0,Optimization/frequency calculations using JSON,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2117
https://github.com/psi4/psi4/issues/2119:56,Energy Efficiency,Energy,Energy,56,DF-CASSCF: Diff. Input Wfn. + Same CASSCF Soln. = Diff. Energy,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2119
https://github.com/psi4/psi4/issues/2120:54,Integrability,depend,dependencies,54,nmopi() and Ca()->coldim() not consistent when linear dependencies present,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2120
https://github.com/psi4/psi4/issues/2125:25,Availability,Mainten,Maintenance,25,Documentation: Obtaining Maintenance,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2125
https://github.com/psi4/psi4/pull/2127:4,Integrability,rout,routine,4,Add routine to automate computation of MBIS volume ratios,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2127
https://github.com/psi4/psi4/pull/2140:10,Testability,test,tests,10,Move CPPE tests to pytests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2140
https://github.com/psi4/psi4/pull/2142:15,Deployability,update,updates,15,empirical disp updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2142
https://github.com/psi4/psi4/pull/2148:0,Testability,Test,Test,0,Test unprivileged acct,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2148
https://github.com/psi4/psi4/issues/2157:29,Availability,avail,available,29,Is ccCA-PS3 composite method available in PSI4?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2157
https://github.com/psi4/psi4/pull/2160:0,Deployability,Update,Update,0,Update MDI support to version 1.2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2160
https://github.com/psi4/psi4/pull/2161:0,Deployability,Update,Update,0,Update MDI Support,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2161
https://github.com/psi4/psi4/pull/2163:0,Deployability,Update,Update,0,Update MDI support to version 1.2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2163
https://github.com/psi4/psi4/pull/2165:11,Testability,Test,Test,11,Bugfix and Test Shortening,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2165
https://github.com/psi4/psi4/pull/2170:20,Testability,log,logic,20,Clean up set_params logic and printing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2170
https://github.com/psi4/psi4/pull/2171:0,Usability,Simpl,Simplify,0,Simplify RDCT Fock Matrix Construction,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2171
https://github.com/psi4/psi4/pull/2172:9,Performance,concurren,concurrency,9,GHA docs concurrency,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2172
https://github.com/psi4/psi4/issues/2178:11,Availability,failure,failure,11,occasional failure of sapt inf,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2178
https://github.com/psi4/psi4/pull/2180:15,Deployability,update,updates,15,empirical disp updates for qcng v0.19,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2180
https://github.com/psi4/psi4/pull/2185:0,Usability,Simpl,Simplify,0,Simplify UDCT Fock Matrix Construction,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2185
https://github.com/psi4/psi4/pull/2188:33,Performance,optimiz,optimization,33,keep_intcos works for successful optimization,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2188
https://github.com/psi4/psi4/pull/2190:4,Availability,checkpoint,checkpointing,4,SCF checkpointing update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190
https://github.com/psi4/psi4/pull/2190:18,Deployability,update,update,18,SCF checkpointing update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2190
https://github.com/psi4/psi4/issues/2192:10,Availability,error,error,10,threading error in DF-CCSD(T) gradient,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2192
https://github.com/psi4/psi4/pull/2193:30,Availability,error,error,30,Major bugfix! Parallelization error in DF gradients,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2193
https://github.com/psi4/psi4/issues/2201:11,Integrability,Depend,Dependencies,11,X2C Linear Dependencies,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2201
https://github.com/psi4/psi4/issues/2203:6,Modifiability,Variab,Variable,6,`wfn` Variable Names,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2203
https://github.com/psi4/psi4/pull/2205:31,Deployability,release,release,31,Add some documentation for 1.4 release,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2205
https://github.com/psi4/psi4/issues/2208:9,Performance,optimiz,optimization,9,Geometry optimization crashes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2208
https://github.com/psi4/psi4/issues/2211:51,Integrability,depend,dependencies,51,Psi4 1.4rc1 in-core DF is very sensitive to linear dependencies,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2211
https://github.com/psi4/psi4/issues/2212:5,Availability,Robust,Robust,5,More Robust SOSCF Tech.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2212
https://github.com/psi4/psi4/issues/2213:17,Performance,optimiz,optimization,17,Another geometry optimization crash,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2213
https://github.com/psi4/psi4/issues/2217:16,Integrability,depend,dependencies,16,DIIS and linear dependencies,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2217
https://github.com/psi4/psi4/issues/2220:9,Testability,Test,Test,9,Parallel Test Suite,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2220
https://github.com/psi4/psi4/issues/2224:20,Integrability,Message,Message,20,Inscrutable LIBPSIO Message,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2224
https://github.com/psi4/psi4/issues/2228:8,Availability,error,error,8,Unicode error under windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2228
https://github.com/psi4/psi4/pull/2229:14,Deployability,update,update,14,Molden Writer update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2229
https://github.com/psi4/psi4/issues/2231:15,Integrability,Depend,Dependencies,15,DCT and Linear Dependencies,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2231
https://github.com/psi4/psi4/pull/2232:9,Availability,error,errors,9,Fix GEMM errors in presence of linear dependencies,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2232
https://github.com/psi4/psi4/pull/2232:38,Integrability,depend,dependencies,38,Fix GEMM errors in presence of linear dependencies,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2232
https://github.com/psi4/psi4/pull/2233:19,Integrability,Depend,Dependencies,19,DF-DCT with Linear Dependencies,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2233
https://github.com/psi4/psi4/issues/2234:7,Testability,test,tests,7,Broken tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2234
https://github.com/psi4/psi4/issues/2236:22,Availability,down,downloaded,22,issue installing from downloaded .exe,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236
https://github.com/psi4/psi4/issues/2236:6,Deployability,install,installing,6,issue installing from downloaded .exe,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2236
https://github.com/psi4/psi4/issues/2244:42,Energy Efficiency,charge,charges,42,how to get the gradient of external point charges,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2244
https://github.com/psi4/psi4/pull/2245:20,Availability,error,error,20,Fix type conversion error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2245
https://github.com/psi4/psi4/pull/2246:19,Deployability,patch,patch,19,Port Björn Esser's patch for flexiblas support from Fedora,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2246
https://github.com/psi4/psi4/issues/2253:23,Safety,sanity check,sanity checked,23,Basis set input is not sanity checked,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2253
https://github.com/psi4/psi4/issues/2258:23,Energy Efficiency,Energy,Energy,23,Inconsistent DF-CASSCF Energy Output,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2258
https://github.com/psi4/psi4/pull/2259:19,Energy Efficiency,Energy,Energy,19,Fix MCSCF Final CI Energy Mismatch,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2259
https://github.com/psi4/psi4/pull/2263:0,Deployability,install,install,0,install molden testing files,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2263
https://github.com/psi4/psi4/pull/2263:15,Testability,test,testing,15,install molden testing files,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2263
https://github.com/psi4/psi4/pull/2264:13,Testability,test,test,13,OH to c1 for test consistency,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2264
https://github.com/psi4/psi4/issues/2267:8,Modifiability,Plugin,Plugin,8,Restore Plugin SCF Subclasses,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2267
https://github.com/psi4/psi4/pull/2268:0,Deployability,Update,Update,0,Update README.md for v1.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2268
https://github.com/psi4/psi4/pull/2269:0,Deployability,release,release,0,release proc update. drop py36.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2269
https://github.com/psi4/psi4/pull/2269:13,Deployability,update,update,13,release proc update. drop py36.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2269
https://github.com/psi4/psi4/pull/2270:15,Testability,Test,Test,15,MOM Bugfix and Test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2270
https://github.com/psi4/psi4/issues/2281:11,Availability,error,error,11,An running error in fsapt.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2281
https://github.com/psi4/psi4/issues/2288:13,Availability,fault,fault,13,Segmentation fault in DF calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2288
https://github.com/psi4/psi4/issues/2289:15,Testability,test,tests,15,No `nuke_frac` tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2289
https://github.com/psi4/psi4/issues/2294:0,Availability,error,error,0,error when trying to import psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2294
https://github.com/psi4/psi4/issues/2297:24,Security,Validat,Validation,24,Analytic Hessian Memory Validation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2297
https://github.com/psi4/psi4/issues/2309:7,Availability,error,error,7,free() error in rasci calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2309
https://github.com/psi4/psi4/pull/2311:0,Deployability,Continuous,Continuous,0,Continuous Fast Multipole Method (CFMM),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2311
https://github.com/psi4/psi4/pull/2312:25,Testability,test,test,25,bump qcel/qcng and fix a test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2312
https://github.com/psi4/psi4/pull/2319:15,Modifiability,Variab,Variables,15,Move SCF Class Variables to Function Variables,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2319
https://github.com/psi4/psi4/pull/2319:37,Modifiability,Variab,Variables,37,Move SCF Class Variables to Function Variables,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2319
https://github.com/psi4/psi4/pull/2323:22,Energy Efficiency,energy,energy,22,Loosen `json-schema-1-energy` Sensitivity to SCF Procedure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2323
https://github.com/psi4/psi4/pull/2327:0,Deployability,Update,Update,0,Update scf_iterator.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2327
https://github.com/psi4/psi4/pull/2328:44,Integrability,wrap,wrapper,44,Add saving for T-amplitudes to the QCSchema wrapper.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2328
https://github.com/psi4/psi4/issues/2341:4,Integrability,Interface,Interface,4,AIM Interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2341
https://github.com/psi4/psi4/issues/2342:22,Availability,Error,Error,22,Windows-Specific PSIO Error in SAPT,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2342
https://github.com/psi4/psi4/pull/2352:27,Deployability,integrat,integration,27,Fix memory leak of all DFT integration coordinates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2352
https://github.com/psi4/psi4/pull/2352:27,Integrability,integrat,integration,27,Fix memory leak of all DFT integration coordinates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2352
https://github.com/psi4/psi4/pull/2356:0,Security,Expose,Expose,0,Expose C_DGELS via PSI_API,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2356
https://github.com/psi4/psi4/pull/2358:0,Deployability,Update,Update,0,Update driver.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2358
https://github.com/psi4/psi4/issues/2371:0,Testability,Test,Test,0,Test: counterpoise corrected H2+,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2371
https://github.com/psi4/psi4/pull/2377:30,Integrability,depend,dependent,30,Make ENABLE_XHOST flag checks dependent on compiler brand.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2377
https://github.com/psi4/psi4/pull/2378:10,Performance,Perform,Performance,10,DLPNO-MP2 Performance Improvement,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2378
https://github.com/psi4/psi4/pull/2386:0,Integrability,Interface,Interfaced,0,Interfaced Yukawa Libint2 ERI Kernel,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2386
https://github.com/psi4/psi4/pull/2387:9,Integrability,depend,dependency,9,Add pb11 dependency to modules that use DIIS,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2387
https://github.com/psi4/psi4/pull/2389:4,Availability,error,error,4,Fix error in MBE VMFC Hessian,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2389
https://github.com/psi4/psi4/issues/2390:0,Deployability,Install,Installation,0,Installation issue on Linux,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2390
https://github.com/psi4/psi4/pull/2391:0,Safety,detect,detect,0,detect cppe module not lib,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2391
https://github.com/psi4/psi4/pull/2393:9,Testability,test,tests,9,Fix adcc tests/exceptions and bump version,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2393
https://github.com/psi4/psi4/issues/2396:9,Testability,Test,Test,9,Overhaul Test Writing Documentation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2396
https://github.com/psi4/psi4/pull/2397:6,Testability,test,testing,6,Misc. testing changes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2397
https://github.com/psi4/psi4/pull/2400:0,Deployability,Update,Update,0,Update driver.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2400
https://github.com/psi4/psi4/pull/2413:0,Deployability,Update,Update,0,"Update CMake fork of Libint2, c. 2019 -> c. 2022",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2413
https://github.com/psi4/psi4/pull/2415:0,Deployability,Update,Update,0,Update azure-pipelines-windows.yml,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2415
https://github.com/psi4/psi4/pull/2415:13,Deployability,pipeline,pipelines-windows,13,Update azure-pipelines-windows.yml,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2415
https://github.com/psi4/psi4/pull/2420:0,Deployability,Update,Update,0,Update dftensor.h,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2420
https://github.com/psi4/psi4/pull/2426:0,Deployability,Update,Update,0,Update deriv.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2426
https://github.com/psi4/psi4/issues/2427:22,Integrability,depend,dependency,22,`Libint2::cxx` misses dependency on Boost,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2427
https://github.com/psi4/psi4/pull/2429:0,Safety,avoid,avoid,0,avoid macro rename vs l2 in integral.h,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2429
https://github.com/psi4/psi4/pull/2437:33,Modifiability,plugin,plugins,33,Expose reset_subspace to C++ for plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2437
https://github.com/psi4/psi4/pull/2437:0,Security,Expose,Expose,0,Expose reset_subspace to C++ for plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2437
https://github.com/psi4/psi4/pull/2440:8,Energy Efficiency,energy,energy-based,8,Migrate energy-based `cc` tests to new standard,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2440
https://github.com/psi4/psi4/pull/2440:26,Testability,test,tests,26,Migrate energy-based `cc` tests to new standard,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2440
https://github.com/psi4/psi4/pull/2441:0,Deployability,Update,Update,0,Update diismanager.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2441
https://github.com/psi4/psi4/pull/2446:26,Testability,test,tests,26,fix molden and nbody conv tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2446
https://github.com/psi4/psi4/pull/2451:22,Integrability,Depend,Dependence,22,Add Spec. Rot. Origin Dependence Psivar,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2451
https://github.com/psi4/psi4/pull/2455:17,Deployability,update,updates,17,scipy and python updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2455
https://github.com/psi4/psi4/issues/2458:12,Deployability,Update,Updated,12,`guess` Not Updated After Failed Job,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2458
https://github.com/psi4/psi4/pull/2462:13,Modifiability,Variab,Variable,13,Change TDSCF Variable Names,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2462
https://github.com/psi4/psi4/issues/2463:19,Safety,detect,detected,19,Cs symmetry is not detected,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2463
https://github.com/psi4/psi4/pull/2464:0,Energy Efficiency,Reduce,Reduce,0,Reduce code triplication in Molecule::atom_at_position,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2464
https://github.com/psi4/psi4/pull/2470:0,Deployability,patch,patch,0,patch excited state psivars in addon tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2470
https://github.com/psi4/psi4/pull/2470:37,Testability,test,tests,37,patch excited state psivars in addon tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2470
https://github.com/psi4/psi4/issues/2472:19,Energy Efficiency,charge,charges,19,Gradients on point charges (C++),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2472
https://github.com/psi4/psi4/pull/2473:0,Modifiability,Refactor,Refactor,0,Refactor `PseudospectralInts` using Libint2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2473
https://github.com/psi4/psi4/issues/2477:0,Integrability,Synchroniz,Synchronize,0,Synchronize DFT Psivars,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2477
https://github.com/psi4/psi4/pull/2481:72,Deployability,update,update,72,SAPT(DFT) MO disk I/O optimization & Exchange-Dispersion scaling scheme update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2481
https://github.com/psi4/psi4/pull/2481:22,Performance,optimiz,optimization,22,SAPT(DFT) MO disk I/O optimization & Exchange-Dispersion scaling scheme update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2481
https://github.com/psi4/psi4/pull/2485:7,Availability,Redundant,Redundant,7,Remove Redundant Dipole/Quadrupole Code,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2485
https://github.com/psi4/psi4/pull/2485:7,Safety,Redund,Redundant,7,Remove Redundant Dipole/Quadrupole Code,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2485
https://github.com/psi4/psi4/issues/2486:14,Modifiability,Variab,Variable,14,Excited State Variable Cleanup,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2486
https://github.com/psi4/psi4/pull/2488:36,Safety,sanity check,sanity checks,36,Cleanup to find_occupation and more sanity checks,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2488
https://github.com/psi4/psi4/pull/2494:7,Testability,test,tests,7,fix up tests and bump win L2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2494
https://github.com/psi4/psi4/issues/2495:14,Testability,test,tests,14,Bring PSIthon tests to pytest's attention,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2495
https://github.com/psi4/psi4/issues/2497:37,Deployability,release,release,37,MRCC interface broken with MRCC 2022 release,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2497
https://github.com/psi4/psi4/issues/2497:5,Integrability,interface,interface,5,MRCC interface broken with MRCC 2022 release,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2497
https://github.com/psi4/psi4/pull/2506:18,Security,access,access,18,Add TD-DFT psivar access pattern,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2506
https://github.com/psi4/psi4/issues/2510:12,Performance,load,load,12,`TypeError: load()` during frequency calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2510
https://github.com/psi4/psi4/pull/2512:4,Testability,log,logging,4,add logging,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2512
https://github.com/psi4/psi4/pull/2513:14,Modifiability,Variab,Variable,14,Excited State Variable Cleanup for `adcc`,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2513
https://github.com/psi4/psi4/issues/2524:0,Security,Sanitiz,Sanitize,0,Sanitize CC Excited State Symmetry Labels,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2524
https://github.com/psi4/psi4/pull/2525:33,Testability,Test,Tests,33,EOMCC Einstein + Rot. Strength + Tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2525
https://github.com/psi4/psi4/pull/2534:18,Modifiability,flexible,flexible,18,"Make OEProp names flexible, to fix CC prop name bug.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2534
https://github.com/psi4/psi4/pull/2536:44,Testability,log,logic,44,forward-port ddd convergence and derivative logic,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2536
https://github.com/psi4/psi4/pull/2538:5,Modifiability,variab,variable,5,More variable names for EOM properties. Required infrastructure changes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2538
https://github.com/psi4/psi4/pull/2540:5,Deployability,install,installed,5,more installed windows path adjustments,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2540
https://github.com/psi4/psi4/issues/2542:13,Availability,fault,fault,13,segmentation fault of computing eri with updated version of psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2542
https://github.com/psi4/psi4/issues/2542:41,Deployability,update,updated,41,segmentation fault of computing eri with updated version of psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2542
https://github.com/psi4/psi4/pull/2543:62,Modifiability,Refactor,Refactor,62,"Separate J and K Build Capabilities, DirectDFJ Algorithm, and Refactor of LinK",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2543
https://github.com/psi4/psi4/pull/2544:35,Testability,test,testing,35,findif number and nbody number and testing label.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2544
https://github.com/psi4/psi4/pull/2546:12,Usability,clear,clear,12,"bump ambit, clear addons from azure",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2546
https://github.com/psi4/psi4/pull/2547:18,Modifiability,Refactor,Refactor,18,Density Screening Refactor Part 1: test_erisieve.py Rework,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2547
https://github.com/psi4/psi4/issues/2548:34,Modifiability,config,config,34,Single cpu job fails in `qcengine/config.py` with `KeyError`,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2548
https://github.com/psi4/psi4/issues/2555:9,Testability,test,tests,9,clean up tests directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2555
https://github.com/psi4/psi4/pull/2557:0,Deployability,update,update,0,update deprecation warnings text,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2557
https://github.com/psi4/psi4/pull/2574:0,Deployability,Update,Update,0,Update diis.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2574
https://github.com/psi4/psi4/pull/2575:0,Modifiability,Refactor,Refactor,0,"Refactor Recursive Driver Into Distributed Driver, Again",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2575
https://github.com/psi4/psi4/issues/2578:0,Deployability,install,install,0,"install psi4 on MacOS, cannot pass `psi4 --test`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2578
https://github.com/psi4/psi4/issues/2578:43,Testability,test,test,43,"install psi4 on MacOS, cannot pass `psi4 --test`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2578
https://github.com/psi4/psi4/issues/2579:23,Availability,error,error,23,Molecule::symmetrize() error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2579
https://github.com/psi4/psi4/pull/2580:13,Testability,test,testing,13,Libecpint CI testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2580
https://github.com/psi4/psi4/issues/2583:34,Energy Efficiency,energy,energy,34,Reevaluate whether to clean after energy() etc.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2583
https://github.com/psi4/psi4/issues/2586:20,Deployability,release,release,20,Difficulty building release 1.6 with MAX_AM_ERI=7,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2586
https://github.com/psi4/psi4/pull/2588:0,Modifiability,Refactor,Refactor,0,Refactor LinK and COSK into Composite JK,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2588
https://github.com/psi4/psi4/issues/2594:10,Availability,Failure,Failure,10,SCF Count Failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2594
https://github.com/psi4/psi4/issues/2596:12,Deployability,install,install,12,Failed v1.5 install from Conda in Docker,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2596
https://github.com/psi4/psi4/issues/2598:7,Availability,error,error,7,Import error in Google Colab,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2598
https://github.com/psi4/psi4/issues/2600:14,Performance,concurren,concurrency,14,[QUESTION] No concurrency when running psi4 from command line?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2600
https://github.com/psi4/psi4/issues/2604:42,Performance,optimiz,optimization,42,PsiException: Could not converge geometry optimization in 50 iterations.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2604
https://github.com/psi4/psi4/issues/2608:0,Availability,Error,Error,0,Error: “Unable to find a basis set…” with CFOUR,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2608
https://github.com/psi4/psi4/issues/2614:10,Deployability,install,installation,10,"Psi4 v1.6 installation issue Windows, conda, Python 3.8",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2614
https://github.com/psi4/psi4/pull/2615:20,Testability,test,tests,20,fix Psi4/Cfour intf tests after distributed driver,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2615
https://github.com/psi4/psi4/pull/2616:0,Deployability,Update,Update,0,Update writer.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2616
https://github.com/psi4/psi4/issues/2618:0,Performance,Concurren,Concurrent,0,Concurrent `detci` Test Fail,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2618
https://github.com/psi4/psi4/issues/2618:19,Testability,Test,Test,19,Concurrent `detci` Test Fail,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2618
https://github.com/psi4/psi4/pull/2620:0,Deployability,Update,Update,0,Update proc.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2620
https://github.com/psi4/psi4/issues/2621:8,Deployability,install,install,8,Fail to install with mamba,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2621
https://github.com/psi4/psi4/pull/2624:17,Safety,detect,detection,17,Fix Numpy Python detection in Windows for new NumPy,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2624
https://github.com/psi4/psi4/issues/2627:0,Performance,Optimiz,Optimization,0,Optimization Crash,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2627
https://github.com/psi4/psi4/pull/2628:0,Modifiability,Refactor,Refactor,0,Refactor `Vector` and `IntVector`,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2628
https://github.com/psi4/psi4/pull/2632:24,Deployability,upgrade,upgrades,24,"testing dedup, stdsuite upgrades",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2632
https://github.com/psi4/psi4/pull/2632:0,Testability,test,testing,0,"testing dedup, stdsuite upgrades",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2632
https://github.com/psi4/psi4/issues/2634:18,Testability,test,tests,18,Some MRCC-related tests fail,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2634
https://github.com/psi4/psi4/issues/2641:38,Energy Efficiency,energy,energy,38,ADIIS minimization failed for wB97M-V energy computation with modified VV10 parameters,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2641
https://github.com/psi4/psi4/pull/2644:33,Availability,error,error,33,smother CI linux ecosys assembly error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2644
https://github.com/psi4/psi4/pull/2645:0,Deployability,update,update,0,update distributed driver interface for qcfractal next,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2645
https://github.com/psi4/psi4/pull/2645:26,Integrability,interface,interface,26,update distributed driver interface for qcfractal next,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2645
https://github.com/psi4/psi4/pull/2646:41,Availability,error,error,41,"Revert ""smother CI linux ecosys assembly error""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2646
https://github.com/psi4/psi4/pull/2655:0,Testability,Test,Test,0,Test Directory Cleanup,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2655
https://github.com/psi4/psi4/issues/2661:57,Deployability,install,install,57,Numpy scipy version mismatch on default conda executable install of psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2661
https://github.com/psi4/psi4/pull/2663:20,Deployability,update,update,20,dfocc tensor syntax update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2663
https://github.com/psi4/psi4/pull/2669:35,Testability,test,testing,35,"dfocc: coupled DIIS, long int, and testing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2669
https://github.com/psi4/psi4/issues/2674:12,Testability,test,tests,12,Add missing tests for #2619,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2674
https://github.com/psi4/psi4/issues/2675:0,Modifiability,config,configure,0,configure fails to find libint2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2675
https://github.com/psi4/psi4/issues/2676:39,Availability,down,downloads,39,configure fails to find libxc and then downloads and rebuilds it,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2676
https://github.com/psi4/psi4/issues/2676:0,Modifiability,config,configure,0,configure fails to find libxc and then downloads and rebuilds it,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2676
https://github.com/psi4/psi4/issues/2680:0,Modifiability,config,configure,0,configure doesn't remove control sequences when its output isn't a terminal,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2680
https://github.com/psi4/psi4/pull/2682:0,Modifiability,Refactor,Refactor,0,Refactor Incremental Fock Builds in Chain-of-Spheres Exchange,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2682
https://github.com/psi4/psi4/issues/2683:5,Deployability,install,installs,5,psi4 installs files into the build directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2683
https://github.com/psi4/psi4/issues/2685:4,Testability,test,tests,4,All tests fail: Permission denied,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2685
https://github.com/psi4/psi4/pull/2686:37,Integrability,wrap,wrapper,37,"Replace sq_rsp(...) with a new DSYEV wrapper, part 1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2686
https://github.com/psi4/psi4/issues/2687:0,Testability,Test,Tests,0,Tests fail when project is built from from the tarball,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2687
https://github.com/psi4/psi4/issues/2688:0,Testability,Test,Tests,0,Tests expect the 'python' executable despite cmake having correct python executable name,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2688
https://github.com/psi4/psi4/issues/2690:25,Deployability,install,installed,25,Python module psi4 isn't installed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2690
https://github.com/psi4/psi4/pull/2691:13,Deployability,update,update,13,qcng v0.24.1 update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2691
https://github.com/psi4/psi4/pull/2695:18,Modifiability,Refactor,Refactor,18,Density Screening Refactor Part 2: Implementation of shell_significant(),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2695
https://github.com/psi4/psi4/issues/2701:36,Performance,CACHE,CACHELEVEL,36,Docs incorrect for maximum value of CACHELEVEL (CCENERGY),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2701
https://github.com/psi4/psi4/pull/2716:0,Energy Efficiency,Reduce,Reduce,0,Reduce the scope pollution in DPD::buf4_sort,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2716
https://github.com/psi4/psi4/pull/2717:25,Testability,log,logic,25,Move incore/OOC decision logic for DPD sorting into a separate function,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2717
https://github.com/psi4/psi4/pull/2718:22,Testability,test,test,22,PR template and dlpno test fix,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2718
https://github.com/psi4/psi4/pull/2723:17,Security,secur,security,17,GitHub Workflows security hardening,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2723
https://github.com/psi4/psi4/issues/2728:5,Availability,failure,failure,5,mbis failure for iodine containing molecules with DZVP basis,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2728
https://github.com/psi4/psi4/issues/2730:42,Energy Efficiency,Energy,Energy,42,Inconsistency between Psi4 Scripts Return Energy Function,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2730
https://github.com/psi4/psi4/pull/2731:13,Availability,mainten,maintenance,13,capabilities maintenance,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2731
https://github.com/psi4/psi4/issues/2733:17,Usability,clear,clears,17,`AtomicComputer` clears options state,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2733
https://github.com/psi4/psi4/issues/2735:34,Safety,unsafe,unsafe,34,lebedev_mapping_ access is thread-unsafe (and also never initialized?),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2735
https://github.com/psi4/psi4/issues/2735:17,Security,access,access,17,lebedev_mapping_ access is thread-unsafe (and also never initialized?),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2735
https://github.com/psi4/psi4/pull/2743:48,Safety,safe,safe,48,Initialize lebedev_mapping_ and make use thread-safe -- and do ONLY THAT,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2743
https://github.com/psi4/psi4/pull/2744:22,Security,access,access,22,Add one body integral access,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2744
https://github.com/psi4/psi4/pull/2746:8,Availability,error,error,8,Improve error handling after PSIO system calls,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2746
https://github.com/psi4/psi4/issues/2747:5,Security,Access,Accessing,5,Psi4 Accessing More Cores Than Requested on our Cluster,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2747
https://github.com/psi4/psi4/pull/2750:0,Deployability,update,update,0,update for geometric 1.0,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2750
https://github.com/psi4/psi4/pull/2755:0,Deployability,Update,Update,0,Update qcengine keywords,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2755
https://github.com/psi4/psi4/pull/2756:13,Availability,error,error,13,"Improve PSIO error messages for READ, WRITE and LSEEK",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2756
https://github.com/psi4/psi4/pull/2756:19,Integrability,message,messages,19,"Improve PSIO error messages for READ, WRITE and LSEEK",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2756
https://github.com/psi4/psi4/pull/2757:0,Deployability,update,update,0,update samples,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2757
https://github.com/psi4/psi4/pull/2761:17,Security,secur,security,17,GitHub Workflows security hardening,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2761
https://github.com/psi4/psi4/pull/2764:5,Deployability,update,updates,5,"misc updates, incl. py311",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2764
https://github.com/psi4/psi4/issues/2765:23,Integrability,Contract,Contract,23,`SphericalGrid::order` Contract Broken,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2765
https://github.com/psi4/psi4/pull/2767:10,Integrability,interface,interface,10,Implement interface with pyddx,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2767
https://github.com/psi4/psi4/pull/2768:7,Testability,Test,Testing,7,Expand Testing of COSX and LINK SCF Types,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2768
https://github.com/psi4/psi4/pull/2785:43,Deployability,release,release,43,Bump required/built ADCC version to latest release,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2785
https://github.com/psi4/psi4/pull/2791:17,Usability,simpl,simple-,17,allow and prefer simple-dftd3 and mctc-gcp,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2791
https://github.com/psi4/psi4/pull/2795:0,Modifiability,Refactor,Refactor,0,Refactor `libmints::IntegralFactory.electric_field()` to return ElectricFieldInt,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2795
https://github.com/psi4/psi4/issues/2796:48,Availability,down,down,48,The Python_EXECUTABLE variable should be passed down to all cmake invocations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2796
https://github.com/psi4/psi4/issues/2796:22,Modifiability,variab,variable,22,The Python_EXECUTABLE variable should be passed down to all cmake invocations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2796
https://github.com/psi4/psi4/pull/2797:26,Usability,undo,undocumented,26,Do not use or suggest the undocumented -H option for CMake,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2797
https://github.com/psi4/psi4/issues/2800:19,Deployability,install,installed,19,Python modules are installed into a wrong path,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2800
https://github.com/psi4/psi4/pull/2801:18,Availability,error,error,18,Show file name in error message,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2801
https://github.com/psi4/psi4/pull/2801:24,Integrability,message,message,24,Show file name in error message,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2801
https://github.com/psi4/psi4/issues/2802:0,Testability,Test,Test,0,"Test fails: TypeError: expected str, bytes or os.PathLike object, not NoneType",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2802
https://github.com/psi4/psi4/issues/2806:26,Safety,detect,detect,26,CMake could probably auto-detect libiomp5 using LD_LIBRARY_PATH,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2806
https://github.com/psi4/psi4/issues/2810:0,Availability,error,error,0,error: use of undeclared identifier 'errno',MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2810
https://github.com/psi4/psi4/pull/2820:8,Deployability,update,updates,8,samples updates for v1.7,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2820
https://github.com/psi4/psi4/pull/2822:16,Integrability,message,message,16,Add deprecation message to schmidt_add in libqt,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2822
https://github.com/psi4/psi4/issues/2828:0,Testability,Test,Test,0,Test 243 Failed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2828
https://github.com/psi4/psi4/issues/2830:0,Testability,test,tests,0,tests don't run through the test framework,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2830
https://github.com/psi4/psi4/issues/2830:28,Testability,test,test,28,tests don't run through the test framework,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2830
https://github.com/psi4/psi4/issues/2831:4,Testability,test,test,4,"The test tests/freq-masses prints warnings, and then fails: Command '['/usr/local/bin/psi4', '--version']' timed out after 30 seconds",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2831
https://github.com/psi4/psi4/issues/2831:9,Testability,test,tests,9,"The test tests/freq-masses prints warnings, and then fails: Command '['/usr/local/bin/psi4', '--version']' timed out after 30 seconds",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2831
https://github.com/psi4/psi4/pull/2836:16,Testability,test,test,16,Add large atoms test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2836
https://github.com/psi4/psi4/issues/2841:23,Deployability,Integrat,Integrated,23,TDDFT Not Triplet Spin-Integrated,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2841
https://github.com/psi4/psi4/issues/2841:23,Integrability,Integrat,Integrated,23,TDDFT Not Triplet Spin-Integrated,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2841
https://github.com/psi4/psi4/pull/2845:9,Deployability,update,update,9,np.float update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2845
https://github.com/psi4/psi4/issues/2847:0,Integrability,Interface,Interface,0,Interface with TREXIO,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2847
https://github.com/psi4/psi4/pull/2852:0,Deployability,Update,Update,0,Update psithonmol.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2852
https://github.com/psi4/psi4/issues/2853:15,Availability,Error,Error,15,Vector Setting Error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2853
https://github.com/psi4/psi4/pull/2854:0,Deployability,update,update,0,update copyright for 2023,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2854
https://github.com/psi4/psi4/pull/2857:4,Availability,error,error,4,Fix error in libtrans,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2857
https://github.com/psi4/psi4/issues/2858:0,Availability,Error,Error,0,Error computing atomization energy of Al atom,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2858
https://github.com/psi4/psi4/issues/2858:28,Energy Efficiency,energy,energy,28,Error computing atomization energy of Al atom,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2858
https://github.com/psi4/psi4/pull/2864:9,Usability,clear,clear,9,Actually clear vectors in Molecule,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2864
https://github.com/psi4/psi4/issues/2865:8,Availability,failure,failures,8,Runtime failures with numpy-1.24,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2865
https://github.com/psi4/psi4/issues/2866:13,Energy Efficiency,energy,energy,13,Fail in Psi4 energy decomposition analysis,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2866
https://github.com/psi4/psi4/issues/2868:11,Availability,error,error,11,psi4 forum error: 502 Bad Gateway,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2868
https://github.com/psi4/psi4/issues/2870:8,Energy Efficiency,Charge,Charge,8,FISAPT: Charge on A is incompatible with singlet,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2870
https://github.com/psi4/psi4/issues/2871:38,Performance,optimiz,optimizer,38,`Atom not in list` bug with geometric optimizer,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2871
https://github.com/psi4/psi4/issues/2873:28,Availability,Failure,Failure,28,QCFractal Causes Test Suite Failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2873
https://github.com/psi4/psi4/issues/2873:17,Testability,Test,Test,17,QCFractal Causes Test Suite Failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2873
https://github.com/psi4/psi4/issues/2875:6,Performance,Cache,Cache,6,Don't Cache `nmo_`,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2875
https://github.com/psi4/psi4/pull/2876:0,Deployability,Update,Update,0,Update export_mints.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2876
https://github.com/psi4/psi4/issues/2878:26,Energy Efficiency,energy,energy,26,Compute both gradient and energy,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2878
https://github.com/psi4/psi4/issues/2880:13,Deployability,update,updated,13,Geometry not updated for energy surface scan with dummy atoms,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2880
https://github.com/psi4/psi4/issues/2880:25,Energy Efficiency,energy,energy,25,Geometry not updated for energy surface scan with dummy atoms,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2880
https://github.com/psi4/psi4/pull/2886:18,Testability,test,test,18,Correct erroneous test values.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2886
https://github.com/psi4/psi4/issues/2890:50,Availability,ROBUST,ROBUST,50,COSX Grid Issues with 146 Spherical Grid Points + ROBUST Grid Pruning Scheme,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2890
https://github.com/psi4/psi4/issues/2894:6,Deployability,install,install,6,Conda install not work,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2894
https://github.com/psi4/psi4/issues/2898:10,Deployability,install,install,10,Unable to install psi4 using conda/mamba,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2898
https://github.com/psi4/psi4/issues/2900:56,Availability,error,error,56,"The calculation does not run, but it does not report an error",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2900
https://github.com/psi4/psi4/pull/2903:0,Deployability,update,update,0,update PCMSolver interface to v1.2.3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2903
https://github.com/psi4/psi4/pull/2903:17,Integrability,interface,interface,17,update PCMSolver interface to v1.2.3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2903
https://github.com/psi4/psi4/pull/2906:7,Availability,Error,Error,7,Better Error Message for Issue #2890,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2906
https://github.com/psi4/psi4/pull/2906:13,Integrability,Message,Message,13,Better Error Message for Issue #2890,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2906
https://github.com/psi4/psi4/issues/2912:0,Deployability,install,installing,0,installing psi4 into existing env with rdkit,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2912
https://github.com/psi4/psi4/issues/2914:10,Availability,error,error,10,Assertion error when using SAPT0-D3 and SAPT0-D3mbj,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2914
https://github.com/psi4/psi4/issues/2914:0,Testability,Assert,Assertion,0,Assertion error when using SAPT0-D3 and SAPT0-D3mbj,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2914
https://github.com/psi4/psi4/issues/2916:14,Availability,Error,Error,14,CCSD(T) Fatal Error: Matrix::gemm error: Number of rows and columns do not match,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2916
https://github.com/psi4/psi4/issues/2916:34,Availability,error,error,34,CCSD(T) Fatal Error: Matrix::gemm error: Number of rows and columns do not match,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2916
https://github.com/psi4/psi4/pull/2917:0,Deployability,update,update,0,update the review guidance,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2917
https://github.com/psi4/psi4/pull/2917:18,Usability,guid,guidance,18,update the review guidance,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2917
https://github.com/psi4/psi4/pull/2918:11,Integrability,interface,interface,11,Extend ddx interface by support for dd-LPB,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2918
https://github.com/psi4/psi4/pull/2918:0,Modifiability,Extend,Extend,0,Extend ddx interface by support for dd-LPB,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2918
https://github.com/psi4/psi4/pull/2922:6,Performance,queue,queue,6,merge queue preparation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2922
https://github.com/psi4/psi4/pull/2923:18,Modifiability,config,config,18,still merge queue config,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2923
https://github.com/psi4/psi4/pull/2923:12,Performance,queue,queue,12,still merge queue config,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2923
https://github.com/psi4/psi4/issues/2930:16,Availability,error,error,16,Getting SIGSEGV error on cc-pvdz calculation of simple ethanol molecule,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2930
https://github.com/psi4/psi4/issues/2930:48,Usability,simpl,simple,48,Getting SIGSEGV error on cc-pvdz calculation of simple ethanol molecule,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2930
https://github.com/psi4/psi4/pull/2932:16,Modifiability,enhance,enhancements,16,set_output_file enhancements,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2932
https://github.com/psi4/psi4/issues/2939:0,Deployability,update,update,0,update to qcfractal beta10 for v1.8,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2939
https://github.com/psi4/psi4/issues/2940:0,Deployability,update,update,0,update to pyddx 0.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2940
https://github.com/psi4/psi4/issues/2942:0,Deployability,update,update,0,update to adcc 0.15.16,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2942
https://github.com/psi4/psi4/pull/2944:21,Deployability,update,update,21,"Bump `adcc` version, update reference data, check runtime version",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2944
https://github.com/psi4/psi4/pull/2946:51,Deployability,install,installation,51,"optional fortran compiler, adjustable cmake config installation",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2946
https://github.com/psi4/psi4/pull/2946:44,Modifiability,config,config,44,"optional fortran compiler, adjustable cmake config installation",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2946
https://github.com/psi4/psi4/pull/2949:30,Testability,test,test,30,alternate sss L2 options plus test fixes. bump dkh,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2949
https://github.com/psi4/psi4/pull/2950:12,Energy Efficiency,charge,charged,12,Added isapt-charged example,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2950
https://github.com/psi4/psi4/pull/2952:4,Testability,test,tests,4,Fix tests to reflect pyddx 0.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2952
https://github.com/psi4/psi4/pull/2954:22,Deployability,Update,Update,22,CompositeJK Part 2.5: Update Reference Outputs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2954
https://github.com/psi4/psi4/pull/2961:0,Deployability,update,update,0,update azure win,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2961
https://github.com/psi4/psi4/pull/2963:32,Deployability,update,update,32,Fix bug in lpb fock routine and update tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2963
https://github.com/psi4/psi4/pull/2963:20,Integrability,rout,routine,20,Fix bug in lpb fock routine and update tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2963
https://github.com/psi4/psi4/pull/2963:39,Testability,test,tests,39,Fix bug in lpb fock routine and update tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2963
https://github.com/psi4/psi4/pull/2966:0,Deployability,Update,Update,0,Update badges and binder,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2966
https://github.com/psi4/psi4/pull/2968:0,Deployability,Update,Update,0,Update gdma to v2.3; convert to runtime,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2968
https://github.com/psi4/psi4/issues/2970:26,Availability,error,error,26,v1.7 PSIO_ERROR + forrtl: error + core dumped,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2970
https://github.com/psi4/psi4/issues/2971:12,Performance,Optimiz,Optimization,12,Single-Atom Optimization Not Intercepted,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2971
https://github.com/psi4/psi4/pull/2978:37,Testability,Test,Testing,37,Add Comprehensive JK Build+Screening Testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2978
https://github.com/psi4/psi4/pull/2980:18,Performance,cache,cached,18,Fix #2875: remove cached `nmo_` var,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2980
https://github.com/psi4/psi4/pull/2984:0,Security,sanitiz,sanitize,0,sanitize molecule names for dfhelper,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2984
https://github.com/psi4/psi4/pull/2988:4,Modifiability,plugin,plugin,4,fix plugin for doccpi_ and misc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2988
https://github.com/psi4/psi4/issues/2989:11,Availability,error,error,11,Unexpected error when using basis set aug-cc-pv5z for He-NH3 interaction.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2989
https://github.com/psi4/psi4/issues/2993:6,Deployability,install,installation,6,Mamba installation of Psi4 1.8 on linux misconfigures PSIDATADIR,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2993
https://github.com/psi4/psi4/pull/2994:0,Modifiability,Refactor,Refactor,0,Refactor `JK_deriv2`,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2994
https://github.com/psi4/psi4/pull/2995:0,Deployability,Update,Update,0,Update oeprop.rst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2995
https://github.com/psi4/psi4/pull/2996:0,Modifiability,Refactor,Refactor,0,Refactor assemble_Q,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2996
https://github.com/psi4/psi4/pull/2997:16,Availability,error,error,16,Print full PSIO error message to cerr as well,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2997
https://github.com/psi4/psi4/pull/2997:22,Integrability,message,message,22,Print full PSIO error message to cerr as well,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/2997
https://github.com/psi4/psi4/issues/2998:5,Availability,error,error,5,make error: /usr/bin/ld: cannot find -lMathOpenMP_LIBRARIES-NOTFOUND,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/2998
https://github.com/psi4/psi4/issues/3006:6,Availability,error,error,6,Build error psi4::Options,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3006
https://github.com/psi4/psi4/pull/3007:15,Deployability,patch,patch,15,threading test patch,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3007
https://github.com/psi4/psi4/pull/3007:10,Testability,test,test,10,threading test patch,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3007
https://github.com/psi4/psi4/pull/3011:0,Deployability,Update,Update,0,Update scf-guess reference output for MODHUCKEL,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3011
https://github.com/psi4/psi4/pull/3013:15,Integrability,protocol,protocol,15,"qcarchive tag, protocol passing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3013
https://github.com/psi4/psi4/issues/3014:2,Testability,test,tests,2,2 tests fail in 1.8.1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3014
https://github.com/psi4/psi4/pull/3017:0,Deployability,Update,Update,0,Update psivardefs.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3017
https://github.com/psi4/psi4/pull/3019:0,Energy Efficiency,adapt,adapt,0,adapt for pydantic v1 and v2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3019
https://github.com/psi4/psi4/pull/3019:0,Modifiability,adapt,adapt,0,adapt for pydantic v1 and v2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3019
https://github.com/psi4/psi4/pull/3022:0,Deployability,update,update,0,update to qcengine v0.28,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3022
https://github.com/psi4/psi4/issues/3028:0,Testability,Test,Tests,0,Tests failing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3028
https://github.com/psi4/psi4/pull/3035:12,Deployability,patch,patch,12,Cd sherrill patch 3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3035
https://github.com/psi4/psi4/issues/3038:11,Integrability,contract,contraction,11,Storage of contraction coefficients,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3038
https://github.com/psi4/psi4/issues/3040:19,Testability,test,tests,19,Add more strenuous tests for SCF initial guesses,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3040
https://github.com/psi4/psi4/pull/3041:4,Deployability,integrat,integratorxx,4,add integratorxx to buildsys,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3041
https://github.com/psi4/psi4/pull/3041:4,Integrability,integrat,integratorxx,4,add integratorxx to buildsys,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3041
https://github.com/psi4/psi4/pull/3044:46,Usability,simpl,simplifying,46,Amend #3043 by allowing a longer hostname and simplifying the code.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3044
https://github.com/psi4/psi4/issues/3046:0,Deployability,Install,Installing,0,"Installing psi4 on an openff environment - 'blas * mkl' and 'mkl >=2022.2.1,<2023.0a0' conflicts.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3046
https://github.com/psi4/psi4/pull/3052:10,Testability,test,test,10,Scf guess test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3052
https://github.com/psi4/psi4/pull/3061:16,Availability,error,error,16,Fix compilation error for C++20,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3061
https://github.com/psi4/psi4/issues/3065:7,Security,access,access,7,How to access density matrix history in SCF iterations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3065
https://github.com/psi4/psi4/issues/3066:21,Availability,Error,Errors,21,Second Decimal Place Errors in ECP Analytic Gradients,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3066
https://github.com/psi4/psi4/issues/3067:4,Deployability,install,installs,4,BSE installs in the wrong place,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3067
https://github.com/psi4/psi4/issues/3068:0,Availability,error,error,0,error in wfn.tofile while calculating hessian,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3068
https://github.com/psi4/psi4/pull/3076:0,Testability,test,test,0,test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3076
https://github.com/psi4/psi4/pull/3079:14,Deployability,Update,Updates,14,Documentation Updates for CompositeJK,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3079
https://github.com/psi4/psi4/issues/3084:7,Deployability,install,installed,7,`psi4` installed via `conda` fails to run when installed in symlinked directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3084
https://github.com/psi4/psi4/issues/3084:47,Deployability,install,installed,47,`psi4` installed via `conda` fails to run when installed in symlinked directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3084
https://github.com/psi4/psi4/pull/3087:8,Modifiability,variab,variable,8,Created variable and method for storing and retrieving the gradients …,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3087
https://github.com/psi4/psi4/issues/3091:10,Deployability,install,installable,10,Make Psi4 installable via pip,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3091
https://github.com/psi4/psi4/issues/3092:14,Modifiability,config,configure,14,Psi4 fails to configure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3092
https://github.com/psi4/psi4/issues/3093:0,Modifiability,Plugin,Plugin,0,Plugin example broken,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3093
https://github.com/psi4/psi4/issues/3094:0,Deployability,Install,Installing,0,Installing Optional Plugins for Psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3094
https://github.com/psi4/psi4/issues/3094:20,Modifiability,Plugin,Plugins,20,Installing Optional Plugins for Psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3094
https://github.com/psi4/psi4/pull/3098:0,Availability,Reboot,Reboot,0,Reboot - Density Screening Refactor Part 2: Implementation of shell_significant(),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3098
https://github.com/psi4/psi4/pull/3098:27,Modifiability,Refactor,Refactor,27,Reboot - Density Screening Refactor Part 2: Implementation of shell_significant(),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3098
https://github.com/psi4/psi4/issues/3099:47,Availability,error,errors,47,"Many tests fail: 143 failed, 576 warnings, 282 errors",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3099
https://github.com/psi4/psi4/issues/3099:5,Testability,test,tests,5,"Many tests fail: 143 failed, 576 warnings, 282 errors",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3099
https://github.com/psi4/psi4/issues/3100:24,Availability,error,error,24,The 'unexpected indent' error in some samples,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3100
https://github.com/psi4/psi4/issues/3106:14,Performance,Optimiz,Optimization,14,Excited State Optimization,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3106
https://github.com/psi4/psi4/issues/3108:13,Availability,down,down,13,how to brack down the dual descriptor results from cubprop() into atom level?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3108
https://github.com/psi4/psi4/pull/3112:52,Availability,error,error,52,"Clean up #includes, macros, unnecessary array init, error exits, and other miscellaneous things in libmoinfo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3112
https://github.com/psi4/psi4/pull/3122:0,Deployability,update,update,0,update copyright,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3122
https://github.com/psi4/psi4/issues/3126:22,Deployability,install,installed,22,psi4 fails when conda installed in symlinked directory,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3126
https://github.com/psi4/psi4/pull/3131:0,Safety,Avoid,Avoid,0,Avoid Disk algorithm of MemDF,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3131
https://github.com/psi4/psi4/issues/3135:13,Energy Efficiency,charge,charges,13,Strange MBIS charges for molecules with Iodine when using DDX and def2-TZVPPD basis,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3135
https://github.com/psi4/psi4/pull/3139:25,Availability,error,errors,25,Adjust printout for PSIO errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3139
https://github.com/psi4/psi4/issues/3140:22,Energy Efficiency,charge,charges,22,MBIS core and valence charges,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3140
https://github.com/psi4/psi4/pull/3145:17,Modifiability,Portab,Portability,17,"Improve Compiler Portability Through ""Pedantic"" Compilation",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3145
https://github.com/psi4/psi4/pull/3150:0,Integrability,Interface,Interface,0,Interface Psi4 to GauXC's sn-LinK,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3150
https://github.com/psi4/psi4/pull/3152:0,Testability,test,test,0,test docs build,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3152
https://github.com/psi4/psi4/issues/3154:5,Testability,Test,Test,5,Psi4 Test Failing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3154
https://github.com/psi4/psi4/issues/3159:5,Integrability,interface,interface,5,MRCC interface is not working,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3159
https://github.com/psi4/psi4/pull/3163:0,Testability,test,test,0,test einsums env solving,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3163
https://github.com/psi4/psi4/issues/3165:23,Integrability,interface,interface,23,CPU and memory in MRCC interface,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3165
https://github.com/psi4/psi4/pull/3168:38,Safety,abort,abort,38,Throw PSIEXCEPTION instead of calling abort() in detci,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3168
https://github.com/psi4/psi4/issues/3170:53,Performance,optimiz,optimization,53,option to freeze all rotatable bonds during geometry optimization [feature request],MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3170
https://github.com/psi4/psi4/pull/3176:0,Deployability,Update,Update,0,Update liboptions.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3176
https://github.com/psi4/psi4/issues/3178:0,Performance,optimiz,optimization,0,optimization using solvent model,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3178
https://github.com/psi4/psi4/pull/3179:6,Modifiability,Refactor,Refactor,6,Small Refactor of Exception Call Stack Size,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3179
https://github.com/psi4/psi4/pull/3180:0,Deployability,Update,Update,0,Update extras.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3180
https://github.com/psi4/psi4/issues/3181:10,Energy Efficiency,Energy,Energy,10,Potential Energy Curves of the CF molecule,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3181
https://github.com/psi4/psi4/issues/3188:13,Deployability,install,installation,13,Trouble with installation of Psi4 on Ubuntu,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3188
https://github.com/psi4/psi4/pull/3190:7,Deployability,patch,patch,7,Loriab patch 3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3190
https://github.com/psi4/psi4/pull/3191:7,Deployability,patch,patch,7,Loriab patch 3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3191
https://github.com/psi4/psi4/pull/3193:7,Deployability,patch,patch,7,Loriab patch 3,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3193
https://github.com/psi4/psi4/pull/3195:0,Deployability,Update,Update,0,Update export_oeprop.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3195
https://github.com/psi4/psi4/pull/3197:7,Deployability,patch,patch,7,Loriab patch 4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3197
https://github.com/psi4/psi4/issues/3199:10,Deployability,install,installers,10,PSA: Psi4 installers unavailable [RESOLVED],MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3199
https://github.com/psi4/psi4/issues/3200:0,Modifiability,Plugin,Plugins,0,Plugins aren't getting global variables,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3200:30,Modifiability,variab,variables,30,Plugins aren't getting global variables,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3200
https://github.com/psi4/psi4/issues/3202:10,Availability,Error,Error,10,PCMSolver Error w/ B97-3c,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3202
https://github.com/psi4/psi4/pull/3208:0,Modifiability,Rewrite,Rewrite,0,Rewrite `ras_set`,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3208
https://github.com/psi4/psi4/pull/3210:0,Testability,test,test,0,test adcc M-Silicon,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3210
https://github.com/psi4/psi4/pull/3212:0,Deployability,Update,Update,0,Update input.dat,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3212
https://github.com/psi4/psi4/pull/3215:20,Availability,error,error,20,Fix buffer overflow error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3215
https://github.com/psi4/psi4/pull/3216:20,Availability,avail,available,20,"'python' may not be available, use the same Python to run the tests",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3216
https://github.com/psi4/psi4/pull/3216:62,Testability,test,tests,62,"'python' may not be available, use the same Python to run the tests",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3216
https://github.com/psi4/psi4/issues/3217:0,Availability,Error,Error,0,Error when trying to use CP-corrected DBOC with Psi4/CFour,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3217
https://github.com/psi4/psi4/pull/3220:8,Modifiability,Rewrite,Rewrite,8,Options Rewrite,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3220
https://github.com/psi4/psi4/pull/3226:13,Energy Efficiency,charge,charges,13,MBIS valence charges,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3226
https://github.com/psi4/psi4/pull/3230:0,Deployability,Update,Update,0,Update read_options.cc,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3230
https://github.com/psi4/psi4/pull/3231:0,Deployability,Update,Update,0,Update libxc to version 7,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/3231
